var plugins_4ad6dfd153dd0bc0fdc9 =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 252);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(3);
var core = __webpack_require__(18);
var hide = __webpack_require__(23);
var redefine = __webpack_require__(24);
var ctx = __webpack_require__(31);
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
  var key, own, out, exp;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    // export native or passed
    out = (own ? target : source)[key];
    // bind timers to global for call from export context
    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // extend global
    if (target) redefine(target, key, out, type & $export.U);
    // export
    if (exports[key] != out) hide(exports, key, exp);
    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
  }
};
global.core = core;
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),
/* 1 */
/***/ (function(module, exports) {

/**
 * @module zrender/core/util
 */
// 用于处理merge时无法遍历Date等对象的问题
var BUILTIN_OBJECT = {
  '[object Function]': 1,
  '[object RegExp]': 1,
  '[object Date]': 1,
  '[object Error]': 1,
  '[object CanvasGradient]': 1,
  '[object CanvasPattern]': 1,
  // For node-canvas
  '[object Image]': 1,
  '[object Canvas]': 1
};
var TYPED_ARRAY = {
  '[object Int8Array]': 1,
  '[object Uint8Array]': 1,
  '[object Uint8ClampedArray]': 1,
  '[object Int16Array]': 1,
  '[object Uint16Array]': 1,
  '[object Int32Array]': 1,
  '[object Uint32Array]': 1,
  '[object Float32Array]': 1,
  '[object Float64Array]': 1
};
var objToString = Object.prototype.toString;
var arrayProto = Array.prototype;
var nativeForEach = arrayProto.forEach;
var nativeFilter = arrayProto.filter;
var nativeSlice = arrayProto.slice;
var nativeMap = arrayProto.map;
var nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.

var methods = {};

function $override(name, fn) {
  // Clear ctx instance for different environment
  if (name === 'createCanvas') {
    _ctx = null;
  }

  methods[name] = fn;
}
/**
 * Those data types can be cloned:
 *     Plain object, Array, TypedArray, number, string, null, undefined.
 * Those data types will be assgined using the orginal data:
 *     BUILTIN_OBJECT
 * Instance of user defined class will be cloned to a plain object, without
 * properties in prototype.
 * Other data types is not supported (not sure what will happen).
 *
 * Caution: do not support clone Date, for performance consideration.
 * (There might be a large number of date in `series.data`).
 * So date should not be modified in and out of echarts.
 *
 * @param {*} source
 * @return {*} new
 */


function clone(source) {
  if (source == null || typeof source != 'object') {
    return source;
  }

  var result = source;
  var typeStr = objToString.call(source);

  if (typeStr === '[object Array]') {
    if (!isPrimitive(source)) {
      result = [];

      for (var i = 0, len = source.length; i < len; i++) {
        result[i] = clone(source[i]);
      }
    }
  } else if (TYPED_ARRAY[typeStr]) {
    if (!isPrimitive(source)) {
      var Ctor = source.constructor;

      if (source.constructor.from) {
        result = Ctor.from(source);
      } else {
        result = new Ctor(source.length);

        for (var i = 0, len = source.length; i < len; i++) {
          result[i] = clone(source[i]);
        }
      }
    }
  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {
    result = {};

    for (var key in source) {
      if (source.hasOwnProperty(key)) {
        result[key] = clone(source[key]);
      }
    }
  }

  return result;
}
/**
 * @memberOf module:zrender/core/util
 * @param {*} target
 * @param {*} source
 * @param {boolean} [overwrite=false]
 */


function merge(target, source, overwrite) {
  // We should escapse that source is string
  // and enter for ... in ...
  if (!isObject(source) || !isObject(target)) {
    return overwrite ? clone(source) : target;
  }

  for (var key in source) {
    if (source.hasOwnProperty(key)) {
      var targetProp = target[key];
      var sourceProp = source[key];

      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {
        // 如果需要递归覆盖，就递归调用merge
        merge(targetProp, sourceProp, overwrite);
      } else if (overwrite || !(key in target)) {
        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况
        // NOTE，在 target[key] 不存在的时候也是直接覆盖
        target[key] = clone(source[key], true);
      }
    }
  }

  return target;
}
/**
 * @param {Array} targetAndSources The first item is target, and the rests are source.
 * @param {boolean} [overwrite=false]
 * @return {*} target
 */


function mergeAll(targetAndSources, overwrite) {
  var result = targetAndSources[0];

  for (var i = 1, len = targetAndSources.length; i < len; i++) {
    result = merge(result, targetAndSources[i], overwrite);
  }

  return result;
}
/**
 * @param {*} target
 * @param {*} source
 * @memberOf module:zrender/core/util
 */


function extend(target, source) {
  for (var key in source) {
    if (source.hasOwnProperty(key)) {
      target[key] = source[key];
    }
  }

  return target;
}
/**
 * @param {*} target
 * @param {*} source
 * @param {boolean} [overlay=false]
 * @memberOf module:zrender/core/util
 */


function defaults(target, source, overlay) {
  for (var key in source) {
    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {
      target[key] = source[key];
    }
  }

  return target;
}

var createCanvas = function () {
  return methods.createCanvas();
};

methods.createCanvas = function () {
  return document.createElement('canvas');
}; // FIXME


var _ctx;

function getContext() {
  if (!_ctx) {
    // Use util.createCanvas instead of createCanvas
    // because createCanvas may be overwritten in different environment
    _ctx = createCanvas().getContext('2d');
  }

  return _ctx;
}
/**
 * 查询数组中元素的index
 * @memberOf module:zrender/core/util
 */


function indexOf(array, value) {
  if (array) {
    if (array.indexOf) {
      return array.indexOf(value);
    }

    for (var i = 0, len = array.length; i < len; i++) {
      if (array[i] === value) {
        return i;
      }
    }
  }

  return -1;
}
/**
 * 构造类继承关系
 *
 * @memberOf module:zrender/core/util
 * @param {Function} clazz 源类
 * @param {Function} baseClazz 基类
 */


function inherits(clazz, baseClazz) {
  var clazzPrototype = clazz.prototype;

  function F() {}

  F.prototype = baseClazz.prototype;
  clazz.prototype = new F();

  for (var prop in clazzPrototype) {
    clazz.prototype[prop] = clazzPrototype[prop];
  }

  clazz.prototype.constructor = clazz;
  clazz.superClass = baseClazz;
}
/**
 * @memberOf module:zrender/core/util
 * @param {Object|Function} target
 * @param {Object|Function} sorce
 * @param {boolean} overlay
 */


function mixin(target, source, overlay) {
  target = 'prototype' in target ? target.prototype : target;
  source = 'prototype' in source ? source.prototype : source;
  defaults(target, source, overlay);
}
/**
 * Consider typed array.
 * @param {Array|TypedArray} data
 */


function isArrayLike(data) {
  if (!data) {
    return;
  }

  if (typeof data == 'string') {
    return false;
  }

  return typeof data.length == 'number';
}
/**
 * 数组或对象遍历
 * @memberOf module:zrender/core/util
 * @param {Object|Array} obj
 * @param {Function} cb
 * @param {*} [context]
 */


function each(obj, cb, context) {
  if (!(obj && cb)) {
    return;
  }

  if (obj.forEach && obj.forEach === nativeForEach) {
    obj.forEach(cb, context);
  } else if (obj.length === +obj.length) {
    for (var i = 0, len = obj.length; i < len; i++) {
      cb.call(context, obj[i], i, obj);
    }
  } else {
    for (var key in obj) {
      if (obj.hasOwnProperty(key)) {
        cb.call(context, obj[key], key, obj);
      }
    }
  }
}
/**
 * 数组映射
 * @memberOf module:zrender/core/util
 * @param {Array} obj
 * @param {Function} cb
 * @param {*} [context]
 * @return {Array}
 */


function map(obj, cb, context) {
  if (!(obj && cb)) {
    return;
  }

  if (obj.map && obj.map === nativeMap) {
    return obj.map(cb, context);
  } else {
    var result = [];

    for (var i = 0, len = obj.length; i < len; i++) {
      result.push(cb.call(context, obj[i], i, obj));
    }

    return result;
  }
}
/**
 * @memberOf module:zrender/core/util
 * @param {Array} obj
 * @param {Function} cb
 * @param {Object} [memo]
 * @param {*} [context]
 * @return {Array}
 */


function reduce(obj, cb, memo, context) {
  if (!(obj && cb)) {
    return;
  }

  if (obj.reduce && obj.reduce === nativeReduce) {
    return obj.reduce(cb, memo, context);
  } else {
    for (var i = 0, len = obj.length; i < len; i++) {
      memo = cb.call(context, memo, obj[i], i, obj);
    }

    return memo;
  }
}
/**
 * 数组过滤
 * @memberOf module:zrender/core/util
 * @param {Array} obj
 * @param {Function} cb
 * @param {*} [context]
 * @return {Array}
 */


function filter(obj, cb, context) {
  if (!(obj && cb)) {
    return;
  }

  if (obj.filter && obj.filter === nativeFilter) {
    return obj.filter(cb, context);
  } else {
    var result = [];

    for (var i = 0, len = obj.length; i < len; i++) {
      if (cb.call(context, obj[i], i, obj)) {
        result.push(obj[i]);
      }
    }

    return result;
  }
}
/**
 * 数组项查找
 * @memberOf module:zrender/core/util
 * @param {Array} obj
 * @param {Function} cb
 * @param {*} [context]
 * @return {*}
 */


function find(obj, cb, context) {
  if (!(obj && cb)) {
    return;
  }

  for (var i = 0, len = obj.length; i < len; i++) {
    if (cb.call(context, obj[i], i, obj)) {
      return obj[i];
    }
  }
}
/**
 * @memberOf module:zrender/core/util
 * @param {Function} func
 * @param {*} context
 * @return {Function}
 */


function bind(func, context) {
  var args = nativeSlice.call(arguments, 2);
  return function () {
    return func.apply(context, args.concat(nativeSlice.call(arguments)));
  };
}
/**
 * @memberOf module:zrender/core/util
 * @param {Function} func
 * @return {Function}
 */


function curry(func) {
  var args = nativeSlice.call(arguments, 1);
  return function () {
    return func.apply(this, args.concat(nativeSlice.call(arguments)));
  };
}
/**
 * @memberOf module:zrender/core/util
 * @param {*} value
 * @return {boolean}
 */


function isArray(value) {
  return objToString.call(value) === '[object Array]';
}
/**
 * @memberOf module:zrender/core/util
 * @param {*} value
 * @return {boolean}
 */


function isFunction(value) {
  return typeof value === 'function';
}
/**
 * @memberOf module:zrender/core/util
 * @param {*} value
 * @return {boolean}
 */


function isString(value) {
  return objToString.call(value) === '[object String]';
}
/**
 * @memberOf module:zrender/core/util
 * @param {*} value
 * @return {boolean}
 */


function isObject(value) {
  // Avoid a V8 JIT bug in Chrome 19-20.
  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
  var type = typeof value;
  return type === 'function' || !!value && type == 'object';
}
/**
 * @memberOf module:zrender/core/util
 * @param {*} value
 * @return {boolean}
 */


function isBuiltInObject(value) {
  return !!BUILTIN_OBJECT[objToString.call(value)];
}
/**
 * @memberOf module:zrender/core/util
 * @param {*} value
 * @return {boolean}
 */


function isTypedArray(value) {
  return !!TYPED_ARRAY[objToString.call(value)];
}
/**
 * @memberOf module:zrender/core/util
 * @param {*} value
 * @return {boolean}
 */


function isDom(value) {
  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';
}
/**
 * Whether is exactly NaN. Notice isNaN('a') returns true.
 * @param {*} value
 * @return {boolean}
 */


function eqNaN(value) {
  return value !== value;
}
/**
 * If value1 is not null, then return value1, otherwise judget rest of values.
 * Low performance.
 * @memberOf module:zrender/core/util
 * @return {*} Final value
 */


function retrieve(values) {
  for (var i = 0, len = arguments.length; i < len; i++) {
    if (arguments[i] != null) {
      return arguments[i];
    }
  }
}

function retrieve2(value0, value1) {
  return value0 != null ? value0 : value1;
}

function retrieve3(value0, value1, value2) {
  return value0 != null ? value0 : value1 != null ? value1 : value2;
}
/**
 * @memberOf module:zrender/core/util
 * @param {Array} arr
 * @param {number} startIndex
 * @param {number} endIndex
 * @return {Array}
 */


function slice() {
  return Function.call.apply(nativeSlice, arguments);
}
/**
 * Normalize css liked array configuration
 * e.g.
 *  3 => [3, 3, 3, 3]
 *  [4, 2] => [4, 2, 4, 2]
 *  [4, 3, 2] => [4, 3, 2, 3]
 * @param {number|Array.<number>} val
 * @return {Array.<number>}
 */


function normalizeCssArray(val) {
  if (typeof val === 'number') {
    return [val, val, val, val];
  }

  var len = val.length;

  if (len === 2) {
    // vertical | horizontal
    return [val[0], val[1], val[0], val[1]];
  } else if (len === 3) {
    // top | horizontal | bottom
    return [val[0], val[1], val[2], val[1]];
  }

  return val;
}
/**
 * @memberOf module:zrender/core/util
 * @param {boolean} condition
 * @param {string} message
 */


function assert(condition, message) {
  if (!condition) {
    throw new Error(message);
  }
}
/**
 * @memberOf module:zrender/core/util
 * @param {string} str string to be trimed
 * @return {string} trimed string
 */


function trim(str) {
  if (str == null) {
    return null;
  } else if (typeof str.trim === 'function') {
    return str.trim();
  } else {
    return str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');
  }
}

var primitiveKey = '__ec_primitive__';
/**
 * Set an object as primitive to be ignored traversing children in clone or merge
 */

function setAsPrimitive(obj) {
  obj[primitiveKey] = true;
}

function isPrimitive(obj) {
  return obj[primitiveKey];
}
/**
 * @constructor
 * @param {Object} obj Only apply `ownProperty`.
 */


function HashMap(obj) {
  var isArr = isArray(obj);
  var thisMap = this;
  obj instanceof HashMap ? obj.each(visit) : obj && each(obj, visit);

  function visit(value, key) {
    isArr ? thisMap.set(value, key) : thisMap.set(key, value);
  }
} // Add prefix to avoid conflict with Object.prototype.


HashMap.prototype = {
  constructor: HashMap,
  // Do not provide `has` method to avoid defining what is `has`.
  // (We usually treat `null` and `undefined` as the same, different
  // from ES6 Map).
  get: function (key) {
    return this.hasOwnProperty(key) ? this[key] : null;
  },
  set: function (key, value) {
    // Comparing with invocation chaining, `return value` is more commonly
    // used in this case: `var someVal = map.set('a', genVal());`
    return this[key] = value;
  },
  // Although util.each can be performed on this hashMap directly, user
  // should not use the exposed keys, who are prefixed.
  each: function (cb, context) {
    context !== void 0 && (cb = bind(cb, context));

    for (var key in this) {
      this.hasOwnProperty(key) && cb(this[key], key);
    }
  },
  // Do not use this method if performance sensitive.
  removeKey: function (key) {
    delete this[key];
  }
};

function createHashMap(obj) {
  return new HashMap(obj);
}

function concatArray(a, b) {
  var newArray = new a.constructor(a.length + b.length);

  for (var i = 0; i < a.length; i++) {
    newArray[i] = a[i];
  }

  var offset = a.length;

  for (i = 0; i < b.length; i++) {
    newArray[i + offset] = b[i];
  }

  return newArray;
}

function noop() {}

exports.$override = $override;
exports.clone = clone;
exports.merge = merge;
exports.mergeAll = mergeAll;
exports.extend = extend;
exports.defaults = defaults;
exports.createCanvas = createCanvas;
exports.getContext = getContext;
exports.indexOf = indexOf;
exports.inherits = inherits;
exports.mixin = mixin;
exports.isArrayLike = isArrayLike;
exports.each = each;
exports.map = map;
exports.reduce = reduce;
exports.filter = filter;
exports.find = find;
exports.bind = bind;
exports.curry = curry;
exports.isArray = isArray;
exports.isFunction = isFunction;
exports.isString = isString;
exports.isObject = isObject;
exports.isBuiltInObject = isBuiltInObject;
exports.isTypedArray = isTypedArray;
exports.isDom = isDom;
exports.eqNaN = eqNaN;
exports.retrieve = retrieve;
exports.retrieve2 = retrieve2;
exports.retrieve3 = retrieve3;
exports.slice = slice;
exports.normalizeCssArray = normalizeCssArray;
exports.assert = assert;
exports.trim = trim;
exports.setAsPrimitive = setAsPrimitive;
exports.isPrimitive = isPrimitive;
exports.createHashMap = createHashMap;
exports.concatArray = concatArray;
exports.noop = noop;

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(4);
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),
/* 3 */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),
/* 5 */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(90)('wks');
var uid = __webpack_require__(56);
var Symbol = __webpack_require__(3).Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var each = zrUtil.each;
var isObject = zrUtil.isObject;
var isArray = zrUtil.isArray;
/**
 * Make the name displayable. But we should
 * make sure it is not duplicated with user
 * specified name, so use '\0';
 */

var DUMMY_COMPONENT_NAME_PREFIX = 'series\0';
/**
 * If value is not array, then translate it to array.
 * @param  {*} value
 * @return {Array} [value] or value
 */

function normalizeToArray(value) {
  return value instanceof Array ? value : value == null ? [] : [value];
}
/**
 * Sync default option between normal and emphasis like `position` and `show`
 * In case some one will write code like
 *     label: {
 *          show: false,
 *          position: 'outside',
 *          fontSize: 18
 *     },
 *     emphasis: {
 *          label: { show: true }
 *     }
 * @param {Object} opt
 * @param {string} key
 * @param {Array.<string>} subOpts
 */


function defaultEmphasis(opt, key, subOpts) {
  // Caution: performance sensitive.
  if (opt) {
    opt[key] = opt[key] || {};
    opt.emphasis = opt.emphasis || {};
    opt.emphasis[key] = opt.emphasis[key] || {}; // Default emphasis option from normal

    for (var i = 0, len = subOpts.length; i < len; i++) {
      var subOptName = subOpts[i];

      if (!opt.emphasis[key].hasOwnProperty(subOptName) && opt[key].hasOwnProperty(subOptName)) {
        opt.emphasis[key][subOptName] = opt[key][subOptName];
      }
    }
  }
}

var TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([
//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',
//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',
//     // FIXME: deprecated, check and remove it.
//     'textStyle'
// ]);

/**
 * The method do not ensure performance.
 * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]
 * This helper method retieves value from data.
 * @param {string|number|Date|Array|Object} dataItem
 * @return {number|string|Date|Array.<number|string|Date>}
 */

function getDataItemValue(dataItem) {
  return isObject(dataItem) && !isArray(dataItem) && !(dataItem instanceof Date) ? dataItem.value : dataItem;
}
/**
 * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]
 * This helper method determine if dataItem has extra option besides value
 * @param {string|number|Date|Array|Object} dataItem
 */


function isDataItemOption(dataItem) {
  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array
  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));
}
/**
 * Mapping to exists for merge.
 *
 * @public
 * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists
 * @param {Object|Array.<Object>} newCptOptions
 * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],
 *                          index of which is the same as exists.
 */


function mappingToExists(exists, newCptOptions) {
  // Mapping by the order by original option (but not order of
  // new option) in merge mode. Because we should ensure
  // some specified index (like xAxisIndex) is consistent with
  // original option, which is easy to understand, espatially in
  // media query. And in most case, merge option is used to
  // update partial option but not be expected to change order.
  newCptOptions = (newCptOptions || []).slice();
  var result = zrUtil.map(exists || [], function (obj, index) {
    return {
      exist: obj
    };
  }); // Mapping by id or name if specified.

  each(newCptOptions, function (cptOption, index) {
    if (!isObject(cptOption)) {
      return;
    } // id has highest priority.


    for (var i = 0; i < result.length; i++) {
      if (!result[i].option // Consider name: two map to one.
      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {
        result[i].option = cptOption;
        newCptOptions[index] = null;
        return;
      }
    }

    for (var i = 0; i < result.length; i++) {
      var exist = result[i].exist;

      if (!result[i].option // Consider name: two map to one.
      // Can not match when both ids exist but different.
      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {
        result[i].option = cptOption;
        newCptOptions[index] = null;
        return;
      }
    }
  }); // Otherwise mapping by index.

  each(newCptOptions, function (cptOption, index) {
    if (!isObject(cptOption)) {
      return;
    }

    var i = 0;

    for (; i < result.length; i++) {
      var exist = result[i].exist;

      if (!result[i].option // Existing model that already has id should be able to
      // mapped to (because after mapping performed model may
      // be assigned with a id, whish should not affect next
      // mapping), except those has inner id.
      && !isIdInner(exist) // Caution:
      // Do not overwrite id. But name can be overwritten,
      // because axis use name as 'show label text'.
      // 'exist' always has id and name and we dont
      // need to check it.
      && cptOption.id == null) {
        result[i].option = cptOption;
        break;
      }
    }

    if (i >= result.length) {
      result.push({
        option: cptOption
      });
    }
  });
  return result;
}
/**
 * Make id and name for mapping result (result of mappingToExists)
 * into `keyInfo` field.
 *
 * @public
 * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],
 *                          which order is the same as exists.
 * @return {Array.<Object>} The input.
 */


function makeIdAndName(mapResult) {
  // We use this id to hash component models and view instances
  // in echarts. id can be specified by user, or auto generated.
  // The id generation rule ensures new view instance are able
  // to mapped to old instance when setOption are called in
  // no-merge mode. So we generate model id by name and plus
  // type in view id.
  // name can be duplicated among components, which is convenient
  // to specify multi components (like series) by one name.
  // Ensure that each id is distinct.
  var idMap = zrUtil.createHashMap();
  each(mapResult, function (item, index) {
    var existCpt = item.exist;
    existCpt && idMap.set(existCpt.id, item);
  });
  each(mapResult, function (item, index) {
    var opt = item.option;
    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));
    opt && opt.id != null && idMap.set(opt.id, item);
    !item.keyInfo && (item.keyInfo = {});
  }); // Make name and id.

  each(mapResult, function (item, index) {
    var existCpt = item.exist;
    var opt = item.option;
    var keyInfo = item.keyInfo;

    if (!isObject(opt)) {
      return;
    } // name can be overwitten. Consider case: axis.name = '20km'.
    // But id generated by name will not be changed, which affect
    // only in that case: setOption with 'not merge mode' and view
    // instance will be recreated, which can be accepted.


    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name // Avoid diffferent series has the same name,
    // because name may be used like in color pallet.
    : DUMMY_COMPONENT_NAME_PREFIX + index;

    if (existCpt) {
      keyInfo.id = existCpt.id;
    } else if (opt.id != null) {
      keyInfo.id = opt.id + '';
    } else {
      // Consider this situatoin:
      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]
      //  optionB [{..}, {name: 'a'}, {name: 'a'}]
      // Series with the same name between optionA and optionB
      // should be mapped.
      var idNum = 0;

      do {
        keyInfo.id = '\0' + keyInfo.name + '\0' + idNum++;
      } while (idMap.get(keyInfo.id));
    }

    idMap.set(keyInfo.id, item);
  });
}

function isNameSpecified(componentModel) {
  var name = componentModel.name; // Is specified when `indexOf` get -1 or > 0.

  return !!(name && name.indexOf(DUMMY_COMPONENT_NAME_PREFIX));
}
/**
 * @public
 * @param {Object} cptOption
 * @return {boolean}
 */


function isIdInner(cptOption) {
  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\0_ec_\0') === 0;
}
/**
 * A helper for removing duplicate items between batchA and batchB,
 * and in themselves, and categorize by series.
 *
 * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]
 * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]
 * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]
 */


function compressBatches(batchA, batchB) {
  var mapA = {};
  var mapB = {};
  makeMap(batchA || [], mapA);
  makeMap(batchB || [], mapB, mapA);
  return [mapToArray(mapA), mapToArray(mapB)];

  function makeMap(sourceBatch, map, otherMap) {
    for (var i = 0, len = sourceBatch.length; i < len; i++) {
      var seriesId = sourceBatch[i].seriesId;
      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);
      var otherDataIndices = otherMap && otherMap[seriesId];

      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {
        var dataIndex = dataIndices[j];

        if (otherDataIndices && otherDataIndices[dataIndex]) {
          otherDataIndices[dataIndex] = null;
        } else {
          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;
        }
      }
    }
  }

  function mapToArray(map, isData) {
    var result = [];

    for (var i in map) {
      if (map.hasOwnProperty(i) && map[i] != null) {
        if (isData) {
          result.push(+i);
        } else {
          var dataIndices = mapToArray(map[i], true);
          dataIndices.length && result.push({
            seriesId: i,
            dataIndex: dataIndices
          });
        }
      }
    }

    return result;
  }
}
/**
 * @param {module:echarts/data/List} data
 * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name
 *                         each of which can be Array or primary type.
 * @return {number|Array.<number>} dataIndex If not found, return undefined/null.
 */


function queryDataIndex(data, payload) {
  if (payload.dataIndexInside != null) {
    return payload.dataIndexInside;
  } else if (payload.dataIndex != null) {
    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {
      return data.indexOfRawIndex(value);
    }) : data.indexOfRawIndex(payload.dataIndex);
  } else if (payload.name != null) {
    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {
      return data.indexOfName(value);
    }) : data.indexOfName(payload.name);
  }
}
/**
 * Enable property storage to any host object.
 * Notice: Serialization is not supported.
 *
 * For example:
 * var inner = zrUitl.makeInner();
 *
 * function some1(hostObj) {
 *      inner(hostObj).someProperty = 1212;
 *      ...
 * }
 * function some2() {
 *      var fields = inner(this);
 *      fields.someProperty1 = 1212;
 *      fields.someProperty2 = 'xx';
 *      ...
 * }
 *
 * @return {Function}
 */


function makeInner() {
  // Consider different scope by es module import.
  var key = '__\0ec_inner_' + innerUniqueIndex++ + '_' + Math.random().toFixed(5);
  return function (hostObj) {
    return hostObj[key] || (hostObj[key] = {});
  };
}

var innerUniqueIndex = 0;
/**
 * @param {module:echarts/model/Global} ecModel
 * @param {string|Object} finder
 *        If string, e.g., 'geo', means {geoIndex: 0}.
 *        If Object, could contain some of these properties below:
 *        {
 *            seriesIndex, seriesId, seriesName,
 *            geoIndex, geoId, geoName,
 *            bmapIndex, bmapId, bmapName,
 *            xAxisIndex, xAxisId, xAxisName,
 *            yAxisIndex, yAxisId, yAxisName,
 *            gridIndex, gridId, gridName,
 *            ... (can be extended)
 *        }
 *        Each properties can be number|string|Array.<number>|Array.<string>
 *        For example, a finder could be
 *        {
 *            seriesIndex: 3,
 *            geoId: ['aa', 'cc'],
 *            gridName: ['xx', 'rr']
 *        }
 *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)
 *        If nothing or null/undefined specified, return nothing.
 * @param {Object} [opt]
 * @param {string} [opt.defaultMainType]
 * @param {Array.<string>} [opt.includeMainTypes]
 * @return {Object} result like:
 *        {
 *            seriesModels: [seriesModel1, seriesModel2],
 *            seriesModel: seriesModel1, // The first model
 *            geoModels: [geoModel1, geoModel2],
 *            geoModel: geoModel1, // The first model
 *            ...
 *        }
 */

function parseFinder(ecModel, finder, opt) {
  if (zrUtil.isString(finder)) {
    var obj = {};
    obj[finder + 'Index'] = 0;
    finder = obj;
  }

  var defaultMainType = opt && opt.defaultMainType;

  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {
    finder[defaultMainType + 'Index'] = 0;
  }

  var result = {};
  each(finder, function (value, key) {
    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.

    if (key === 'dataIndex' || key === 'dataIndexInside') {
      result[key] = value;
      return;
    }

    var parsedKey = key.match(/^(\w+)(Index|Id|Name)$/) || [];
    var mainType = parsedKey[1];
    var queryType = (parsedKey[2] || '').toLowerCase();

    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {
      return;
    }

    var queryParam = {
      mainType: mainType
    };

    if (queryType !== 'index' || value !== 'all') {
      queryParam[queryType] = value;
    }

    var models = ecModel.queryComponents(queryParam);
    result[mainType + 'Models'] = models;
    result[mainType + 'Model'] = models[0];
  });
  return result;
}

function has(obj, prop) {
  return obj && obj.hasOwnProperty(prop);
}

function setAttribute(dom, key, value) {
  dom.setAttribute ? dom.setAttribute(key, value) : dom[key] = value;
}

function getAttribute(dom, key) {
  return dom.getAttribute ? dom.getAttribute(key) : dom[key];
}

exports.normalizeToArray = normalizeToArray;
exports.defaultEmphasis = defaultEmphasis;
exports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;
exports.getDataItemValue = getDataItemValue;
exports.isDataItemOption = isDataItemOption;
exports.mappingToExists = mappingToExists;
exports.makeIdAndName = makeIdAndName;
exports.isNameSpecified = isNameSpecified;
exports.isIdInner = isIdInner;
exports.compressBatches = compressBatches;
exports.queryDataIndex = queryDataIndex;
exports.makeInner = makeInner;
exports.parseFinder = parseFinder;
exports.setAttribute = setAttribute;
exports.getAttribute = getAttribute;

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(2);
var IE8_DOM_DEFINE = __webpack_require__(200);
var toPrimitive = __webpack_require__(37);
var dP = Object.defineProperty;

exports.f = __webpack_require__(9) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(5)(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(39);
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var pathTool = __webpack_require__(451);

var colorTool = __webpack_require__(74);

var matrix = __webpack_require__(64);

var vector = __webpack_require__(17);

var Path = __webpack_require__(21);

var Transformable = __webpack_require__(172);

var ZImage = __webpack_require__(180);

exports.Image = ZImage;

var Group = __webpack_require__(82);

exports.Group = Group;

var Text = __webpack_require__(458);

exports.Text = Text;

var Circle = __webpack_require__(459);

exports.Circle = Circle;

var Sector = __webpack_require__(460);

exports.Sector = Sector;

var Ring = __webpack_require__(461);

exports.Ring = Ring;

var Polygon = __webpack_require__(462);

exports.Polygon = Polygon;

var Polyline = __webpack_require__(465);

exports.Polyline = Polyline;

var Rect = __webpack_require__(466);

exports.Rect = Rect;

var Line = __webpack_require__(467);

exports.Line = Line;

var BezierCurve = __webpack_require__(468);

exports.BezierCurve = BezierCurve;

var Arc = __webpack_require__(469);

exports.Arc = Arc;

var CompoundPath = __webpack_require__(470);

exports.CompoundPath = CompoundPath;

var LinearGradient = __webpack_require__(471);

exports.LinearGradient = LinearGradient;

var RadialGradient = __webpack_require__(472);

exports.RadialGradient = RadialGradient;

var BoundingRect = __webpack_require__(30);

exports.BoundingRect = BoundingRect;

var IncrementalDisplayable = __webpack_require__(473);

exports.IncrementalDisplayable = IncrementalDisplayable;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var round = Math.round;
var mathMax = Math.max;
var mathMin = Math.min;
var EMPTY_OBJ = {};
/**
 * Extend shape with parameters
 */

function extendShape(opts) {
  return Path.extend(opts);
}
/**
 * Extend path
 */


function extendPath(pathData, opts) {
  return pathTool.extendFromString(pathData, opts);
}
/**
 * Create a path element from path data string
 * @param {string} pathData
 * @param {Object} opts
 * @param {module:zrender/core/BoundingRect} rect
 * @param {string} [layout=cover] 'center' or 'cover'
 */


function makePath(pathData, opts, rect, layout) {
  var path = pathTool.createFromString(pathData, opts);
  var boundingRect = path.getBoundingRect();

  if (rect) {
    if (layout === 'center') {
      rect = centerGraphic(rect, boundingRect);
    }

    resizePath(path, rect);
  }

  return path;
}
/**
 * Create a image element from image url
 * @param {string} imageUrl image url
 * @param {Object} opts options
 * @param {module:zrender/core/BoundingRect} rect constrain rect
 * @param {string} [layout=cover] 'center' or 'cover'
 */


function makeImage(imageUrl, rect, layout) {
  var path = new ZImage({
    style: {
      image: imageUrl,
      x: rect.x,
      y: rect.y,
      width: rect.width,
      height: rect.height
    },
    onload: function (img) {
      if (layout === 'center') {
        var boundingRect = {
          width: img.width,
          height: img.height
        };
        path.setStyle(centerGraphic(rect, boundingRect));
      }
    }
  });
  return path;
}
/**
 * Get position of centered element in bounding box.
 *
 * @param  {Object} rect         element local bounding box
 * @param  {Object} boundingRect constraint bounding box
 * @return {Object} element position containing x, y, width, and height
 */


function centerGraphic(rect, boundingRect) {
  // Set rect to center, keep width / height ratio.
  var aspect = boundingRect.width / boundingRect.height;
  var width = rect.height * aspect;
  var height;

  if (width <= rect.width) {
    height = rect.height;
  } else {
    width = rect.width;
    height = width / aspect;
  }

  var cx = rect.x + rect.width / 2;
  var cy = rect.y + rect.height / 2;
  return {
    x: cx - width / 2,
    y: cy - height / 2,
    width: width,
    height: height
  };
}

var mergePath = pathTool.mergePath;
/**
 * Resize a path to fit the rect
 * @param {module:zrender/graphic/Path} path
 * @param {Object} rect
 */

function resizePath(path, rect) {
  if (!path.applyTransform) {
    return;
  }

  var pathRect = path.getBoundingRect();
  var m = pathRect.calculateTransform(rect);
  path.applyTransform(m);
}
/**
 * Sub pixel optimize line for canvas
 *
 * @param {Object} param
 * @param {Object} [param.shape]
 * @param {number} [param.shape.x1]
 * @param {number} [param.shape.y1]
 * @param {number} [param.shape.x2]
 * @param {number} [param.shape.y2]
 * @param {Object} [param.style]
 * @param {number} [param.style.lineWidth]
 * @return {Object} Modified param
 */


function subPixelOptimizeLine(param) {
  var shape = param.shape;
  var lineWidth = param.style.lineWidth;

  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {
    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);
  }

  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {
    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);
  }

  return param;
}
/**
 * Sub pixel optimize rect for canvas
 *
 * @param {Object} param
 * @param {Object} [param.shape]
 * @param {number} [param.shape.x]
 * @param {number} [param.shape.y]
 * @param {number} [param.shape.width]
 * @param {number} [param.shape.height]
 * @param {Object} [param.style]
 * @param {number} [param.style.lineWidth]
 * @return {Object} Modified param
 */


function subPixelOptimizeRect(param) {
  var shape = param.shape;
  var lineWidth = param.style.lineWidth;
  var originX = shape.x;
  var originY = shape.y;
  var originWidth = shape.width;
  var originHeight = shape.height;
  shape.x = subPixelOptimize(shape.x, lineWidth, true);
  shape.y = subPixelOptimize(shape.y, lineWidth, true);
  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);
  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);
  return param;
}
/**
 * Sub pixel optimize for canvas
 *
 * @param {number} position Coordinate, such as x, y
 * @param {number} lineWidth Should be nonnegative integer.
 * @param {boolean=} positiveOrNegative Default false (negative).
 * @return {number} Optimized position.
 */


function subPixelOptimize(position, lineWidth, positiveOrNegative) {
  // Assure that (position + lineWidth / 2) is near integer edge,
  // otherwise line will be fuzzy in canvas.
  var doubledPosition = round(position * 2);
  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;
}

function hasFillOrStroke(fillOrStroke) {
  return fillOrStroke != null && fillOrStroke != 'none';
}

function liftColor(color) {
  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;
}
/**
 * @private
 */


function cacheElementStl(el) {
  if (el.__hoverStlDirty) {
    var stroke = el.style.stroke;
    var fill = el.style.fill; // Create hoverStyle on mouseover

    var hoverStyle = el.__hoverStl;
    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);
    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);
    var normalStyle = {};

    for (var name in hoverStyle) {
      // See comment in `doSingleEnterHover`.
      if (hoverStyle[name] != null) {
        normalStyle[name] = el.style[name];
      }
    }

    el.__normalStl = normalStyle;
    el.__hoverStlDirty = false;
  }
}
/**
 * @private
 */


function doSingleEnterHover(el) {
  if (el.__isHover) {
    return;
  }

  cacheElementStl(el);

  if (el.useHoverLayer) {
    el.__zr && el.__zr.addHover(el, el.__hoverStl);
  } else {
    var style = el.style;
    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text
    // color should be returned to `autoColor`, rather than remain '#fff'.
    // So we should rollback then apply again after style merging.

    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:
    // {
    //    label: {
    //        show: false,
    //        position: 'outside',
    //        fontSize: 18
    //    },
    //    emphasis: {
    //        label: {
    //            show: true
    //        }
    //    }
    // },
    // where properties of `emphasis` may not appear in `normal`. We previously use
    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.
    // But consider rich text and setOption in merge mode, it is impossible to cover
    // all properties in merge. So we use merge mode when setting style here, where
    // only properties that is not `null/undefined` can be set. The disadventage:
    // null/undefined can not be used to remove style any more in `emphasis`.

    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.

    if (insideRollbackOpt) {
      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.

      if (style.textFill == null) {
        style.textFill = insideRollbackOpt.autoColor;
      }
    }

    el.dirty(false);
    el.z2 += 1;
  }

  el.__isHover = true;
}
/**
 * @inner
 */


function doSingleLeaveHover(el) {
  if (!el.__isHover) {
    return;
  }

  var normalStl = el.__normalStl;

  if (el.useHoverLayer) {
    el.__zr && el.__zr.removeHover(el);
  } else {
    // Consider null/undefined value, should use
    // `setStyle` but not `extendFrom(stl, true)`.
    normalStl && el.setStyle(normalStl);
    el.z2 -= 1;
  }

  el.__isHover = false;
}
/**
 * @inner
 */


function doEnterHover(el) {
  el.type === 'group' ? el.traverse(function (child) {
    if (child.type !== 'group') {
      doSingleEnterHover(child);
    }
  }) : doSingleEnterHover(el);
}

function doLeaveHover(el) {
  el.type === 'group' ? el.traverse(function (child) {
    if (child.type !== 'group') {
      doSingleLeaveHover(child);
    }
  }) : doSingleLeaveHover(el);
}
/**
 * @inner
 */


function setElementHoverStl(el, hoverStl) {
  // If element has sepcified hoverStyle, then use it instead of given hoverStyle
  // Often used when item group has a label element and it's hoverStyle is different
  el.__hoverStl = el.hoverStyle || hoverStl || {};
  el.__hoverStlDirty = true;

  if (el.__isHover) {
    cacheElementStl(el);
  }
}
/**
 * @inner
 */


function onElementMouseOver(e) {
  if (this.__hoverSilentOnTouch && e.zrByTouch) {
    return;
  } // Only if element is not in emphasis status


  !this.__isEmphasis && doEnterHover(this);
}
/**
 * @inner
 */


function onElementMouseOut(e) {
  if (this.__hoverSilentOnTouch && e.zrByTouch) {
    return;
  } // Only if element is not in emphasis status


  !this.__isEmphasis && doLeaveHover(this);
}
/**
 * @inner
 */


function enterEmphasis() {
  this.__isEmphasis = true;
  doEnterHover(this);
}
/**
 * @inner
 */


function leaveEmphasis() {
  this.__isEmphasis = false;
  doLeaveHover(this);
}
/**
 * Set hover style of element.
 * This method can be called repeatly without side-effects.
 * @param {module:zrender/Element} el
 * @param {Object} [hoverStyle]
 * @param {Object} [opt]
 * @param {boolean} [opt.hoverSilentOnTouch=false]
 *        In touch device, mouseover event will be trigger on touchstart event
 *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can
 *        conviniently use hoverStyle when tap on touch screen without additional
 *        code for compatibility.
 *        But if the chart/component has select feature, which usually also use
 *        hoverStyle, there might be conflict between 'select-highlight' and
 *        'hover-highlight' especially when roam is enabled (see geo for example).
 *        In this case, hoverSilentOnTouch should be used to disable hover-highlight
 *        on touch device.
 */


function setHoverStyle(el, hoverStyle, opt) {
  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;
  el.type === 'group' ? el.traverse(function (child) {
    if (child.type !== 'group') {
      setElementHoverStl(child, hoverStyle);
    }
  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.

  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually

  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);
}
/**
 * @param {Object|module:zrender/graphic/Style} normalStyle
 * @param {Object} emphasisStyle
 * @param {module:echarts/model/Model} normalModel
 * @param {module:echarts/model/Model} emphasisModel
 * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.
 * @param {string|Function} [opt.defaultText]
 * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by
 *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`
 * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by
 *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`
 * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by
 *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`
 * @param {Object} [normalSpecified]
 * @param {Object} [emphasisSpecified]
 */


function setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {
  opt = opt || EMPTY_OBJ;
  var labelFetcher = opt.labelFetcher;
  var labelDataIndex = opt.labelDataIndex;
  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,
  // is not supported util someone requests.

  var showNormal = normalModel.getShallow('show');
  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.
  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,
  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.

  var baseText;

  if (showNormal || showEmphasis) {
    if (labelFetcher) {
      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex);
    }

    if (baseText == null) {
      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;
    }
  }

  var normalStyleText = showNormal ? baseText : null;
  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.

  if (normalStyleText != null || emphasisStyleText != null) {
    // Always set `textStyle` even if `normalStyle.text` is null, because default
    // values have to be set on `normalStyle`.
    // If we set default values on `emphasisStyle`, consider case:
    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`
    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`
    // Then the 'red' will not work on emphasis.
    setTextStyle(normalStyle, normalModel, normalSpecified, opt);
    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);
  }

  normalStyle.text = normalStyleText;
  emphasisStyle.text = emphasisStyleText;
}
/**
 * Set basic textStyle properties.
 * @param {Object|module:zrender/graphic/Style} textStyle
 * @param {module:echarts/model/Model} model
 * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.
 * @param {Object} [opt] See `opt` of `setTextStyleCommon`.
 * @param {boolean} [isEmphasis]
 */


function setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {
  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);
  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);
  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);
  return textStyle;
}
/**
 * Set text option in the style.
 * @deprecated
 * @param {Object} textStyle
 * @param {module:echarts/model/Model} labelModel
 * @param {string|boolean} defaultColor Default text color.
 *        If set as false, it will be processed as a emphasis style.
 */


function setText(textStyle, labelModel, defaultColor) {
  var opt = {
    isRectText: true
  };
  var isEmphasis;

  if (defaultColor === false) {
    isEmphasis = true;
  } else {
    // Support setting color as 'auto' to get visual color.
    opt.autoColor = defaultColor;
  }

  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);
  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);
}
/**
 * {
 *      disableBox: boolean, Whether diable drawing box of block (outer most).
 *      isRectText: boolean,
 *      autoColor: string, specify a color when color is 'auto',
 *              for textFill, textStroke, textBackgroundColor, and textBorderColor.
 *              If autoColor specified, it is used as default textFill.
 *      useInsideStyle:
 *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)
 *                  if `textFill` is not specified.
 *              `false`: Do not use inside style.
 *              `null/undefined`: use inside style if `isRectText` is true and
 *                  `textFill` is not specified and textPosition contains `'inside'`.
 *      forceRich: boolean
 * }
 */


function setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {
  // Consider there will be abnormal when merge hover style to normal style if given default value.
  opt = opt || EMPTY_OBJ;

  if (opt.isRectText) {
    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used
    // in bar series, and magric type should be considered.

    textPosition === 'outside' && (textPosition = 'top');
    textStyle.textPosition = textPosition;
    textStyle.textOffset = textStyleModel.getShallow('offset');
    var labelRotate = textStyleModel.getShallow('rotate');
    labelRotate != null && (labelRotate *= Math.PI / 180);
    textStyle.textRotation = labelRotate;
    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);
  }

  var ecModel = textStyleModel.ecModel;
  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:
  // {
  //     data: [{
  //         value: 12,
  //         label: {
  //             rich: {
  //                 // no 'a' here but using parent 'a'.
  //             }
  //         }
  //     }],
  //     rich: {
  //         a: { ... }
  //     }
  // }

  var richItemNames = getRichItemNames(textStyleModel);
  var richResult;

  if (richItemNames) {
    richResult = {};

    for (var name in richItemNames) {
      if (richItemNames.hasOwnProperty(name)) {
        // Cascade is supported in rich.
        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.

        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);
      }
    }
  }

  textStyle.rich = richResult;
  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);

  if (opt.forceRich && !opt.textStyle) {
    opt.textStyle = {};
  }

  return textStyle;
} // Consider case:
// {
//     data: [{
//         value: 12,
//         label: {
//             rich: {
//                 // no 'a' here but using parent 'a'.
//             }
//         }
//     }],
//     rich: {
//         a: { ... }
//     }
// }


function getRichItemNames(textStyleModel) {
  // Use object to remove duplicated names.
  var richItemNameMap;

  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {
    var rich = (textStyleModel.option || EMPTY_OBJ).rich;

    if (rich) {
      richItemNameMap = richItemNameMap || {};

      for (var name in rich) {
        if (rich.hasOwnProperty(name)) {
          richItemNameMap[name] = 1;
        }
      }
    }

    textStyleModel = textStyleModel.parentModel;
  }

  return richItemNameMap;
}

function setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {
  // In merge mode, default value should not be given.
  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;
  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;
  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;
  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);

  if (!isEmphasis) {
    if (isBlock) {
      // Always set `insideRollback`, for clearing previous.
      var originalTextPosition = textStyle.textPosition;
      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by
      // real location (like [10, 30]) in zrender.

      textStyle.insideOriginalTextPosition = originalTextPosition;
      textStyle.insideRollbackOpt = opt;
    } // Set default finally.


    if (textStyle.textFill == null) {
      textStyle.textFill = opt.autoColor;
    }
  } // Do not use `getFont` here, because merge should be supported, where
  // part of these properties may be changed in emphasis style, and the
  // others should remain their original value got from normal style.


  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;
  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;
  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;
  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;
  textStyle.textAlign = textStyleModel.getShallow('align');
  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');
  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');
  textStyle.textWidth = textStyleModel.getShallow('width');
  textStyle.textHeight = textStyleModel.getShallow('height');
  textStyle.textTag = textStyleModel.getShallow('tag');

  if (!isBlock || !opt.disableBox) {
    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);
    textStyle.textPadding = textStyleModel.getShallow('padding');
    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);
    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');
    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');
    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');
    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');
    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');
    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');
  }

  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;
  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;
  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;
  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;
}

function getAutoColor(color, opt) {
  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;
}

function applyInsideStyle(textStyle, textPosition, opt) {
  var useInsideStyle = opt.useInsideStyle;
  var insideRollback;

  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]
  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {
    insideRollback = {
      textFill: null,
      textStroke: textStyle.textStroke,
      textStrokeWidth: textStyle.textStrokeWidth
    };
    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.

    if (textStyle.textStroke == null) {
      textStyle.textStroke = opt.autoColor;
      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);
    }
  }

  return insideRollback;
}

function rollbackInsideStyle(style) {
  var insideRollback = style.insideRollback;

  if (insideRollback) {
    style.textFill = insideRollback.textFill;
    style.textStroke = insideRollback.textStroke;
    style.textStrokeWidth = insideRollback.textStrokeWidth;
  }
}

function getFont(opt, ecModel) {
  // ecModel or default text style model.
  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');
  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle
  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));
}

function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {
  if (typeof dataIndex === 'function') {
    cb = dataIndex;
    dataIndex = null;
  } // Do not check 'animation' property directly here. Consider this case:
  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`
  // but its parent model (`seriesModel`) does.


  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();

  if (animationEnabled) {
    var postfix = isUpdate ? 'Update' : '';
    var duration = animatableModel.getShallow('animationDuration' + postfix);
    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);
    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);

    if (typeof animationDelay === 'function') {
      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);
    }

    if (typeof duration === 'function') {
      duration = duration(dataIndex);
    }

    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());
  } else {
    el.stopAnimation();
    el.attr(props);
    cb && cb();
  }
}
/**
 * Update graphic element properties with or without animation according to the
 * configuration in series.
 *
 * Caution: this method will stop previous animation.
 * So if do not use this method to one element twice before
 * animation starts, unless you know what you are doing.
 *
 * @param {module:zrender/Element} el
 * @param {Object} props
 * @param {module:echarts/model/Model} [animatableModel]
 * @param {number} [dataIndex]
 * @param {Function} [cb]
 * @example
 *     graphic.updateProps(el, {
 *         position: [100, 100]
 *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });
 *     // Or
 *     graphic.updateProps(el, {
 *         position: [100, 100]
 *     }, seriesModel, function () { console.log('Animation done!'); });
 */


function updateProps(el, props, animatableModel, dataIndex, cb) {
  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);
}
/**
 * Init graphic element properties with or without animation according to the
 * configuration in series.
 *
 * Caution: this method will stop previous animation.
 * So if do not use this method to one element twice before
 * animation starts, unless you know what you are doing.
 *
 * @param {module:zrender/Element} el
 * @param {Object} props
 * @param {module:echarts/model/Model} [animatableModel]
 * @param {number} [dataIndex]
 * @param {Function} cb
 */


function initProps(el, props, animatableModel, dataIndex, cb) {
  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);
}
/**
 * Get transform matrix of target (param target),
 * in coordinate of its ancestor (param ancestor)
 *
 * @param {module:zrender/mixin/Transformable} target
 * @param {module:zrender/mixin/Transformable} [ancestor]
 */


function getTransform(target, ancestor) {
  var mat = matrix.identity([]);

  while (target && target !== ancestor) {
    matrix.mul(mat, target.getLocalTransform(), mat);
    target = target.parent;
  }

  return mat;
}
/**
 * Apply transform to an vertex.
 * @param {Array.<number>} target [x, y]
 * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:
 *      + Transform matrix: like [1, 0, 0, 1, 0, 0]
 *      + {position, rotation, scale}, the same as `zrender/Transformable`.
 * @param {boolean=} invert Whether use invert matrix.
 * @return {Array.<number>} [x, y]
 */


function applyTransform(target, transform, invert) {
  if (transform && !zrUtil.isArrayLike(transform)) {
    transform = Transformable.getLocalTransform(transform);
  }

  if (invert) {
    transform = matrix.invert([], transform);
  }

  return vector.applyTransform([], target, transform);
}
/**
 * @param {string} direction 'left' 'right' 'top' 'bottom'
 * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]
 * @param {boolean=} invert Whether use invert matrix.
 * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'
 */


function transformDirection(direction, transform, invert) {
  // Pick a base, ensure that transform result will not be (0, 0).
  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);
  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);
  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];
  vertex = applyTransform(vertex, transform, invert);
  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';
}
/**
 * Apply group transition animation from g1 to g2.
 * If no animatableModel, no animation.
 */


function groupTransition(g1, g2, animatableModel, cb) {
  if (!g1 || !g2) {
    return;
  }

  function getElMap(g) {
    var elMap = {};
    g.traverse(function (el) {
      if (!el.isGroup && el.anid) {
        elMap[el.anid] = el;
      }
    });
    return elMap;
  }

  function getAnimatableProps(el) {
    var obj = {
      position: vector.clone(el.position),
      rotation: el.rotation
    };

    if (el.shape) {
      obj.shape = zrUtil.extend({}, el.shape);
    }

    return obj;
  }

  var elMap1 = getElMap(g1);
  g2.traverse(function (el) {
    if (!el.isGroup && el.anid) {
      var oldEl = elMap1[el.anid];

      if (oldEl) {
        var newProp = getAnimatableProps(el);
        el.attr(getAnimatableProps(oldEl));
        updateProps(el, newProp, animatableModel, el.dataIndex);
      } // else {
      //     if (el.previousProps) {
      //         graphic.updateProps
      //     }
      // }

    }
  });
}
/**
 * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]
 * @param {Object} rect {x, y, width, height}
 * @return {Array.<Array.<number>>} A new clipped points.
 */


function clipPointsByRect(points, rect) {
  return zrUtil.map(points, function (point) {
    var x = point[0];
    x = mathMax(x, rect.x);
    x = mathMin(x, rect.x + rect.width);
    var y = point[1];
    y = mathMax(y, rect.y);
    y = mathMin(y, rect.y + rect.height);
    return [x, y];
  });
}
/**
 * @param {Object} targetRect {x, y, width, height}
 * @param {Object} rect {x, y, width, height}
 * @return {Object} A new clipped rect. If rect size are negative, return undefined.
 */


function clipRectByRect(targetRect, rect) {
  var x = mathMax(targetRect.x, rect.x);
  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);
  var y = mathMax(targetRect.y, rect.y);
  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);

  if (x2 >= x && y2 >= y) {
    return {
      x: x,
      y: y,
      width: x2 - x,
      height: y2 - y
    };
  }
}
/**
 * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.
 * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.
 * @param {Object} [rect] {x, y, width, height}
 * @return {module:zrender/Element} Icon path or image element.
 */


function createIcon(iconStr, opt, rect) {
  opt = zrUtil.extend({
    rectHover: true
  }, opt);
  var style = opt.style = {
    strokeNoScale: true
  };
  rect = rect || {
    x: -1,
    y: -1,
    width: 2,
    height: 2
  };

  if (iconStr) {
    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');
  }
}

exports.extendShape = extendShape;
exports.extendPath = extendPath;
exports.makePath = makePath;
exports.makeImage = makeImage;
exports.mergePath = mergePath;
exports.resizePath = resizePath;
exports.subPixelOptimizeLine = subPixelOptimizeLine;
exports.subPixelOptimizeRect = subPixelOptimizeRect;
exports.subPixelOptimize = subPixelOptimize;
exports.setHoverStyle = setHoverStyle;
exports.setLabelStyle = setLabelStyle;
exports.setTextStyle = setTextStyle;
exports.setText = setText;
exports.getFont = getFont;
exports.updateProps = updateProps;
exports.initProps = initProps;
exports.getTransform = getTransform;
exports.applyTransform = applyTransform;
exports.transformDirection = transformDirection;
exports.groupTransition = groupTransition;
exports.clipPointsByRect = clipPointsByRect;
exports.clipRectByRect = clipRectByRect;
exports.createIcon = createIcon;

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(38);
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

var _config = __webpack_require__(16);

var __DEV__ = _config.__DEV__;

var zrender = __webpack_require__(169);

var zrUtil = __webpack_require__(1);

var colorTool = __webpack_require__(74);

var env = __webpack_require__(20);

var timsort = __webpack_require__(112);

var Eventful = __webpack_require__(73);

var GlobalModel = __webpack_require__(183);

var ExtensionAPI = __webpack_require__(191);

var CoordinateSystemManager = __webpack_require__(116);

var OptionManager = __webpack_require__(477);

var backwardCompat = __webpack_require__(478);

var dataStack = __webpack_require__(480);

var ComponentModel = __webpack_require__(43);

var SeriesModel = __webpack_require__(192);

var ComponentView = __webpack_require__(193);

var ChartView = __webpack_require__(118);

var graphic = __webpack_require__(11);

var modelUtil = __webpack_require__(7);

var _throttle = __webpack_require__(120);

var throttle = _throttle.throttle;

var seriesColor = __webpack_require__(482);

var aria = __webpack_require__(483);

var loadingDefault = __webpack_require__(485);

var Scheduler = __webpack_require__(486);

var lightTheme = __webpack_require__(487);

var darkTheme = __webpack_require__(488);

__webpack_require__(489);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var assert = zrUtil.assert;
var each = zrUtil.each;
var isFunction = zrUtil.isFunction;
var isObject = zrUtil.isObject;
var parseClassType = ComponentModel.parseClassType;
var version = '4.1.0';
var dependencies = {
  zrender: '4.0.4'
};
var TEST_FRAME_REMAIN_TIME = 1;
var PRIORITY_PROCESSOR_FILTER = 1000;
var PRIORITY_PROCESSOR_STATISTIC = 5000;
var PRIORITY_VISUAL_LAYOUT = 1000;
var PRIORITY_VISUAL_GLOBAL = 2000;
var PRIORITY_VISUAL_CHART = 3000;
var PRIORITY_VISUAL_COMPONENT = 4000; // FIXME
// necessary?

var PRIORITY_VISUAL_BRUSH = 5000;
var PRIORITY = {
  PROCESSOR: {
    FILTER: PRIORITY_PROCESSOR_FILTER,
    STATISTIC: PRIORITY_PROCESSOR_STATISTIC
  },
  VISUAL: {
    LAYOUT: PRIORITY_VISUAL_LAYOUT,
    GLOBAL: PRIORITY_VISUAL_GLOBAL,
    CHART: PRIORITY_VISUAL_CHART,
    COMPONENT: PRIORITY_VISUAL_COMPONENT,
    BRUSH: PRIORITY_VISUAL_BRUSH
  }
}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,
// where they must not be invoked nestedly, except the only case: invoke
// dispatchAction with updateMethod "none" in main process.
// This flag is used to carry out this rule.
// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).

var IN_MAIN_PROCESS = '__flagInMainProcess';
var OPTION_UPDATED = '__optionUpdated';
var ACTION_REG = /^[a-zA-Z0-9_]+$/;

function createRegisterEventWithLowercaseName(method) {
  return function (eventName, handler, context) {
    // Event name is all lowercase
    eventName = eventName && eventName.toLowerCase();
    Eventful.prototype[method].call(this, eventName, handler, context);
  };
}
/**
 * @module echarts~MessageCenter
 */


function MessageCenter() {
  Eventful.call(this);
}

MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');
MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');
MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');
zrUtil.mixin(MessageCenter, Eventful);
/**
 * @module echarts~ECharts
 */

function ECharts(dom, theme, opts) {
  opts = opts || {}; // Get theme by name

  if (typeof theme === 'string') {
    theme = themeStorage[theme];
  }
  /**
   * @type {string}
   */


  this.id;
  /**
   * Group id
   * @type {string}
   */

  this.group;
  /**
   * @type {HTMLElement}
   * @private
   */

  this._dom = dom;
  var defaultRenderer = 'canvas';

  /**
   * @type {module:zrender/ZRender}
   * @private
   */
  var zr = this._zr = zrender.init(dom, {
    renderer: opts.renderer || defaultRenderer,
    devicePixelRatio: opts.devicePixelRatio,
    width: opts.width,
    height: opts.height
  });
  /**
   * Expect 60 pfs.
   * @type {Function}
   * @private
   */

  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);
  var theme = zrUtil.clone(theme);
  theme && backwardCompat(theme, true);
  /**
   * @type {Object}
   * @private
   */

  this._theme = theme;
  /**
   * @type {Array.<module:echarts/view/Chart>}
   * @private
   */

  this._chartsViews = [];
  /**
   * @type {Object.<string, module:echarts/view/Chart>}
   * @private
   */

  this._chartsMap = {};
  /**
   * @type {Array.<module:echarts/view/Component>}
   * @private
   */

  this._componentsViews = [];
  /**
   * @type {Object.<string, module:echarts/view/Component>}
   * @private
   */

  this._componentsMap = {};
  /**
   * @type {module:echarts/CoordinateSystem}
   * @private
   */

  this._coordSysMgr = new CoordinateSystemManager();
  /**
   * @type {module:echarts/ExtensionAPI}
   * @private
   */

  var api = this._api = createExtensionAPI(this); // Sort on demand

  function prioritySortFunc(a, b) {
    return a.__prio - b.__prio;
  }

  timsort(visualFuncs, prioritySortFunc);
  timsort(dataProcessorFuncs, prioritySortFunc);
  /**
   * @type {module:echarts/stream/Scheduler}
   */

  this._scheduler = new Scheduler(this, api, dataProcessorFuncs, visualFuncs);
  Eventful.call(this);
  /**
   * @type {module:echarts~MessageCenter}
   * @private
   */

  this._messageCenter = new MessageCenter(); // Init mouse events

  this._initEvents(); // In case some people write `window.onresize = chart.resize`


  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure

  this._pendingActions = [];
  zr.animation.on('frame', this._onframe, this);
  bindRenderedEvent(zr, this); // ECharts instance can be used as value.

  zrUtil.setAsPrimitive(this);
}

var echartsProto = ECharts.prototype;

echartsProto._onframe = function () {
  if (this._disposed) {
    return;
  }

  var scheduler = this._scheduler; // Lazy update

  if (this[OPTION_UPDATED]) {
    var silent = this[OPTION_UPDATED].silent;
    this[IN_MAIN_PROCESS] = true;
    prepare(this);
    updateMethods.update.call(this);
    this[IN_MAIN_PROCESS] = false;
    this[OPTION_UPDATED] = false;
    flushPendingActions.call(this, silent);
    triggerUpdatedEvent.call(this, silent);
  } // Avoid do both lazy update and progress in one frame.
  else if (scheduler.unfinished) {
      // Stream progress.
      var remainTime = TEST_FRAME_REMAIN_TIME;
      var ecModel = this._model;
      var api = this._api;
      scheduler.unfinished = false;

      do {
        var startTime = +new Date();
        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.

        scheduler.performDataProcessorTasks(ecModel);
        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in
        // each frame is not a good user experience. So we follow the rule that
        // the extent of the coordinate system is determin in the first frame (the
        // frame is executed immedietely after task reset.
        // this._coordSysMgr.update(ecModel, api);
        // console.log('--- ec frame visual ---', remainTime);

        scheduler.performVisualTasks(ecModel);
        renderSeries(this, this._model, api, 'remain');
        remainTime -= +new Date() - startTime;
      } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.


      if (!scheduler.unfinished) {
        this._zr.flush();
      } // Else, zr flushing be ensue within the same frame,
      // because zr flushing is after onframe event.

    }
};
/**
 * @return {HTMLElement}
 */


echartsProto.getDom = function () {
  return this._dom;
};
/**
 * @return {module:zrender~ZRender}
 */


echartsProto.getZr = function () {
  return this._zr;
};
/**
 * Usage:
 * chart.setOption(option, notMerge, lazyUpdate);
 * chart.setOption(option, {
 *     notMerge: ...,
 *     lazyUpdate: ...,
 *     silent: ...
 * });
 *
 * @param {Object} option
 * @param {Object|boolean} [opts] opts or notMerge.
 * @param {boolean} [opts.notMerge=false]
 * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.
 */


echartsProto.setOption = function (option, notMerge, lazyUpdate) {
  var silent;

  if (isObject(notMerge)) {
    lazyUpdate = notMerge.lazyUpdate;
    silent = notMerge.silent;
    notMerge = notMerge.notMerge;
  }

  this[IN_MAIN_PROCESS] = true;

  if (!this._model || notMerge) {
    var optionManager = new OptionManager(this._api);
    var theme = this._theme;
    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);
    ecModel.scheduler = this._scheduler;
    ecModel.init(null, null, theme, optionManager);
  }

  this._model.setOption(option, optionPreprocessorFuncs);

  if (lazyUpdate) {
    this[OPTION_UPDATED] = {
      silent: silent
    };
    this[IN_MAIN_PROCESS] = false;
  } else {
    prepare(this);
    updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be
    // fetched after `setOption`.

    this._zr.flush();

    this[OPTION_UPDATED] = false;
    this[IN_MAIN_PROCESS] = false;
    flushPendingActions.call(this, silent);
    triggerUpdatedEvent.call(this, silent);
  }
};
/**
 * @DEPRECATED
 */


echartsProto.setTheme = function () {
  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');
};
/**
 * @return {module:echarts/model/Global}
 */


echartsProto.getModel = function () {
  return this._model;
};
/**
 * @return {Object}
 */


echartsProto.getOption = function () {
  return this._model && this._model.getOption();
};
/**
 * @return {number}
 */


echartsProto.getWidth = function () {
  return this._zr.getWidth();
};
/**
 * @return {number}
 */


echartsProto.getHeight = function () {
  return this._zr.getHeight();
};
/**
 * @return {number}
 */


echartsProto.getDevicePixelRatio = function () {
  return this._zr.painter.dpr || window.devicePixelRatio || 1;
};
/**
 * Get canvas which has all thing rendered
 * @param {Object} opts
 * @param {string} [opts.backgroundColor]
 * @return {string}
 */


echartsProto.getRenderedCanvas = function (opts) {
  if (!env.canvasSupported) {
    return;
  }

  opts = opts || {};
  opts.pixelRatio = opts.pixelRatio || 1;
  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');
  var zr = this._zr; // var list = zr.storage.getDisplayList();
  // Stop animations
  // Never works before in init animation, so remove it.
  // zrUtil.each(list, function (el) {
  //     el.stopAnimation(true);
  // });

  return zr.painter.getRenderedCanvas(opts);
};
/**
 * Get svg data url
 * @return {string}
 */


echartsProto.getSvgDataUrl = function () {
  if (!env.svgSupported) {
    return;
  }

  var zr = this._zr;
  var list = zr.storage.getDisplayList(); // Stop animations

  zrUtil.each(list, function (el) {
    el.stopAnimation(true);
  });
  return zr.painter.pathToDataUrl();
};
/**
 * @return {string}
 * @param {Object} opts
 * @param {string} [opts.type='png']
 * @param {string} [opts.pixelRatio=1]
 * @param {string} [opts.backgroundColor]
 * @param {string} [opts.excludeComponents]
 */


echartsProto.getDataURL = function (opts) {
  opts = opts || {};
  var excludeComponents = opts.excludeComponents;
  var ecModel = this._model;
  var excludesComponentViews = [];
  var self = this;
  each(excludeComponents, function (componentType) {
    ecModel.eachComponent({
      mainType: componentType
    }, function (component) {
      var view = self._componentsMap[component.__viewId];

      if (!view.group.ignore) {
        excludesComponentViews.push(view);
        view.group.ignore = true;
      }
    });
  });
  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));
  each(excludesComponentViews, function (view) {
    view.group.ignore = false;
  });
  return url;
};
/**
 * @return {string}
 * @param {Object} opts
 * @param {string} [opts.type='png']
 * @param {string} [opts.pixelRatio=1]
 * @param {string} [opts.backgroundColor]
 */


echartsProto.getConnectedDataURL = function (opts) {
  if (!env.canvasSupported) {
    return;
  }

  var groupId = this.group;
  var mathMin = Math.min;
  var mathMax = Math.max;
  var MAX_NUMBER = Infinity;

  if (connectedGroups[groupId]) {
    var left = MAX_NUMBER;
    var top = MAX_NUMBER;
    var right = -MAX_NUMBER;
    var bottom = -MAX_NUMBER;
    var canvasList = [];
    var dpr = opts && opts.pixelRatio || 1;
    zrUtil.each(instances, function (chart, id) {
      if (chart.group === groupId) {
        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));
        var boundingRect = chart.getDom().getBoundingClientRect();
        left = mathMin(boundingRect.left, left);
        top = mathMin(boundingRect.top, top);
        right = mathMax(boundingRect.right, right);
        bottom = mathMax(boundingRect.bottom, bottom);
        canvasList.push({
          dom: canvas,
          left: boundingRect.left,
          top: boundingRect.top
        });
      }
    });
    left *= dpr;
    top *= dpr;
    right *= dpr;
    bottom *= dpr;
    var width = right - left;
    var height = bottom - top;
    var targetCanvas = zrUtil.createCanvas();
    targetCanvas.width = width;
    targetCanvas.height = height;
    var zr = zrender.init(targetCanvas);
    each(canvasList, function (item) {
      var img = new graphic.Image({
        style: {
          x: item.left * dpr - left,
          y: item.top * dpr - top,
          image: item.dom
        }
      });
      zr.add(img);
    });
    zr.refreshImmediately();
    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));
  } else {
    return this.getDataURL(opts);
  }
};
/**
 * Convert from logical coordinate system to pixel coordinate system.
 * See CoordinateSystem#convertToPixel.
 * @param {string|Object} finder
 *        If string, e.g., 'geo', means {geoIndex: 0}.
 *        If Object, could contain some of these properties below:
 *        {
 *            seriesIndex / seriesId / seriesName,
 *            geoIndex / geoId, geoName,
 *            bmapIndex / bmapId / bmapName,
 *            xAxisIndex / xAxisId / xAxisName,
 *            yAxisIndex / yAxisId / yAxisName,
 *            gridIndex / gridId / gridName,
 *            ... (can be extended)
 *        }
 * @param {Array|number} value
 * @return {Array|number} result
 */


echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');
/**
 * Convert from pixel coordinate system to logical coordinate system.
 * See CoordinateSystem#convertFromPixel.
 * @param {string|Object} finder
 *        If string, e.g., 'geo', means {geoIndex: 0}.
 *        If Object, could contain some of these properties below:
 *        {
 *            seriesIndex / seriesId / seriesName,
 *            geoIndex / geoId / geoName,
 *            bmapIndex / bmapId / bmapName,
 *            xAxisIndex / xAxisId / xAxisName,
 *            yAxisIndex / yAxisId / yAxisName
 *            gridIndex / gridId / gridName,
 *            ... (can be extended)
 *        }
 * @param {Array|number} value
 * @return {Array|number} result
 */

echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');

function doConvertPixel(methodName, finder, value) {
  var ecModel = this._model;

  var coordSysList = this._coordSysMgr.getCoordinateSystems();

  var result;
  finder = modelUtil.parseFinder(ecModel, finder);

  for (var i = 0; i < coordSysList.length; i++) {
    var coordSys = coordSysList[i];

    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {
      return result;
    }
  }
}
/**
 * Is the specified coordinate systems or components contain the given pixel point.
 * @param {string|Object} finder
 *        If string, e.g., 'geo', means {geoIndex: 0}.
 *        If Object, could contain some of these properties below:
 *        {
 *            seriesIndex / seriesId / seriesName,
 *            geoIndex / geoId / geoName,
 *            bmapIndex / bmapId / bmapName,
 *            xAxisIndex / xAxisId / xAxisName,
 *            yAxisIndex / yAxisId / yAxisName,
 *            gridIndex / gridId / gridName,
 *            ... (can be extended)
 *        }
 * @param {Array|number} value
 * @return {boolean} result
 */


echartsProto.containPixel = function (finder, value) {
  var ecModel = this._model;
  var result;
  finder = modelUtil.parseFinder(ecModel, finder);
  zrUtil.each(finder, function (models, key) {
    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {
      var coordSys = model.coordinateSystem;

      if (coordSys && coordSys.containPoint) {
        result |= !!coordSys.containPoint(value);
      } else if (key === 'seriesModels') {
        var view = this._chartsMap[model.__viewId];

        if (view && view.containPoint) {
          result |= view.containPoint(value, model);
        } else {}
      } else {}
    }, this);
  }, this);
  return !!result;
};
/**
 * Get visual from series or data.
 * @param {string|Object} finder
 *        If string, e.g., 'series', means {seriesIndex: 0}.
 *        If Object, could contain some of these properties below:
 *        {
 *            seriesIndex / seriesId / seriesName,
 *            dataIndex / dataIndexInside
 *        }
 *        If dataIndex is not specified, series visual will be fetched,
 *        but not data item visual.
 *        If all of seriesIndex, seriesId, seriesName are not specified,
 *        visual will be fetched from first series.
 * @param {string} visualType 'color', 'symbol', 'symbolSize'
 */


echartsProto.getVisual = function (finder, visualType) {
  var ecModel = this._model;
  finder = modelUtil.parseFinder(ecModel, finder, {
    defaultMainType: 'series'
  });
  var seriesModel = finder.seriesModel;
  var data = seriesModel.getData();
  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;
  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);
};
/**
 * Get view of corresponding component model
 * @param  {module:echarts/model/Component} componentModel
 * @return {module:echarts/view/Component}
 */


echartsProto.getViewOfComponentModel = function (componentModel) {
  return this._componentsMap[componentModel.__viewId];
};
/**
 * Get view of corresponding series model
 * @param  {module:echarts/model/Series} seriesModel
 * @return {module:echarts/view/Chart}
 */


echartsProto.getViewOfSeriesModel = function (seriesModel) {
  return this._chartsMap[seriesModel.__viewId];
};

var updateMethods = {
  prepareAndUpdate: function (payload) {
    prepare(this);
    updateMethods.update.call(this, payload);
  },

  /**
   * @param {Object} payload
   * @private
   */
  update: function (payload) {
    // console.profile && console.profile('update');
    var ecModel = this._model;
    var api = this._api;
    var zr = this._zr;
    var coordSysMgr = this._coordSysMgr;
    var scheduler = this._scheduler; // update before setOption

    if (!ecModel) {
      return;
    }

    scheduler.restoreData(ecModel, payload);
    scheduler.performSeriesTasks(ecModel); // TODO
    // Save total ecModel here for undo/redo (after restoring data and before processing data).
    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.
    // Create new coordinate system each update
    // In LineView may save the old coordinate system and use it to get the orignal point

    coordSysMgr.create(ecModel, api);
    scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update
    // stream modes after data processing, where the filtered data is used to
    // deteming whether use progressive rendering.

    updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info
    // can be fetched when coord sys updating (consider the barGrid extent fix). But
    // the drawback is the full coord info can not be fetched. Fortunately this full
    // coord is not requied in stream mode updater currently.

    coordSysMgr.update(ecModel, api);
    clearColorPalette(ecModel);
    scheduler.performVisualTasks(ecModel, payload);
    render(this, ecModel, api, payload); // Set background

    var backgroundColor = ecModel.get('backgroundColor') || 'transparent'; // In IE8

    if (!env.canvasSupported) {
      var colorArr = colorTool.parse(backgroundColor);
      backgroundColor = colorTool.stringify(colorArr, 'rgb');

      if (colorArr[3] === 0) {
        backgroundColor = 'transparent';
      }
    } else {
      zr.setBackgroundColor(backgroundColor);
    }

    performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');
  },

  /**
   * @param {Object} payload
   * @private
   */
  updateTransform: function (payload) {
    var ecModel = this._model;
    var ecIns = this;
    var api = this._api; // update before setOption

    if (!ecModel) {
      return;
    } // ChartView.markUpdateMethod(payload, 'updateTransform');


    var componentDirtyList = [];
    ecModel.eachComponent(function (componentType, componentModel) {
      var componentView = ecIns.getViewOfComponentModel(componentModel);

      if (componentView && componentView.__alive) {
        if (componentView.updateTransform) {
          var result = componentView.updateTransform(componentModel, ecModel, api, payload);
          result && result.update && componentDirtyList.push(componentView);
        } else {
          componentDirtyList.push(componentView);
        }
      }
    });
    var seriesDirtyMap = zrUtil.createHashMap();
    ecModel.eachSeries(function (seriesModel) {
      var chartView = ecIns._chartsMap[seriesModel.__viewId];

      if (chartView.updateTransform) {
        var result = chartView.updateTransform(seriesModel, ecModel, api, payload);
        result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);
      } else {
        seriesDirtyMap.set(seriesModel.uid, 1);
      }
    });
    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.
    // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);

    this._scheduler.performVisualTasks(ecModel, payload, {
      setDirty: true,
      dirtyMap: seriesDirtyMap
    }); // Currently, not call render of components. Geo render cost a lot.
    // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);


    renderSeries(ecIns, ecModel, api, payload, seriesDirtyMap);
    performPostUpdateFuncs(ecModel, this._api);
  },

  /**
   * @param {Object} payload
   * @private
   */
  updateView: function (payload) {
    var ecModel = this._model; // update before setOption

    if (!ecModel) {
      return;
    }

    ChartView.markUpdateMethod(payload, 'updateView');
    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.

    this._scheduler.performVisualTasks(ecModel, payload, {
      setDirty: true
    });

    render(this, this._model, this._api, payload);
    performPostUpdateFuncs(ecModel, this._api);
  },

  /**
   * @param {Object} payload
   * @private
   */
  updateVisual: function (payload) {
    updateMethods.update.call(this, payload); // var ecModel = this._model;
    // // update before setOption
    // if (!ecModel) {
    //     return;
    // }
    // ChartView.markUpdateMethod(payload, 'updateVisual');
    // clearColorPalette(ecModel);
    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.
    // this._scheduler.performVisualTasks(ecModel, payload, {visualType: 'visual', setDirty: true});
    // render(this, this._model, this._api, payload);
    // performPostUpdateFuncs(ecModel, this._api);
  },

  /**
   * @param {Object} payload
   * @private
   */
  updateLayout: function (payload) {
    updateMethods.update.call(this, payload); // var ecModel = this._model;
    // // update before setOption
    // if (!ecModel) {
    //     return;
    // }
    // ChartView.markUpdateMethod(payload, 'updateLayout');
    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.
    // // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);
    // this._scheduler.performVisualTasks(ecModel, payload, {setDirty: true});
    // render(this, this._model, this._api, payload);
    // performPostUpdateFuncs(ecModel, this._api);
  }
};

function prepare(ecIns) {
  var ecModel = ecIns._model;
  var scheduler = ecIns._scheduler;
  scheduler.restorePipelines(ecModel);
  scheduler.prepareStageTasks();
  prepareView(ecIns, 'component', ecModel, scheduler);
  prepareView(ecIns, 'chart', ecModel, scheduler);
  scheduler.plan();
}
/**
 * @private
 */


function updateDirectly(ecIns, method, payload, mainType, subType) {
  var ecModel = ecIns._model; // broadcast

  if (!mainType) {
    // FIXME
    // Chart will not be update directly here, except set dirty.
    // But there is no such scenario now.
    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);
    return;
  }

  var query = {};
  query[mainType + 'Id'] = payload[mainType + 'Id'];
  query[mainType + 'Index'] = payload[mainType + 'Index'];
  query[mainType + 'Name'] = payload[mainType + 'Name'];
  var condition = {
    mainType: mainType,
    query: query
  };
  subType && (condition.subType = subType); // subType may be '' by parseClassType;

  var excludeSeriesId = payload.excludeSeriesId;

  if (excludeSeriesId != null) {
    excludeSeriesId = zrUtil.createHashMap(modelUtil.normalizeToArray(excludeSeriesId));
  } // If dispatchAction before setOption, do nothing.


  ecModel && ecModel.eachComponent(condition, function (model) {
    if (!excludeSeriesId || excludeSeriesId.get(model.id) == null) {
      callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);
    }
  }, ecIns);

  function callView(view) {
    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);
  }
}
/**
 * Resize the chart
 * @param {Object} opts
 * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)
 * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)
 * @param {boolean} [opts.silent=false]
 */


echartsProto.resize = function (opts) {
  this._zr.resize(opts);

  var ecModel = this._model; // Resize loading effect

  this._loadingFX && this._loadingFX.resize();

  if (!ecModel) {
    return;
  }

  var optionChanged = ecModel.resetOption('media');
  var silent = opts && opts.silent;
  this[IN_MAIN_PROCESS] = true;
  optionChanged && prepare(this);
  updateMethods.update.call(this);
  this[IN_MAIN_PROCESS] = false;
  flushPendingActions.call(this, silent);
  triggerUpdatedEvent.call(this, silent);
};

function updateStreamModes(ecIns, ecModel) {
  var chartsMap = ecIns._chartsMap;
  var scheduler = ecIns._scheduler;
  ecModel.eachSeries(function (seriesModel) {
    scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);
  });
}
/**
 * Show loading effect
 * @param  {string} [name='default']
 * @param  {Object} [cfg]
 */


echartsProto.showLoading = function (name, cfg) {
  if (isObject(name)) {
    cfg = name;
    name = '';
  }

  name = name || 'default';
  this.hideLoading();

  if (!loadingEffects[name]) {
    return;
  }

  var el = loadingEffects[name](this._api, cfg);
  var zr = this._zr;
  this._loadingFX = el;
  zr.add(el);
};
/**
 * Hide loading effect
 */


echartsProto.hideLoading = function () {
  this._loadingFX && this._zr.remove(this._loadingFX);
  this._loadingFX = null;
};
/**
 * @param {Object} eventObj
 * @return {Object}
 */


echartsProto.makeActionFromEvent = function (eventObj) {
  var payload = zrUtil.extend({}, eventObj);
  payload.type = eventActionMap[eventObj.type];
  return payload;
};
/**
 * @pubilc
 * @param {Object} payload
 * @param {string} [payload.type] Action type
 * @param {Object|boolean} [opt] If pass boolean, means opt.silent
 * @param {boolean} [opt.silent=false] Whether trigger events.
 * @param {boolean} [opt.flush=undefined]
 *                  true: Flush immediately, and then pixel in canvas can be fetched
 *                      immediately. Caution: it might affect performance.
 *                  false: Not not flush.
 *                  undefined: Auto decide whether perform flush.
 */


echartsProto.dispatchAction = function (payload, opt) {
  if (!isObject(opt)) {
    opt = {
      silent: !!opt
    };
  }

  if (!actions[payload.type]) {
    return;
  } // Avoid dispatch action before setOption. Especially in `connect`.


  if (!this._model) {
    return;
  } // May dispatchAction in rendering procedure


  if (this[IN_MAIN_PROCESS]) {
    this._pendingActions.push(payload);

    return;
  }

  doDispatchAction.call(this, payload, opt.silent);

  if (opt.flush) {
    this._zr.flush(true);
  } else if (opt.flush !== false && env.browser.weChat) {
    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`
    // hang when sliding page (on touch event), which cause that zr does not
    // refresh util user interaction finished, which is not expected.
    // But `dispatchAction` may be called too frequently when pan on touch
    // screen, which impacts performance if do not throttle them.
    this._throttledZrFlush();
  }

  flushPendingActions.call(this, opt.silent);
  triggerUpdatedEvent.call(this, opt.silent);
};

function doDispatchAction(payload, silent) {
  var payloadType = payload.type;
  var escapeConnect = payload.escapeConnect;
  var actionWrap = actions[payloadType];
  var actionInfo = actionWrap.actionInfo;
  var cptType = (actionInfo.update || 'update').split(':');
  var updateMethod = cptType.pop();
  cptType = cptType[0] != null && parseClassType(cptType[0]);
  this[IN_MAIN_PROCESS] = true;
  var payloads = [payload];
  var batched = false; // Batch action

  if (payload.batch) {
    batched = true;
    payloads = zrUtil.map(payload.batch, function (item) {
      item = zrUtil.defaults(zrUtil.extend({}, item), payload);
      item.batch = null;
      return item;
    });
  }

  var eventObjBatch = [];
  var eventObj;
  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';
  each(payloads, function (batchItem) {
    // Action can specify the event by return it.
    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside

    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType

    eventObj.type = actionInfo.event || eventObj.type;
    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.

    if (isHighDown) {
      // method, payload, mainType, subType
      updateDirectly(this, updateMethod, batchItem, 'series');
    } else if (cptType) {
      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);
    }
  }, this);

  if (updateMethod !== 'none' && !isHighDown && !cptType) {
    // Still dirty
    if (this[OPTION_UPDATED]) {
      // FIXME Pass payload ?
      prepare(this);
      updateMethods.update.call(this, payload);
      this[OPTION_UPDATED] = false;
    } else {
      updateMethods[updateMethod].call(this, payload);
    }
  } // Follow the rule of action batch


  if (batched) {
    eventObj = {
      type: actionInfo.event || payloadType,
      escapeConnect: escapeConnect,
      batch: eventObjBatch
    };
  } else {
    eventObj = eventObjBatch[0];
  }

  this[IN_MAIN_PROCESS] = false;
  !silent && this._messageCenter.trigger(eventObj.type, eventObj);
}

function flushPendingActions(silent) {
  var pendingActions = this._pendingActions;

  while (pendingActions.length) {
    var payload = pendingActions.shift();
    doDispatchAction.call(this, payload, silent);
  }
}

function triggerUpdatedEvent(silent) {
  !silent && this.trigger('updated');
}
/**
 * Event `rendered` is triggered when zr
 * rendered. It is useful for realtime
 * snapshot (reflect animation).
 *
 * Event `finished` is triggered when:
 * (1) zrender rendering finished.
 * (2) initial animation finished.
 * (3) progressive rendering finished.
 * (4) no pending action.
 * (5) no delayed setOption needs to be processed.
 */


function bindRenderedEvent(zr, ecIns) {
  zr.on('rendered', function () {
    ecIns.trigger('rendered'); // The `finished` event should not be triggered repeatly,
    // so it should only be triggered when rendering indeed happend
    // in zrender. (Consider the case that dipatchAction is keep
    // triggering when mouse move).

    if ( // Although zr is dirty if initial animation is not finished
    // and this checking is called on frame, we also check
    // animation finished for robustness.
    zr.animation.isFinished() && !ecIns[OPTION_UPDATED] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {
      ecIns.trigger('finished');
    }
  });
}
/**
 * @param {Object} params
 * @param {number} params.seriesIndex
 * @param {Array|TypedArray} params.data
 */


echartsProto.appendData = function (params) {
  var seriesIndex = params.seriesIndex;
  var ecModel = this.getModel();
  var seriesModel = ecModel.getSeriesByIndex(seriesIndex);
  seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate
  // system, util some scenario require that. In the expected usage of
  // `appendData`, the initial extent of coordinate system should better
  // be fixed by axis `min`/`max` setting or initial data, otherwise if
  // the extent changed while `appendData`, the location of the painted
  // graphic elements have to be changed, which make the usage of
  // `appendData` meaningless.

  this._scheduler.unfinished = true;
};
/**
 * Register event
 * @method
 */


echartsProto.on = createRegisterEventWithLowercaseName('on');
echartsProto.off = createRegisterEventWithLowercaseName('off');
echartsProto.one = createRegisterEventWithLowercaseName('one');
/**
 * Prepare view instances of charts and components
 * @param  {module:echarts/model/Global} ecModel
 * @private
 */

function prepareView(ecIns, type, ecModel, scheduler) {
  var isComponent = type === 'component';
  var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;
  var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;
  var zr = ecIns._zr;
  var api = ecIns._api;

  for (var i = 0; i < viewList.length; i++) {
    viewList[i].__alive = false;
  }

  isComponent ? ecModel.eachComponent(function (componentType, model) {
    componentType !== 'series' && doPrepare(model);
  }) : ecModel.eachSeries(doPrepare);

  function doPrepare(model) {
    // Consider: id same and type changed.
    var viewId = '_ec_' + model.id + '_' + model.type;
    var view = viewMap[viewId];

    if (!view) {
      var classType = parseClassType(model.type);
      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);
      view = new Clazz();
      view.init(ecModel, api);
      viewMap[viewId] = view;
      viewList.push(view);
      zr.add(view.group);
    }

    model.__viewId = view.__id = viewId;
    view.__alive = true;
    view.__model = model;
    view.group.__ecComponentInfo = {
      mainType: model.mainType,
      index: model.componentIndex
    };
    !isComponent && scheduler.prepareView(view, model, ecModel, api);
  }

  for (var i = 0; i < viewList.length;) {
    var view = viewList[i];

    if (!view.__alive) {
      !isComponent && view.renderTask.dispose();
      zr.remove(view.group);
      view.dispose(ecModel, api);
      viewList.splice(i, 1);
      delete viewMap[view.__id];
      view.__id = view.group.__ecComponentInfo = null;
    } else {
      i++;
    }
  }
} // /**
//  * Encode visual infomation from data after data processing
//  *
//  * @param {module:echarts/model/Global} ecModel
//  * @param {object} layout
//  * @param {boolean} [layoutFilter] `true`: only layout,
//  *                                 `false`: only not layout,
//  *                                 `null`/`undefined`: all.
//  * @param {string} taskBaseTag
//  * @private
//  */
// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {
//     each(visualFuncs, function (visual, index) {
//         var isLayout = visual.isLayout;
//         if (layoutFilter == null
//             || (layoutFilter === false && !isLayout)
//             || (layoutFilter === true && isLayout)
//         ) {
//             visual.func(ecModel, api, payload);
//         }
//     });
// }


function clearColorPalette(ecModel) {
  ecModel.clearColorPalette();
  ecModel.eachSeries(function (seriesModel) {
    seriesModel.clearColorPalette();
  });
}

function render(ecIns, ecModel, api, payload) {
  renderComponents(ecIns, ecModel, api, payload);
  each(ecIns._chartsViews, function (chart) {
    chart.__alive = false;
  });
  renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts

  each(ecIns._chartsViews, function (chart) {
    if (!chart.__alive) {
      chart.remove(ecModel, api);
    }
  });
}

function renderComponents(ecIns, ecModel, api, payload, dirtyList) {
  each(dirtyList || ecIns._componentsViews, function (componentView) {
    var componentModel = componentView.__model;
    componentView.render(componentModel, ecModel, api, payload);
    updateZ(componentModel, componentView);
  });
}
/**
 * Render each chart and component
 * @private
 */


function renderSeries(ecIns, ecModel, api, payload, dirtyMap) {
  // Render all charts
  var scheduler = ecIns._scheduler;
  var unfinished;
  ecModel.eachSeries(function (seriesModel) {
    var chartView = ecIns._chartsMap[seriesModel.__viewId];
    chartView.__alive = true;
    var renderTask = chartView.renderTask;
    scheduler.updatePayload(renderTask, payload);

    if (dirtyMap && dirtyMap.get(seriesModel.uid)) {
      renderTask.dirty();
    }

    unfinished |= renderTask.perform(scheduler.getPerformArgs(renderTask));
    chartView.group.silent = !!seriesModel.get('silent');
    updateZ(seriesModel, chartView);
    updateBlend(seriesModel, chartView);
  });
  scheduler.unfinished |= unfinished; // If use hover layer

  updateHoverLayerStatus(ecIns._zr, ecModel); // Add aria

  aria(ecIns._zr.dom, ecModel);
}

function performPostUpdateFuncs(ecModel, api) {
  each(postUpdateFuncs, function (func) {
    func(ecModel, api);
  });
}

var MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];
/**
 * @private
 */

echartsProto._initEvents = function () {
  each(MOUSE_EVENT_NAMES, function (eveName) {
    this._zr.on(eveName, function (e) {
      var ecModel = this.getModel();
      var el = e.target;
      var params; // no e.target when 'globalout'.

      if (eveName === 'globalout') {
        params = {};
      } else if (el && el.dataIndex != null) {
        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);
        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};
      } // If element has custom eventData of components
      else if (el && el.eventData) {
          params = zrUtil.extend({}, el.eventData);
        }

      if (params) {
        params.event = e;
        params.type = eveName;
        this.trigger(eveName, params);
      }
    }, this);
  }, this);
  each(eventActionMap, function (actionType, eventType) {
    this._messageCenter.on(eventType, function (event) {
      this.trigger(eventType, event);
    }, this);
  }, this);
};
/**
 * @return {boolean}
 */


echartsProto.isDisposed = function () {
  return this._disposed;
};
/**
 * Clear
 */


echartsProto.clear = function () {
  this.setOption({
    series: []
  }, true);
};
/**
 * Dispose instance
 */


echartsProto.dispose = function () {
  if (this._disposed) {
    return;
  }

  this._disposed = true;
  modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');
  var api = this._api;
  var ecModel = this._model;
  each(this._componentsViews, function (component) {
    component.dispose(ecModel, api);
  });
  each(this._chartsViews, function (chart) {
    chart.dispose(ecModel, api);
  }); // Dispose after all views disposed

  this._zr.dispose();

  delete instances[this.id];
};

zrUtil.mixin(ECharts, Eventful);

function updateHoverLayerStatus(zr, ecModel) {
  var storage = zr.storage;
  var elCount = 0;
  storage.traverse(function (el) {
    if (!el.isGroup) {
      elCount++;
    }
  });

  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {
    storage.traverse(function (el) {
      if (!el.isGroup) {
        // Don't switch back.
        el.useHoverLayer = true;
      }
    });
  }
}
/**
 * Update chart progressive and blend.
 * @param {module:echarts/model/Series|module:echarts/model/Component} model
 * @param {module:echarts/view/Component|module:echarts/view/Chart} view
 */


function updateBlend(seriesModel, chartView) {
  var blendMode = seriesModel.get('blendMode') || null;
  chartView.group.traverse(function (el) {
    // FIXME marker and other components
    if (!el.isGroup) {
      // Only set if blendMode is changed. In case element is incremental and don't wan't to rerender.
      if (el.style.blend !== blendMode) {
        el.setStyle('blend', blendMode);
      }
    }

    if (el.eachPendingDisplayable) {
      el.eachPendingDisplayable(function (displayable) {
        displayable.setStyle('blend', blendMode);
      });
    }
  });
}
/**
 * @param {module:echarts/model/Series|module:echarts/model/Component} model
 * @param {module:echarts/view/Component|module:echarts/view/Chart} view
 */


function updateZ(model, view) {
  var z = model.get('z');
  var zlevel = model.get('zlevel'); // Set z and zlevel

  view.group.traverse(function (el) {
    if (el.type !== 'group') {
      z != null && (el.z = z);
      zlevel != null && (el.zlevel = zlevel);
    }
  });
}

function createExtensionAPI(ecInstance) {
  var coordSysMgr = ecInstance._coordSysMgr;
  return zrUtil.extend(new ExtensionAPI(ecInstance), {
    // Inject methods
    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),
    getComponentByElement: function (el) {
      while (el) {
        var modelInfo = el.__ecComponentInfo;

        if (modelInfo != null) {
          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);
        }

        el = el.parent;
      }
    }
  });
}
/**
 * @type {Object} key: actionType.
 * @inner
 */


var actions = {};
/**
 * Map eventType to actionType
 * @type {Object}
 */

var eventActionMap = {};
/**
 * Data processor functions of each stage
 * @type {Array.<Object.<string, Function>>}
 * @inner
 */

var dataProcessorFuncs = [];
/**
 * @type {Array.<Function>}
 * @inner
 */

var optionPreprocessorFuncs = [];
/**
 * @type {Array.<Function>}
 * @inner
 */

var postUpdateFuncs = [];
/**
 * Visual encoding functions of each stage
 * @type {Array.<Object.<string, Function>>}
 */

var visualFuncs = [];
/**
 * Theme storage
 * @type {Object.<key, Object>}
 */

var themeStorage = {};
/**
 * Loading effects
 */

var loadingEffects = {};
var instances = {};
var connectedGroups = {};
var idBase = new Date() - 0;
var groupIdBase = new Date() - 0;
var DOM_ATTRIBUTE_KEY = '_echarts_instance_';
var mapDataStores = {};

function enableConnect(chart) {
  var STATUS_PENDING = 0;
  var STATUS_UPDATING = 1;
  var STATUS_UPDATED = 2;
  var STATUS_KEY = '__connectUpdateStatus';

  function updateConnectedChartsStatus(charts, status) {
    for (var i = 0; i < charts.length; i++) {
      var otherChart = charts[i];
      otherChart[STATUS_KEY] = status;
    }
  }

  each(eventActionMap, function (actionType, eventType) {
    chart._messageCenter.on(eventType, function (event) {
      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {
        if (event && event.escapeConnect) {
          return;
        }

        var action = chart.makeActionFromEvent(event);
        var otherCharts = [];
        each(instances, function (otherChart) {
          if (otherChart !== chart && otherChart.group === chart.group) {
            otherCharts.push(otherChart);
          }
        });
        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);
        each(otherCharts, function (otherChart) {
          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {
            otherChart.dispatchAction(action);
          }
        });
        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);
      }
    });
  });
}
/**
 * @param {HTMLElement} dom
 * @param {Object} [theme]
 * @param {Object} opts
 * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default
 * @param {string} [opts.renderer] Currently only 'canvas' is supported.
 * @param {number} [opts.width] Use clientWidth of the input `dom` by default.
 *                              Can be 'auto' (the same as null/undefined)
 * @param {number} [opts.height] Use clientHeight of the input `dom` by default.
 *                               Can be 'auto' (the same as null/undefined)
 */


function init(dom, theme, opts) {
  var existInstance = getInstanceByDom(dom);

  if (existInstance) {
    return existInstance;
  }

  var chart = new ECharts(dom, theme, opts);
  chart.id = 'ec_' + idBase++;
  instances[chart.id] = chart;
  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);
  enableConnect(chart);
  return chart;
}
/**
 * @return {string|Array.<module:echarts~ECharts>} groupId
 */


function connect(groupId) {
  // Is array of charts
  if (zrUtil.isArray(groupId)) {
    var charts = groupId;
    groupId = null; // If any chart has group

    each(charts, function (chart) {
      if (chart.group != null) {
        groupId = chart.group;
      }
    });
    groupId = groupId || 'g_' + groupIdBase++;
    each(charts, function (chart) {
      chart.group = groupId;
    });
  }

  connectedGroups[groupId] = true;
  return groupId;
}
/**
 * @DEPRECATED
 * @return {string} groupId
 */


function disConnect(groupId) {
  connectedGroups[groupId] = false;
}
/**
 * @return {string} groupId
 */


var disconnect = disConnect;
/**
 * Dispose a chart instance
 * @param  {module:echarts~ECharts|HTMLDomElement|string} chart
 */

function dispose(chart) {
  if (typeof chart === 'string') {
    chart = instances[chart];
  } else if (!(chart instanceof ECharts)) {
    // Try to treat as dom
    chart = getInstanceByDom(chart);
  }

  if (chart instanceof ECharts && !chart.isDisposed()) {
    chart.dispose();
  }
}
/**
 * @param  {HTMLElement} dom
 * @return {echarts~ECharts}
 */


function getInstanceByDom(dom) {
  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];
}
/**
 * @param {string} key
 * @return {echarts~ECharts}
 */


function getInstanceById(key) {
  return instances[key];
}
/**
 * Register theme
 */


function registerTheme(name, theme) {
  themeStorage[name] = theme;
}
/**
 * Register option preprocessor
 * @param {Function} preprocessorFunc
 */


function registerPreprocessor(preprocessorFunc) {
  optionPreprocessorFuncs.push(preprocessorFunc);
}
/**
 * @param {number} [priority=1000]
 * @param {Object|Function} processor
 */


function registerProcessor(priority, processor) {
  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_FILTER);
}
/**
 * Register postUpdater
 * @param {Function} postUpdateFunc
 */


function registerPostUpdate(postUpdateFunc) {
  postUpdateFuncs.push(postUpdateFunc);
}
/**
 * Usage:
 * registerAction('someAction', 'someEvent', function () { ... });
 * registerAction('someAction', function () { ... });
 * registerAction(
 *     {type: 'someAction', event: 'someEvent', update: 'updateView'},
 *     function () { ... }
 * );
 *
 * @param {(string|Object)} actionInfo
 * @param {string} actionInfo.type
 * @param {string} [actionInfo.event]
 * @param {string} [actionInfo.update]
 * @param {string} [eventName]
 * @param {Function} action
 */


function registerAction(actionInfo, eventName, action) {
  if (typeof eventName === 'function') {
    action = eventName;
    eventName = '';
  }

  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {
    event: eventName
  }][0]; // Event name is all lowercase

  actionInfo.event = (actionInfo.event || actionType).toLowerCase();
  eventName = actionInfo.event; // Validate action type and event name.

  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));

  if (!actions[actionType]) {
    actions[actionType] = {
      action: action,
      actionInfo: actionInfo
    };
  }

  eventActionMap[eventName] = actionType;
}
/**
 * @param {string} type
 * @param {*} CoordinateSystem
 */


function registerCoordinateSystem(type, CoordinateSystem) {
  CoordinateSystemManager.register(type, CoordinateSystem);
}
/**
 * Get dimensions of specified coordinate system.
 * @param {string} type
 * @return {Array.<string|Object>}
 */


function getCoordinateSystemDimensions(type) {
  var coordSysCreator = CoordinateSystemManager.get(type);

  if (coordSysCreator) {
    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();
  }
}
/**
 * Layout is a special stage of visual encoding
 * Most visual encoding like color are common for different chart
 * But each chart has it's own layout algorithm
 *
 * @param {number} [priority=1000]
 * @param {Function} layoutTask
 */


function registerLayout(priority, layoutTask) {
  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');
}
/**
 * @param {number} [priority=3000]
 * @param {module:echarts/stream/Task} visualTask
 */


function registerVisual(priority, visualTask) {
  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');
}
/**
 * @param {Object|Function} fn: {seriesType, createOnAllSeries, performRawSeries, reset}
 */


function normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {
  if (isFunction(priority) || isObject(priority)) {
    fn = priority;
    priority = defaultPriority;
  }

  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);
  stageHandler.__prio = priority;
  stageHandler.__raw = fn;
  targetList.push(stageHandler);
  return stageHandler;
}
/**
 * @param {string} name
 */


function registerLoading(name, loadingFx) {
  loadingEffects[name] = loadingFx;
}
/**
 * @param {Object} opts
 * @param {string} [superClass]
 */


function extendComponentModel(opts
/*, superClass*/
) {
  // var Clazz = ComponentModel;
  // if (superClass) {
  //     var classType = parseClassType(superClass);
  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);
  // }
  return ComponentModel.extend(opts);
}
/**
 * @param {Object} opts
 * @param {string} [superClass]
 */


function extendComponentView(opts
/*, superClass*/
) {
  // var Clazz = ComponentView;
  // if (superClass) {
  //     var classType = parseClassType(superClass);
  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);
  // }
  return ComponentView.extend(opts);
}
/**
 * @param {Object} opts
 * @param {string} [superClass]
 */


function extendSeriesModel(opts
/*, superClass*/
) {
  // var Clazz = SeriesModel;
  // if (superClass) {
  //     superClass = 'series.' + superClass.replace('series.', '');
  //     var classType = parseClassType(superClass);
  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);
  // }
  return SeriesModel.extend(opts);
}
/**
 * @param {Object} opts
 * @param {string} [superClass]
 */


function extendChartView(opts
/*, superClass*/
) {
  // var Clazz = ChartView;
  // if (superClass) {
  //     superClass = superClass.replace('series.', '');
  //     var classType = parseClassType(superClass);
  //     Clazz = ChartView.getClass(classType.main, true);
  // }
  return ChartView.extend(opts);
}
/**
 * ZRender need a canvas context to do measureText.
 * But in node environment canvas may be created by node-canvas.
 * So we need to specify how to create a canvas instead of using document.createElement('canvas')
 *
 * Be careful of using it in the browser.
 *
 * @param {Function} creator
 * @example
 *     var Canvas = require('canvas');
 *     var echarts = require('echarts');
 *     echarts.setCanvasCreator(function () {
 *         // Small size is enough.
 *         return new Canvas(32, 32);
 *     });
 */


function setCanvasCreator(creator) {
  zrUtil.$override('createCanvas', creator);
}
/**
 * @param {string} mapName
 * @param {Object|string} geoJson
 * @param {Object} [specialAreas]
 *
 * @example
 *     $.get('USA.json', function (geoJson) {
 *         echarts.registerMap('USA', geoJson);
 *         // Or
 *         echarts.registerMap('USA', {
 *             geoJson: geoJson,
 *             specialAreas: {}
 *         })
 *     });
 */


function registerMap(mapName, geoJson, specialAreas) {
  if (geoJson.geoJson && !geoJson.features) {
    specialAreas = geoJson.specialAreas;
    geoJson = geoJson.geoJson;
  }

  if (typeof geoJson === 'string') {
    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();
  }

  mapDataStores[mapName] = {
    geoJson: geoJson,
    specialAreas: specialAreas
  };
}
/**
 * @param {string} mapName
 * @return {Object}
 */


function getMap(mapName) {
  return mapDataStores[mapName];
}

registerVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);
registerPreprocessor(backwardCompat);
registerProcessor(PRIORITY_PROCESSOR_STATISTIC, dataStack);
registerLoading('default', loadingDefault); // Default actions

registerAction({
  type: 'highlight',
  event: 'highlight',
  update: 'highlight'
}, zrUtil.noop);
registerAction({
  type: 'downplay',
  event: 'downplay',
  update: 'downplay'
}, zrUtil.noop); // Default theme

registerTheme('light', lightTheme);
registerTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will
// be mounted on `echarts` is the extension `dataTool` is imported.

var dataTool = {};
exports.version = version;
exports.dependencies = dependencies;
exports.PRIORITY = PRIORITY;
exports.init = init;
exports.connect = connect;
exports.disConnect = disConnect;
exports.disconnect = disconnect;
exports.dispose = dispose;
exports.getInstanceByDom = getInstanceByDom;
exports.getInstanceById = getInstanceById;
exports.registerTheme = registerTheme;
exports.registerPreprocessor = registerPreprocessor;
exports.registerProcessor = registerProcessor;
exports.registerPostUpdate = registerPostUpdate;
exports.registerAction = registerAction;
exports.registerCoordinateSystem = registerCoordinateSystem;
exports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;
exports.registerLayout = registerLayout;
exports.registerVisual = registerVisual;
exports.registerLoading = registerLoading;
exports.extendComponentModel = extendComponentModel;
exports.extendComponentView = extendComponentView;
exports.extendSeriesModel = extendSeriesModel;
exports.extendChartView = extendChartView;
exports.setCanvasCreator = setCanvasCreator;
exports.registerMap = registerMap;
exports.getMap = getMap;
exports.dataTool = dataTool;
var ___ec_export = __webpack_require__(490);
(function () {
    for (var key in ___ec_export) {
        if (___ec_export.hasOwnProperty(key)) {
            exports[key] = ___ec_export[key];
        }
    }
})();

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var RADIAN_EPSILON = 1e-4;

function _trim(str) {
  return str.replace(/^\s+/, '').replace(/\s+$/, '');
}
/**
 * Linear mapping a value from domain to range
 * @memberOf module:echarts/util/number
 * @param  {(number|Array.<number>)} val
 * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]
 * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]
 * @param  {boolean} clamp
 * @return {(number|Array.<number>}
 */


function linearMap(val, domain, range, clamp) {
  var subDomain = domain[1] - domain[0];
  var subRange = range[1] - range[0];

  if (subDomain === 0) {
    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;
  } // Avoid accuracy problem in edge, such as
  // 146.39 - 62.83 === 83.55999999999999.
  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError
  // It is a little verbose for efficiency considering this method
  // is a hotspot.


  if (clamp) {
    if (subDomain > 0) {
      if (val <= domain[0]) {
        return range[0];
      } else if (val >= domain[1]) {
        return range[1];
      }
    } else {
      if (val >= domain[0]) {
        return range[0];
      } else if (val <= domain[1]) {
        return range[1];
      }
    }
  } else {
    if (val === domain[0]) {
      return range[0];
    }

    if (val === domain[1]) {
      return range[1];
    }
  }

  return (val - domain[0]) / subDomain * subRange + range[0];
}
/**
 * Convert a percent string to absolute number.
 * Returns NaN if percent is not a valid string or number
 * @memberOf module:echarts/util/number
 * @param {string|number} percent
 * @param {number} all
 * @return {number}
 */


function parsePercent(percent, all) {
  switch (percent) {
    case 'center':
    case 'middle':
      percent = '50%';
      break;

    case 'left':
    case 'top':
      percent = '0%';
      break;

    case 'right':
    case 'bottom':
      percent = '100%';
      break;
  }

  if (typeof percent === 'string') {
    if (_trim(percent).match(/%$/)) {
      return parseFloat(percent) / 100 * all;
    }

    return parseFloat(percent);
  }

  return percent == null ? NaN : +percent;
}
/**
 * (1) Fix rounding error of float numbers.
 * (2) Support return string to avoid scientific notation like '3.5e-7'.
 *
 * @param {number} x
 * @param {number} [precision]
 * @param {boolean} [returnStr]
 * @return {number|string}
 */


function round(x, precision, returnStr) {
  if (precision == null) {
    precision = 10;
  } // Avoid range error


  precision = Math.min(Math.max(0, precision), 20);
  x = (+x).toFixed(precision);
  return returnStr ? x : +x;
}

function asc(arr) {
  arr.sort(function (a, b) {
    return a - b;
  });
  return arr;
}
/**
 * Get precision
 * @param {number} val
 */


function getPrecision(val) {
  val = +val;

  if (isNaN(val)) {
    return 0;
  } // It is much faster than methods converting number to string as follows
  //      var tmp = val.toString();
  //      return tmp.length - 1 - tmp.indexOf('.');
  // especially when precision is low


  var e = 1;
  var count = 0;

  while (Math.round(val * e) / e !== val) {
    e *= 10;
    count++;
  }

  return count;
}
/**
 * @param {string|number} val
 * @return {number}
 */


function getPrecisionSafe(val) {
  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'

  var eIndex = str.indexOf('e');

  if (eIndex > 0) {
    var precision = +str.slice(eIndex + 1);
    return precision < 0 ? -precision : 0;
  } else {
    var dotIndex = str.indexOf('.');
    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;
  }
}
/**
 * Minimal dicernible data precisioin according to a single pixel.
 *
 * @param {Array.<number>} dataExtent
 * @param {Array.<number>} pixelExtent
 * @return {number} precision
 */


function getPixelPrecision(dataExtent, pixelExtent) {
  var log = Math.log;
  var LN10 = Math.LN10;
  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);
  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.

  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);
  return !isFinite(precision) ? 20 : precision;
}
/**
 * Get a data of given precision, assuring the sum of percentages
 * in valueList is 1.
 * The largest remainer method is used.
 * https://en.wikipedia.org/wiki/Largest_remainder_method
 *
 * @param {Array.<number>} valueList a list of all data
 * @param {number} idx index of the data to be processed in valueList
 * @param {number} precision integer number showing digits of precision
 * @return {number} percent ranging from 0 to 100
 */


function getPercentWithPrecision(valueList, idx, precision) {
  if (!valueList[idx]) {
    return 0;
  }

  var sum = zrUtil.reduce(valueList, function (acc, val) {
    return acc + (isNaN(val) ? 0 : val);
  }, 0);

  if (sum === 0) {
    return 0;
  }

  var digits = Math.pow(10, precision);
  var votesPerQuota = zrUtil.map(valueList, function (val) {
    return (isNaN(val) ? 0 : val) / sum * digits * 100;
  });
  var targetSeats = digits * 100;
  var seats = zrUtil.map(votesPerQuota, function (votes) {
    // Assign automatic seats.
    return Math.floor(votes);
  });
  var currentSum = zrUtil.reduce(seats, function (acc, val) {
    return acc + val;
  }, 0);
  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {
    return votes - seats[idx];
  }); // Has remainding votes.

  while (currentSum < targetSeats) {
    // Find next largest remainder.
    var max = Number.NEGATIVE_INFINITY;
    var maxId = null;

    for (var i = 0, len = remainder.length; i < len; ++i) {
      if (remainder[i] > max) {
        max = remainder[i];
        maxId = i;
      }
    } // Add a vote to max remainder.


    ++seats[maxId];
    remainder[maxId] = 0;
    ++currentSum;
  }

  return seats[idx] / digits;
} // Number.MAX_SAFE_INTEGER, ie do not support.


var MAX_SAFE_INTEGER = 9007199254740991;
/**
 * To 0 - 2 * PI, considering negative radian.
 * @param {number} radian
 * @return {number}
 */

function remRadian(radian) {
  var pi2 = Math.PI * 2;
  return (radian % pi2 + pi2) % pi2;
}
/**
 * @param {type} radian
 * @return {boolean}
 */


function isRadianAroundZero(val) {
  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;
}

var TIME_REG = /^(?:(\d{4})(?:[-\/](\d{1,2})(?:[-\/](\d{1,2})(?:[T ](\d{1,2})(?::(\d\d)(?::(\d\d)(?:[.,](\d+))?)?)?(Z|[\+\-]\d\d:?\d\d)?)?)?)?)?$/; // jshint ignore:line

/**
 * @param {string|Date|number} value These values can be accepted:
 *   + An instance of Date, represent a time in its own time zone.
 *   + Or string in a subset of ISO 8601, only including:
 *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',
 *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',
 *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',
 *     all of which will be treated as local time if time zone is not specified
 *     (see <https://momentjs.com/>).
 *   + Or other string format, including (all of which will be treated as loacal time):
 *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',
 *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'
 *   + a timestamp, which represent a time in UTC.
 * @return {Date} date
 */

function parseDate(value) {
  if (value instanceof Date) {
    return value;
  } else if (typeof value === 'string') {
    // Different browsers parse date in different way, so we parse it manually.
    // Some other issues:
    // new Date('1970-01-01') is UTC,
    // new Date('1970/01/01') and new Date('1970-1-01') is local.
    // See issue #3623
    var match = TIME_REG.exec(value);

    if (!match) {
      // return Invalid Date.
      return new Date(NaN);
    } // Use local time when no timezone offset specifed.


    if (!match[8]) {
      // match[n] can only be string or undefined.
      // But take care of '12' + 1 => '121'.
      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);
    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,
    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).
    // For example, system timezone is set as "Time Zone: America/Toronto",
    // then these code will get different result:
    // `new Date(1478411999999).getTimezoneOffset();  // get 240`
    // `new Date(1478412000000).getTimezoneOffset();  // get 300`
    // So we should not use `new Date`, but use `Date.UTC`.
    else {
        var hour = +match[4] || 0;

        if (match[8].toUpperCase() !== 'Z') {
          hour -= match[8].slice(0, 3);
        }

        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));
      }
  } else if (value == null) {
    return new Date(NaN);
  }

  return new Date(Math.round(value));
}
/**
 * Quantity of a number. e.g. 0.1, 1, 10, 100
 *
 * @param  {number} val
 * @return {number}
 */


function quantity(val) {
  return Math.pow(10, quantityExponent(val));
}

function quantityExponent(val) {
  return Math.floor(Math.log(val) / Math.LN10);
}
/**
 * find a “nice” number approximately equal to x. Round the number if round = true,
 * take ceiling if round = false. The primary observation is that the “nicest”
 * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.
 *
 * See "Nice Numbers for Graph Labels" of Graphic Gems.
 *
 * @param  {number} val Non-negative value.
 * @param  {boolean} round
 * @return {number}
 */


function nice(val, round) {
  var exponent = quantityExponent(val);
  var exp10 = Math.pow(10, exponent);
  var f = val / exp10; // 1 <= f < 10

  var nf;

  if (round) {
    if (f < 1.5) {
      nf = 1;
    } else if (f < 2.5) {
      nf = 2;
    } else if (f < 4) {
      nf = 3;
    } else if (f < 7) {
      nf = 5;
    } else {
      nf = 10;
    }
  } else {
    if (f < 1) {
      nf = 1;
    } else if (f < 2) {
      nf = 2;
    } else if (f < 3) {
      nf = 3;
    } else if (f < 5) {
      nf = 5;
    } else {
      nf = 10;
    }
  }

  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).
  // 20 is the uppper bound of toFixed.

  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;
}
/**
 * Order intervals asc, and split them when overlap.
 * expect(numberUtil.reformIntervals([
 *     {interval: [18, 62], close: [1, 1]},
 *     {interval: [-Infinity, -70], close: [0, 0]},
 *     {interval: [-70, -26], close: [1, 1]},
 *     {interval: [-26, 18], close: [1, 1]},
 *     {interval: [62, 150], close: [1, 1]},
 *     {interval: [106, 150], close: [1, 1]},
 *     {interval: [150, Infinity], close: [0, 0]}
 * ])).toEqual([
 *     {interval: [-Infinity, -70], close: [0, 0]},
 *     {interval: [-70, -26], close: [1, 1]},
 *     {interval: [-26, 18], close: [0, 1]},
 *     {interval: [18, 62], close: [0, 1]},
 *     {interval: [62, 150], close: [0, 1]},
 *     {interval: [150, Infinity], close: [0, 0]}
 * ]);
 * @param {Array.<Object>} list, where `close` mean open or close
 *        of the interval, and Infinity can be used.
 * @return {Array.<Object>} The origin list, which has been reformed.
 */


function reformIntervals(list) {
  list.sort(function (a, b) {
    return littleThan(a, b, 0) ? -1 : 1;
  });
  var curr = -Infinity;
  var currClose = 1;

  for (var i = 0; i < list.length;) {
    var interval = list[i].interval;
    var close = list[i].close;

    for (var lg = 0; lg < 2; lg++) {
      if (interval[lg] <= curr) {
        interval[lg] = curr;
        close[lg] = !lg ? 1 - currClose : 1;
      }

      curr = interval[lg];
      currClose = close[lg];
    }

    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {
      list.splice(i, 1);
    } else {
      i++;
    }
  }

  return list;

  function littleThan(a, b, lg) {
    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));
  }
}
/**
 * parseFloat NaNs numeric-cast false positives (null|true|false|"")
 * ...but misinterprets leading-number strings, particularly hex literals ("0x...")
 * subtraction forces infinities to NaN
 *
 * @param {*} v
 * @return {boolean}
 */


function isNumeric(v) {
  return v - parseFloat(v) >= 0;
}

exports.linearMap = linearMap;
exports.parsePercent = parsePercent;
exports.round = round;
exports.asc = asc;
exports.getPrecision = getPrecision;
exports.getPrecisionSafe = getPrecisionSafe;
exports.getPixelPrecision = getPixelPrecision;
exports.getPercentWithPrecision = getPercentWithPrecision;
exports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;
exports.remRadian = remRadian;
exports.isRadianAroundZero = isRadianAroundZero;
exports.parseDate = parseDate;
exports.quantity = quantity;
exports.nice = nice;
exports.reformIntervals = reformIntervals;
exports.isNumeric = isNumeric;

/***/ }),
/* 15 */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
// (1) The code `if (__DEV__) ...` can be removed by build tool.
// (2) If intend to use `__DEV__`, this module should be imported. Use a global
// variable `__DEV__` may cause that miss the declaration (see #6535), or the
// declaration is behind of the using position (for example in `Model.extent`,
// And tools like rollup can not analysis the dependency if not import).
var dev; // In browser

if (typeof window !== 'undefined') {
  dev = window.__DEV__;
} // In node
else if (typeof global !== 'undefined') {
    dev = global.__DEV__;
  }

if (typeof dev === 'undefined') {
  dev = true;
}

var __DEV__ = dev;
exports.__DEV__ = __DEV__;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(36)))

/***/ }),
/* 17 */
/***/ (function(module, exports) {

var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;
/**
 * 创建一个向量
 * @param {number} [x=0]
 * @param {number} [y=0]
 * @return {Vector2}
 */

function create(x, y) {
  var out = new ArrayCtor(2);

  if (x == null) {
    x = 0;
  }

  if (y == null) {
    y = 0;
  }

  out[0] = x;
  out[1] = y;
  return out;
}
/**
 * 复制向量数据
 * @param {Vector2} out
 * @param {Vector2} v
 * @return {Vector2}
 */


function copy(out, v) {
  out[0] = v[0];
  out[1] = v[1];
  return out;
}
/**
 * 克隆一个向量
 * @param {Vector2} v
 * @return {Vector2}
 */


function clone(v) {
  var out = new ArrayCtor(2);
  out[0] = v[0];
  out[1] = v[1];
  return out;
}
/**
 * 设置向量的两个项
 * @param {Vector2} out
 * @param {number} a
 * @param {number} b
 * @return {Vector2} 结果
 */


function set(out, a, b) {
  out[0] = a;
  out[1] = b;
  return out;
}
/**
 * 向量相加
 * @param {Vector2} out
 * @param {Vector2} v1
 * @param {Vector2} v2
 */


function add(out, v1, v2) {
  out[0] = v1[0] + v2[0];
  out[1] = v1[1] + v2[1];
  return out;
}
/**
 * 向量缩放后相加
 * @param {Vector2} out
 * @param {Vector2} v1
 * @param {Vector2} v2
 * @param {number} a
 */


function scaleAndAdd(out, v1, v2, a) {
  out[0] = v1[0] + v2[0] * a;
  out[1] = v1[1] + v2[1] * a;
  return out;
}
/**
 * 向量相减
 * @param {Vector2} out
 * @param {Vector2} v1
 * @param {Vector2} v2
 */


function sub(out, v1, v2) {
  out[0] = v1[0] - v2[0];
  out[1] = v1[1] - v2[1];
  return out;
}
/**
 * 向量长度
 * @param {Vector2} v
 * @return {number}
 */


function len(v) {
  return Math.sqrt(lenSquare(v));
}

var length = len; // jshint ignore:line

/**
 * 向量长度平方
 * @param {Vector2} v
 * @return {number}
 */

function lenSquare(v) {
  return v[0] * v[0] + v[1] * v[1];
}

var lengthSquare = lenSquare;
/**
 * 向量乘法
 * @param {Vector2} out
 * @param {Vector2} v1
 * @param {Vector2} v2
 */

function mul(out, v1, v2) {
  out[0] = v1[0] * v2[0];
  out[1] = v1[1] * v2[1];
  return out;
}
/**
 * 向量除法
 * @param {Vector2} out
 * @param {Vector2} v1
 * @param {Vector2} v2
 */


function div(out, v1, v2) {
  out[0] = v1[0] / v2[0];
  out[1] = v1[1] / v2[1];
  return out;
}
/**
 * 向量点乘
 * @param {Vector2} v1
 * @param {Vector2} v2
 * @return {number}
 */


function dot(v1, v2) {
  return v1[0] * v2[0] + v1[1] * v2[1];
}
/**
 * 向量缩放
 * @param {Vector2} out
 * @param {Vector2} v
 * @param {number} s
 */


function scale(out, v, s) {
  out[0] = v[0] * s;
  out[1] = v[1] * s;
  return out;
}
/**
 * 向量归一化
 * @param {Vector2} out
 * @param {Vector2} v
 */


function normalize(out, v) {
  var d = len(v);

  if (d === 0) {
    out[0] = 0;
    out[1] = 0;
  } else {
    out[0] = v[0] / d;
    out[1] = v[1] / d;
  }

  return out;
}
/**
 * 计算向量间距离
 * @param {Vector2} v1
 * @param {Vector2} v2
 * @return {number}
 */


function distance(v1, v2) {
  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));
}

var dist = distance;
/**
 * 向量距离平方
 * @param {Vector2} v1
 * @param {Vector2} v2
 * @return {number}
 */

function distanceSquare(v1, v2) {
  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);
}

var distSquare = distanceSquare;
/**
 * 求负向量
 * @param {Vector2} out
 * @param {Vector2} v
 */

function negate(out, v) {
  out[0] = -v[0];
  out[1] = -v[1];
  return out;
}
/**
 * 插值两个点
 * @param {Vector2} out
 * @param {Vector2} v1
 * @param {Vector2} v2
 * @param {number} t
 */


function lerp(out, v1, v2, t) {
  out[0] = v1[0] + t * (v2[0] - v1[0]);
  out[1] = v1[1] + t * (v2[1] - v1[1]);
  return out;
}
/**
 * 矩阵左乘向量
 * @param {Vector2} out
 * @param {Vector2} v
 * @param {Vector2} m
 */


function applyTransform(out, v, m) {
  var x = v[0];
  var y = v[1];
  out[0] = m[0] * x + m[2] * y + m[4];
  out[1] = m[1] * x + m[3] * y + m[5];
  return out;
}
/**
 * 求两个向量最小值
 * @param  {Vector2} out
 * @param  {Vector2} v1
 * @param  {Vector2} v2
 */


function min(out, v1, v2) {
  out[0] = Math.min(v1[0], v2[0]);
  out[1] = Math.min(v1[1], v2[1]);
  return out;
}
/**
 * 求两个向量最大值
 * @param  {Vector2} out
 * @param  {Vector2} v1
 * @param  {Vector2} v2
 */


function max(out, v1, v2) {
  out[0] = Math.max(v1[0], v2[0]);
  out[1] = Math.max(v1[1], v2[1]);
  return out;
}

exports.create = create;
exports.copy = copy;
exports.clone = clone;
exports.set = set;
exports.add = add;
exports.scaleAndAdd = scaleAndAdd;
exports.sub = sub;
exports.len = len;
exports.length = length;
exports.lenSquare = lenSquare;
exports.lengthSquare = lengthSquare;
exports.mul = mul;
exports.div = div;
exports.dot = dot;
exports.scale = scale;
exports.normalize = normalize;
exports.distance = distance;
exports.dist = dist;
exports.distanceSquare = distanceSquare;
exports.distSquare = distSquare;
exports.negate = negate;
exports.lerp = lerp;
exports.applyTransform = applyTransform;
exports.min = min;
exports.max = max;

/***/ }),
/* 18 */
/***/ (function(module, exports) {

var core = module.exports = { version: '2.5.7' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(78);
var defined = __webpack_require__(38);
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),
/* 20 */
/***/ (function(module, exports) {

/**
 * echarts设备环境识别
 *
 * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。
 * @author firede[firede@firede.us]
 * @desc thanks zepto.
 */
var env = {};

if (typeof wx === 'object' && typeof wx.getSystemInfoSync === 'function') {
  // In Weixin Application
  env = {
    browser: {},
    os: {},
    node: false,
    wxa: true,
    // Weixin Application
    canvasSupported: true,
    svgSupported: false,
    touchEventsSupported: true
  };
} else if (typeof document === 'undefined' && typeof self !== 'undefined') {
  // In worker
  env = {
    browser: {},
    os: {},
    node: false,
    worker: true,
    canvasSupported: true
  };
} else if (typeof navigator === 'undefined') {
  // In node
  env = {
    browser: {},
    os: {},
    node: true,
    worker: false,
    // Assume canvas is supported
    canvasSupported: true,
    svgSupported: true
  };
} else {
  env = detect(navigator.userAgent);
}

var _default = env; // Zepto.js
// (c) 2010-2013 Thomas Fuchs
// Zepto.js may be freely distributed under the MIT license.

function detect(ua) {
  var os = {};
  var browser = {}; // var webkit = ua.match(/Web[kK]it[\/]{0,1}([\d.]+)/);
  // var android = ua.match(/(Android);?[\s\/]+([\d.]+)?/);
  // var ipad = ua.match(/(iPad).*OS\s([\d_]+)/);
  // var ipod = ua.match(/(iPod)(.*OS\s([\d_]+))?/);
  // var iphone = !ipad && ua.match(/(iPhone\sOS)\s([\d_]+)/);
  // var webos = ua.match(/(webOS|hpwOS)[\s\/]([\d.]+)/);
  // var touchpad = webos && ua.match(/TouchPad/);
  // var kindle = ua.match(/Kindle\/([\d.]+)/);
  // var silk = ua.match(/Silk\/([\d._]+)/);
  // var blackberry = ua.match(/(BlackBerry).*Version\/([\d.]+)/);
  // var bb10 = ua.match(/(BB10).*Version\/([\d.]+)/);
  // var rimtabletos = ua.match(/(RIM\sTablet\sOS)\s([\d.]+)/);
  // var playbook = ua.match(/PlayBook/);
  // var chrome = ua.match(/Chrome\/([\d.]+)/) || ua.match(/CriOS\/([\d.]+)/);

  var firefox = ua.match(/Firefox\/([\d.]+)/); // var safari = webkit && ua.match(/Mobile\//) && !chrome;
  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;

  var ie = ua.match(/MSIE\s([\d.]+)/) // IE 11 Trident/7.0; rv:11.0
  || ua.match(/Trident\/.+?rv:(([\d.]+))/);
  var edge = ua.match(/Edge\/([\d.]+)/); // IE 12 and 12+

  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:
  // - discern (more) between multiple browsers on android
  // - decide if kindle fire in silk mode is android or not
  // - Firefox on Android doesn't specify the Android version
  // - possibly devide in os, device and browser hashes
  // if (browser.webkit = !!webkit) browser.version = webkit[1];
  // if (android) os.android = true, os.version = android[2];
  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');
  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');
  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;
  // if (webos) os.webos = true, os.version = webos[2];
  // if (touchpad) os.touchpad = true;
  // if (blackberry) os.blackberry = true, os.version = blackberry[2];
  // if (bb10) os.bb10 = true, os.version = bb10[2];
  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];
  // if (playbook) browser.playbook = true;
  // if (kindle) os.kindle = true, os.version = kindle[1];
  // if (silk) browser.silk = true, browser.version = silk[1];
  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;
  // if (chrome) browser.chrome = true, browser.version = chrome[1];

  if (firefox) {
    browser.firefox = true;
    browser.version = firefox[1];
  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;
  // if (webview) browser.webview = true;


  if (ie) {
    browser.ie = true;
    browser.version = ie[1];
  }

  if (edge) {
    browser.edge = true;
    browser.version = edge[1];
  } // It is difficult to detect WeChat in Win Phone precisely, because ua can
  // not be set on win phone. So we do not consider Win Phone.


  if (weChat) {
    browser.weChat = true;
  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||
  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));
  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||
  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\/([\d.]+)/)) ||
  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));


  return {
    browser: browser,
    os: os,
    node: false,
    // 原生canvas支持，改极端点了
    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)
    canvasSupported: !!document.createElement('canvas').getContext,
    svgSupported: typeof SVGRect !== 'undefined',
    // works on most browsers
    // IE10/11 does not support touch event, and MS Edge supports them but not by
    // default, so we dont check navigator.maxTouchPoints for them here.
    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,
    // <http://caniuse.com/#search=pointer%20event>.
    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer
    // events currently. So we dont use that on other browsers unless tested sufficiently.
    // Although IE 10 supports pointer event, it use old style and is different from the
    // standard. So we exclude that. (IE 10 is hardly used on touch device)
    && (browser.edge || browser.ie && browser.version >= 11) // passiveSupported: detectPassiveSupport()

  };
} // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection
// function detectPassiveSupport() {
//     // Test via a getter in the options object to see if the passive property is accessed
//     var supportsPassive = false;
//     try {
//         var opts = Object.defineProperty({}, 'passive', {
//             get: function() {
//                 supportsPassive = true;
//             }
//         });
//         window.addEventListener('testPassive', function() {}, opts);
//     } catch (e) {
//     }
//     return supportsPassive;
// }


module.exports = _default;

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

var Displayable = __webpack_require__(84);

var zrUtil = __webpack_require__(1);

var PathProxy = __webpack_require__(85);

var pathContain = __webpack_require__(452);

var Pattern = __webpack_require__(178);

var getCanvasPattern = Pattern.prototype.getCanvasPattern;
var abs = Math.abs;
var pathProxyForDraw = new PathProxy(true);
/**
 * @alias module:zrender/graphic/Path
 * @extends module:zrender/graphic/Displayable
 * @constructor
 * @param {Object} opts
 */

function Path(opts) {
  Displayable.call(this, opts);
  /**
   * @type {module:zrender/core/PathProxy}
   * @readOnly
   */

  this.path = null;
}

Path.prototype = {
  constructor: Path,
  type: 'path',
  __dirtyPath: true,
  strokeContainThreshold: 5,
  brush: function (ctx, prevEl) {
    var style = this.style;
    var path = this.path || pathProxyForDraw;
    var hasStroke = style.hasStroke();
    var hasFill = style.hasFill();
    var fill = style.fill;
    var stroke = style.stroke;
    var hasFillGradient = hasFill && !!fill.colorStops;
    var hasStrokeGradient = hasStroke && !!stroke.colorStops;
    var hasFillPattern = hasFill && !!fill.image;
    var hasStrokePattern = hasStroke && !!stroke.image;
    style.bind(ctx, this, prevEl);
    this.setTransform(ctx);

    if (this.__dirty) {
      var rect; // Update gradient because bounding rect may changed

      if (hasFillGradient) {
        rect = rect || this.getBoundingRect();
        this._fillGradient = style.getGradient(ctx, fill, rect);
      }

      if (hasStrokeGradient) {
        rect = rect || this.getBoundingRect();
        this._strokeGradient = style.getGradient(ctx, stroke, rect);
      }
    } // Use the gradient or pattern


    if (hasFillGradient) {
      // PENDING If may have affect the state
      ctx.fillStyle = this._fillGradient;
    } else if (hasFillPattern) {
      ctx.fillStyle = getCanvasPattern.call(fill, ctx);
    }

    if (hasStrokeGradient) {
      ctx.strokeStyle = this._strokeGradient;
    } else if (hasStrokePattern) {
      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);
    }

    var lineDash = style.lineDash;
    var lineDashOffset = style.lineDashOffset;
    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy

    var scale = this.getGlobalScale();
    path.setScale(scale[0], scale[1]); // Proxy context
    // Rebuild path in following 2 cases
    // 1. Path is dirty
    // 2. Path needs javascript implemented lineDash stroking.
    //    In this case, lineDash information will not be saved in PathProxy

    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {
      path.beginPath(ctx); // Setting line dash before build path

      if (lineDash && !ctxLineDash) {
        path.setLineDash(lineDash);
        path.setLineDashOffset(lineDashOffset);
      }

      this.buildPath(path, this.shape, false); // Clear path dirty flag

      if (this.path) {
        this.__dirtyPath = false;
      }
    } else {
      // Replay path building
      ctx.beginPath();
      this.path.rebuildPath(ctx);
    }

    hasFill && path.fill(ctx);

    if (lineDash && ctxLineDash) {
      ctx.setLineDash(lineDash);
      ctx.lineDashOffset = lineDashOffset;
    }

    hasStroke && path.stroke(ctx);

    if (lineDash && ctxLineDash) {
      // PENDING
      // Remove lineDash
      ctx.setLineDash([]);
    } // Draw rect text


    if (style.text != null) {
      // Only restore transform when needs draw text.
      this.restoreTransform(ctx);
      this.drawRectText(ctx, this.getBoundingRect());
    }
  },
  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath
  // Like in circle
  buildPath: function (ctx, shapeCfg, inBundle) {},
  createPathProxy: function () {
    this.path = new PathProxy();
  },
  getBoundingRect: function () {
    var rect = this._rect;
    var style = this.style;
    var needsUpdateRect = !rect;

    if (needsUpdateRect) {
      var path = this.path;

      if (!path) {
        // Create path on demand.
        path = this.path = new PathProxy();
      }

      if (this.__dirtyPath) {
        path.beginPath();
        this.buildPath(path, this.shape, false);
      }

      rect = path.getBoundingRect();
    }

    this._rect = rect;

    if (style.hasStroke()) {
      // Needs update rect with stroke lineWidth when
      // 1. Element changes scale or lineWidth
      // 2. Shape is changed
      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());

      if (this.__dirty || needsUpdateRect) {
        rectWithStroke.copy(rect); // FIXME Must after updateTransform

        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical

        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill

        if (!style.hasFill()) {
          w = Math.max(w, this.strokeContainThreshold || 4);
        } // Consider line width
        // Line scale can't be 0;


        if (lineScale > 1e-10) {
          rectWithStroke.width += w / lineScale;
          rectWithStroke.height += w / lineScale;
          rectWithStroke.x -= w / lineScale / 2;
          rectWithStroke.y -= w / lineScale / 2;
        }
      } // Return rect with stroke


      return rectWithStroke;
    }

    return rect;
  },
  contain: function (x, y) {
    var localPos = this.transformCoordToLocal(x, y);
    var rect = this.getBoundingRect();
    var style = this.style;
    x = localPos[0];
    y = localPos[1];

    if (rect.contain(x, y)) {
      var pathData = this.path.data;

      if (style.hasStroke()) {
        var lineWidth = style.lineWidth;
        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;

        if (lineScale > 1e-10) {
          // Only add extra hover lineWidth when there are no fill
          if (!style.hasFill()) {
            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);
          }

          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {
            return true;
          }
        }
      }

      if (style.hasFill()) {
        return pathContain.contain(pathData, x, y);
      }
    }

    return false;
  },

  /**
   * @param  {boolean} dirtyPath
   */
  dirty: function (dirtyPath) {
    if (dirtyPath == null) {
      dirtyPath = true;
    } // Only mark dirty, not mark clean


    if (dirtyPath) {
      this.__dirtyPath = dirtyPath;
      this._rect = null;
    }

    this.__dirty = true;
    this.__zr && this.__zr.refresh(); // Used as a clipping path

    if (this.__clipTarget) {
      this.__clipTarget.dirty();
    }
  },

  /**
   * Alias for animate('shape')
   * @param {boolean} loop
   */
  animateShape: function (loop) {
    return this.animate('shape', loop);
  },
  // Overwrite attrKV
  attrKV: function (key, value) {
    // FIXME
    if (key === 'shape') {
      this.setShape(value);
      this.__dirtyPath = true;
      this._rect = null;
    } else {
      Displayable.prototype.attrKV.call(this, key, value);
    }
  },

  /**
   * @param {Object|string} key
   * @param {*} value
   */
  setShape: function (key, value) {
    var shape = this.shape; // Path from string may not have shape

    if (shape) {
      if (zrUtil.isObject(key)) {
        for (var name in key) {
          if (key.hasOwnProperty(name)) {
            shape[name] = key[name];
          }
        }
      } else {
        shape[key] = value;
      }

      this.dirty(true);
    }

    return this;
  },
  getLineScale: function () {
    var m = this.transform; // Get the line scale.
    // Determinant of `m` means how much the area is enlarged by the
    // transformation. So its square root can be used as a scale factor
    // for width.

    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;
  }
};
/**
 * 扩展一个 Path element, 比如星形，圆等。
 * Extend a path element
 * @param {Object} props
 * @param {string} props.type Path type
 * @param {Function} props.init Initialize
 * @param {Function} props.buildPath Overwrite buildPath method
 * @param {Object} [props.style] Extended default style config
 * @param {Object} [props.shape] Extended default shape config
 */

Path.extend = function (defaults) {
  var Sub = function (opts) {
    Path.call(this, opts);

    if (defaults.style) {
      // Extend default style
      this.style.extendFrom(defaults.style, false);
    } // Extend default shape


    var defaultShape = defaults.shape;

    if (defaultShape) {
      this.shape = this.shape || {};
      var thisShape = this.shape;

      for (var name in defaultShape) {
        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {
          thisShape[name] = defaultShape[name];
        }
      }
    }

    defaults.init && defaults.init.call(this, opts);
  };

  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象

  for (var name in defaults) {
    // Extending prototype values and methods
    if (name !== 'style' && name !== 'shape') {
      Sub.prototype[name] = defaults[name];
    }
  }

  return Sub;
};

zrUtil.inherits(Path, Displayable);
var _default = Path;
module.exports = _default;

/***/ }),
/* 22 */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(8);
var createDesc = __webpack_require__(50);
module.exports = __webpack_require__(9) ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(3);
var hide = __webpack_require__(23);
var has = __webpack_require__(22);
var SRC = __webpack_require__(56)('src');
var TO_STRING = 'toString';
var $toString = Function[TO_STRING];
var TPL = ('' + $toString).split(TO_STRING);

__webpack_require__(18).inspectSource = function (it) {
  return $toString.call(it);
};

(module.exports = function (O, key, val, safe) {
  var isFunction = typeof val == 'function';
  if (isFunction) has(val, 'name') || hide(val, 'name', key);
  if (O[key] === val) return;
  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
  if (O === global) {
    O[key] = val;
  } else if (!safe) {
    delete O[key];
    hide(O, key, val);
  } else if (O[key]) {
    O[key] = val;
  } else {
    hide(O, key, val);
  }
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, TO_STRING, function toString() {
  return typeof this == 'function' && this[SRC] || $toString.call(this);
});


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

var pIE = __webpack_require__(79);
var createDesc = __webpack_require__(50);
var toIObject = __webpack_require__(19);
var toPrimitive = __webpack_require__(37);
var has = __webpack_require__(22);
var IE8_DOM_DEFINE = __webpack_require__(200);
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__(9) ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__(22);
var toObject = __webpack_require__(12);
var IE_PROTO = __webpack_require__(127)('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(0);
var fails = __webpack_require__(5);
var defined = __webpack_require__(38);
var quot = /"/g;
// B.2.3.2.1 CreateHTML(string, tag, attribute, value)
var createHTML = function (string, tag, attribute, value) {
  var S = String(defined(string));
  var p1 = '<' + tag;
  if (attribute !== '') p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
  return p1 + '>' + S + '</' + tag + '>';
};
module.exports = function (NAME, exec) {
  var O = {};
  O[NAME] = exec(createHTML);
  $export($export.P + $export.F * fails(function () {
    var test = ''[NAME]('"');
    return test !== test.toLowerCase() || test.split('"').length > 3;
  }), 'String', O);
};


/***/ }),
/* 28 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(154);

/*global toString:true*/

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  typeof document.createElement -> undefined
 */
function isStandardBrowserEnv() {
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined' &&
    typeof document.createElement === 'function'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object' && !isArray(obj)) {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (typeof result[key] === 'object' && typeof val === 'object') {
      result[key] = merge(result[key], val);
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim
};


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

var vec2 = __webpack_require__(17);

var matrix = __webpack_require__(64);

/**
 * @module echarts/core/BoundingRect
 */
var v2ApplyTransform = vec2.applyTransform;
var mathMin = Math.min;
var mathMax = Math.max;
/**
 * @alias module:echarts/core/BoundingRect
 */

function BoundingRect(x, y, width, height) {
  if (width < 0) {
    x = x + width;
    width = -width;
  }

  if (height < 0) {
    y = y + height;
    height = -height;
  }
  /**
   * @type {number}
   */


  this.x = x;
  /**
   * @type {number}
   */

  this.y = y;
  /**
   * @type {number}
   */

  this.width = width;
  /**
   * @type {number}
   */

  this.height = height;
}

BoundingRect.prototype = {
  constructor: BoundingRect,

  /**
   * @param {module:echarts/core/BoundingRect} other
   */
  union: function (other) {
    var x = mathMin(other.x, this.x);
    var y = mathMin(other.y, this.y);
    this.width = mathMax(other.x + other.width, this.x + this.width) - x;
    this.height = mathMax(other.y + other.height, this.y + this.height) - y;
    this.x = x;
    this.y = y;
  },

  /**
   * @param {Array.<number>} m
   * @methods
   */
  applyTransform: function () {
    var lt = [];
    var rb = [];
    var lb = [];
    var rt = [];
    return function (m) {
      // In case usage like this
      // el.getBoundingRect().applyTransform(el.transform)
      // And element has no transform
      if (!m) {
        return;
      }

      lt[0] = lb[0] = this.x;
      lt[1] = rt[1] = this.y;
      rb[0] = rt[0] = this.x + this.width;
      rb[1] = lb[1] = this.y + this.height;
      v2ApplyTransform(lt, lt, m);
      v2ApplyTransform(rb, rb, m);
      v2ApplyTransform(lb, lb, m);
      v2ApplyTransform(rt, rt, m);
      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);
      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);
      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);
      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);
      this.width = maxX - this.x;
      this.height = maxY - this.y;
    };
  }(),

  /**
   * Calculate matrix of transforming from self to target rect
   * @param  {module:zrender/core/BoundingRect} b
   * @return {Array.<number>}
   */
  calculateTransform: function (b) {
    var a = this;
    var sx = b.width / a.width;
    var sy = b.height / a.height;
    var m = matrix.create(); // 矩阵右乘

    matrix.translate(m, m, [-a.x, -a.y]);
    matrix.scale(m, m, [sx, sy]);
    matrix.translate(m, m, [b.x, b.y]);
    return m;
  },

  /**
   * @param {(module:echarts/core/BoundingRect|Object)} b
   * @return {boolean}
   */
  intersect: function (b) {
    if (!b) {
      return false;
    }

    if (!(b instanceof BoundingRect)) {
      // Normalize negative width/height.
      b = BoundingRect.create(b);
    }

    var a = this;
    var ax0 = a.x;
    var ax1 = a.x + a.width;
    var ay0 = a.y;
    var ay1 = a.y + a.height;
    var bx0 = b.x;
    var bx1 = b.x + b.width;
    var by0 = b.y;
    var by1 = b.y + b.height;
    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);
  },
  contain: function (x, y) {
    var rect = this;
    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;
  },

  /**
   * @return {module:echarts/core/BoundingRect}
   */
  clone: function () {
    return new BoundingRect(this.x, this.y, this.width, this.height);
  },

  /**
   * Copy from another rect
   */
  copy: function (other) {
    this.x = other.x;
    this.y = other.y;
    this.width = other.width;
    this.height = other.height;
  },
  plain: function () {
    return {
      x: this.x,
      y: this.y,
      width: this.width,
      height: this.height
    };
  }
};
/**
 * @param {Object|module:zrender/core/BoundingRect} rect
 * @param {number} rect.x
 * @param {number} rect.y
 * @param {number} rect.width
 * @param {number} rect.height
 * @return {module:zrender/core/BoundingRect}
 */

BoundingRect.create = function (rect) {
  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);
};

var _default = BoundingRect;
module.exports = _default;

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(15);
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(234);
var isBuffer = __webpack_require__(714);

/*global toString:true*/

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (typeof result[key] === 'object' && typeof val === 'object') {
      result[key] = merge(result[key], val);
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim
};


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var textContain = __webpack_require__(55);

var numberUtil = __webpack_require__(14);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * 每三位默认加,格式化
 * @param {string|number} x
 * @return {string}
 */
function addCommas(x) {
  if (isNaN(x)) {
    return '-';
  }

  x = (x + '').split('.');
  return x[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');
}
/**
 * @param {string} str
 * @param {boolean} [upperCaseFirst=false]
 * @return {string} str
 */


function toCamelCase(str, upperCaseFirst) {
  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {
    return group1.toUpperCase();
  });

  if (upperCaseFirst && str) {
    str = str.charAt(0).toUpperCase() + str.slice(1);
  }

  return str;
}

var normalizeCssArray = zrUtil.normalizeCssArray;
var replaceReg = /([&<>"'])/g;
var replaceMap = {
  '&': '&amp;',
  '<': '&lt;',
  '>': '&gt;',
  '"': '&quot;',
  '\'': '&#39;'
};

function encodeHTML(source) {
  return source == null ? '' : (source + '').replace(replaceReg, function (str, c) {
    return replaceMap[c];
  });
}

var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];

var wrapVar = function (varName, seriesIdx) {
  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';
};
/**
 * Template formatter
 * @param {string} tpl
 * @param {Array.<Object>|Object} paramsList
 * @param {boolean} [encode=false]
 * @return {string}
 */


function formatTpl(tpl, paramsList, encode) {
  if (!zrUtil.isArray(paramsList)) {
    paramsList = [paramsList];
  }

  var seriesLen = paramsList.length;

  if (!seriesLen) {
    return '';
  }

  var $vars = paramsList[0].$vars || [];

  for (var i = 0; i < $vars.length; i++) {
    var alias = TPL_VAR_ALIAS[i];
    tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));
  }

  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {
    for (var k = 0; k < $vars.length; k++) {
      var val = paramsList[seriesIdx][$vars[k]];
      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);
    }
  }

  return tpl;
}
/**
 * simple Template formatter
 *
 * @param {string} tpl
 * @param {Object} param
 * @param {boolean} [encode=false]
 * @return {string}
 */


function formatTplSimple(tpl, param, encode) {
  zrUtil.each(param, function (value, key) {
    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);
  });
  return tpl;
}
/**
 * @param {Object|string} [opt] If string, means color.
 * @param {string} [opt.color]
 * @param {string} [opt.extraCssText]
 * @param {string} [opt.type='item'] 'item' or 'subItem'
 * @return {string}
 */


function getTooltipMarker(opt, extraCssText) {
  opt = zrUtil.isString(opt) ? {
    color: opt,
    extraCssText: extraCssText
  } : opt || {};
  var color = opt.color;
  var type = opt.type;
  var extraCssText = opt.extraCssText;

  if (!color) {
    return '';
  }

  return type === 'subItem' ? '<span style="display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '"></span>' : '<span style="display:inline-block;margin-right:5px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '"></span>';
}

function pad(str, len) {
  str += '';
  return '0000'.substr(0, len - str.length) + str;
}
/**
 * ISO Date format
 * @param {string} tpl
 * @param {number} value
 * @param {boolean} [isUTC=false] Default in local time.
 *           see `module:echarts/scale/Time`
 *           and `module:echarts/util/number#parseDate`.
 * @inner
 */


function formatTime(tpl, value, isUTC) {
  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {
    tpl = 'MM-dd\nyyyy';
  }

  var date = numberUtil.parseDate(value);
  var utc = isUTC ? 'UTC' : '';
  var y = date['get' + utc + 'FullYear']();
  var M = date['get' + utc + 'Month']() + 1;
  var d = date['get' + utc + 'Date']();
  var h = date['get' + utc + 'Hours']();
  var m = date['get' + utc + 'Minutes']();
  var s = date['get' + utc + 'Seconds']();
  var S = date['get' + utc + 'Milliseconds']();
  tpl = tpl.replace('MM', pad(M, 2)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', pad(d, 2)).replace('d', d).replace('hh', pad(h, 2)).replace('h', h).replace('mm', pad(m, 2)).replace('m', m).replace('ss', pad(s, 2)).replace('s', s).replace('SSS', pad(S, 3));
  return tpl;
}
/**
 * Capital first
 * @param {string} str
 * @return {string}
 */


function capitalFirst(str) {
  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;
}

var truncateText = textContain.truncateText;
var getTextRect = textContain.getBoundingRect;
exports.addCommas = addCommas;
exports.toCamelCase = toCamelCase;
exports.normalizeCssArray = normalizeCssArray;
exports.encodeHTML = encodeHTML;
exports.formatTpl = formatTpl;
exports.formatTplSimple = formatTplSimple;
exports.getTooltipMarker = getTooltipMarker;
exports.formatTime = formatTime;
exports.capitalFirst = capitalFirst;
exports.truncateText = truncateText;
exports.getTextRect = getTextRect;

/***/ }),
/* 34 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__(5);

module.exports = function (method, arg) {
  return !!method && fails(function () {
    // eslint-disable-next-line no-useless-call
    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);
  });
};


/***/ }),
/* 36 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(4);
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),
/* 38 */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),
/* 39 */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

// most Object methods by ES6 should accept primitives
var $export = __webpack_require__(0);
var core = __webpack_require__(18);
var fails = __webpack_require__(5);
module.exports = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
};


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

// 0 -> Array#forEach
// 1 -> Array#map
// 2 -> Array#filter
// 3 -> Array#some
// 4 -> Array#every
// 5 -> Array#find
// 6 -> Array#findIndex
var ctx = __webpack_require__(31);
var IObject = __webpack_require__(78);
var toObject = __webpack_require__(12);
var toLength = __webpack_require__(10);
var asc = __webpack_require__(143);
module.exports = function (TYPE, $create) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  var create = $create || asc;
  return function ($this, callbackfn, that) {
    var O = toObject($this);
    var self = IObject(O);
    var f = ctx(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var val, res;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      val = self[index];
      res = f(val, index, O);
      if (TYPE) {
        if (IS_MAP) result[index] = res;   // map
        else if (res) switch (TYPE) {
          case 3: return true;             // some
          case 5: return val;              // find
          case 6: return index;            // findIndex
          case 2: result.push(val);        // filter
        } else if (IS_EVERY) return false; // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
  };
};


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var env = __webpack_require__(20);

var _model = __webpack_require__(7);

var makeInner = _model.makeInner;

var _clazz = __webpack_require__(48);

var enableClassExtend = _clazz.enableClassExtend;
var enableClassCheck = _clazz.enableClassCheck;

var lineStyleMixin = __webpack_require__(448);

var areaStyleMixin = __webpack_require__(449);

var textStyleMixin = __webpack_require__(450);

var itemStyleMixin = __webpack_require__(474);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * @module echarts/model/Model
 */
var mixin = zrUtil.mixin;
var inner = makeInner();
/**
 * @alias module:echarts/model/Model
 * @constructor
 * @param {Object} option
 * @param {module:echarts/model/Model} [parentModel]
 * @param {module:echarts/model/Global} [ecModel]
 */

function Model(option, parentModel, ecModel) {
  /**
   * @type {module:echarts/model/Model}
   * @readOnly
   */
  this.parentModel = parentModel;
  /**
   * @type {module:echarts/model/Global}
   * @readOnly
   */

  this.ecModel = ecModel;
  /**
   * @type {Object}
   * @protected
   */

  this.option = option; // Simple optimization
  // if (this.init) {
  //     if (arguments.length <= 4) {
  //         this.init(option, parentModel, ecModel, extraOpt);
  //     }
  //     else {
  //         this.init.apply(this, arguments);
  //     }
  // }
}

Model.prototype = {
  constructor: Model,

  /**
   * Model 的初始化函数
   * @param {Object} option
   */
  init: null,

  /**
   * 从新的 Option merge
   */
  mergeOption: function (option) {
    zrUtil.merge(this.option, option, true);
  },

  /**
   * @param {string|Array.<string>} path
   * @param {boolean} [ignoreParent=false]
   * @return {*}
   */
  get: function (path, ignoreParent) {
    if (path == null) {
      return this.option;
    }

    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));
  },

  /**
   * @param {string} key
   * @param {boolean} [ignoreParent=false]
   * @return {*}
   */
  getShallow: function (key, ignoreParent) {
    var option = this.option;
    var val = option == null ? option : option[key];
    var parentModel = !ignoreParent && getParent(this, key);

    if (val == null && parentModel) {
      val = parentModel.getShallow(key);
    }

    return val;
  },

  /**
   * @param {string|Array.<string>} [path]
   * @param {module:echarts/model/Model} [parentModel]
   * @return {module:echarts/model/Model}
   */
  getModel: function (path, parentModel) {
    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));
    var thisParentModel;
    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);
    return new Model(obj, parentModel, this.ecModel);
  },

  /**
   * If model has option
   */
  isEmpty: function () {
    return this.option == null;
  },
  restoreData: function () {},
  // Pending
  clone: function () {
    var Ctor = this.constructor;
    return new Ctor(zrUtil.clone(this.option));
  },
  setReadOnly: function (properties) {// clazzUtil.setReadOnly(this, properties);
  },
  // If path is null/undefined, return null/undefined.
  parsePath: function (path) {
    if (typeof path === 'string') {
      path = path.split('.');
    }

    return path;
  },

  /**
   * @param {Function} getParentMethod
   *        param {Array.<string>|string} path
   *        return {module:echarts/model/Model}
   */
  customizeGetParent: function (getParentMethod) {
    inner(this).getParent = getParentMethod;
  },
  isAnimationEnabled: function () {
    if (!env.node) {
      if (this.option.animation != null) {
        return !!this.option.animation;
      } else if (this.parentModel) {
        return this.parentModel.isAnimationEnabled();
      }
    }
  }
};

function doGet(obj, pathArr, parentModel) {
  for (var i = 0; i < pathArr.length; i++) {
    // Ignore empty
    if (!pathArr[i]) {
      continue;
    } // obj could be number/string/... (like 0)


    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;

    if (obj == null) {
      break;
    }
  }

  if (obj == null && parentModel) {
    obj = parentModel.get(pathArr);
  }

  return obj;
} // `path` can be null/undefined


function getParent(model, path) {
  var getParentMethod = inner(model).getParent;
  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;
} // Enable Model.extend.


enableClassExtend(Model);
enableClassCheck(Model);
mixin(Model, lineStyleMixin);
mixin(Model, areaStyleMixin);
mixin(Model, textStyleMixin);
mixin(Model, itemStyleMixin);
var _default = Model;
module.exports = _default;

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var Model = __webpack_require__(42);

var componentUtil = __webpack_require__(86);

var _clazz = __webpack_require__(48);

var enableClassManagement = _clazz.enableClassManagement;
var parseClassType = _clazz.parseClassType;

var _model = __webpack_require__(7);

var makeInner = _model.makeInner;

var layout = __webpack_require__(49);

var boxLayoutMixin = __webpack_require__(475);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * Component model
 *
 * @module echarts/model/Component
 */
var inner = makeInner();
/**
 * @alias module:echarts/model/Component
 * @constructor
 * @param {Object} option
 * @param {module:echarts/model/Model} parentModel
 * @param {module:echarts/model/Model} ecModel
 */

var ComponentModel = Model.extend({
  type: 'component',

  /**
   * @readOnly
   * @type {string}
   */
  id: '',

  /**
   * Because simplified concept is probably better, series.name (or component.name)
   * has been having too many resposibilities:
   * (1) Generating id (which requires name in option should not be modified).
   * (2) As an index to mapping series when merging option or calling API (a name
   * can refer to more then one components, which is convinient is some case).
   * (3) Display.
   * @readOnly
   */
  name: '',

  /**
   * @readOnly
   * @type {string}
   */
  mainType: '',

  /**
   * @readOnly
   * @type {string}
   */
  subType: '',

  /**
   * @readOnly
   * @type {number}
   */
  componentIndex: 0,

  /**
   * @type {Object}
   * @protected
   */
  defaultOption: null,

  /**
   * @type {module:echarts/model/Global}
   * @readOnly
   */
  ecModel: null,

  /**
   * key: componentType
   * value:  Component model list, can not be null.
   * @type {Object.<string, Array.<module:echarts/model/Model>>}
   * @readOnly
   */
  dependentModels: [],

  /**
   * @type {string}
   * @readOnly
   */
  uid: null,

  /**
   * Support merge layout params.
   * Only support 'box' now (left/right/top/bottom/width/height).
   * @type {string|Object} Object can be {ignoreSize: true}
   * @readOnly
   */
  layoutMode: null,
  $constructor: function (option, parentModel, ecModel, extraOpt) {
    Model.call(this, option, parentModel, ecModel, extraOpt);
    this.uid = componentUtil.getUID('ec_cpt_model');
  },
  init: function (option, parentModel, ecModel, extraOpt) {
    this.mergeDefaultAndTheme(option, ecModel);
  },
  mergeDefaultAndTheme: function (option, ecModel) {
    var layoutMode = this.layoutMode;
    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};
    var themeModel = ecModel.getTheme();
    zrUtil.merge(option, themeModel.get(this.mainType));
    zrUtil.merge(option, this.getDefaultOption());

    if (layoutMode) {
      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);
    }
  },
  mergeOption: function (option, extraOpt) {
    zrUtil.merge(this.option, option, true);
    var layoutMode = this.layoutMode;

    if (layoutMode) {
      layout.mergeLayoutParam(this.option, option, layoutMode);
    }
  },
  // Hooker after init or mergeOption
  optionUpdated: function (newCptOption, isInit) {},
  getDefaultOption: function () {
    var fields = inner(this);

    if (!fields.defaultOption) {
      var optList = [];
      var Class = this.constructor;

      while (Class) {
        var opt = Class.prototype.defaultOption;
        opt && optList.push(opt);
        Class = Class.superClass;
      }

      var defaultOption = {};

      for (var i = optList.length - 1; i >= 0; i--) {
        defaultOption = zrUtil.merge(defaultOption, optList[i], true);
      }

      fields.defaultOption = defaultOption;
    }

    return fields.defaultOption;
  },
  getReferringComponents: function (mainType) {
    return this.ecModel.queryComponents({
      mainType: mainType,
      index: this.get(mainType + 'Index', true),
      id: this.get(mainType + 'Id', true)
    });
  }
}); // Reset ComponentModel.extend, add preConstruct.
// clazzUtil.enableClassExtend(
//     ComponentModel,
//     function (option, parentModel, ecModel, extraOpt) {
//         // Set dependentModels, componentIndex, name, id, mainType, subType.
//         zrUtil.extend(this, extraOpt);
//         this.uid = componentUtil.getUID('componentModel');
//         // this.setReadOnly([
//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',
//         //     'dependentModels', 'componentIndex'
//         // ]);
//     }
// );
// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.

enableClassManagement(ComponentModel, {
  registerWhenExtend: true
});
componentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.

componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);

function getDependencies(componentType) {
  var deps = [];
  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {
    deps = deps.concat(Clazz.prototype.dependencies || []);
  }); // Ensure main type.

  deps = zrUtil.map(deps, function (type) {
    return parseClassType(type).main;
  }); // Hack dataset for convenience.

  if (componentType !== 'dataset' && zrUtil.indexOf(deps, 'dataset') <= 0) {
    deps.unshift('dataset');
  }

  return deps;
}

zrUtil.mixin(ComponentModel, boxLayoutMixin);
var _default = ComponentModel;
module.exports = _default;

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__(202);
var enumBugKeys = __webpack_require__(128);

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(2);
var dPs = __webpack_require__(203);
var enumBugKeys = __webpack_require__(128);
var IE_PROTO = __webpack_require__(127)('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(125)('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(129).appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

if (__webpack_require__(9)) {
  var LIBRARY = __webpack_require__(52);
  var global = __webpack_require__(3);
  var fails = __webpack_require__(5);
  var $export = __webpack_require__(0);
  var $typed = __webpack_require__(103);
  var $buffer = __webpack_require__(150);
  var ctx = __webpack_require__(31);
  var anInstance = __webpack_require__(62);
  var propertyDesc = __webpack_require__(50);
  var hide = __webpack_require__(23);
  var redefineAll = __webpack_require__(63);
  var toInteger = __webpack_require__(39);
  var toLength = __webpack_require__(10);
  var toIndex = __webpack_require__(223);
  var toAbsoluteIndex = __webpack_require__(57);
  var toPrimitive = __webpack_require__(37);
  var has = __webpack_require__(22);
  var classof = __webpack_require__(59);
  var isObject = __webpack_require__(4);
  var toObject = __webpack_require__(12);
  var isArrayIter = __webpack_require__(141);
  var create = __webpack_require__(45);
  var getPrototypeOf = __webpack_require__(26);
  var gOPN = __webpack_require__(58).f;
  var getIterFn = __webpack_require__(80);
  var uid = __webpack_require__(56);
  var wks = __webpack_require__(6);
  var createArrayMethod = __webpack_require__(41);
  var createArrayIncludes = __webpack_require__(91);
  var speciesConstructor = __webpack_require__(100);
  var ArrayIterators = __webpack_require__(145);
  var Iterators = __webpack_require__(60);
  var $iterDetect = __webpack_require__(97);
  var setSpecies = __webpack_require__(61);
  var arrayFill = __webpack_require__(144);
  var arrayCopyWithin = __webpack_require__(214);
  var $DP = __webpack_require__(8);
  var $GOPD = __webpack_require__(25);
  var dP = $DP.f;
  var gOPD = $GOPD.f;
  var RangeError = global.RangeError;
  var TypeError = global.TypeError;
  var Uint8Array = global.Uint8Array;
  var ARRAY_BUFFER = 'ArrayBuffer';
  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;
  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
  var PROTOTYPE = 'prototype';
  var ArrayProto = Array[PROTOTYPE];
  var $ArrayBuffer = $buffer.ArrayBuffer;
  var $DataView = $buffer.DataView;
  var arrayForEach = createArrayMethod(0);
  var arrayFilter = createArrayMethod(2);
  var arraySome = createArrayMethod(3);
  var arrayEvery = createArrayMethod(4);
  var arrayFind = createArrayMethod(5);
  var arrayFindIndex = createArrayMethod(6);
  var arrayIncludes = createArrayIncludes(true);
  var arrayIndexOf = createArrayIncludes(false);
  var arrayValues = ArrayIterators.values;
  var arrayKeys = ArrayIterators.keys;
  var arrayEntries = ArrayIterators.entries;
  var arrayLastIndexOf = ArrayProto.lastIndexOf;
  var arrayReduce = ArrayProto.reduce;
  var arrayReduceRight = ArrayProto.reduceRight;
  var arrayJoin = ArrayProto.join;
  var arraySort = ArrayProto.sort;
  var arraySlice = ArrayProto.slice;
  var arrayToString = ArrayProto.toString;
  var arrayToLocaleString = ArrayProto.toLocaleString;
  var ITERATOR = wks('iterator');
  var TAG = wks('toStringTag');
  var TYPED_CONSTRUCTOR = uid('typed_constructor');
  var DEF_CONSTRUCTOR = uid('def_constructor');
  var ALL_CONSTRUCTORS = $typed.CONSTR;
  var TYPED_ARRAY = $typed.TYPED;
  var VIEW = $typed.VIEW;
  var WRONG_LENGTH = 'Wrong length!';

  var $map = createArrayMethod(1, function (O, length) {
    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
  });

  var LITTLE_ENDIAN = fails(function () {
    // eslint-disable-next-line no-undef
    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
  });

  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {
    new Uint8Array(1).set({});
  });

  var toOffset = function (it, BYTES) {
    var offset = toInteger(it);
    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');
    return offset;
  };

  var validate = function (it) {
    if (isObject(it) && TYPED_ARRAY in it) return it;
    throw TypeError(it + ' is not a typed array!');
  };

  var allocate = function (C, length) {
    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {
      throw TypeError('It is not a typed array constructor!');
    } return new C(length);
  };

  var speciesFromList = function (O, list) {
    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
  };

  var fromList = function (C, list) {
    var index = 0;
    var length = list.length;
    var result = allocate(C, length);
    while (length > index) result[index] = list[index++];
    return result;
  };

  var addGetter = function (it, key, internal) {
    dP(it, key, { get: function () { return this._d[internal]; } });
  };

  var $from = function from(source /* , mapfn, thisArg */) {
    var O = toObject(source);
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var iterFn = getIterFn(O);
    var i, length, values, result, step, iterator;
    if (iterFn != undefined && !isArrayIter(iterFn)) {
      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {
        values.push(step.value);
      } O = values;
    }
    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);
    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {
      result[i] = mapping ? mapfn(O[i], i) : O[i];
    }
    return result;
  };

  var $of = function of(/* ...items */) {
    var index = 0;
    var length = arguments.length;
    var result = allocate(this, length);
    while (length > index) result[index] = arguments[index++];
    return result;
  };

  // iOS Safari 6.x fails here
  var TO_LOCALE_BUG = !!Uint8Array && fails(function () { arrayToLocaleString.call(new Uint8Array(1)); });

  var $toLocaleString = function toLocaleString() {
    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
  };

  var proto = {
    copyWithin: function copyWithin(target, start /* , end */) {
      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
    },
    every: function every(callbackfn /* , thisArg */) {
      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars
      return arrayFill.apply(validate(this), arguments);
    },
    filter: function filter(callbackfn /* , thisArg */) {
      return speciesFromList(this, arrayFilter(validate(this), callbackfn,
        arguments.length > 1 ? arguments[1] : undefined));
    },
    find: function find(predicate /* , thisArg */) {
      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
    },
    findIndex: function findIndex(predicate /* , thisArg */) {
      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
    },
    forEach: function forEach(callbackfn /* , thisArg */) {
      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    indexOf: function indexOf(searchElement /* , fromIndex */) {
      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
    },
    includes: function includes(searchElement /* , fromIndex */) {
      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
    },
    join: function join(separator) { // eslint-disable-line no-unused-vars
      return arrayJoin.apply(validate(this), arguments);
    },
    lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars
      return arrayLastIndexOf.apply(validate(this), arguments);
    },
    map: function map(mapfn /* , thisArg */) {
      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
      return arrayReduce.apply(validate(this), arguments);
    },
    reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
      return arrayReduceRight.apply(validate(this), arguments);
    },
    reverse: function reverse() {
      var that = this;
      var length = validate(that).length;
      var middle = Math.floor(length / 2);
      var index = 0;
      var value;
      while (index < middle) {
        value = that[index];
        that[index++] = that[--length];
        that[length] = value;
      } return that;
    },
    some: function some(callbackfn /* , thisArg */) {
      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    sort: function sort(comparefn) {
      return arraySort.call(validate(this), comparefn);
    },
    subarray: function subarray(begin, end) {
      var O = validate(this);
      var length = O.length;
      var $begin = toAbsoluteIndex(begin, length);
      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
        O.buffer,
        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)
      );
    }
  };

  var $slice = function slice(start, end) {
    return speciesFromList(this, arraySlice.call(validate(this), start, end));
  };

  var $set = function set(arrayLike /* , offset */) {
    validate(this);
    var offset = toOffset(arguments[1], 1);
    var length = this.length;
    var src = toObject(arrayLike);
    var len = toLength(src.length);
    var index = 0;
    if (len + offset > length) throw RangeError(WRONG_LENGTH);
    while (index < len) this[offset + index] = src[index++];
  };

  var $iterators = {
    entries: function entries() {
      return arrayEntries.call(validate(this));
    },
    keys: function keys() {
      return arrayKeys.call(validate(this));
    },
    values: function values() {
      return arrayValues.call(validate(this));
    }
  };

  var isTAIndex = function (target, key) {
    return isObject(target)
      && target[TYPED_ARRAY]
      && typeof key != 'symbol'
      && key in target
      && String(+key) == String(key);
  };
  var $getDesc = function getOwnPropertyDescriptor(target, key) {
    return isTAIndex(target, key = toPrimitive(key, true))
      ? propertyDesc(2, target[key])
      : gOPD(target, key);
  };
  var $setDesc = function defineProperty(target, key, desc) {
    if (isTAIndex(target, key = toPrimitive(key, true))
      && isObject(desc)
      && has(desc, 'value')
      && !has(desc, 'get')
      && !has(desc, 'set')
      // TODO: add validation descriptor w/o calling accessors
      && !desc.configurable
      && (!has(desc, 'writable') || desc.writable)
      && (!has(desc, 'enumerable') || desc.enumerable)
    ) {
      target[key] = desc.value;
      return target;
    } return dP(target, key, desc);
  };

  if (!ALL_CONSTRUCTORS) {
    $GOPD.f = $getDesc;
    $DP.f = $setDesc;
  }

  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
    getOwnPropertyDescriptor: $getDesc,
    defineProperty: $setDesc
  });

  if (fails(function () { arrayToString.call({}); })) {
    arrayToString = arrayToLocaleString = function toString() {
      return arrayJoin.call(this);
    };
  }

  var $TypedArrayPrototype$ = redefineAll({}, proto);
  redefineAll($TypedArrayPrototype$, $iterators);
  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
  redefineAll($TypedArrayPrototype$, {
    slice: $slice,
    set: $set,
    constructor: function () { /* noop */ },
    toString: arrayToString,
    toLocaleString: $toLocaleString
  });
  addGetter($TypedArrayPrototype$, 'buffer', 'b');
  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
  addGetter($TypedArrayPrototype$, 'byteLength', 'l');
  addGetter($TypedArrayPrototype$, 'length', 'e');
  dP($TypedArrayPrototype$, TAG, {
    get: function () { return this[TYPED_ARRAY]; }
  });

  // eslint-disable-next-line max-statements
  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {
    CLAMPED = !!CLAMPED;
    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';
    var GETTER = 'get' + KEY;
    var SETTER = 'set' + KEY;
    var TypedArray = global[NAME];
    var Base = TypedArray || {};
    var TAC = TypedArray && getPrototypeOf(TypedArray);
    var FORCED = !TypedArray || !$typed.ABV;
    var O = {};
    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
    var getter = function (that, index) {
      var data = that._d;
      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
    };
    var setter = function (that, index, value) {
      var data = that._d;
      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
    };
    var addElement = function (that, index) {
      dP(that, index, {
        get: function () {
          return getter(this, index);
        },
        set: function (value) {
          return setter(this, index, value);
        },
        enumerable: true
      });
    };
    if (FORCED) {
      TypedArray = wrapper(function (that, data, $offset, $length) {
        anInstance(that, TypedArray, NAME, '_d');
        var index = 0;
        var offset = 0;
        var buffer, byteLength, length, klass;
        if (!isObject(data)) {
          length = toIndex(data);
          byteLength = length * BYTES;
          buffer = new $ArrayBuffer(byteLength);
        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
          buffer = data;
          offset = toOffset($offset, BYTES);
          var $len = data.byteLength;
          if ($length === undefined) {
            if ($len % BYTES) throw RangeError(WRONG_LENGTH);
            byteLength = $len - offset;
            if (byteLength < 0) throw RangeError(WRONG_LENGTH);
          } else {
            byteLength = toLength($length) * BYTES;
            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);
          }
          length = byteLength / BYTES;
        } else if (TYPED_ARRAY in data) {
          return fromList(TypedArray, data);
        } else {
          return $from.call(TypedArray, data);
        }
        hide(that, '_d', {
          b: buffer,
          o: offset,
          l: byteLength,
          e: length,
          v: new $DataView(buffer)
        });
        while (index < length) addElement(that, index++);
      });
      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
      hide(TypedArrayPrototype, 'constructor', TypedArray);
    } else if (!fails(function () {
      TypedArray(1);
    }) || !fails(function () {
      new TypedArray(-1); // eslint-disable-line no-new
    }) || !$iterDetect(function (iter) {
      new TypedArray(); // eslint-disable-line no-new
      new TypedArray(null); // eslint-disable-line no-new
      new TypedArray(1.5); // eslint-disable-line no-new
      new TypedArray(iter); // eslint-disable-line no-new
    }, true)) {
      TypedArray = wrapper(function (that, data, $offset, $length) {
        anInstance(that, TypedArray, NAME);
        var klass;
        // `ws` module bug, temporarily remove validation length for Uint8Array
        // https://github.com/websockets/ws/pull/645
        if (!isObject(data)) return new Base(toIndex(data));
        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
          return $length !== undefined
            ? new Base(data, toOffset($offset, BYTES), $length)
            : $offset !== undefined
              ? new Base(data, toOffset($offset, BYTES))
              : new Base(data);
        }
        if (TYPED_ARRAY in data) return fromList(TypedArray, data);
        return $from.call(TypedArray, data);
      });
      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {
        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);
      });
      TypedArray[PROTOTYPE] = TypedArrayPrototype;
      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;
    }
    var $nativeIterator = TypedArrayPrototype[ITERATOR];
    var CORRECT_ITER_NAME = !!$nativeIterator
      && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);
    var $iterator = $iterators.values;
    hide(TypedArray, TYPED_CONSTRUCTOR, true);
    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
    hide(TypedArrayPrototype, VIEW, true);
    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);

    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {
      dP(TypedArrayPrototype, TAG, {
        get: function () { return NAME; }
      });
    }

    O[NAME] = TypedArray;

    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);

    $export($export.S, NAME, {
      BYTES_PER_ELEMENT: BYTES
    });

    $export($export.S + $export.F * fails(function () { Base.of.call(TypedArray, 1); }), NAME, {
      from: $from,
      of: $of
    });

    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);

    $export($export.P, NAME, proto);

    setSpecies(NAME);

    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });

    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);

    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;

    $export($export.P + $export.F * fails(function () {
      new TypedArray(1).slice();
    }), NAME, { slice: $slice });

    $export($export.P + $export.F * (fails(function () {
      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();
    }) || !fails(function () {
      TypedArrayPrototype.toLocaleString.call([1, 2]);
    })), NAME, { toLocaleString: $toLocaleString });

    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);
  };
} else module.exports = function () { /* empty */ };


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

var Map = __webpack_require__(218);
var $export = __webpack_require__(0);
var shared = __webpack_require__(90)('metadata');
var store = shared.store || (shared.store = new (__webpack_require__(221))());

var getOrCreateMetadataMap = function (target, targetKey, create) {
  var targetMetadata = store.get(target);
  if (!targetMetadata) {
    if (!create) return undefined;
    store.set(target, targetMetadata = new Map());
  }
  var keyMetadata = targetMetadata.get(targetKey);
  if (!keyMetadata) {
    if (!create) return undefined;
    targetMetadata.set(targetKey, keyMetadata = new Map());
  } return keyMetadata;
};
var ordinaryHasOwnMetadata = function (MetadataKey, O, P) {
  var metadataMap = getOrCreateMetadataMap(O, P, false);
  return metadataMap === undefined ? false : metadataMap.has(MetadataKey);
};
var ordinaryGetOwnMetadata = function (MetadataKey, O, P) {
  var metadataMap = getOrCreateMetadataMap(O, P, false);
  return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);
};
var ordinaryDefineOwnMetadata = function (MetadataKey, MetadataValue, O, P) {
  getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);
};
var ordinaryOwnMetadataKeys = function (target, targetKey) {
  var metadataMap = getOrCreateMetadataMap(target, targetKey, false);
  var keys = [];
  if (metadataMap) metadataMap.forEach(function (_, key) { keys.push(key); });
  return keys;
};
var toMetaKey = function (it) {
  return it === undefined || typeof it == 'symbol' ? it : String(it);
};
var exp = function (O) {
  $export($export.S, 'Reflect', O);
};

module.exports = {
  store: store,
  map: getOrCreateMetadataMap,
  has: ordinaryHasOwnMetadata,
  get: ordinaryGetOwnMetadata,
  set: ordinaryDefineOwnMetadata,
  keys: ordinaryOwnMetadataKeys,
  key: toMetaKey,
  exp: exp
};


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

var _config = __webpack_require__(16);

var __DEV__ = _config.__DEV__;

var zrUtil = __webpack_require__(1);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var TYPE_DELIMITER = '.';
var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';
/**
 * Notice, parseClassType('') should returns {main: '', sub: ''}
 * @public
 */

function parseClassType(componentType) {
  var ret = {
    main: '',
    sub: ''
  };

  if (componentType) {
    componentType = componentType.split(TYPE_DELIMITER);
    ret.main = componentType[0] || '';
    ret.sub = componentType[1] || '';
  }

  return ret;
}
/**
 * @public
 */


function checkClassType(componentType) {
  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType "' + componentType + '" illegal');
}
/**
 * @public
 */


function enableClassExtend(RootClass, mandatoryMethods) {
  RootClass.$constructor = RootClass;

  RootClass.extend = function (proto) {
    var superClass = this;

    var ExtendedClass = function () {
      if (!proto.$constructor) {
        superClass.apply(this, arguments);
      } else {
        proto.$constructor.apply(this, arguments);
      }
    };

    zrUtil.extend(ExtendedClass.prototype, proto);
    ExtendedClass.extend = this.extend;
    ExtendedClass.superCall = superCall;
    ExtendedClass.superApply = superApply;
    zrUtil.inherits(ExtendedClass, this);
    ExtendedClass.superClass = superClass;
    return ExtendedClass;
  };
}

var classBase = 0;
/**
 * Can not use instanceof, consider different scope by
 * cross domain or es module import in ec extensions.
 * Mount a method "isInstance()" to Clz.
 */

function enableClassCheck(Clz) {
  var classAttr = ['__\0is_clz', classBase++, Math.random().toFixed(3)].join('_');
  Clz.prototype[classAttr] = true;

  Clz.isInstance = function (obj) {
    return !!(obj && obj[classAttr]);
  };
} // superCall should have class info, which can not be fetch from 'this'.
// Consider this case:
// class A has method f,
// class B inherits class A, overrides method f, f call superApply('f'),
// class C inherits class B, do not overrides method f,
// then when method of class C is called, dead loop occured.


function superCall(context, methodName) {
  var args = zrUtil.slice(arguments, 2);
  return this.superClass.prototype[methodName].apply(context, args);
}

function superApply(context, methodName, args) {
  return this.superClass.prototype[methodName].apply(context, args);
}
/**
 * @param {Object} entity
 * @param {Object} options
 * @param {boolean} [options.registerWhenExtend]
 * @public
 */


function enableClassManagement(entity, options) {
  options = options || {};
  /**
   * Component model classes
   * key: componentType,
   * value:
   *     componentClass, when componentType is 'xxx'
   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'
   * @type {Object}
   */

  var storage = {};

  entity.registerClass = function (Clazz, componentType) {
    if (componentType) {
      checkClassType(componentType);
      componentType = parseClassType(componentType);

      if (!componentType.sub) {
        storage[componentType.main] = Clazz;
      } else if (componentType.sub !== IS_CONTAINER) {
        var container = makeContainer(componentType);
        container[componentType.sub] = Clazz;
      }
    }

    return Clazz;
  };

  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {
    var Clazz = storage[componentMainType];

    if (Clazz && Clazz[IS_CONTAINER]) {
      Clazz = subType ? Clazz[subType] : null;
    }

    if (throwWhenNotFound && !Clazz) {
      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');
    }

    return Clazz;
  };

  entity.getClassesByMainType = function (componentType) {
    componentType = parseClassType(componentType);
    var result = [];
    var obj = storage[componentType.main];

    if (obj && obj[IS_CONTAINER]) {
      zrUtil.each(obj, function (o, type) {
        type !== IS_CONTAINER && result.push(o);
      });
    } else {
      result.push(obj);
    }

    return result;
  };

  entity.hasClass = function (componentType) {
    // Just consider componentType.main.
    componentType = parseClassType(componentType);
    return !!storage[componentType.main];
  };
  /**
   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']
   */


  entity.getAllClassMainTypes = function () {
    var types = [];
    zrUtil.each(storage, function (obj, type) {
      types.push(type);
    });
    return types;
  };
  /**
   * If a main type is container and has sub types
   * @param  {string}  mainType
   * @return {boolean}
   */


  entity.hasSubTypes = function (componentType) {
    componentType = parseClassType(componentType);
    var obj = storage[componentType.main];
    return obj && obj[IS_CONTAINER];
  };

  entity.parseClassType = parseClassType;

  function makeContainer(componentType) {
    var container = storage[componentType.main];

    if (!container || !container[IS_CONTAINER]) {
      container = storage[componentType.main] = {};
      container[IS_CONTAINER] = true;
    }

    return container;
  }

  if (options.registerWhenExtend) {
    var originalExtend = entity.extend;

    if (originalExtend) {
      entity.extend = function (proto) {
        var ExtendedClass = originalExtend.call(this, proto);
        return entity.registerClass(ExtendedClass, proto.type);
      };
    }
  }

  return entity;
}
/**
 * @param {string|Array.<string>} properties
 */


function setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11
  // if (!zrUtil.isArray(properties)) {
  //     properties = properties != null ? [properties] : [];
  // }
  // zrUtil.each(properties, function (prop) {
  //     var value = obj[prop];
  //     Object.defineProperty
  //         && Object.defineProperty(obj, prop, {
  //             value: value, writable: false
  //         });
  //     zrUtil.isArray(obj[prop])
  //         && Object.freeze
  //         && Object.freeze(obj[prop]);
  // });
}

exports.parseClassType = parseClassType;
exports.enableClassExtend = enableClassExtend;
exports.enableClassCheck = enableClassCheck;
exports.enableClassManagement = enableClassManagement;
exports.setReadOnly = setReadOnly;

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var BoundingRect = __webpack_require__(30);

var _number = __webpack_require__(14);

var parsePercent = _number.parsePercent;

var formatUtil = __webpack_require__(33);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
// Layout helpers for each component positioning
var each = zrUtil.each;
/**
 * @public
 */

var LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];
/**
 * @public
 */

var HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];

function boxLayout(orient, group, gap, maxWidth, maxHeight) {
  var x = 0;
  var y = 0;

  if (maxWidth == null) {
    maxWidth = Infinity;
  }

  if (maxHeight == null) {
    maxHeight = Infinity;
  }

  var currentLineMaxSize = 0;
  group.eachChild(function (child, idx) {
    var position = child.position;
    var rect = child.getBoundingRect();
    var nextChild = group.childAt(idx + 1);
    var nextChildRect = nextChild && nextChild.getBoundingRect();
    var nextX;
    var nextY;

    if (orient === 'horizontal') {
      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);
      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group
      // FIXME compare before adding gap?

      if (nextX > maxWidth || child.newline) {
        x = 0;
        nextX = moveX;
        y += currentLineMaxSize + gap;
        currentLineMaxSize = rect.height;
      } else {
        // FIXME: consider rect.y is not `0`?
        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);
      }
    } else {
      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);
      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group

      if (nextY > maxHeight || child.newline) {
        x += currentLineMaxSize + gap;
        y = 0;
        nextY = moveY;
        currentLineMaxSize = rect.width;
      } else {
        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);
      }
    }

    if (child.newline) {
      return;
    }

    position[0] = x;
    position[1] = y;
    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;
  });
}
/**
 * VBox or HBox layouting
 * @param {string} orient
 * @param {module:zrender/container/Group} group
 * @param {number} gap
 * @param {number} [width=Infinity]
 * @param {number} [height=Infinity]
 */


var box = boxLayout;
/**
 * VBox layouting
 * @param {module:zrender/container/Group} group
 * @param {number} gap
 * @param {number} [width=Infinity]
 * @param {number} [height=Infinity]
 */

var vbox = zrUtil.curry(boxLayout, 'vertical');
/**
 * HBox layouting
 * @param {module:zrender/container/Group} group
 * @param {number} gap
 * @param {number} [width=Infinity]
 * @param {number} [height=Infinity]
 */

var hbox = zrUtil.curry(boxLayout, 'horizontal');
/**
 * If x or x2 is not specified or 'center' 'left' 'right',
 * the width would be as long as possible.
 * If y or y2 is not specified or 'middle' 'top' 'bottom',
 * the height would be as long as possible.
 *
 * @param {Object} positionInfo
 * @param {number|string} [positionInfo.x]
 * @param {number|string} [positionInfo.y]
 * @param {number|string} [positionInfo.x2]
 * @param {number|string} [positionInfo.y2]
 * @param {Object} containerRect {width, height}
 * @param {string|number} margin
 * @return {Object} {width, height}
 */

function getAvailableSize(positionInfo, containerRect, margin) {
  var containerWidth = containerRect.width;
  var containerHeight = containerRect.height;
  var x = parsePercent(positionInfo.x, containerWidth);
  var y = parsePercent(positionInfo.y, containerHeight);
  var x2 = parsePercent(positionInfo.x2, containerWidth);
  var y2 = parsePercent(positionInfo.y2, containerHeight);
  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);
  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);
  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);
  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);
  margin = formatUtil.normalizeCssArray(margin || 0);
  return {
    width: Math.max(x2 - x - margin[1] - margin[3], 0),
    height: Math.max(y2 - y - margin[0] - margin[2], 0)
  };
}
/**
 * Parse position info.
 *
 * @param {Object} positionInfo
 * @param {number|string} [positionInfo.left]
 * @param {number|string} [positionInfo.top]
 * @param {number|string} [positionInfo.right]
 * @param {number|string} [positionInfo.bottom]
 * @param {number|string} [positionInfo.width]
 * @param {number|string} [positionInfo.height]
 * @param {number|string} [positionInfo.aspect] Aspect is width / height
 * @param {Object} containerRect
 * @param {string|number} [margin]
 *
 * @return {module:zrender/core/BoundingRect}
 */


function getLayoutRect(positionInfo, containerRect, margin) {
  margin = formatUtil.normalizeCssArray(margin || 0);
  var containerWidth = containerRect.width;
  var containerHeight = containerRect.height;
  var left = parsePercent(positionInfo.left, containerWidth);
  var top = parsePercent(positionInfo.top, containerHeight);
  var right = parsePercent(positionInfo.right, containerWidth);
  var bottom = parsePercent(positionInfo.bottom, containerHeight);
  var width = parsePercent(positionInfo.width, containerWidth);
  var height = parsePercent(positionInfo.height, containerHeight);
  var verticalMargin = margin[2] + margin[0];
  var horizontalMargin = margin[1] + margin[3];
  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right

  if (isNaN(width)) {
    width = containerWidth - right - horizontalMargin - left;
  }

  if (isNaN(height)) {
    height = containerHeight - bottom - verticalMargin - top;
  }

  if (aspect != null) {
    // If width and height are not given
    // 1. Graph should not exceeds the container
    // 2. Aspect must be keeped
    // 3. Graph should take the space as more as possible
    // FIXME
    // Margin is not considered, because there is no case that both
    // using margin and aspect so far.
    if (isNaN(width) && isNaN(height)) {
      if (aspect > containerWidth / containerHeight) {
        width = containerWidth * 0.8;
      } else {
        height = containerHeight * 0.8;
      }
    } // Calculate width or height with given aspect


    if (isNaN(width)) {
      width = aspect * height;
    }

    if (isNaN(height)) {
      height = width / aspect;
    }
  } // If left is not specified, calculate left from right and width


  if (isNaN(left)) {
    left = containerWidth - right - width - horizontalMargin;
  }

  if (isNaN(top)) {
    top = containerHeight - bottom - height - verticalMargin;
  } // Align left and top


  switch (positionInfo.left || positionInfo.right) {
    case 'center':
      left = containerWidth / 2 - width / 2 - margin[3];
      break;

    case 'right':
      left = containerWidth - width - horizontalMargin;
      break;
  }

  switch (positionInfo.top || positionInfo.bottom) {
    case 'middle':
    case 'center':
      top = containerHeight / 2 - height / 2 - margin[0];
      break;

    case 'bottom':
      top = containerHeight - height - verticalMargin;
      break;
  } // If something is wrong and left, top, width, height are calculated as NaN


  left = left || 0;
  top = top || 0;

  if (isNaN(width)) {
    // Width may be NaN if only one value is given except width
    width = containerWidth - horizontalMargin - left - (right || 0);
  }

  if (isNaN(height)) {
    // Height may be NaN if only one value is given except height
    height = containerHeight - verticalMargin - top - (bottom || 0);
  }

  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);
  rect.margin = margin;
  return rect;
}
/**
 * Position a zr element in viewport
 *  Group position is specified by either
 *  {left, top}, {right, bottom}
 *  If all properties exists, right and bottom will be igonred.
 *
 * Logic:
 *     1. Scale (against origin point in parent coord)
 *     2. Rotate (against origin point in parent coord)
 *     3. Traslate (with el.position by this method)
 * So this method only fixes the last step 'Traslate', which does not affect
 * scaling and rotating.
 *
 * If be called repeatly with the same input el, the same result will be gotten.
 *
 * @param {module:zrender/Element} el Should have `getBoundingRect` method.
 * @param {Object} positionInfo
 * @param {number|string} [positionInfo.left]
 * @param {number|string} [positionInfo.top]
 * @param {number|string} [positionInfo.right]
 * @param {number|string} [positionInfo.bottom]
 * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'
 * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'
 * @param {Object} containerRect
 * @param {string|number} margin
 * @param {Object} [opt]
 * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.
 * @param {Array.<number>} [opt.boundingMode='all']
 *        Specify how to calculate boundingRect when locating.
 *        'all': Position the boundingRect that is transformed and uioned
 *               both itself and its descendants.
 *               This mode simplies confine the elements in the bounding
 *               of their container (e.g., using 'right: 0').
 *        'raw': Position the boundingRect that is not transformed and only itself.
 *               This mode is useful when you want a element can overflow its
 *               container. (Consider a rotated circle needs to be located in a corner.)
 *               In this mode positionInfo.width/height can only be number.
 */


function positionElement(el, positionInfo, containerRect, margin, opt) {
  var h = !opt || !opt.hv || opt.hv[0];
  var v = !opt || !opt.hv || opt.hv[1];
  var boundingMode = opt && opt.boundingMode || 'all';

  if (!h && !v) {
    return;
  }

  var rect;

  if (boundingMode === 'raw') {
    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();
  } else {
    rect = el.getBoundingRect();

    if (el.needLocalTransform()) {
      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,
      // which should not be modified.

      rect = rect.clone();
      rect.applyTransform(transform);
    }
  } // The real width and height can not be specified but calculated by the given el.


  positionInfo = getLayoutRect(zrUtil.defaults({
    width: rect.width,
    height: rect.height
  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform
  // (see zrender/core/Transformable#getLocalTransform),
  // we can just only modify el.position to get final result.

  var elPos = el.position;
  var dx = h ? positionInfo.x - rect.x : 0;
  var dy = v ? positionInfo.y - rect.y : 0;
  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);
}
/**
 * @param {Object} option Contains some of the properties in HV_NAMES.
 * @param {number} hvIdx 0: horizontal; 1: vertical.
 */


function sizeCalculable(option, hvIdx) {
  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;
}
/**
 * Consider Case:
 * When defulat option has {left: 0, width: 100}, and we set {right: 0}
 * through setOption or media query, using normal zrUtil.merge will cause
 * {right: 0} does not take effect.
 *
 * @example
 * ComponentModel.extend({
 *     init: function () {
 *         ...
 *         var inputPositionParams = layout.getLayoutParams(option);
 *         this.mergeOption(inputPositionParams);
 *     },
 *     mergeOption: function (newOption) {
 *         newOption && zrUtil.merge(thisOption, newOption, true);
 *         layout.mergeLayoutParam(thisOption, newOption);
 *     }
 * });
 *
 * @param {Object} targetOption
 * @param {Object} newOption
 * @param {Object|string} [opt]
 * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components
 *  that width (or height) should not be calculated by left and right (or top and bottom).
 */


function mergeLayoutParam(targetOption, newOption, opt) {
  !zrUtil.isObject(opt) && (opt = {});
  var ignoreSize = opt.ignoreSize;
  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);
  var hResult = merge(HV_NAMES[0], 0);
  var vResult = merge(HV_NAMES[1], 1);
  copy(HV_NAMES[0], targetOption, hResult);
  copy(HV_NAMES[1], targetOption, vResult);

  function merge(names, hvIdx) {
    var newParams = {};
    var newValueCount = 0;
    var merged = {};
    var mergedValueCount = 0;
    var enoughParamNumber = 2;
    each(names, function (name) {
      merged[name] = targetOption[name];
    });
    each(names, function (name) {
      // Consider case: newOption.width is null, which is
      // set by user for removing width setting.
      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);
      hasValue(newParams, name) && newValueCount++;
      hasValue(merged, name) && mergedValueCount++;
    });

    if (ignoreSize[hvIdx]) {
      // Only one of left/right is premitted to exist.
      if (hasValue(newOption, names[1])) {
        merged[names[2]] = null;
      } else if (hasValue(newOption, names[2])) {
        merged[names[1]] = null;
      }

      return merged;
    } // Case: newOption: {width: ..., right: ...},
    // or targetOption: {right: ...} and newOption: {width: ...},
    // There is no conflict when merged only has params count
    // little than enoughParamNumber.


    if (mergedValueCount === enoughParamNumber || !newValueCount) {
      return merged;
    } // Case: newOption: {width: ..., right: ...},
    // Than we can make sure user only want those two, and ignore
    // all origin params in targetOption.
    else if (newValueCount >= enoughParamNumber) {
        return newParams;
      } else {
        // Chose another param from targetOption by priority.
        for (var i = 0; i < names.length; i++) {
          var name = names[i];

          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {
            newParams[name] = targetOption[name];
            break;
          }
        }

        return newParams;
      }
  }

  function hasProp(obj, name) {
    return obj.hasOwnProperty(name);
  }

  function hasValue(obj, name) {
    return obj[name] != null && obj[name] !== 'auto';
  }

  function copy(names, target, source) {
    each(names, function (name) {
      target[name] = source[name];
    });
  }
}
/**
 * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.
 * @param {Object} source
 * @return {Object} Result contains those props.
 */


function getLayoutParams(source) {
  return copyLayoutParams({}, source);
}
/**
 * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.
 * @param {Object} source
 * @return {Object} Result contains those props.
 */


function copyLayoutParams(target, source) {
  source && target && each(LOCATION_PARAMS, function (name) {
    source.hasOwnProperty(name) && (target[name] = source[name]);
  });
  return target;
}

exports.LOCATION_PARAMS = LOCATION_PARAMS;
exports.HV_NAMES = HV_NAMES;
exports.box = box;
exports.vbox = vbox;
exports.hbox = hbox;
exports.getAvailableSize = getAvailableSize;
exports.getLayoutRect = getLayoutRect;
exports.positionElement = positionElement;
exports.sizeCalculable = sizeCalculable;
exports.mergeLayoutParam = mergeLayoutParam;
exports.getLayoutParams = getLayoutParams;
exports.copyLayoutParams = copyLayoutParams;

/***/ }),
/* 50 */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

var META = __webpack_require__(56)('meta');
var isObject = __webpack_require__(4);
var has = __webpack_require__(22);
var setDesc = __webpack_require__(8).f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !__webpack_require__(5)(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};


/***/ }),
/* 52 */
/***/ (function(module, exports) {

module.exports = false;


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

// 22.1.3.31 Array.prototype[@@unscopables]
var UNSCOPABLES = __webpack_require__(6)('unscopables');
var ArrayProto = Array.prototype;
if (ArrayProto[UNSCOPABLES] == undefined) __webpack_require__(23)(ArrayProto, UNSCOPABLES, {});
module.exports = function (key) {
  ArrayProto[UNSCOPABLES][key] = true;
};


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__(31);
var call = __webpack_require__(212);
var isArrayIter = __webpack_require__(141);
var anObject = __webpack_require__(2);
var toLength = __webpack_require__(10);
var getIterFn = __webpack_require__(80);
var BREAK = {};
var RETURN = {};
var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

var BoundingRect = __webpack_require__(30);

var imageHelper = __webpack_require__(113);

var _util = __webpack_require__(1);

var getContext = _util.getContext;
var extend = _util.extend;
var retrieve2 = _util.retrieve2;
var retrieve3 = _util.retrieve3;
var trim = _util.trim;
var textWidthCache = {};
var textWidthCacheCounter = 0;
var TEXT_CACHE_MAX = 5000;
var STYLE_REG = /\{([a-zA-Z0-9_]+)\|([^}]*)\}/g;
var DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.

var methods = {};

function $override(name, fn) {
  methods[name] = fn;
}
/**
 * @public
 * @param {string} text
 * @param {string} font
 * @return {number} width
 */


function getWidth(text, font) {
  font = font || DEFAULT_FONT;
  var key = text + ':' + font;

  if (textWidthCache[key]) {
    return textWidthCache[key];
  }

  var textLines = (text + '').split('\n');
  var width = 0;

  for (var i = 0, l = textLines.length; i < l; i++) {
    // textContain.measureText may be overrided in SVG or VML
    width = Math.max(measureText(textLines[i], font).width, width);
  }

  if (textWidthCacheCounter > TEXT_CACHE_MAX) {
    textWidthCacheCounter = 0;
    textWidthCache = {};
  }

  textWidthCacheCounter++;
  textWidthCache[key] = width;
  return width;
}
/**
 * @public
 * @param {string} text
 * @param {string} font
 * @param {string} [textAlign='left']
 * @param {string} [textVerticalAlign='top']
 * @param {Array.<number>} [textPadding]
 * @param {Object} [rich]
 * @param {Object} [truncate]
 * @return {Object} {x, y, width, height, lineHeight}
 */


function getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {
  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);
}

function getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {
  var contentBlock = parsePlainText(text, font, textPadding, truncate);
  var outerWidth = getWidth(text, font);

  if (textPadding) {
    outerWidth += textPadding[1] + textPadding[3];
  }

  var outerHeight = contentBlock.outerHeight;
  var x = adjustTextX(0, outerWidth, textAlign);
  var y = adjustTextY(0, outerHeight, textVerticalAlign);
  var rect = new BoundingRect(x, y, outerWidth, outerHeight);
  rect.lineHeight = contentBlock.lineHeight;
  return rect;
}

function getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {
  var contentBlock = parseRichText(text, {
    rich: rich,
    truncate: truncate,
    font: font,
    textAlign: textAlign,
    textPadding: textPadding
  });
  var outerWidth = contentBlock.outerWidth;
  var outerHeight = contentBlock.outerHeight;
  var x = adjustTextX(0, outerWidth, textAlign);
  var y = adjustTextY(0, outerHeight, textVerticalAlign);
  return new BoundingRect(x, y, outerWidth, outerHeight);
}
/**
 * @public
 * @param {number} x
 * @param {number} width
 * @param {string} [textAlign='left']
 * @return {number} Adjusted x.
 */


function adjustTextX(x, width, textAlign) {
  // FIXME Right to left language
  if (textAlign === 'right') {
    x -= width;
  } else if (textAlign === 'center') {
    x -= width / 2;
  }

  return x;
}
/**
 * @public
 * @param {number} y
 * @param {number} height
 * @param {string} [textVerticalAlign='top']
 * @return {number} Adjusted y.
 */


function adjustTextY(y, height, textVerticalAlign) {
  if (textVerticalAlign === 'middle') {
    y -= height / 2;
  } else if (textVerticalAlign === 'bottom') {
    y -= height;
  }

  return y;
}
/**
 * @public
 * @param {stirng} textPosition
 * @param {Object} rect {x, y, width, height}
 * @param {number} distance
 * @return {Object} {x, y, textAlign, textVerticalAlign}
 */


function adjustTextPositionOnRect(textPosition, rect, distance) {
  var x = rect.x;
  var y = rect.y;
  var height = rect.height;
  var width = rect.width;
  var halfHeight = height / 2;
  var textAlign = 'left';
  var textVerticalAlign = 'top';

  switch (textPosition) {
    case 'left':
      x -= distance;
      y += halfHeight;
      textAlign = 'right';
      textVerticalAlign = 'middle';
      break;

    case 'right':
      x += distance + width;
      y += halfHeight;
      textVerticalAlign = 'middle';
      break;

    case 'top':
      x += width / 2;
      y -= distance;
      textAlign = 'center';
      textVerticalAlign = 'bottom';
      break;

    case 'bottom':
      x += width / 2;
      y += height + distance;
      textAlign = 'center';
      break;

    case 'inside':
      x += width / 2;
      y += halfHeight;
      textAlign = 'center';
      textVerticalAlign = 'middle';
      break;

    case 'insideLeft':
      x += distance;
      y += halfHeight;
      textVerticalAlign = 'middle';
      break;

    case 'insideRight':
      x += width - distance;
      y += halfHeight;
      textAlign = 'right';
      textVerticalAlign = 'middle';
      break;

    case 'insideTop':
      x += width / 2;
      y += distance;
      textAlign = 'center';
      break;

    case 'insideBottom':
      x += width / 2;
      y += height - distance;
      textAlign = 'center';
      textVerticalAlign = 'bottom';
      break;

    case 'insideTopLeft':
      x += distance;
      y += distance;
      break;

    case 'insideTopRight':
      x += width - distance;
      y += distance;
      textAlign = 'right';
      break;

    case 'insideBottomLeft':
      x += distance;
      y += height - distance;
      textVerticalAlign = 'bottom';
      break;

    case 'insideBottomRight':
      x += width - distance;
      y += height - distance;
      textAlign = 'right';
      textVerticalAlign = 'bottom';
      break;
  }

  return {
    x: x,
    y: y,
    textAlign: textAlign,
    textVerticalAlign: textVerticalAlign
  };
}
/**
 * Show ellipsis if overflow.
 *
 * @public
 * @param  {string} text
 * @param  {string} containerWidth
 * @param  {string} font
 * @param  {number} [ellipsis='...']
 * @param  {Object} [options]
 * @param  {number} [options.maxIterations=3]
 * @param  {number} [options.minChar=0] If truncate result are less
 *                  then minChar, ellipsis will not show, which is
 *                  better for user hint in some cases.
 * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.
 * @return {string}
 */


function truncateText(text, containerWidth, font, ellipsis, options) {
  if (!containerWidth) {
    return '';
  }

  var textLines = (text + '').split('\n');
  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME
  // It is not appropriate that every line has '...' when truncate multiple lines.

  for (var i = 0, len = textLines.length; i < len; i++) {
    textLines[i] = truncateSingleLine(textLines[i], options);
  }

  return textLines.join('\n');
}

function prepareTruncateOptions(containerWidth, font, ellipsis, options) {
  options = extend({}, options);
  options.font = font;
  var ellipsis = retrieve2(ellipsis, '...');
  options.maxIterations = retrieve2(options.maxIterations, 2);
  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME
  // Other languages?

  options.cnCharWidth = getWidth('国', font); // FIXME
  // Consider proportional font?

  var ascCharWidth = options.ascCharWidth = getWidth('a', font);
  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.
  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.

  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.

  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {
    contentWidth -= ascCharWidth;
  }

  var ellipsisWidth = getWidth(ellipsis);

  if (ellipsisWidth > contentWidth) {
    ellipsis = '';
    ellipsisWidth = 0;
  }

  contentWidth = containerWidth - ellipsisWidth;
  options.ellipsis = ellipsis;
  options.ellipsisWidth = ellipsisWidth;
  options.contentWidth = contentWidth;
  options.containerWidth = containerWidth;
  return options;
}

function truncateSingleLine(textLine, options) {
  var containerWidth = options.containerWidth;
  var font = options.font;
  var contentWidth = options.contentWidth;

  if (!containerWidth) {
    return '';
  }

  var lineWidth = getWidth(textLine, font);

  if (lineWidth <= containerWidth) {
    return textLine;
  }

  for (var j = 0;; j++) {
    if (lineWidth <= contentWidth || j >= options.maxIterations) {
      textLine += options.ellipsis;
      break;
    }

    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;
    textLine = textLine.substr(0, subLength);
    lineWidth = getWidth(textLine, font);
  }

  if (textLine === '') {
    textLine = options.placeholder;
  }

  return textLine;
}

function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {
  var width = 0;
  var i = 0;

  for (var len = text.length; i < len && width < contentWidth; i++) {
    var charCode = text.charCodeAt(i);
    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;
  }

  return i;
}
/**
 * @public
 * @param {string} font
 * @return {number} line height
 */


function getLineHeight(font) {
  // FIXME A rough approach.
  return getWidth('国', font);
}
/**
 * @public
 * @param {string} text
 * @param {string} font
 * @return {Object} width
 */


function measureText(text, font) {
  return methods.measureText(text, font);
} // Avoid assign to an exported variable, for transforming to cjs.


methods.measureText = function (text, font) {
  var ctx = getContext();
  ctx.font = font || DEFAULT_FONT;
  return ctx.measureText(text);
};
/**
 * @public
 * @param {string} text
 * @param {string} font
 * @param {Object} [truncate]
 * @return {Object} block: {lineHeight, lines, height, outerHeight}
 *  Notice: for performance, do not calculate outerWidth util needed.
 */


function parsePlainText(text, font, padding, truncate) {
  text != null && (text += '');
  var lineHeight = getLineHeight(font);
  var lines = text ? text.split('\n') : [];
  var height = lines.length * lineHeight;
  var outerHeight = height;

  if (padding) {
    outerHeight += padding[0] + padding[2];
  }

  if (text && truncate) {
    var truncOuterHeight = truncate.outerHeight;
    var truncOuterWidth = truncate.outerWidth;

    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {
      text = '';
      lines = [];
    } else if (truncOuterWidth != null) {
      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {
        minChar: truncate.minChar,
        placeholder: truncate.placeholder
      }); // FIXME
      // It is not appropriate that every line has '...' when truncate multiple lines.

      for (var i = 0, len = lines.length; i < len; i++) {
        lines[i] = truncateSingleLine(lines[i], options);
      }
    }
  }

  return {
    lines: lines,
    height: height,
    outerHeight: outerHeight,
    lineHeight: lineHeight
  };
}
/**
 * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'
 * Also consider 'bbbb{a|xxx\nzzz}xxxx\naaaa'.
 *
 * @public
 * @param {string} text
 * @param {Object} style
 * @return {Object} block
 * {
 *      width,
 *      height,
 *      lines: [{
 *          lineHeight,
 *          width,
 *          tokens: [[{
 *              styleName,
 *              text,
 *              width,      // include textPadding
 *              height,     // include textPadding
 *              textWidth, // pure text width
 *              textHeight, // pure text height
 *              lineHeihgt,
 *              font,
 *              textAlign,
 *              textVerticalAlign
 *          }], [...], ...]
 *      }, ...]
 * }
 * If styleName is undefined, it is plain text.
 */


function parseRichText(text, style) {
  var contentBlock = {
    lines: [],
    width: 0,
    height: 0
  };
  text != null && (text += '');

  if (!text) {
    return contentBlock;
  }

  var lastIndex = STYLE_REG.lastIndex = 0;
  var result;

  while ((result = STYLE_REG.exec(text)) != null) {
    var matchedIndex = result.index;

    if (matchedIndex > lastIndex) {
      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));
    }

    pushTokens(contentBlock, result[2], result[1]);
    lastIndex = STYLE_REG.lastIndex;
  }

  if (lastIndex < text.length) {
    pushTokens(contentBlock, text.substring(lastIndex, text.length));
  }

  var lines = contentBlock.lines;
  var contentHeight = 0;
  var contentWidth = 0; // For `textWidth: 100%`

  var pendingList = [];
  var stlPadding = style.textPadding;
  var truncate = style.truncate;
  var truncateWidth = truncate && truncate.outerWidth;
  var truncateHeight = truncate && truncate.outerHeight;

  if (stlPadding) {
    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);
    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);
  } // Calculate layout info of tokens.


  for (var i = 0; i < lines.length; i++) {
    var line = lines[i];
    var lineHeight = 0;
    var lineWidth = 0;

    for (var j = 0; j < line.tokens.length; j++) {
      var token = line.tokens[j];
      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.

      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.

      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.

      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified
      // as box height of the block.
      tokenStyle.textHeight, getLineHeight(font));
      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);
      token.height = tokenHeight;
      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);
      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;
      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';

      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {
        return {
          lines: [],
          width: 0,
          height: 0
        };
      }

      token.textWidth = getWidth(token.text, font);
      var tokenWidth = tokenStyle.textWidth;
      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate
      // line when box width is needed to be auto.

      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {
        token.percentWidth = tokenWidth;
        pendingList.push(token);
        tokenWidth = 0; // Do not truncate in this case, because there is no user case
        // and it is too complicated.
      } else {
        if (tokenWidthNotSpecified) {
          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling
          // `getBoundingRect()` will not get correct result.

          var textBackgroundColor = tokenStyle.textBackgroundColor;
          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:
          // (1) If image is not loaded, it will be loaded at render phase and call
          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded
          // image, and then the right size will be calculated here at the next tick.
          // See `graphic/helper/text.js`.
          // (2) If image loaded, and `textBackgroundColor.image` is image src string,
          // use `imageHelper.findExistImage` to find cached image.
          // `imageHelper.findExistImage` will always be called here before
          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`
          // which ensures that image will not be rendered before correct size calcualted.

          if (bgImg) {
            bgImg = imageHelper.findExistImage(bgImg);

            if (imageHelper.isImageReady(bgImg)) {
              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);
            }
          }
        }

        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;
        tokenWidth += paddingW;
        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;

        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {
          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {
            token.text = '';
            token.textWidth = tokenWidth = 0;
          } else {
            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {
              minChar: truncate.minChar
            });
            token.textWidth = getWidth(token.text, font);
            tokenWidth = token.textWidth + paddingW;
          }
        }
      }

      lineWidth += token.width = tokenWidth;
      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));
    }

    line.width = lineWidth;
    line.lineHeight = lineHeight;
    contentHeight += lineHeight;
    contentWidth = Math.max(contentWidth, lineWidth);
  }

  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);
  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);

  if (stlPadding) {
    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];
    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];
  }

  for (var i = 0; i < pendingList.length; i++) {
    var token = pendingList[i];
    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.

    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;
  }

  return contentBlock;
}

function pushTokens(block, str, styleName) {
  var isEmptyStr = str === '';
  var strs = str.split('\n');
  var lines = block.lines;

  for (var i = 0; i < strs.length; i++) {
    var text = strs[i];
    var token = {
      styleName: styleName,
      text: text,
      isLineHolder: !text && !isEmptyStr
    }; // The first token should be appended to the last line.

    if (!i) {
      var tokens = (lines[lines.length - 1] || (lines[0] = {
        tokens: []
      })).tokens; // Consider cases:
      // (1) ''.split('\n') => ['', '\n', ''], the '' at the first item
      // (which is a placeholder) should be replaced by new token.
      // (2) A image backage, where token likes {a|}.
      // (3) A redundant '' will affect textAlign in line.
      // (4) tokens with the same tplName should not be merged, because
      // they should be displayed in different box (with border and padding).

      var tokensLen = tokens.length;
      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the "lineHolder" or
      // "emptyStr". Otherwise a redundant '' will affect textAlign in line.
      (text || !tokensLen || isEmptyStr) && tokens.push(token);
    } // Other tokens always start a new line.
    else {
        // If there is '', insert it as a placeholder.
        lines.push({
          tokens: [token]
        });
      }
  }
}

function makeFont(style) {
  // FIXME in node-canvas fontWeight is before fontStyle
  // Use `fontSize` `fontFamily` to check whether font properties are defined.
  var font = (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.
  style.fontFamily || 'sans-serif'].join(' ');
  return font && trim(font) || style.textFont || style.font;
}

exports.DEFAULT_FONT = DEFAULT_FONT;
exports.$override = $override;
exports.getWidth = getWidth;
exports.getBoundingRect = getBoundingRect;
exports.adjustTextX = adjustTextX;
exports.adjustTextY = adjustTextY;
exports.adjustTextPositionOnRect = adjustTextPositionOnRect;
exports.truncateText = truncateText;
exports.getLineHeight = getLineHeight;
exports.measureText = measureText;
exports.parsePlainText = parsePlainText;
exports.parseRichText = parseRichText;
exports.makeFont = makeFont;

/***/ }),
/* 56 */
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(39);
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = __webpack_require__(202);
var hiddenKeys = __webpack_require__(128).concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__(34);
var TAG = __webpack_require__(6)('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),
/* 60 */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(3);
var dP = __webpack_require__(8);
var DESCRIPTORS = __webpack_require__(9);
var SPECIES = __webpack_require__(6)('species');

module.exports = function (KEY) {
  var C = global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};


/***/ }),
/* 62 */
/***/ (function(module, exports) {

module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

var redefine = __webpack_require__(24);
module.exports = function (target, src, safe) {
  for (var key in src) redefine(target, key, src[key], safe);
  return target;
};


/***/ }),
/* 64 */
/***/ (function(module, exports) {

/**
 * 3x2矩阵操作类
 * @exports zrender/tool/matrix
 */
var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;
/**
 * Create a identity matrix.
 * @return {Float32Array|Array.<number>}
 */

function create() {
  var out = new ArrayCtor(6);
  identity(out);
  return out;
}
/**
 * 设置矩阵为单位矩阵
 * @param {Float32Array|Array.<number>} out
 */


function identity(out) {
  out[0] = 1;
  out[1] = 0;
  out[2] = 0;
  out[3] = 1;
  out[4] = 0;
  out[5] = 0;
  return out;
}
/**
 * 复制矩阵
 * @param {Float32Array|Array.<number>} out
 * @param {Float32Array|Array.<number>} m
 */


function copy(out, m) {
  out[0] = m[0];
  out[1] = m[1];
  out[2] = m[2];
  out[3] = m[3];
  out[4] = m[4];
  out[5] = m[5];
  return out;
}
/**
 * 矩阵相乘
 * @param {Float32Array|Array.<number>} out
 * @param {Float32Array|Array.<number>} m1
 * @param {Float32Array|Array.<number>} m2
 */


function mul(out, m1, m2) {
  // Consider matrix.mul(m, m2, m);
  // where out is the same as m2.
  // So use temp variable to escape error.
  var out0 = m1[0] * m2[0] + m1[2] * m2[1];
  var out1 = m1[1] * m2[0] + m1[3] * m2[1];
  var out2 = m1[0] * m2[2] + m1[2] * m2[3];
  var out3 = m1[1] * m2[2] + m1[3] * m2[3];
  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];
  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];
  out[0] = out0;
  out[1] = out1;
  out[2] = out2;
  out[3] = out3;
  out[4] = out4;
  out[5] = out5;
  return out;
}
/**
 * 平移变换
 * @param {Float32Array|Array.<number>} out
 * @param {Float32Array|Array.<number>} a
 * @param {Float32Array|Array.<number>} v
 */


function translate(out, a, v) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  out[4] = a[4] + v[0];
  out[5] = a[5] + v[1];
  return out;
}
/**
 * 旋转变换
 * @param {Float32Array|Array.<number>} out
 * @param {Float32Array|Array.<number>} a
 * @param {number} rad
 */


function rotate(out, a, rad) {
  var aa = a[0];
  var ac = a[2];
  var atx = a[4];
  var ab = a[1];
  var ad = a[3];
  var aty = a[5];
  var st = Math.sin(rad);
  var ct = Math.cos(rad);
  out[0] = aa * ct + ab * st;
  out[1] = -aa * st + ab * ct;
  out[2] = ac * ct + ad * st;
  out[3] = -ac * st + ct * ad;
  out[4] = ct * atx + st * aty;
  out[5] = ct * aty - st * atx;
  return out;
}
/**
 * 缩放变换
 * @param {Float32Array|Array.<number>} out
 * @param {Float32Array|Array.<number>} a
 * @param {Float32Array|Array.<number>} v
 */


function scale(out, a, v) {
  var vx = v[0];
  var vy = v[1];
  out[0] = a[0] * vx;
  out[1] = a[1] * vy;
  out[2] = a[2] * vx;
  out[3] = a[3] * vy;
  out[4] = a[4] * vx;
  out[5] = a[5] * vy;
  return out;
}
/**
 * 求逆矩阵
 * @param {Float32Array|Array.<number>} out
 * @param {Float32Array|Array.<number>} a
 */


function invert(out, a) {
  var aa = a[0];
  var ac = a[2];
  var atx = a[4];
  var ab = a[1];
  var ad = a[3];
  var aty = a[5];
  var det = aa * ad - ab * ac;

  if (!det) {
    return null;
  }

  det = 1.0 / det;
  out[0] = ad * det;
  out[1] = -ab * det;
  out[2] = -ac * det;
  out[3] = aa * det;
  out[4] = (ac * aty - ad * atx) * det;
  out[5] = (ab * atx - aa * aty) * det;
  return out;
}
/**
 * Clone a new matrix.
 * @param {Float32Array|Array.<number>} a
 */


function clone(a) {
  var b = create();
  copy(b, a);
  return b;
}

exports.create = create;
exports.identity = identity;
exports.copy = copy;
exports.mul = mul;
exports.translate = translate;
exports.rotate = rotate;
exports.scale = scale;
exports.invert = invert;
exports.clone = clone;

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

var _vector = __webpack_require__(17);

var v2Create = _vector.create;
var v2DistSquare = _vector.distSquare;

/**
 * 曲线辅助模块
 * @module zrender/core/curve
 * @author pissang(https://www.github.com/pissang)
 */
var mathPow = Math.pow;
var mathSqrt = Math.sqrt;
var EPSILON = 1e-8;
var EPSILON_NUMERIC = 1e-4;
var THREE_SQRT = mathSqrt(3);
var ONE_THIRD = 1 / 3; // 临时变量

var _v0 = v2Create();

var _v1 = v2Create();

var _v2 = v2Create();

function isAroundZero(val) {
  return val > -EPSILON && val < EPSILON;
}

function isNotAroundZero(val) {
  return val > EPSILON || val < -EPSILON;
}
/**
 * 计算三次贝塞尔值
 * @memberOf module:zrender/core/curve
 * @param  {number} p0
 * @param  {number} p1
 * @param  {number} p2
 * @param  {number} p3
 * @param  {number} t
 * @return {number}
 */


function cubicAt(p0, p1, p2, p3, t) {
  var onet = 1 - t;
  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);
}
/**
 * 计算三次贝塞尔导数值
 * @memberOf module:zrender/core/curve
 * @param  {number} p0
 * @param  {number} p1
 * @param  {number} p2
 * @param  {number} p3
 * @param  {number} t
 * @return {number}
 */


function cubicDerivativeAt(p0, p1, p2, p3, t) {
  var onet = 1 - t;
  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);
}
/**
 * 计算三次贝塞尔方程根，使用盛金公式
 * @memberOf module:zrender/core/curve
 * @param  {number} p0
 * @param  {number} p1
 * @param  {number} p2
 * @param  {number} p3
 * @param  {number} val
 * @param  {Array.<number>} roots
 * @return {number} 有效根数目
 */


function cubicRootAt(p0, p1, p2, p3, val, roots) {
  // Evaluate roots of cubic functions
  var a = p3 + 3 * (p1 - p2) - p0;
  var b = 3 * (p2 - p1 * 2 + p0);
  var c = 3 * (p1 - p0);
  var d = p0 - val;
  var A = b * b - 3 * a * c;
  var B = b * c - 9 * a * d;
  var C = c * c - 3 * b * d;
  var n = 0;

  if (isAroundZero(A) && isAroundZero(B)) {
    if (isAroundZero(b)) {
      roots[0] = 0;
    } else {
      var t1 = -c / b; //t1, t2, t3, b is not zero

      if (t1 >= 0 && t1 <= 1) {
        roots[n++] = t1;
      }
    }
  } else {
    var disc = B * B - 4 * A * C;

    if (isAroundZero(disc)) {
      var K = B / A;
      var t1 = -b / a + K; // t1, a is not zero

      var t2 = -K / 2; // t2, t3

      if (t1 >= 0 && t1 <= 1) {
        roots[n++] = t1;
      }

      if (t2 >= 0 && t2 <= 1) {
        roots[n++] = t2;
      }
    } else if (disc > 0) {
      var discSqrt = mathSqrt(disc);
      var Y1 = A * b + 1.5 * a * (-B + discSqrt);
      var Y2 = A * b + 1.5 * a * (-B - discSqrt);

      if (Y1 < 0) {
        Y1 = -mathPow(-Y1, ONE_THIRD);
      } else {
        Y1 = mathPow(Y1, ONE_THIRD);
      }

      if (Y2 < 0) {
        Y2 = -mathPow(-Y2, ONE_THIRD);
      } else {
        Y2 = mathPow(Y2, ONE_THIRD);
      }

      var t1 = (-b - (Y1 + Y2)) / (3 * a);

      if (t1 >= 0 && t1 <= 1) {
        roots[n++] = t1;
      }
    } else {
      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));
      var theta = Math.acos(T) / 3;
      var ASqrt = mathSqrt(A);
      var tmp = Math.cos(theta);
      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);
      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);
      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);

      if (t1 >= 0 && t1 <= 1) {
        roots[n++] = t1;
      }

      if (t2 >= 0 && t2 <= 1) {
        roots[n++] = t2;
      }

      if (t3 >= 0 && t3 <= 1) {
        roots[n++] = t3;
      }
    }
  }

  return n;
}
/**
 * 计算三次贝塞尔方程极限值的位置
 * @memberOf module:zrender/core/curve
 * @param  {number} p0
 * @param  {number} p1
 * @param  {number} p2
 * @param  {number} p3
 * @param  {Array.<number>} extrema
 * @return {number} 有效数目
 */


function cubicExtrema(p0, p1, p2, p3, extrema) {
  var b = 6 * p2 - 12 * p1 + 6 * p0;
  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;
  var c = 3 * p1 - 3 * p0;
  var n = 0;

  if (isAroundZero(a)) {
    if (isNotAroundZero(b)) {
      var t1 = -c / b;

      if (t1 >= 0 && t1 <= 1) {
        extrema[n++] = t1;
      }
    }
  } else {
    var disc = b * b - 4 * a * c;

    if (isAroundZero(disc)) {
      extrema[0] = -b / (2 * a);
    } else if (disc > 0) {
      var discSqrt = mathSqrt(disc);
      var t1 = (-b + discSqrt) / (2 * a);
      var t2 = (-b - discSqrt) / (2 * a);

      if (t1 >= 0 && t1 <= 1) {
        extrema[n++] = t1;
      }

      if (t2 >= 0 && t2 <= 1) {
        extrema[n++] = t2;
      }
    }
  }

  return n;
}
/**
 * 细分三次贝塞尔曲线
 * @memberOf module:zrender/core/curve
 * @param  {number} p0
 * @param  {number} p1
 * @param  {number} p2
 * @param  {number} p3
 * @param  {number} t
 * @param  {Array.<number>} out
 */


function cubicSubdivide(p0, p1, p2, p3, t, out) {
  var p01 = (p1 - p0) * t + p0;
  var p12 = (p2 - p1) * t + p1;
  var p23 = (p3 - p2) * t + p2;
  var p012 = (p12 - p01) * t + p01;
  var p123 = (p23 - p12) * t + p12;
  var p0123 = (p123 - p012) * t + p012; // Seg0

  out[0] = p0;
  out[1] = p01;
  out[2] = p012;
  out[3] = p0123; // Seg1

  out[4] = p0123;
  out[5] = p123;
  out[6] = p23;
  out[7] = p3;
}
/**
 * 投射点到三次贝塞尔曲线上，返回投射距离。
 * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。
 * @param {number} x0
 * @param {number} y0
 * @param {number} x1
 * @param {number} y1
 * @param {number} x2
 * @param {number} y2
 * @param {number} x3
 * @param {number} y3
 * @param {number} x
 * @param {number} y
 * @param {Array.<number>} [out] 投射点
 * @return {number}
 */


function cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {
  // http://pomax.github.io/bezierinfo/#projections
  var t;
  var interval = 0.005;
  var d = Infinity;
  var prev;
  var next;
  var d1;
  var d2;
  _v0[0] = x;
  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值
  // PENDING

  for (var _t = 0; _t < 1; _t += 0.05) {
    _v1[0] = cubicAt(x0, x1, x2, x3, _t);
    _v1[1] = cubicAt(y0, y1, y2, y3, _t);
    d1 = v2DistSquare(_v0, _v1);

    if (d1 < d) {
      t = _t;
      d = d1;
    }
  }

  d = Infinity; // At most 32 iteration

  for (var i = 0; i < 32; i++) {
    if (interval < EPSILON_NUMERIC) {
      break;
    }

    prev = t - interval;
    next = t + interval; // t - interval

    _v1[0] = cubicAt(x0, x1, x2, x3, prev);
    _v1[1] = cubicAt(y0, y1, y2, y3, prev);
    d1 = v2DistSquare(_v1, _v0);

    if (prev >= 0 && d1 < d) {
      t = prev;
      d = d1;
    } else {
      // t + interval
      _v2[0] = cubicAt(x0, x1, x2, x3, next);
      _v2[1] = cubicAt(y0, y1, y2, y3, next);
      d2 = v2DistSquare(_v2, _v0);

      if (next <= 1 && d2 < d) {
        t = next;
        d = d2;
      } else {
        interval *= 0.5;
      }
    }
  } // t


  if (out) {
    out[0] = cubicAt(x0, x1, x2, x3, t);
    out[1] = cubicAt(y0, y1, y2, y3, t);
  } // console.log(interval, i);


  return mathSqrt(d);
}
/**
 * 计算二次方贝塞尔值
 * @param  {number} p0
 * @param  {number} p1
 * @param  {number} p2
 * @param  {number} t
 * @return {number}
 */


function quadraticAt(p0, p1, p2, t) {
  var onet = 1 - t;
  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;
}
/**
 * 计算二次方贝塞尔导数值
 * @param  {number} p0
 * @param  {number} p1
 * @param  {number} p2
 * @param  {number} t
 * @return {number}
 */


function quadraticDerivativeAt(p0, p1, p2, t) {
  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));
}
/**
 * 计算二次方贝塞尔方程根
 * @param  {number} p0
 * @param  {number} p1
 * @param  {number} p2
 * @param  {number} t
 * @param  {Array.<number>} roots
 * @return {number} 有效根数目
 */


function quadraticRootAt(p0, p1, p2, val, roots) {
  var a = p0 - 2 * p1 + p2;
  var b = 2 * (p1 - p0);
  var c = p0 - val;
  var n = 0;

  if (isAroundZero(a)) {
    if (isNotAroundZero(b)) {
      var t1 = -c / b;

      if (t1 >= 0 && t1 <= 1) {
        roots[n++] = t1;
      }
    }
  } else {
    var disc = b * b - 4 * a * c;

    if (isAroundZero(disc)) {
      var t1 = -b / (2 * a);

      if (t1 >= 0 && t1 <= 1) {
        roots[n++] = t1;
      }
    } else if (disc > 0) {
      var discSqrt = mathSqrt(disc);
      var t1 = (-b + discSqrt) / (2 * a);
      var t2 = (-b - discSqrt) / (2 * a);

      if (t1 >= 0 && t1 <= 1) {
        roots[n++] = t1;
      }

      if (t2 >= 0 && t2 <= 1) {
        roots[n++] = t2;
      }
    }
  }

  return n;
}
/**
 * 计算二次贝塞尔方程极限值
 * @memberOf module:zrender/core/curve
 * @param  {number} p0
 * @param  {number} p1
 * @param  {number} p2
 * @return {number}
 */


function quadraticExtremum(p0, p1, p2) {
  var divider = p0 + p2 - 2 * p1;

  if (divider === 0) {
    // p1 is center of p0 and p2
    return 0.5;
  } else {
    return (p0 - p1) / divider;
  }
}
/**
 * 细分二次贝塞尔曲线
 * @memberOf module:zrender/core/curve
 * @param  {number} p0
 * @param  {number} p1
 * @param  {number} p2
 * @param  {number} t
 * @param  {Array.<number>} out
 */


function quadraticSubdivide(p0, p1, p2, t, out) {
  var p01 = (p1 - p0) * t + p0;
  var p12 = (p2 - p1) * t + p1;
  var p012 = (p12 - p01) * t + p01; // Seg0

  out[0] = p0;
  out[1] = p01;
  out[2] = p012; // Seg1

  out[3] = p012;
  out[4] = p12;
  out[5] = p2;
}
/**
 * 投射点到二次贝塞尔曲线上，返回投射距离。
 * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。
 * @param {number} x0
 * @param {number} y0
 * @param {number} x1
 * @param {number} y1
 * @param {number} x2
 * @param {number} y2
 * @param {number} x
 * @param {number} y
 * @param {Array.<number>} out 投射点
 * @return {number}
 */


function quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {
  // http://pomax.github.io/bezierinfo/#projections
  var t;
  var interval = 0.005;
  var d = Infinity;
  _v0[0] = x;
  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值
  // PENDING

  for (var _t = 0; _t < 1; _t += 0.05) {
    _v1[0] = quadraticAt(x0, x1, x2, _t);
    _v1[1] = quadraticAt(y0, y1, y2, _t);
    var d1 = v2DistSquare(_v0, _v1);

    if (d1 < d) {
      t = _t;
      d = d1;
    }
  }

  d = Infinity; // At most 32 iteration

  for (var i = 0; i < 32; i++) {
    if (interval < EPSILON_NUMERIC) {
      break;
    }

    var prev = t - interval;
    var next = t + interval; // t - interval

    _v1[0] = quadraticAt(x0, x1, x2, prev);
    _v1[1] = quadraticAt(y0, y1, y2, prev);
    var d1 = v2DistSquare(_v1, _v0);

    if (prev >= 0 && d1 < d) {
      t = prev;
      d = d1;
    } else {
      // t + interval
      _v2[0] = quadraticAt(x0, x1, x2, next);
      _v2[1] = quadraticAt(y0, y1, y2, next);
      var d2 = v2DistSquare(_v2, _v0);

      if (next <= 1 && d2 < d) {
        t = next;
        d = d2;
      } else {
        interval *= 0.5;
      }
    }
  } // t


  if (out) {
    out[0] = quadraticAt(x0, x1, x2, t);
    out[1] = quadraticAt(y0, y1, y2, t);
  } // console.log(interval, i);


  return mathSqrt(d);
}

exports.cubicAt = cubicAt;
exports.cubicDerivativeAt = cubicDerivativeAt;
exports.cubicRootAt = cubicRootAt;
exports.cubicExtrema = cubicExtrema;
exports.cubicSubdivide = cubicSubdivide;
exports.cubicProjectPoint = cubicProjectPoint;
exports.quadraticAt = quadraticAt;
exports.quadraticDerivativeAt = quadraticDerivativeAt;
exports.quadraticRootAt = quadraticRootAt;
exports.quadraticExtremum = quadraticExtremum;
exports.quadraticSubdivide = quadraticSubdivide;
exports.quadraticProjectPoint = quadraticProjectPoint;

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

var _config = __webpack_require__(16);

var __DEV__ = _config.__DEV__;

var _util = __webpack_require__(1);

var isTypedArray = _util.isTypedArray;
var extend = _util.extend;
var assert = _util.assert;
var each = _util.each;
var isObject = _util.isObject;

var _model = __webpack_require__(7);

var getDataItemValue = _model.getDataItemValue;
var isDataItemOption = _model.isDataItemOption;

var _number = __webpack_require__(14);

var parseDate = _number.parseDate;

var Source = __webpack_require__(76);

var _sourceType = __webpack_require__(77);

var SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;
var SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;
var SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;
var SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
// TODO
// ??? refactor? check the outer usage of data provider.
// merge with defaultDimValueGetter?

/**
 * If normal array used, mutable chunk size is supported.
 * If typed array used, chunk size must be fixed.
 */
function DefaultDataProvider(source, dimSize) {
  if (!Source.isInstance(source)) {
    source = Source.seriesDataToSource(source);
  }

  this._source = source;
  var data = this._data = source.data;
  var sourceFormat = source.sourceFormat; // Typed array. TODO IE10+?

  if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {
    this._offset = 0;
    this._dimSize = dimSize;
    this._data = data;
  }

  var methods = providerMethods[sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + source.seriesLayoutBy : sourceFormat];
  extend(this, methods);
}

var providerProto = DefaultDataProvider.prototype; // If data is pure without style configuration

providerProto.pure = false; // If data is persistent and will not be released after use.

providerProto.persistent = true; // ???! FIXME legacy data provider do not has method getSource

providerProto.getSource = function () {
  return this._source;
};

var providerMethods = {
  'arrayRows_column': {
    pure: true,
    count: function () {
      return Math.max(0, this._data.length - this._source.startIndex);
    },
    getItem: function (idx) {
      return this._data[idx + this._source.startIndex];
    },
    appendData: appendDataSimply
  },
  'arrayRows_row': {
    pure: true,
    count: function () {
      var row = this._data[0];
      return row ? Math.max(0, row.length - this._source.startIndex) : 0;
    },
    getItem: function (idx) {
      idx += this._source.startIndex;
      var item = [];
      var data = this._data;

      for (var i = 0; i < data.length; i++) {
        var row = data[i];
        item.push(row ? row[idx] : null);
      }

      return item;
    },
    appendData: function () {
      throw new Error('Do not support appendData when set seriesLayoutBy: "row".');
    }
  },
  'objectRows': {
    pure: true,
    count: countSimply,
    getItem: getItemSimply,
    appendData: appendDataSimply
  },
  'keyedColumns': {
    pure: true,
    count: function () {
      var dimName = this._source.dimensionsDefine[0].name;
      var col = this._data[dimName];
      return col ? col.length : 0;
    },
    getItem: function (idx) {
      var item = [];
      var dims = this._source.dimensionsDefine;

      for (var i = 0; i < dims.length; i++) {
        var col = this._data[dims[i].name];
        item.push(col ? col[idx] : null);
      }

      return item;
    },
    appendData: function (newData) {
      var data = this._data;
      each(newData, function (newCol, key) {
        var oldCol = data[key] || (data[key] = []);

        for (var i = 0; i < (newCol || []).length; i++) {
          oldCol.push(newCol[i]);
        }
      });
    }
  },
  'original': {
    count: countSimply,
    getItem: getItemSimply,
    appendData: appendDataSimply
  },
  'typedArray': {
    persistent: false,
    pure: true,
    count: function () {
      return this._data ? this._data.length / this._dimSize : 0;
    },
    getItem: function (idx, out) {
      idx = idx - this._offset;
      out = out || [];
      var offset = this._dimSize * idx;

      for (var i = 0; i < this._dimSize; i++) {
        out[i] = this._data[offset + i];
      }

      return out;
    },
    appendData: function (newData) {
      this._data = newData;
    },
    // Clean self if data is already used.
    clean: function () {
      // PENDING
      this._offset += this.count();
      this._data = null;
    }
  }
};

function countSimply() {
  return this._data.length;
}

function getItemSimply(idx) {
  return this._data[idx];
}

function appendDataSimply(newData) {
  for (var i = 0; i < newData.length; i++) {
    this._data.push(newData[i]);
  }
}

var rawValueGetters = {
  arrayRows: getRawValueSimply,
  objectRows: function (dataItem, dataIndex, dimIndex, dimName) {
    return dimIndex != null ? dataItem[dimName] : dataItem;
  },
  keyedColumns: getRawValueSimply,
  original: function (dataItem, dataIndex, dimIndex, dimName) {
    // FIXME
    // In some case (markpoint in geo (geo-map.html)), dataItem
    // is {coord: [...]}
    var value = getDataItemValue(dataItem);
    return dimIndex == null || !(value instanceof Array) ? value : value[dimIndex];
  },
  typedArray: getRawValueSimply
};

function getRawValueSimply(dataItem, dataIndex, dimIndex, dimName) {
  return dimIndex != null ? dataItem[dimIndex] : dataItem;
}

var defaultDimValueGetters = {
  arrayRows: getDimValueSimply,
  objectRows: function (dataItem, dimName, dataIndex, dimIndex) {
    return converDataValue(dataItem[dimName], this._dimensionInfos[dimName]);
  },
  keyedColumns: getDimValueSimply,
  original: function (dataItem, dimName, dataIndex, dimIndex) {
    // Performance sensitive, do not use modelUtil.getDataItemValue.
    // If dataItem is an plain object with no value field, the var `value`
    // will be assigned with the object, but it will be tread correctly
    // in the `convertDataValue`.
    var value = dataItem && (dataItem.value == null ? dataItem : dataItem.value); // If any dataItem is like { value: 10 }

    if (!this._rawData.pure && isDataItemOption(dataItem)) {
      this.hasItemOption = true;
    }

    return converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.
    : value, this._dimensionInfos[dimName]);
  },
  typedArray: function (dataItem, dimName, dataIndex, dimIndex) {
    return dataItem[dimIndex];
  }
};

function getDimValueSimply(dataItem, dimName, dataIndex, dimIndex) {
  return converDataValue(dataItem[dimIndex], this._dimensionInfos[dimName]);
}
/**
 * This helper method convert value in data.
 * @param {string|number|Date} value
 * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.
 *        If "dimInfo.ordinalParseAndSave", ordinal value can be parsed.
 */


function converDataValue(value, dimInfo) {
  // Performance sensitive.
  var dimType = dimInfo && dimInfo.type;

  if (dimType === 'ordinal') {
    // If given value is a category string
    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;
    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;
  }

  if (dimType === 'time' // spead up when using timestamp
  && typeof value !== 'number' && value != null && value !== '-') {
    value = +parseDate(value);
  } // dimType defaults 'number'.
  // If dimType is not ordinal and value is null or undefined or NaN or '-',
  // parse to NaN.


  return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN
  // If object, also parse to NaN
  : +value;
} // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,
// Consider persistent.
// Caution: why use raw value to display on label or tooltip?
// A reason is to avoid format. For example time value we do not know
// how to format is expected. More over, if stack is used, calculated
// value may be 0.91000000001, which have brings trouble to display.
// TODO: consider how to treat null/undefined/NaN when display?

/**
 * @param {module:echarts/data/List} data
 * @param {number} dataIndex
 * @param {string|number} [dim] dimName or dimIndex
 * @return {Array.<number>|string|number} can be null/undefined.
 */


function retrieveRawValue(data, dataIndex, dim) {
  if (!data) {
    return;
  } // Consider data may be not persistent.


  var dataItem = data.getRawDataItem(dataIndex);

  if (dataItem == null) {
    return;
  }

  var sourceFormat = data.getProvider().getSource().sourceFormat;
  var dimName;
  var dimIndex;
  var dimInfo = data.getDimensionInfo(dim);

  if (dimInfo) {
    dimName = dimInfo.name;
    dimIndex = dimInfo.index;
  }

  return rawValueGetters[sourceFormat](dataItem, dataIndex, dimIndex, dimName);
}
/**
 * Compatible with some cases (in pie, map) like:
 * data: [{name: 'xx', value: 5, selected: true}, ...]
 * where only sourceFormat is 'original' and 'objectRows' supported.
 *
 * ??? TODO
 * Supported detail options in data item when using 'arrayRows'.
 *
 * @param {module:echarts/data/List} data
 * @param {number} dataIndex
 * @param {string} attr like 'selected'
 */


function retrieveRawAttr(data, dataIndex, attr) {
  if (!data) {
    return;
  }

  var sourceFormat = data.getProvider().getSource().sourceFormat;

  if (sourceFormat !== SOURCE_FORMAT_ORIGINAL && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {
    return;
  }

  var dataItem = data.getRawDataItem(dataIndex);

  if (sourceFormat === SOURCE_FORMAT_ORIGINAL && !isObject(dataItem)) {
    dataItem = null;
  }

  if (dataItem) {
    return dataItem[attr];
  }
}

exports.DefaultDataProvider = DefaultDataProvider;
exports.defaultDimValueGetters = defaultDimValueGetters;
exports.retrieveRawValue = retrieveRawValue;
exports.retrieveRawAttr = retrieveRawAttr;

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

var _util = __webpack_require__(1);

var each = _util.each;
var isString = _util.isString;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * Note that it is too complicated to support 3d stack by value
 * (have to create two-dimension inverted index), so in 3d case
 * we just support that stacked by index.
 *
 * @param {module:echarts/model/Series} seriesModel
 * @param {Array.<string|Object>} dimensionInfoList The same as the input of <module:echarts/data/List>.
 *        The input dimensionInfoList will be modified.
 * @param {Object} [opt]
 * @param {boolean} [opt.stackedCoordDimension=''] Specify a coord dimension if needed.
 * @param {boolean} [opt.byIndex=false]
 * @return {Object} calculationInfo
 * {
 *     stackedDimension: string
 *     stackedByDimension: string
 *     isStackedByIndex: boolean
 *     stackedOverDimension: string
 *     stackResultDimension: string
 * }
 */
function enableDataStack(seriesModel, dimensionInfoList, opt) {
  opt = opt || {};
  var byIndex = opt.byIndex;
  var stackedCoordDimension = opt.stackedCoordDimension; // Compatibal: when `stack` is set as '', do not stack.

  var mayStack = !!(seriesModel && seriesModel.get('stack'));
  var stackedByDimInfo;
  var stackedDimInfo;
  var stackResultDimension;
  var stackedOverDimension;
  each(dimensionInfoList, function (dimensionInfo, index) {
    if (isString(dimensionInfo)) {
      dimensionInfoList[index] = dimensionInfo = {
        name: dimensionInfo
      };
    }

    if (mayStack && !dimensionInfo.isExtraCoord) {
      // Find the first ordinal dimension as the stackedByDimInfo.
      if (!byIndex && !stackedByDimInfo && dimensionInfo.ordinalMeta) {
        stackedByDimInfo = dimensionInfo;
      } // Find the first stackable dimension as the stackedDimInfo.


      if (!stackedDimInfo && dimensionInfo.type !== 'ordinal' && dimensionInfo.type !== 'time' && (!stackedCoordDimension || stackedCoordDimension === dimensionInfo.coordDim)) {
        stackedDimInfo = dimensionInfo;
      }
    }
  });

  if (stackedDimInfo && !byIndex && !stackedByDimInfo) {
    // Compatible with previous design, value axis (time axis) only stack by index.
    // It may make sense if the user provides elaborately constructed data.
    byIndex = true;
  } // Add stack dimension, they can be both calculated by coordinate system in `unionExtent`.
  // That put stack logic in List is for using conveniently in echarts extensions, but it
  // might not be a good way.


  if (stackedDimInfo) {
    // Use a weird name that not duplicated with other names.
    stackResultDimension = '__\0ecstackresult';
    stackedOverDimension = '__\0ecstackedover'; // Create inverted index to fast query index by value.

    if (stackedByDimInfo) {
      stackedByDimInfo.createInvertedIndices = true;
    }

    var stackedDimCoordDim = stackedDimInfo.coordDim;
    var stackedDimType = stackedDimInfo.type;
    var stackedDimCoordIndex = 0;
    each(dimensionInfoList, function (dimensionInfo) {
      if (dimensionInfo.coordDim === stackedDimCoordDim) {
        stackedDimCoordIndex++;
      }
    });
    dimensionInfoList.push({
      name: stackResultDimension,
      coordDim: stackedDimCoordDim,
      coordDimIndex: stackedDimCoordIndex,
      type: stackedDimType,
      isExtraCoord: true,
      isCalculationCoord: true
    });
    stackedDimCoordIndex++;
    dimensionInfoList.push({
      name: stackedOverDimension,
      // This dimension contains stack base (generally, 0), so do not set it as
      // `stackedDimCoordDim` to avoid extent calculation, consider log scale.
      coordDim: stackedOverDimension,
      coordDimIndex: stackedDimCoordIndex,
      type: stackedDimType,
      isExtraCoord: true,
      isCalculationCoord: true
    });
  }

  return {
    stackedDimension: stackedDimInfo && stackedDimInfo.name,
    stackedByDimension: stackedByDimInfo && stackedByDimInfo.name,
    isStackedByIndex: byIndex,
    stackedOverDimension: stackedOverDimension,
    stackResultDimension: stackResultDimension
  };
}
/**
 * @param {module:echarts/data/List} data
 * @param {string} stackedDim
 */


function isDimensionStacked(data, stackedDim
/*, stackedByDim*/
) {
  // Each single series only maps to one pair of axis. So we do not need to
  // check stackByDim, whatever stacked by a dimension or stacked by index.
  return !!stackedDim && stackedDim === data.getCalculationInfo('stackedDimension'); // && (
  //     stackedByDim != null
  //         ? stackedByDim === data.getCalculationInfo('stackedByDimension')
  //         : data.getCalculationInfo('isStackedByIndex')
  // );
}
/**
 * @param {module:echarts/data/List} data
 * @param {string} targetDim
 * @param {string} [stackedByDim] If not input this parameter, check whether
 *                                stacked by index.
 * @return {string} dimension
 */


function getStackedDimension(data, targetDim) {
  return isDimensionStacked(data, targetDim) ? data.getCalculationInfo('stackResultDimension') : targetDim;
}

exports.enableDataStack = enableDataStack;
exports.isDimensionStacked = isDimensionStacked;
exports.getStackedDimension = getStackedDimension;

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

var _config = __webpack_require__(16);

var __DEV__ = _config.__DEV__;

var zrUtil = __webpack_require__(1);

var OrdinalScale = __webpack_require__(493);

var IntervalScale = __webpack_require__(124);

var Scale = __webpack_require__(88);

var numberUtil = __webpack_require__(14);

var _barGrid = __webpack_require__(494);

var prepareLayoutBarSeries = _barGrid.prepareLayoutBarSeries;
var makeColumnLayout = _barGrid.makeColumnLayout;
var retrieveColumnLayout = _barGrid.retrieveColumnLayout;

var BoundingRect = __webpack_require__(30);

__webpack_require__(495);

__webpack_require__(496);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * Get axis scale extent before niced.
 * Item of returned array can only be number (including Infinity and NaN).
 */
function getScaleExtent(scale, model) {
  var scaleType = scale.type;
  var min = model.getMin();
  var max = model.getMax();
  var fixMin = min != null;
  var fixMax = max != null;
  var originalExtent = scale.getExtent();
  var axisDataLen;
  var boundaryGap;
  var span;

  if (scaleType === 'ordinal') {
    axisDataLen = model.getCategories().length;
  } else {
    boundaryGap = model.get('boundaryGap');

    if (!zrUtil.isArray(boundaryGap)) {
      boundaryGap = [boundaryGap || 0, boundaryGap || 0];
    }

    if (typeof boundaryGap[0] === 'boolean') {
      boundaryGap = [0, 0];
    }

    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);
    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);
    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);
  } // Notice: When min/max is not set (that is, when there are null/undefined,
  // which is the most common case), these cases should be ensured:
  // (1) For 'ordinal', show all axis.data.
  // (2) For others:
  //      + `boundaryGap` is applied (if min/max set, boundaryGap is
  //      disabled).
  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should
  //      be the result that originalExtent enlarged by boundaryGap.
  // (3) If no data, it should be ensured that `scale.setBlank` is set.
  // FIXME
  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?
  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured
  // that the results processed by boundaryGap are positive/negative?


  if (min == null) {
    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;
  }

  if (max == null) {
    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;
  }

  if (min === 'dataMin') {
    min = originalExtent[0];
  } else if (typeof min === 'function') {
    min = min({
      min: originalExtent[0],
      max: originalExtent[1]
    });
  }

  if (max === 'dataMax') {
    max = originalExtent[1];
  } else if (typeof max === 'function') {
    max = max({
      min: originalExtent[0],
      max: originalExtent[1]
    });
  }

  (min == null || !isFinite(min)) && (min = NaN);
  (max == null || !isFinite(max)) && (max = NaN);
  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max) || scaleType === 'ordinal' && !scale.getOrdinalMeta().categories.length); // Evaluate if axis needs cross zero

  if (model.getNeedCrossZero()) {
    // Axis is over zero and min is not set
    if (min > 0 && max > 0 && !fixMin) {
      min = 0;
    } // Axis is under zero and max is not set


    if (min < 0 && max < 0 && !fixMax) {
      max = 0;
    }
  } // If bars are placed on a base axis of type time or interval account for axis boundary overflow and current axis
  // is base axis
  // FIXME
  // (1) Consider support value axis, where below zero and axis `onZero` should be handled properly.
  // (2) Refactor the logic with `barGrid`. Is it not need to `makeBarWidthAndOffsetInfo` twice with different extent?
  //     Should not depend on series type `bar`?
  // (3) Fix that might overlap when using dataZoom.
  // (4) Consider other chart types using `barGrid`?
  // See #6728, #4862, `test/bar-overflow-time-plot.html`


  var ecModel = model.ecModel;

  if (ecModel && scaleType === 'time'
  /*|| scaleType === 'interval' */
  ) {
    var barSeriesModels = prepareLayoutBarSeries('bar', ecModel);
    var isBaseAxisAndHasBarSeries;
    zrUtil.each(barSeriesModels, function (seriesModel) {
      isBaseAxisAndHasBarSeries |= seriesModel.getBaseAxis() === model.axis;
    });

    if (isBaseAxisAndHasBarSeries) {
      // Calculate placement of bars on axis
      var barWidthAndOffset = makeColumnLayout(barSeriesModels); // Adjust axis min and max to account for overflow

      var adjustedScale = adjustScaleForOverflow(min, max, model, barWidthAndOffset);
      min = adjustedScale.min;
      max = adjustedScale.max;
    }
  }

  return [min, max];
}

function adjustScaleForOverflow(min, max, model, barWidthAndOffset) {
  // Get Axis Length
  var axisExtent = model.axis.getExtent();
  var axisLength = axisExtent[1] - axisExtent[0]; // Get bars on current base axis and calculate min and max overflow

  var barsOnCurrentAxis = retrieveColumnLayout(barWidthAndOffset, model.axis);

  if (barsOnCurrentAxis === undefined) {
    return {
      min: min,
      max: max
    };
  }

  var minOverflow = Infinity;
  zrUtil.each(barsOnCurrentAxis, function (item) {
    minOverflow = Math.min(item.offset, minOverflow);
  });
  var maxOverflow = -Infinity;
  zrUtil.each(barsOnCurrentAxis, function (item) {
    maxOverflow = Math.max(item.offset + item.width, maxOverflow);
  });
  minOverflow = Math.abs(minOverflow);
  maxOverflow = Math.abs(maxOverflow);
  var totalOverFlow = minOverflow + maxOverflow; // Calulate required buffer based on old range and overflow

  var oldRange = max - min;
  var oldRangePercentOfNew = 1 - (minOverflow + maxOverflow) / axisLength;
  var overflowBuffer = oldRange / oldRangePercentOfNew - oldRange;
  max += overflowBuffer * (maxOverflow / totalOverFlow);
  min -= overflowBuffer * (minOverflow / totalOverFlow);
  return {
    min: min,
    max: max
  };
}

function niceScaleExtent(scale, model) {
  var extent = getScaleExtent(scale, model);
  var fixMin = model.getMin() != null;
  var fixMax = model.getMax() != null;
  var splitNumber = model.get('splitNumber');

  if (scale.type === 'log') {
    scale.base = model.get('logBase');
  }

  var scaleType = scale.type;
  scale.setExtent(extent[0], extent[1]);
  scale.niceExtent({
    splitNumber: splitNumber,
    fixMin: fixMin,
    fixMax: fixMax,
    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,
    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null
  }); // If some one specified the min, max. And the default calculated interval
  // is not good enough. He can specify the interval. It is often appeared
  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard
  // to be 60.
  // FIXME

  var interval = model.get('interval');

  if (interval != null) {
    scale.setInterval && scale.setInterval(interval);
  }
}
/**
 * @param {module:echarts/model/Model} model
 * @param {string} [axisType] Default retrieve from model.type
 * @return {module:echarts/scale/*}
 */


function createScaleByModel(model, axisType) {
  axisType = axisType || model.get('type');

  if (axisType) {
    switch (axisType) {
      // Buildin scale
      case 'category':
        return new OrdinalScale(model.getOrdinalMeta ? model.getOrdinalMeta() : model.getCategories(), [Infinity, -Infinity]);

      case 'value':
        return new IntervalScale();
      // Extended scale, like time and log

      default:
        return (Scale.getClass(axisType) || IntervalScale).create(model);
    }
  }
}
/**
 * Check if the axis corss 0
 */


function ifAxisCrossZero(axis) {
  var dataExtent = axis.scale.getExtent();
  var min = dataExtent[0];
  var max = dataExtent[1];
  return !(min > 0 && max > 0 || min < 0 && max < 0);
}
/**
 * @param {module:echarts/coord/Axis} axis
 * @return {Function} Label formatter function.
 *         param: {number} tickValue,
 *         param: {number} idx, the index in all ticks.
 *                         If category axis, this param is not requied.
 *         return: {string} label string.
 */


function makeLabelFormatter(axis) {
  var labelFormatter = axis.getLabelModel().get('formatter');
  var categoryTickStart = axis.type === 'category' ? axis.scale.getExtent()[0] : null;

  if (typeof labelFormatter === 'string') {
    labelFormatter = function (tpl) {
      return function (val) {
        return tpl.replace('{value}', val != null ? val : '');
      };
    }(labelFormatter); // Consider empty array


    return labelFormatter;
  } else if (typeof labelFormatter === 'function') {
    return function (tickValue, idx) {
      // The original intention of `idx` is "the index of the tick in all ticks".
      // But the previous implementation of category axis do not consider the
      // `axisLabel.interval`, which cause that, for example, the `interval` is
      // `1`, then the ticks "name5", "name7", "name9" are displayed, where the
      // corresponding `idx` are `0`, `2`, `4`, but not `0`, `1`, `2`. So we keep
      // the definition here for back compatibility.
      if (categoryTickStart != null) {
        idx = tickValue - categoryTickStart;
      }

      return labelFormatter(getAxisRawValue(axis, tickValue), idx);
    };
  } else {
    return function (tick) {
      return axis.scale.getLabel(tick);
    };
  }
}

function getAxisRawValue(axis, value) {
  // In category axis with data zoom, tick is not the original
  // index of axis.data. So tick should not be exposed to user
  // in category axis.
  return axis.type === 'category' ? axis.scale.getLabel(value) : value;
}
/**
 * @param {module:echarts/coord/Axis} axis
 * @return {module:zrender/core/BoundingRect} Be null/undefined if no labels.
 */


function estimateLabelUnionRect(axis) {
  var axisModel = axis.model;
  var scale = axis.scale;

  if (!axisModel.get('axisLabel.show') || scale.isBlank()) {
    return;
  }

  var isCategory = axis.type === 'category';
  var realNumberScaleTicks;
  var tickCount;
  var categoryScaleExtent = scale.getExtent(); // Optimize for large category data, avoid call `getTicks()`.

  if (isCategory) {
    tickCount = scale.count();
  } else {
    realNumberScaleTicks = scale.getTicks();
    tickCount = realNumberScaleTicks.length;
  }

  var axisLabelModel = axis.getLabelModel();
  var labelFormatter = makeLabelFormatter(axis);
  var rect;
  var step = 1; // Simple optimization for large amount of labels

  if (tickCount > 40) {
    step = Math.ceil(tickCount / 40);
  }

  for (var i = 0; i < tickCount; i += step) {
    var tickValue = realNumberScaleTicks ? realNumberScaleTicks[i] : categoryScaleExtent[0] + i;
    var label = labelFormatter(tickValue);
    var unrotatedSingleRect = axisLabelModel.getTextRect(label);
    var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);
    rect ? rect.union(singleRect) : rect = singleRect;
  }

  return rect;
}

function rotateTextRect(textRect, rotate) {
  var rotateRadians = rotate * Math.PI / 180;
  var boundingBox = textRect.plain();
  var beforeWidth = boundingBox.width;
  var beforeHeight = boundingBox.height;
  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);
  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);
  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);
  return rotatedRect;
}

exports.getScaleExtent = getScaleExtent;
exports.niceScaleExtent = niceScaleExtent;
exports.createScaleByModel = createScaleByModel;
exports.ifAxisCrossZero = ifAxisCrossZero;
exports.makeLabelFormatter = makeLabelFormatter;
exports.getAxisRawValue = getAxisRawValue;
exports.estimateLabelUnionRect = estimateLabelUnionRect;

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__(8).f;
var has = __webpack_require__(22);
var TAG = __webpack_require__(6)('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(0);
var defined = __webpack_require__(38);
var fails = __webpack_require__(5);
var spaces = __webpack_require__(133);
var space = '[' + spaces + ']';
var non = '\u200b\u0085';
var ltrim = RegExp('^' + space + space + '*');
var rtrim = RegExp(space + space + '*$');

var exporter = function (KEY, exec, ALIAS) {
  var exp = {};
  var FORCE = fails(function () {
    return !!spaces[KEY]() || non[KEY]() != non;
  });
  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
  if (ALIAS) exp[ALIAS] = fn;
  $export($export.P + $export.F * FORCE, 'String', exp);
};

// 1 -> String#trimLeft
// 2 -> String#trimRight
// 3 -> String#trim
var trim = exporter.trim = function (string, TYPE) {
  string = String(defined(string));
  if (TYPE & 1) string = string.replace(ltrim, '');
  if (TYPE & 2) string = string.replace(rtrim, '');
  return string;
};

module.exports = exporter;


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(4);
module.exports = function (it, TYPE) {
  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');
  return it;
};


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};


/***/ }),
/* 73 */
/***/ (function(module, exports) {

/**
 * 事件扩展
 * @module zrender/mixin/Eventful
 * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)
 *         pissang (https://www.github.com/pissang)
 */
var arrySlice = Array.prototype.slice;
/**
 * 事件分发器
 * @alias module:zrender/mixin/Eventful
 * @constructor
 */

var Eventful = function () {
  this._$handlers = {};
};

Eventful.prototype = {
  constructor: Eventful,

  /**
   * 单次触发绑定，trigger后销毁
   *
   * @param {string} event 事件名
   * @param {Function} handler 响应函数
   * @param {Object} context
   */
  one: function (event, handler, context) {
    var _h = this._$handlers;

    if (!handler || !event) {
      return this;
    }

    if (!_h[event]) {
      _h[event] = [];
    }

    for (var i = 0; i < _h[event].length; i++) {
      if (_h[event][i].h === handler) {
        return this;
      }
    }

    _h[event].push({
      h: handler,
      one: true,
      ctx: context || this
    });

    return this;
  },

  /**
   * 绑定事件
   * @param {string} event 事件名
   * @param {Function} handler 事件处理函数
   * @param {Object} [context]
   */
  on: function (event, handler, context) {
    var _h = this._$handlers;

    if (!handler || !event) {
      return this;
    }

    if (!_h[event]) {
      _h[event] = [];
    }

    for (var i = 0; i < _h[event].length; i++) {
      if (_h[event][i].h === handler) {
        return this;
      }
    }

    _h[event].push({
      h: handler,
      one: false,
      ctx: context || this
    });

    return this;
  },

  /**
   * 是否绑定了事件
   * @param  {string}  event
   * @return {boolean}
   */
  isSilent: function (event) {
    var _h = this._$handlers;
    return _h[event] && _h[event].length;
  },

  /**
   * 解绑事件
   * @param {string} event 事件名
   * @param {Function} [handler] 事件处理函数
   */
  off: function (event, handler) {
    var _h = this._$handlers;

    if (!event) {
      this._$handlers = {};
      return this;
    }

    if (handler) {
      if (_h[event]) {
        var newList = [];

        for (var i = 0, l = _h[event].length; i < l; i++) {
          if (_h[event][i]['h'] != handler) {
            newList.push(_h[event][i]);
          }
        }

        _h[event] = newList;
      }

      if (_h[event] && _h[event].length === 0) {
        delete _h[event];
      }
    } else {
      delete _h[event];
    }

    return this;
  },

  /**
   * 事件分发
   *
   * @param {string} type 事件类型
   */
  trigger: function (type) {
    if (this._$handlers[type]) {
      var args = arguments;
      var argLen = args.length;

      if (argLen > 3) {
        args = arrySlice.call(args, 1);
      }

      var _h = this._$handlers[type];
      var len = _h.length;

      for (var i = 0; i < len;) {
        // Optimize advise from backbone
        switch (argLen) {
          case 1:
            _h[i]['h'].call(_h[i]['ctx']);

            break;

          case 2:
            _h[i]['h'].call(_h[i]['ctx'], args[1]);

            break;

          case 3:
            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);

            break;

          default:
            // have more than 2 given arguments
            _h[i]['h'].apply(_h[i]['ctx'], args);

            break;
        }

        if (_h[i]['one']) {
          _h.splice(i, 1);

          len--;
        } else {
          i++;
        }
      }
    }

    return this;
  },

  /**
   * 带有context的事件分发, 最后一个参数是事件回调的context
   * @param {string} type 事件类型
   */
  triggerWithContext: function (type) {
    if (this._$handlers[type]) {
      var args = arguments;
      var argLen = args.length;

      if (argLen > 4) {
        args = arrySlice.call(args, 1, args.length - 1);
      }

      var ctx = args[args.length - 1];
      var _h = this._$handlers[type];
      var len = _h.length;

      for (var i = 0; i < len;) {
        // Optimize advise from backbone
        switch (argLen) {
          case 1:
            _h[i]['h'].call(ctx);

            break;

          case 2:
            _h[i]['h'].call(ctx, args[1]);

            break;

          case 3:
            _h[i]['h'].call(ctx, args[1], args[2]);

            break;

          default:
            // have more than 2 given arguments
            _h[i]['h'].apply(ctx, args);

            break;
        }

        if (_h[i]['one']) {
          _h.splice(i, 1);

          len--;
        } else {
          i++;
        }
      }
    }

    return this;
  }
}; // 对象可以通过 onxxxx 绑定事件

/**
 * @event module:zrender/mixin/Eventful#onclick
 * @type {Function}
 * @default null
 */

/**
 * @event module:zrender/mixin/Eventful#onmouseover
 * @type {Function}
 * @default null
 */

/**
 * @event module:zrender/mixin/Eventful#onmouseout
 * @type {Function}
 * @default null
 */

/**
 * @event module:zrender/mixin/Eventful#onmousemove
 * @type {Function}
 * @default null
 */

/**
 * @event module:zrender/mixin/Eventful#onmousewheel
 * @type {Function}
 * @default null
 */

/**
 * @event module:zrender/mixin/Eventful#onmousedown
 * @type {Function}
 * @default null
 */

/**
 * @event module:zrender/mixin/Eventful#onmouseup
 * @type {Function}
 * @default null
 */

/**
 * @event module:zrender/mixin/Eventful#ondrag
 * @type {Function}
 * @default null
 */

/**
 * @event module:zrender/mixin/Eventful#ondragstart
 * @type {Function}
 * @default null
 */

/**
 * @event module:zrender/mixin/Eventful#ondragend
 * @type {Function}
 * @default null
 */

/**
 * @event module:zrender/mixin/Eventful#ondragenter
 * @type {Function}
 * @default null
 */

/**
 * @event module:zrender/mixin/Eventful#ondragleave
 * @type {Function}
 * @default null
 */

/**
 * @event module:zrender/mixin/Eventful#ondragover
 * @type {Function}
 * @default null
 */

/**
 * @event module:zrender/mixin/Eventful#ondrop
 * @type {Function}
 * @default null
 */

var _default = Eventful;
module.exports = _default;

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

var LRU = __webpack_require__(174);

var kCSSColorTable = {
  'transparent': [0, 0, 0, 0],
  'aliceblue': [240, 248, 255, 1],
  'antiquewhite': [250, 235, 215, 1],
  'aqua': [0, 255, 255, 1],
  'aquamarine': [127, 255, 212, 1],
  'azure': [240, 255, 255, 1],
  'beige': [245, 245, 220, 1],
  'bisque': [255, 228, 196, 1],
  'black': [0, 0, 0, 1],
  'blanchedalmond': [255, 235, 205, 1],
  'blue': [0, 0, 255, 1],
  'blueviolet': [138, 43, 226, 1],
  'brown': [165, 42, 42, 1],
  'burlywood': [222, 184, 135, 1],
  'cadetblue': [95, 158, 160, 1],
  'chartreuse': [127, 255, 0, 1],
  'chocolate': [210, 105, 30, 1],
  'coral': [255, 127, 80, 1],
  'cornflowerblue': [100, 149, 237, 1],
  'cornsilk': [255, 248, 220, 1],
  'crimson': [220, 20, 60, 1],
  'cyan': [0, 255, 255, 1],
  'darkblue': [0, 0, 139, 1],
  'darkcyan': [0, 139, 139, 1],
  'darkgoldenrod': [184, 134, 11, 1],
  'darkgray': [169, 169, 169, 1],
  'darkgreen': [0, 100, 0, 1],
  'darkgrey': [169, 169, 169, 1],
  'darkkhaki': [189, 183, 107, 1],
  'darkmagenta': [139, 0, 139, 1],
  'darkolivegreen': [85, 107, 47, 1],
  'darkorange': [255, 140, 0, 1],
  'darkorchid': [153, 50, 204, 1],
  'darkred': [139, 0, 0, 1],
  'darksalmon': [233, 150, 122, 1],
  'darkseagreen': [143, 188, 143, 1],
  'darkslateblue': [72, 61, 139, 1],
  'darkslategray': [47, 79, 79, 1],
  'darkslategrey': [47, 79, 79, 1],
  'darkturquoise': [0, 206, 209, 1],
  'darkviolet': [148, 0, 211, 1],
  'deeppink': [255, 20, 147, 1],
  'deepskyblue': [0, 191, 255, 1],
  'dimgray': [105, 105, 105, 1],
  'dimgrey': [105, 105, 105, 1],
  'dodgerblue': [30, 144, 255, 1],
  'firebrick': [178, 34, 34, 1],
  'floralwhite': [255, 250, 240, 1],
  'forestgreen': [34, 139, 34, 1],
  'fuchsia': [255, 0, 255, 1],
  'gainsboro': [220, 220, 220, 1],
  'ghostwhite': [248, 248, 255, 1],
  'gold': [255, 215, 0, 1],
  'goldenrod': [218, 165, 32, 1],
  'gray': [128, 128, 128, 1],
  'green': [0, 128, 0, 1],
  'greenyellow': [173, 255, 47, 1],
  'grey': [128, 128, 128, 1],
  'honeydew': [240, 255, 240, 1],
  'hotpink': [255, 105, 180, 1],
  'indianred': [205, 92, 92, 1],
  'indigo': [75, 0, 130, 1],
  'ivory': [255, 255, 240, 1],
  'khaki': [240, 230, 140, 1],
  'lavender': [230, 230, 250, 1],
  'lavenderblush': [255, 240, 245, 1],
  'lawngreen': [124, 252, 0, 1],
  'lemonchiffon': [255, 250, 205, 1],
  'lightblue': [173, 216, 230, 1],
  'lightcoral': [240, 128, 128, 1],
  'lightcyan': [224, 255, 255, 1],
  'lightgoldenrodyellow': [250, 250, 210, 1],
  'lightgray': [211, 211, 211, 1],
  'lightgreen': [144, 238, 144, 1],
  'lightgrey': [211, 211, 211, 1],
  'lightpink': [255, 182, 193, 1],
  'lightsalmon': [255, 160, 122, 1],
  'lightseagreen': [32, 178, 170, 1],
  'lightskyblue': [135, 206, 250, 1],
  'lightslategray': [119, 136, 153, 1],
  'lightslategrey': [119, 136, 153, 1],
  'lightsteelblue': [176, 196, 222, 1],
  'lightyellow': [255, 255, 224, 1],
  'lime': [0, 255, 0, 1],
  'limegreen': [50, 205, 50, 1],
  'linen': [250, 240, 230, 1],
  'magenta': [255, 0, 255, 1],
  'maroon': [128, 0, 0, 1],
  'mediumaquamarine': [102, 205, 170, 1],
  'mediumblue': [0, 0, 205, 1],
  'mediumorchid': [186, 85, 211, 1],
  'mediumpurple': [147, 112, 219, 1],
  'mediumseagreen': [60, 179, 113, 1],
  'mediumslateblue': [123, 104, 238, 1],
  'mediumspringgreen': [0, 250, 154, 1],
  'mediumturquoise': [72, 209, 204, 1],
  'mediumvioletred': [199, 21, 133, 1],
  'midnightblue': [25, 25, 112, 1],
  'mintcream': [245, 255, 250, 1],
  'mistyrose': [255, 228, 225, 1],
  'moccasin': [255, 228, 181, 1],
  'navajowhite': [255, 222, 173, 1],
  'navy': [0, 0, 128, 1],
  'oldlace': [253, 245, 230, 1],
  'olive': [128, 128, 0, 1],
  'olivedrab': [107, 142, 35, 1],
  'orange': [255, 165, 0, 1],
  'orangered': [255, 69, 0, 1],
  'orchid': [218, 112, 214, 1],
  'palegoldenrod': [238, 232, 170, 1],
  'palegreen': [152, 251, 152, 1],
  'paleturquoise': [175, 238, 238, 1],
  'palevioletred': [219, 112, 147, 1],
  'papayawhip': [255, 239, 213, 1],
  'peachpuff': [255, 218, 185, 1],
  'peru': [205, 133, 63, 1],
  'pink': [255, 192, 203, 1],
  'plum': [221, 160, 221, 1],
  'powderblue': [176, 224, 230, 1],
  'purple': [128, 0, 128, 1],
  'red': [255, 0, 0, 1],
  'rosybrown': [188, 143, 143, 1],
  'royalblue': [65, 105, 225, 1],
  'saddlebrown': [139, 69, 19, 1],
  'salmon': [250, 128, 114, 1],
  'sandybrown': [244, 164, 96, 1],
  'seagreen': [46, 139, 87, 1],
  'seashell': [255, 245, 238, 1],
  'sienna': [160, 82, 45, 1],
  'silver': [192, 192, 192, 1],
  'skyblue': [135, 206, 235, 1],
  'slateblue': [106, 90, 205, 1],
  'slategray': [112, 128, 144, 1],
  'slategrey': [112, 128, 144, 1],
  'snow': [255, 250, 250, 1],
  'springgreen': [0, 255, 127, 1],
  'steelblue': [70, 130, 180, 1],
  'tan': [210, 180, 140, 1],
  'teal': [0, 128, 128, 1],
  'thistle': [216, 191, 216, 1],
  'tomato': [255, 99, 71, 1],
  'turquoise': [64, 224, 208, 1],
  'violet': [238, 130, 238, 1],
  'wheat': [245, 222, 179, 1],
  'white': [255, 255, 255, 1],
  'whitesmoke': [245, 245, 245, 1],
  'yellow': [255, 255, 0, 1],
  'yellowgreen': [154, 205, 50, 1]
};

function clampCssByte(i) {
  // Clamp to integer 0 .. 255.
  i = Math.round(i); // Seems to be what Chrome does (vs truncation).

  return i < 0 ? 0 : i > 255 ? 255 : i;
}

function clampCssAngle(i) {
  // Clamp to integer 0 .. 360.
  i = Math.round(i); // Seems to be what Chrome does (vs truncation).

  return i < 0 ? 0 : i > 360 ? 360 : i;
}

function clampCssFloat(f) {
  // Clamp to float 0.0 .. 1.0.
  return f < 0 ? 0 : f > 1 ? 1 : f;
}

function parseCssInt(str) {
  // int or percentage.
  if (str.length && str.charAt(str.length - 1) === '%') {
    return clampCssByte(parseFloat(str) / 100 * 255);
  }

  return clampCssByte(parseInt(str, 10));
}

function parseCssFloat(str) {
  // float or percentage.
  if (str.length && str.charAt(str.length - 1) === '%') {
    return clampCssFloat(parseFloat(str) / 100);
  }

  return clampCssFloat(parseFloat(str));
}

function cssHueToRgb(m1, m2, h) {
  if (h < 0) {
    h += 1;
  } else if (h > 1) {
    h -= 1;
  }

  if (h * 6 < 1) {
    return m1 + (m2 - m1) * h * 6;
  }

  if (h * 2 < 1) {
    return m2;
  }

  if (h * 3 < 2) {
    return m1 + (m2 - m1) * (2 / 3 - h) * 6;
  }

  return m1;
}

function lerpNumber(a, b, p) {
  return a + (b - a) * p;
}

function setRgba(out, r, g, b, a) {
  out[0] = r;
  out[1] = g;
  out[2] = b;
  out[3] = a;
  return out;
}

function copyRgba(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  return out;
}

var colorCache = new LRU(20);
var lastRemovedArr = null;

function putToCache(colorStr, rgbaArr) {
  // Reuse removed array
  if (lastRemovedArr) {
    copyRgba(lastRemovedArr, rgbaArr);
  }

  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());
}
/**
 * @param {string} colorStr
 * @param {Array.<number>} out
 * @return {Array.<number>}
 * @memberOf module:zrender/util/color
 */


function parse(colorStr, rgbaArr) {
  if (!colorStr) {
    return;
  }

  rgbaArr = rgbaArr || [];
  var cached = colorCache.get(colorStr);

  if (cached) {
    return copyRgba(rgbaArr, cached);
  } // colorStr may be not string


  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.

  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.

  if (str in kCSSColorTable) {
    copyRgba(rgbaArr, kCSSColorTable[str]);
    putToCache(colorStr, rgbaArr);
    return rgbaArr;
  } // #abc and #abc123 syntax.


  if (str.charAt(0) === '#') {
    if (str.length === 4) {
      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.

      if (!(iv >= 0 && iv <= 0xfff)) {
        setRgba(rgbaArr, 0, 0, 0, 1);
        return; // Covers NaN.
      }

      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);
      putToCache(colorStr, rgbaArr);
      return rgbaArr;
    } else if (str.length === 7) {
      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.

      if (!(iv >= 0 && iv <= 0xffffff)) {
        setRgba(rgbaArr, 0, 0, 0, 1);
        return; // Covers NaN.
      }

      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);
      putToCache(colorStr, rgbaArr);
      return rgbaArr;
    }

    return;
  }

  var op = str.indexOf('('),
      ep = str.indexOf(')');

  if (op !== -1 && ep + 1 === str.length) {
    var fname = str.substr(0, op);
    var params = str.substr(op + 1, ep - (op + 1)).split(',');
    var alpha = 1; // To allow case fallthrough.

    switch (fname) {
      case 'rgba':
        if (params.length !== 4) {
          setRgba(rgbaArr, 0, 0, 0, 1);
          return;
        }

        alpha = parseCssFloat(params.pop());
      // jshint ignore:line
      // Fall through.

      case 'rgb':
        if (params.length !== 3) {
          setRgba(rgbaArr, 0, 0, 0, 1);
          return;
        }

        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);
        putToCache(colorStr, rgbaArr);
        return rgbaArr;

      case 'hsla':
        if (params.length !== 4) {
          setRgba(rgbaArr, 0, 0, 0, 1);
          return;
        }

        params[3] = parseCssFloat(params[3]);
        hsla2rgba(params, rgbaArr);
        putToCache(colorStr, rgbaArr);
        return rgbaArr;

      case 'hsl':
        if (params.length !== 3) {
          setRgba(rgbaArr, 0, 0, 0, 1);
          return;
        }

        hsla2rgba(params, rgbaArr);
        putToCache(colorStr, rgbaArr);
        return rgbaArr;

      default:
        return;
    }
  }

  setRgba(rgbaArr, 0, 0, 0, 1);
  return;
}
/**
 * @param {Array.<number>} hsla
 * @param {Array.<number>} rgba
 * @return {Array.<number>} rgba
 */


function hsla2rgba(hsla, rgba) {
  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1
  // NOTE(deanm): According to the CSS spec s/l should only be
  // percentages, but we don't bother and let float or percentage.

  var s = parseCssFloat(hsla[1]);
  var l = parseCssFloat(hsla[2]);
  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;
  var m1 = l * 2 - m2;
  rgba = rgba || [];
  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);

  if (hsla.length === 4) {
    rgba[3] = hsla[3];
  }

  return rgba;
}
/**
 * @param {Array.<number>} rgba
 * @return {Array.<number>} hsla
 */


function rgba2hsla(rgba) {
  if (!rgba) {
    return;
  } // RGB from 0 to 255


  var R = rgba[0] / 255;
  var G = rgba[1] / 255;
  var B = rgba[2] / 255;
  var vMin = Math.min(R, G, B); // Min. value of RGB

  var vMax = Math.max(R, G, B); // Max. value of RGB

  var delta = vMax - vMin; // Delta RGB value

  var L = (vMax + vMin) / 2;
  var H;
  var S; // HSL results from 0 to 1

  if (delta === 0) {
    H = 0;
    S = 0;
  } else {
    if (L < 0.5) {
      S = delta / (vMax + vMin);
    } else {
      S = delta / (2 - vMax - vMin);
    }

    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;
    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;
    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;

    if (R === vMax) {
      H = deltaB - deltaG;
    } else if (G === vMax) {
      H = 1 / 3 + deltaR - deltaB;
    } else if (B === vMax) {
      H = 2 / 3 + deltaG - deltaR;
    }

    if (H < 0) {
      H += 1;
    }

    if (H > 1) {
      H -= 1;
    }
  }

  var hsla = [H * 360, S, L];

  if (rgba[3] != null) {
    hsla.push(rgba[3]);
  }

  return hsla;
}
/**
 * @param {string} color
 * @param {number} level
 * @return {string}
 * @memberOf module:zrender/util/color
 */


function lift(color, level) {
  var colorArr = parse(color);

  if (colorArr) {
    for (var i = 0; i < 3; i++) {
      if (level < 0) {
        colorArr[i] = colorArr[i] * (1 - level) | 0;
      } else {
        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;
      }

      if (colorArr[i] > 255) {
        colorArr[i] = 255;
      } else if (color[i] < 0) {
        colorArr[i] = 0;
      }
    }

    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');
  }
}
/**
 * @param {string} color
 * @return {string}
 * @memberOf module:zrender/util/color
 */


function toHex(color) {
  var colorArr = parse(color);

  if (colorArr) {
    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);
  }
}
/**
 * Map value to color. Faster than lerp methods because color is represented by rgba array.
 * @param {number} normalizedValue A float between 0 and 1.
 * @param {Array.<Array.<number>>} colors List of rgba color array
 * @param {Array.<number>} [out] Mapped gba color array
 * @return {Array.<number>} will be null/undefined if input illegal.
 */


function fastLerp(normalizedValue, colors, out) {
  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {
    return;
  }

  out = out || [];
  var value = normalizedValue * (colors.length - 1);
  var leftIndex = Math.floor(value);
  var rightIndex = Math.ceil(value);
  var leftColor = colors[leftIndex];
  var rightColor = colors[rightIndex];
  var dv = value - leftIndex;
  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));
  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));
  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));
  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));
  return out;
}
/**
 * @deprecated
 */


var fastMapToColor = fastLerp;
/**
 * @param {number} normalizedValue A float between 0 and 1.
 * @param {Array.<string>} colors Color list.
 * @param {boolean=} fullOutput Default false.
 * @return {(string|Object)} Result color. If fullOutput,
 *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},
 * @memberOf module:zrender/util/color
 */

function lerp(normalizedValue, colors, fullOutput) {
  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {
    return;
  }

  var value = normalizedValue * (colors.length - 1);
  var leftIndex = Math.floor(value);
  var rightIndex = Math.ceil(value);
  var leftColor = parse(colors[leftIndex]);
  var rightColor = parse(colors[rightIndex]);
  var dv = value - leftIndex;
  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');
  return fullOutput ? {
    color: color,
    leftIndex: leftIndex,
    rightIndex: rightIndex,
    value: value
  } : color;
}
/**
 * @deprecated
 */


var mapToColor = lerp;
/**
 * @param {string} color
 * @param {number=} h 0 ~ 360, ignore when null.
 * @param {number=} s 0 ~ 1, ignore when null.
 * @param {number=} l 0 ~ 1, ignore when null.
 * @return {string} Color string in rgba format.
 * @memberOf module:zrender/util/color
 */

function modifyHSL(color, h, s, l) {
  color = parse(color);

  if (color) {
    color = rgba2hsla(color);
    h != null && (color[0] = clampCssAngle(h));
    s != null && (color[1] = parseCssFloat(s));
    l != null && (color[2] = parseCssFloat(l));
    return stringify(hsla2rgba(color), 'rgba');
  }
}
/**
 * @param {string} color
 * @param {number=} alpha 0 ~ 1
 * @return {string} Color string in rgba format.
 * @memberOf module:zrender/util/color
 */


function modifyAlpha(color, alpha) {
  color = parse(color);

  if (color && alpha != null) {
    color[3] = clampCssFloat(alpha);
    return stringify(color, 'rgba');
  }
}
/**
 * @param {Array.<number>} arrColor like [12,33,44,0.4]
 * @param {string} type 'rgba', 'hsva', ...
 * @return {string} Result color. (If input illegal, return undefined).
 */


function stringify(arrColor, type) {
  if (!arrColor || !arrColor.length) {
    return;
  }

  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];

  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {
    colorStr += ',' + arrColor[3];
  }

  return type + '(' + colorStr + ')';
}

exports.parse = parse;
exports.lift = lift;
exports.toHex = toHex;
exports.fastLerp = fastLerp;
exports.fastMapToColor = fastMapToColor;
exports.lerp = lerp;
exports.mapToColor = mapToColor;
exports.modifyHSL = modifyHSL;
exports.modifyAlpha = modifyAlpha;
exports.stringify = stringify;

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

var Eventful = __webpack_require__(73);

exports.Dispatcher = Eventful;

var env = __webpack_require__(20);

/**
 * 事件辅助类
 * @module zrender/core/event
 * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)
 */
var isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;
var MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;

function getBoundingClientRect(el) {
  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect
  return el.getBoundingClientRect ? el.getBoundingClientRect() : {
    left: 0,
    top: 0
  };
} // `calculate` is optional, default false


function clientToLocal(el, e, out, calculate) {
  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative
  // to the padding edge of the target element. The only browser using this convention
  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does
  // not support the properties.
  // (see http://www.jacklmoore.com/notes/mouse-position/)
  // In zr painter.dom, padding edge equals to border edge.
  // FIXME
  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and
  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y
  // is too complex. So css-transfrom dont support in this case temporarily.

  if (calculate || !env.canvasSupported) {
    defaultGetZrXY(el, e, out);
  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned
  // ancestor element, so we should make sure el is positioned (e.g., not position:static).
  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add
  // zoom-factor, overflow / opacity layers, transforms ...)
  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.
  // <https://bugs.jquery.com/ticket/8523#comment:14>
  // BTW3, In ff, offsetX/offsetY is always 0.
  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {
      out.zrX = e.layerX;
      out.zrY = e.layerY;
    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)
    else if (e.offsetX != null) {
        out.zrX = e.offsetX;
        out.zrY = e.offsetY;
      } // For some other device, e.g., IOS safari.
      else {
          defaultGetZrXY(el, e, out);
        }

  return out;
}

function defaultGetZrXY(el, e, out) {
  // This well-known method below does not support css transform.
  var box = getBoundingClientRect(el);
  out.zrX = e.clientX - box.left;
  out.zrY = e.clientY - box.top;
}
/**
 * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.
 * `calculate` is optional, default false.
 */


function normalizeEvent(el, e, calculate) {
  e = e || window.event;

  if (e.zrX != null) {
    return e;
  }

  var eventType = e.type;
  var isTouch = eventType && eventType.indexOf('touch') >= 0;

  if (!isTouch) {
    clientToLocal(el, e, e, calculate);
    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;
  } else {
    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];
    touch && clientToLocal(el, touch, e, calculate);
  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;
  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js
  // If e.which has been defined, if may be readonly,
  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which


  var button = e.button;

  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {
    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;
  }

  return e;
}
/**
 * @param {HTMLElement} el
 * @param {string} name
 * @param {Function} handler
 */


function addEventListener(el, name, handler) {
  if (isDomLevel2) {
    // Reproduct the console warning:
    // [Violation] Added non-passive event listener to a scroll-blocking <some> event.
    // Consider marking event handler as 'passive' to make the page more responsive.
    // Just set console log level: verbose in chrome dev tool.
    // then the warning log will be printed when addEventListener called.
    // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md
    // We have not yet found a neat way to using passive. Because in zrender the dom event
    // listener delegate all of the upper events of element. Some of those events need
    // to prevent default. For example, the feature `preventDefaultMouseMove` of echarts.
    // Before passive can be adopted, these issues should be considered:
    // (1) Whether and how a zrender user specifies an event listener passive. And by default,
    // passive or not.
    // (2) How to tread that some zrender event listener is passive, and some is not. If
    // we use other way but not preventDefault of mousewheel and touchmove, browser
    // compatibility should be handled.
    // var opts = (env.passiveSupported && name === 'mousewheel')
    //     ? {passive: true}
    //     // By default, the third param of el.addEventListener is `capture: false`.
    //     : void 0;
    // el.addEventListener(name, handler /* , opts */);
    el.addEventListener(name, handler);
  } else {
    el.attachEvent('on' + name, handler);
  }
}

function removeEventListener(el, name, handler) {
  if (isDomLevel2) {
    el.removeEventListener(name, handler);
  } else {
    el.detachEvent('on' + name, handler);
  }
}
/**
 * preventDefault and stopPropagation.
 * Notice: do not do that in zrender. Upper application
 * do that if necessary.
 *
 * @memberOf module:zrender/core/event
 * @method
 * @param {Event} e : event对象
 */


var stop = isDomLevel2 ? function (e) {
  e.preventDefault();
  e.stopPropagation();
  e.cancelBubble = true;
} : function (e) {
  e.returnValue = false;
  e.cancelBubble = true;
};

function notLeftMouse(e) {
  // If e.which is undefined, considered as left mouse event.
  return e.which > 1;
} // 做向上兼容


exports.clientToLocal = clientToLocal;
exports.normalizeEvent = normalizeEvent;
exports.addEventListener = addEventListener;
exports.removeEventListener = removeEventListener;
exports.stop = stop;
exports.notLeftMouse = notLeftMouse;

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

var _util = __webpack_require__(1);

var createHashMap = _util.createHashMap;
var isTypedArray = _util.isTypedArray;

var _clazz = __webpack_require__(48);

var enableClassCheck = _clazz.enableClassCheck;

var _sourceType = __webpack_require__(77);

var SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;
var SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;
var SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;
var SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;
var SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * [sourceFormat]
 *
 * + "original":
 * This format is only used in series.data, where
 * itemStyle can be specified in data item.
 *
 * + "arrayRows":
 * [
 *     ['product', 'score', 'amount'],
 *     ['Matcha Latte', 89.3, 95.8],
 *     ['Milk Tea', 92.1, 89.4],
 *     ['Cheese Cocoa', 94.4, 91.2],
 *     ['Walnut Brownie', 85.4, 76.9]
 * ]
 *
 * + "objectRows":
 * [
 *     {product: 'Matcha Latte', score: 89.3, amount: 95.8},
 *     {product: 'Milk Tea', score: 92.1, amount: 89.4},
 *     {product: 'Cheese Cocoa', score: 94.4, amount: 91.2},
 *     {product: 'Walnut Brownie', score: 85.4, amount: 76.9}
 * ]
 *
 * + "keyedColumns":
 * {
 *     'product': ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie'],
 *     'count': [823, 235, 1042, 988],
 *     'score': [95.8, 81.4, 91.2, 76.9]
 * }
 *
 * + "typedArray"
 *
 * + "unknown"
 */

/**
 * @constructor
 * @param {Object} fields
 * @param {string} fields.sourceFormat
 * @param {Array|Object} fields.fromDataset
 * @param {Array|Object} [fields.data]
 * @param {string} [seriesLayoutBy='column']
 * @param {Array.<Object|string>} [dimensionsDefine]
 * @param {Objet|HashMap} [encodeDefine]
 * @param {number} [startIndex=0]
 * @param {number} [dimensionsDetectCount]
 */
function Source(fields) {
  /**
   * @type {boolean}
   */
  this.fromDataset = fields.fromDataset;
  /**
   * Not null/undefined.
   * @type {Array|Object}
   */

  this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);
  /**
   * See also "detectSourceFormat".
   * Not null/undefined.
   * @type {string}
   */

  this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;
  /**
   * 'row' or 'column'
   * Not null/undefined.
   * @type {string} seriesLayoutBy
   */

  this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;
  /**
   * dimensions definition in option.
   * can be null/undefined.
   * @type {Array.<Object|string>}
   */

  this.dimensionsDefine = fields.dimensionsDefine;
  /**
   * encode definition in option.
   * can be null/undefined.
   * @type {Objet|HashMap}
   */

  this.encodeDefine = fields.encodeDefine && createHashMap(fields.encodeDefine);
  /**
   * Not null/undefined, uint.
   * @type {number}
   */

  this.startIndex = fields.startIndex || 0;
  /**
   * Can be null/undefined (when unknown), uint.
   * @type {number}
   */

  this.dimensionsDetectCount = fields.dimensionsDetectCount;
}
/**
 * Wrap original series data for some compatibility cases.
 */


Source.seriesDataToSource = function (data) {
  return new Source({
    data: data,
    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL,
    fromDataset: false
  });
};

enableClassCheck(Source);
var _default = Source;
module.exports = _default;

/***/ }),
/* 77 */
/***/ (function(module, exports) {

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
// Avoid typo.
var SOURCE_FORMAT_ORIGINAL = 'original';
var SOURCE_FORMAT_ARRAY_ROWS = 'arrayRows';
var SOURCE_FORMAT_OBJECT_ROWS = 'objectRows';
var SOURCE_FORMAT_KEYED_COLUMNS = 'keyedColumns';
var SOURCE_FORMAT_UNKNOWN = 'unknown'; // ??? CHANGE A NAME

var SOURCE_FORMAT_TYPED_ARRAY = 'typedArray';
var SERIES_LAYOUT_BY_COLUMN = 'column';
var SERIES_LAYOUT_BY_ROW = 'row';
exports.SOURCE_FORMAT_ORIGINAL = SOURCE_FORMAT_ORIGINAL;
exports.SOURCE_FORMAT_ARRAY_ROWS = SOURCE_FORMAT_ARRAY_ROWS;
exports.SOURCE_FORMAT_OBJECT_ROWS = SOURCE_FORMAT_OBJECT_ROWS;
exports.SOURCE_FORMAT_KEYED_COLUMNS = SOURCE_FORMAT_KEYED_COLUMNS;
exports.SOURCE_FORMAT_UNKNOWN = SOURCE_FORMAT_UNKNOWN;
exports.SOURCE_FORMAT_TYPED_ARRAY = SOURCE_FORMAT_TYPED_ARRAY;
exports.SERIES_LAYOUT_BY_COLUMN = SERIES_LAYOUT_BY_COLUMN;
exports.SERIES_LAYOUT_BY_ROW = SERIES_LAYOUT_BY_ROW;

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(34);
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),
/* 79 */
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(59);
var ITERATOR = __webpack_require__(6)('iterator');
var Iterators = __webpack_require__(60);
module.exports = __webpack_require__(18).getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),
/* 81 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeOptions", function() { return mergeOptions; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_object_assign__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_object_assign___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_object_assign__);


const mergeOptions = function ($vm, options) {
  const defaults = {}
  for (let i in $vm.$options.props) {
    if (i !== 'value') {
      defaults[i] = $vm.$options.props[i].default
    }
  }
  const _options = __WEBPACK_IMPORTED_MODULE_0_object_assign___default()({}, defaults, options)
  for (let i in _options) {
    $vm[i] = _options[i]
  }
}




/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var Element = __webpack_require__(171);

var BoundingRect = __webpack_require__(30);

/**
 * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上
 * @module zrender/graphic/Group
 * @example
 *     var Group = require('zrender/container/Group');
 *     var Circle = require('zrender/graphic/shape/Circle');
 *     var g = new Group();
 *     g.position[0] = 100;
 *     g.position[1] = 100;
 *     g.add(new Circle({
 *         style: {
 *             x: 100,
 *             y: 100,
 *             r: 20,
 *         }
 *     }));
 *     zr.add(g);
 */

/**
 * @alias module:zrender/graphic/Group
 * @constructor
 * @extends module:zrender/mixin/Transformable
 * @extends module:zrender/mixin/Eventful
 */
var Group = function (opts) {
  opts = opts || {};
  Element.call(this, opts);

  for (var key in opts) {
    if (opts.hasOwnProperty(key)) {
      this[key] = opts[key];
    }
  }

  this._children = [];
  this.__storage = null;
  this.__dirty = true;
};

Group.prototype = {
  constructor: Group,
  isGroup: true,

  /**
   * @type {string}
   */
  type: 'group',

  /**
   * 所有子孙元素是否响应鼠标事件
   * @name module:/zrender/container/Group#silent
   * @type {boolean}
   * @default false
   */
  silent: false,

  /**
   * @return {Array.<module:zrender/Element>}
   */
  children: function () {
    return this._children.slice();
  },

  /**
   * 获取指定 index 的儿子节点
   * @param  {number} idx
   * @return {module:zrender/Element}
   */
  childAt: function (idx) {
    return this._children[idx];
  },

  /**
   * 获取指定名字的儿子节点
   * @param  {string} name
   * @return {module:zrender/Element}
   */
  childOfName: function (name) {
    var children = this._children;

    for (var i = 0; i < children.length; i++) {
      if (children[i].name === name) {
        return children[i];
      }
    }
  },

  /**
   * @return {number}
   */
  childCount: function () {
    return this._children.length;
  },

  /**
   * 添加子节点到最后
   * @param {module:zrender/Element} child
   */
  add: function (child) {
    if (child && child !== this && child.parent !== this) {
      this._children.push(child);

      this._doAdd(child);
    }

    return this;
  },

  /**
   * 添加子节点在 nextSibling 之前
   * @param {module:zrender/Element} child
   * @param {module:zrender/Element} nextSibling
   */
  addBefore: function (child, nextSibling) {
    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {
      var children = this._children;
      var idx = children.indexOf(nextSibling);

      if (idx >= 0) {
        children.splice(idx, 0, child);

        this._doAdd(child);
      }
    }

    return this;
  },
  _doAdd: function (child) {
    if (child.parent) {
      child.parent.remove(child);
    }

    child.parent = this;
    var storage = this.__storage;
    var zr = this.__zr;

    if (storage && storage !== child.__storage) {
      storage.addToStorage(child);

      if (child instanceof Group) {
        child.addChildrenToStorage(storage);
      }
    }

    zr && zr.refresh();
  },

  /**
   * 移除子节点
   * @param {module:zrender/Element} child
   */
  remove: function (child) {
    var zr = this.__zr;
    var storage = this.__storage;
    var children = this._children;
    var idx = zrUtil.indexOf(children, child);

    if (idx < 0) {
      return this;
    }

    children.splice(idx, 1);
    child.parent = null;

    if (storage) {
      storage.delFromStorage(child);

      if (child instanceof Group) {
        child.delChildrenFromStorage(storage);
      }
    }

    zr && zr.refresh();
    return this;
  },

  /**
   * 移除所有子节点
   */
  removeAll: function () {
    var children = this._children;
    var storage = this.__storage;
    var child;
    var i;

    for (i = 0; i < children.length; i++) {
      child = children[i];

      if (storage) {
        storage.delFromStorage(child);

        if (child instanceof Group) {
          child.delChildrenFromStorage(storage);
        }
      }

      child.parent = null;
    }

    children.length = 0;
    return this;
  },

  /**
   * 遍历所有子节点
   * @param  {Function} cb
   * @param  {}   context
   */
  eachChild: function (cb, context) {
    var children = this._children;

    for (var i = 0; i < children.length; i++) {
      var child = children[i];
      cb.call(context, child, i);
    }

    return this;
  },

  /**
   * 深度优先遍历所有子孙节点
   * @param  {Function} cb
   * @param  {}   context
   */
  traverse: function (cb, context) {
    for (var i = 0; i < this._children.length; i++) {
      var child = this._children[i];
      cb.call(context, child);

      if (child.type === 'group') {
        child.traverse(cb, context);
      }
    }

    return this;
  },
  addChildrenToStorage: function (storage) {
    for (var i = 0; i < this._children.length; i++) {
      var child = this._children[i];
      storage.addToStorage(child);

      if (child instanceof Group) {
        child.addChildrenToStorage(storage);
      }
    }
  },
  delChildrenFromStorage: function (storage) {
    for (var i = 0; i < this._children.length; i++) {
      var child = this._children[i];
      storage.delFromStorage(child);

      if (child instanceof Group) {
        child.delChildrenFromStorage(storage);
      }
    }
  },
  dirty: function () {
    this.__dirty = true;
    this.__zr && this.__zr.refresh();
    return this;
  },

  /**
   * @return {module:zrender/core/BoundingRect}
   */
  getBoundingRect: function (includeChildren) {
    // TODO Caching
    var rect = null;
    var tmpRect = new BoundingRect(0, 0, 0, 0);
    var children = includeChildren || this._children;
    var tmpMat = [];

    for (var i = 0; i < children.length; i++) {
      var child = children[i];

      if (child.ignore || child.invisible) {
        continue;
      }

      var childRect = child.getBoundingRect();
      var transform = child.getLocalTransform(tmpMat); // TODO
      // The boundingRect cacluated by transforming original
      // rect may be bigger than the actual bundingRect when rotation
      // is used. (Consider a circle rotated aginst its center, where
      // the actual boundingRect should be the same as that not be
      // rotated.) But we can not find better approach to calculate
      // actual boundingRect yet, considering performance.

      if (transform) {
        tmpRect.copy(childRect);
        tmpRect.applyTransform(transform);
        rect = rect || tmpRect.clone();
        rect.union(tmpRect);
      } else {
        rect = rect || childRect.clone();
        rect.union(childRect);
      }
    }

    return rect || tmpRect;
  }
};
zrUtil.inherits(Group, Element);
var _default = Group;
module.exports = _default;

/***/ }),
/* 83 */
/***/ (function(module, exports) {

var dpr = 1; // If in browser environment

if (typeof window !== 'undefined') {
  dpr = Math.max(window.devicePixelRatio || 1, 1);
}
/**
 * config默认配置项
 * @exports zrender/config
 * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)
 */

/**
 * debug日志选项：catchBrushException为true下有效
 * 0 : 不生成debug数据，发布用
 * 1 : 异常抛出，调试用
 * 2 : 控制台输出，调试用
 */


var debugMode = 0; // retina 屏幕优化

var devicePixelRatio = dpr;
exports.debugMode = debugMode;
exports.devicePixelRatio = devicePixelRatio;

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var Style = __webpack_require__(176);

var Element = __webpack_require__(171);

var RectText = __webpack_require__(444);

/**
 * 可绘制的图形基类
 * Base class of all displayable graphic objects
 * @module zrender/graphic/Displayable
 */

/**
 * @alias module:zrender/graphic/Displayable
 * @extends module:zrender/Element
 * @extends module:zrender/graphic/mixin/RectText
 */
function Displayable(opts) {
  opts = opts || {};
  Element.call(this, opts); // Extend properties

  for (var name in opts) {
    if (opts.hasOwnProperty(name) && name !== 'style') {
      this[name] = opts[name];
    }
  }
  /**
   * @type {module:zrender/graphic/Style}
   */


  this.style = new Style(opts.style, this);
  this._rect = null; // Shapes for cascade clipping.

  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted
  // Stateful.call(this, opts);
}

Displayable.prototype = {
  constructor: Displayable,
  type: 'displayable',

  /**
   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制
   * Dirty flag. From which painter will determine if this displayable object needs brush
   * @name module:zrender/graphic/Displayable#__dirty
   * @type {boolean}
   */
  __dirty: true,

  /**
   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件
   * If ignore drawing of the displayable object. Mouse event will still be triggered
   * @name module:/zrender/graphic/Displayable#invisible
   * @type {boolean}
   * @default false
   */
  invisible: false,

  /**
   * @name module:/zrender/graphic/Displayable#z
   * @type {number}
   * @default 0
   */
  z: 0,

  /**
   * @name module:/zrender/graphic/Displayable#z
   * @type {number}
   * @default 0
   */
  z2: 0,

  /**
   * z层level，决定绘画在哪层canvas中
   * @name module:/zrender/graphic/Displayable#zlevel
   * @type {number}
   * @default 0
   */
  zlevel: 0,

  /**
   * 是否可拖拽
   * @name module:/zrender/graphic/Displayable#draggable
   * @type {boolean}
   * @default false
   */
  draggable: false,

  /**
   * 是否正在拖拽
   * @name module:/zrender/graphic/Displayable#draggable
   * @type {boolean}
   * @default false
   */
  dragging: false,

  /**
   * 是否相应鼠标事件
   * @name module:/zrender/graphic/Displayable#silent
   * @type {boolean}
   * @default false
   */
  silent: false,

  /**
   * If enable culling
   * @type {boolean}
   * @default false
   */
  culling: false,

  /**
   * Mouse cursor when hovered
   * @name module:/zrender/graphic/Displayable#cursor
   * @type {string}
   */
  cursor: 'pointer',

  /**
   * If hover area is bounding rect
   * @name module:/zrender/graphic/Displayable#rectHover
   * @type {string}
   */
  rectHover: false,

  /**
   * Render the element progressively when the value >= 0,
   * usefull for large data.
   * @type {boolean}
   */
  progressive: false,

  /**
   * @type {boolean}
   */
  incremental: false,
  // inplace is used with incremental
  inplace: false,
  beforeBrush: function (ctx) {},
  afterBrush: function (ctx) {},

  /**
   * 图形绘制方法
   * @param {CanvasRenderingContext2D} ctx
   */
  // Interface
  brush: function (ctx, prevEl) {},

  /**
   * 获取最小包围盒
   * @return {module:zrender/core/BoundingRect}
   */
  // Interface
  getBoundingRect: function () {},

  /**
   * 判断坐标 x, y 是否在图形上
   * If displayable element contain coord x, y
   * @param  {number} x
   * @param  {number} y
   * @return {boolean}
   */
  contain: function (x, y) {
    return this.rectContain(x, y);
  },

  /**
   * @param  {Function} cb
   * @param  {}   context
   */
  traverse: function (cb, context) {
    cb.call(context, this);
  },

  /**
   * 判断坐标 x, y 是否在图形的包围盒上
   * If bounding rect of element contain coord x, y
   * @param  {number} x
   * @param  {number} y
   * @return {boolean}
   */
  rectContain: function (x, y) {
    var coord = this.transformCoordToLocal(x, y);
    var rect = this.getBoundingRect();
    return rect.contain(coord[0], coord[1]);
  },

  /**
   * 标记图形元素为脏，并且在下一帧重绘
   * Mark displayable element dirty and refresh next frame
   */
  dirty: function () {
    this.__dirty = true;
    this._rect = null;
    this.__zr && this.__zr.refresh();
  },

  /**
   * 图形是否会触发事件
   * If displayable object binded any event
   * @return {boolean}
   */
  // TODO, 通过 bind 绑定的事件
  // isSilent: function () {
  //     return !(
  //         this.hoverable || this.draggable
  //         || this.onmousemove || this.onmouseover || this.onmouseout
  //         || this.onmousedown || this.onmouseup || this.onclick
  //         || this.ondragenter || this.ondragover || this.ondragleave
  //         || this.ondrop
  //     );
  // },

  /**
   * Alias for animate('style')
   * @param {boolean} loop
   */
  animateStyle: function (loop) {
    return this.animate('style', loop);
  },
  attrKV: function (key, value) {
    if (key !== 'style') {
      Element.prototype.attrKV.call(this, key, value);
    } else {
      this.style.set(value);
    }
  },

  /**
   * @param {Object|string} key
   * @param {*} value
   */
  setStyle: function (key, value) {
    this.style.set(key, value);
    this.dirty(false);
    return this;
  },

  /**
   * Use given style object
   * @param  {Object} obj
   */
  useStyle: function (obj) {
    this.style = new Style(obj, this);
    this.dirty(false);
    return this;
  }
};
zrUtil.inherits(Displayable, Element);
zrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);

var _default = Displayable;
module.exports = _default;

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

var curve = __webpack_require__(65);

var vec2 = __webpack_require__(17);

var bbox = __webpack_require__(184);

var BoundingRect = __webpack_require__(30);

var _config = __webpack_require__(83);

var dpr = _config.devicePixelRatio;

/**
 * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中
 * 可以用于 isInsidePath 判断以及获取boundingRect
 *
 * @module zrender/core/PathProxy
 * @author Yi Shen (http://www.github.com/pissang)
 */
// TODO getTotalLength, getPointAtLength
var CMD = {
  M: 1,
  L: 2,
  C: 3,
  Q: 4,
  A: 5,
  Z: 6,
  // Rect
  R: 7
}; // var CMD_MEM_SIZE = {
//     M: 3,
//     L: 3,
//     C: 7,
//     Q: 5,
//     A: 9,
//     R: 5,
//     Z: 1
// };

var min = [];
var max = [];
var min2 = [];
var max2 = [];
var mathMin = Math.min;
var mathMax = Math.max;
var mathCos = Math.cos;
var mathSin = Math.sin;
var mathSqrt = Math.sqrt;
var mathAbs = Math.abs;
var hasTypedArray = typeof Float32Array != 'undefined';
/**
 * @alias module:zrender/core/PathProxy
 * @constructor
 */

var PathProxy = function (notSaveData) {
  this._saveData = !(notSaveData || false);

  if (this._saveData) {
    /**
     * Path data. Stored as flat array
     * @type {Array.<Object>}
     */
    this.data = [];
  }

  this._ctx = null;
};
/**
 * 快速计算Path包围盒（并不是最小包围盒）
 * @return {Object}
 */


PathProxy.prototype = {
  constructor: PathProxy,
  _xi: 0,
  _yi: 0,
  _x0: 0,
  _y0: 0,
  // Unit x, Unit y. Provide for avoiding drawing that too short line segment
  _ux: 0,
  _uy: 0,
  _len: 0,
  _lineDash: null,
  _dashOffset: 0,
  _dashIdx: 0,
  _dashSum: 0,

  /**
   * @readOnly
   */
  setScale: function (sx, sy) {
    this._ux = mathAbs(1 / dpr / sx) || 0;
    this._uy = mathAbs(1 / dpr / sy) || 0;
  },
  getContext: function () {
    return this._ctx;
  },

  /**
   * @param  {CanvasRenderingContext2D} ctx
   * @return {module:zrender/core/PathProxy}
   */
  beginPath: function (ctx) {
    this._ctx = ctx;
    ctx && ctx.beginPath();
    ctx && (this.dpr = ctx.dpr); // Reset

    if (this._saveData) {
      this._len = 0;
    }

    if (this._lineDash) {
      this._lineDash = null;
      this._dashOffset = 0;
    }

    return this;
  },

  /**
   * @param  {number} x
   * @param  {number} y
   * @return {module:zrender/core/PathProxy}
   */
  moveTo: function (x, y) {
    this.addData(CMD.M, x, y);
    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用
    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。
    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要
    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持

    this._x0 = x;
    this._y0 = y;
    this._xi = x;
    this._yi = y;
    return this;
  },

  /**
   * @param  {number} x
   * @param  {number} y
   * @return {module:zrender/core/PathProxy}
   */
  lineTo: function (x, y) {
    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment
    || this._len < 5;
    this.addData(CMD.L, x, y);

    if (this._ctx && exceedUnit) {
      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);
    }

    if (exceedUnit) {
      this._xi = x;
      this._yi = y;
    }

    return this;
  },

  /**
   * @param  {number} x1
   * @param  {number} y1
   * @param  {number} x2
   * @param  {number} y2
   * @param  {number} x3
   * @param  {number} y3
   * @return {module:zrender/core/PathProxy}
   */
  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {
    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);

    if (this._ctx) {
      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);
    }

    this._xi = x3;
    this._yi = y3;
    return this;
  },

  /**
   * @param  {number} x1
   * @param  {number} y1
   * @param  {number} x2
   * @param  {number} y2
   * @return {module:zrender/core/PathProxy}
   */
  quadraticCurveTo: function (x1, y1, x2, y2) {
    this.addData(CMD.Q, x1, y1, x2, y2);

    if (this._ctx) {
      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);
    }

    this._xi = x2;
    this._yi = y2;
    return this;
  },

  /**
   * @param  {number} cx
   * @param  {number} cy
   * @param  {number} r
   * @param  {number} startAngle
   * @param  {number} endAngle
   * @param  {boolean} anticlockwise
   * @return {module:zrender/core/PathProxy}
   */
  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {
    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);
    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);
    this._xi = mathCos(endAngle) * r + cx;
    this._yi = mathSin(endAngle) * r + cx;
    return this;
  },
  // TODO
  arcTo: function (x1, y1, x2, y2, radius) {
    if (this._ctx) {
      this._ctx.arcTo(x1, y1, x2, y2, radius);
    }

    return this;
  },
  // TODO
  rect: function (x, y, w, h) {
    this._ctx && this._ctx.rect(x, y, w, h);
    this.addData(CMD.R, x, y, w, h);
    return this;
  },

  /**
   * @return {module:zrender/core/PathProxy}
   */
  closePath: function () {
    this.addData(CMD.Z);
    var ctx = this._ctx;
    var x0 = this._x0;
    var y0 = this._y0;

    if (ctx) {
      this._needsDash() && this._dashedLineTo(x0, y0);
      ctx.closePath();
    }

    this._xi = x0;
    this._yi = y0;
    return this;
  },

  /**
   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。
   * stroke 同样
   * @param {CanvasRenderingContext2D} ctx
   * @return {module:zrender/core/PathProxy}
   */
  fill: function (ctx) {
    ctx && ctx.fill();
    this.toStatic();
  },

  /**
   * @param {CanvasRenderingContext2D} ctx
   * @return {module:zrender/core/PathProxy}
   */
  stroke: function (ctx) {
    ctx && ctx.stroke();
    this.toStatic();
  },

  /**
   * 必须在其它绘制命令前调用
   * Must be invoked before all other path drawing methods
   * @return {module:zrender/core/PathProxy}
   */
  setLineDash: function (lineDash) {
    if (lineDash instanceof Array) {
      this._lineDash = lineDash;
      this._dashIdx = 0;
      var lineDashSum = 0;

      for (var i = 0; i < lineDash.length; i++) {
        lineDashSum += lineDash[i];
      }

      this._dashSum = lineDashSum;
    }

    return this;
  },

  /**
   * 必须在其它绘制命令前调用
   * Must be invoked before all other path drawing methods
   * @return {module:zrender/core/PathProxy}
   */
  setLineDashOffset: function (offset) {
    this._dashOffset = offset;
    return this;
  },

  /**
   *
   * @return {boolean}
   */
  len: function () {
    return this._len;
  },

  /**
   * 直接设置 Path 数据
   */
  setData: function (data) {
    var len = data.length;

    if (!(this.data && this.data.length == len) && hasTypedArray) {
      this.data = new Float32Array(len);
    }

    for (var i = 0; i < len; i++) {
      this.data[i] = data[i];
    }

    this._len = len;
  },

  /**
   * 添加子路径
   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path
   */
  appendPath: function (path) {
    if (!(path instanceof Array)) {
      path = [path];
    }

    var len = path.length;
    var appendSize = 0;
    var offset = this._len;

    for (var i = 0; i < len; i++) {
      appendSize += path[i].len();
    }

    if (hasTypedArray && this.data instanceof Float32Array) {
      this.data = new Float32Array(offset + appendSize);
    }

    for (var i = 0; i < len; i++) {
      var appendPathData = path[i].data;

      for (var k = 0; k < appendPathData.length; k++) {
        this.data[offset++] = appendPathData[k];
      }
    }

    this._len = offset;
  },

  /**
   * 填充 Path 数据。
   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。
   */
  addData: function (cmd) {
    if (!this._saveData) {
      return;
    }

    var data = this.data;

    if (this._len + arguments.length > data.length) {
      // 因为之前的数组已经转换成静态的 Float32Array
      // 所以不够用时需要扩展一个新的动态数组
      this._expandData();

      data = this.data;
    }

    for (var i = 0; i < arguments.length; i++) {
      data[this._len++] = arguments[i];
    }

    this._prevCmd = cmd;
  },
  _expandData: function () {
    // Only if data is Float32Array
    if (!(this.data instanceof Array)) {
      var newData = [];

      for (var i = 0; i < this._len; i++) {
        newData[i] = this.data[i];
      }

      this.data = newData;
    }
  },

  /**
   * If needs js implemented dashed line
   * @return {boolean}
   * @private
   */
  _needsDash: function () {
    return this._lineDash;
  },
  _dashedLineTo: function (x1, y1) {
    var dashSum = this._dashSum;
    var offset = this._dashOffset;
    var lineDash = this._lineDash;
    var ctx = this._ctx;
    var x0 = this._xi;
    var y0 = this._yi;
    var dx = x1 - x0;
    var dy = y1 - y0;
    var dist = mathSqrt(dx * dx + dy * dy);
    var x = x0;
    var y = y0;
    var dash;
    var nDash = lineDash.length;
    var idx;
    dx /= dist;
    dy /= dist;

    if (offset < 0) {
      // Convert to positive offset
      offset = dashSum + offset;
    }

    offset %= dashSum;
    x -= offset * dx;
    y -= offset * dy;

    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {
      idx = this._dashIdx;
      dash = lineDash[idx];
      x += dx * dash;
      y += dy * dash;
      this._dashIdx = (idx + 1) % nDash; // Skip positive offset

      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {
        continue;
      }

      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));
    } // Offset for next lineTo


    dx = x - x1;
    dy = y - y1;
    this._dashOffset = -mathSqrt(dx * dx + dy * dy);
  },
  // Not accurate dashed line to
  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {
    var dashSum = this._dashSum;
    var offset = this._dashOffset;
    var lineDash = this._lineDash;
    var ctx = this._ctx;
    var x0 = this._xi;
    var y0 = this._yi;
    var t;
    var dx;
    var dy;
    var cubicAt = curve.cubicAt;
    var bezierLen = 0;
    var idx = this._dashIdx;
    var nDash = lineDash.length;
    var x;
    var y;
    var tmpLen = 0;

    if (offset < 0) {
      // Convert to positive offset
      offset = dashSum + offset;
    }

    offset %= dashSum; // Bezier approx length

    for (t = 0; t < 1; t += 0.1) {
      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);
      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);
      bezierLen += mathSqrt(dx * dx + dy * dy);
    } // Find idx after add offset


    for (; idx < nDash; idx++) {
      tmpLen += lineDash[idx];

      if (tmpLen > offset) {
        break;
      }
    }

    t = (tmpLen - offset) / bezierLen;

    while (t <= 1) {
      x = cubicAt(x0, x1, x2, x3, t);
      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier
      // Bad result if dash is long

      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);
      t += lineDash[idx] / bezierLen;
      idx = (idx + 1) % nDash;
    } // Finish the last segment and calculate the new offset


    idx % 2 !== 0 && ctx.lineTo(x3, y3);
    dx = x3 - x;
    dy = y3 - y;
    this._dashOffset = -mathSqrt(dx * dx + dy * dy);
  },
  _dashedQuadraticTo: function (x1, y1, x2, y2) {
    // Convert quadratic to cubic using degree elevation
    var x3 = x2;
    var y3 = y2;
    x2 = (x2 + 2 * x1) / 3;
    y2 = (y2 + 2 * y1) / 3;
    x1 = (this._xi + 2 * x1) / 3;
    y1 = (this._yi + 2 * y1) / 3;

    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);
  },

  /**
   * 转成静态的 Float32Array 减少堆内存占用
   * Convert dynamic array to static Float32Array
   */
  toStatic: function () {
    var data = this.data;

    if (data instanceof Array) {
      data.length = this._len;

      if (hasTypedArray) {
        this.data = new Float32Array(data);
      }
    }
  },

  /**
   * @return {module:zrender/core/BoundingRect}
   */
  getBoundingRect: function () {
    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;
    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;
    var data = this.data;
    var xi = 0;
    var yi = 0;
    var x0 = 0;
    var y0 = 0;

    for (var i = 0; i < data.length;) {
      var cmd = data[i++];

      if (i == 1) {
        // 如果第一个命令是 L, C, Q
        // 则 previous point 同绘制命令的第一个 point
        //
        // 第一个命令为 Arc 的情况下会在后面特殊处理
        xi = data[i];
        yi = data[i + 1];
        x0 = xi;
        y0 = yi;
      }

      switch (cmd) {
        case CMD.M:
          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点
          // 在 closePath 的时候使用
          x0 = data[i++];
          y0 = data[i++];
          xi = x0;
          yi = y0;
          min2[0] = x0;
          min2[1] = y0;
          max2[0] = x0;
          max2[1] = y0;
          break;

        case CMD.L:
          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);
          xi = data[i++];
          yi = data[i++];
          break;

        case CMD.C:
          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);
          xi = data[i++];
          yi = data[i++];
          break;

        case CMD.Q:
          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);
          xi = data[i++];
          yi = data[i++];
          break;

        case CMD.A:
          // TODO Arc 判断的开销比较大
          var cx = data[i++];
          var cy = data[i++];
          var rx = data[i++];
          var ry = data[i++];
          var startAngle = data[i++];
          var endAngle = data[i++] + startAngle; // TODO Arc 旋转

          var psi = data[i++];
          var anticlockwise = 1 - data[i++];

          if (i == 1) {
            // 直接使用 arc 命令
            // 第一个命令起点还未定义
            x0 = mathCos(startAngle) * rx + cx;
            y0 = mathSin(startAngle) * ry + cy;
          }

          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);
          xi = mathCos(endAngle) * rx + cx;
          yi = mathSin(endAngle) * ry + cy;
          break;

        case CMD.R:
          x0 = xi = data[i++];
          y0 = yi = data[i++];
          var width = data[i++];
          var height = data[i++]; // Use fromLine

          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);
          break;

        case CMD.Z:
          xi = x0;
          yi = y0;
          break;
      } // Union


      vec2.min(min, min, min2);
      vec2.max(max, max, max2);
    } // No data


    if (i === 0) {
      min[0] = min[1] = max[0] = max[1] = 0;
    }

    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);
  },

  /**
   * Rebuild path from current data
   * Rebuild path will not consider javascript implemented line dash.
   * @param {CanvasRenderingContext2D} ctx
   */
  rebuildPath: function (ctx) {
    var d = this.data;
    var x0, y0;
    var xi, yi;
    var x, y;
    var ux = this._ux;
    var uy = this._uy;
    var len = this._len;

    for (var i = 0; i < len;) {
      var cmd = d[i++];

      if (i == 1) {
        // 如果第一个命令是 L, C, Q
        // 则 previous point 同绘制命令的第一个 point
        //
        // 第一个命令为 Arc 的情况下会在后面特殊处理
        xi = d[i];
        yi = d[i + 1];
        x0 = xi;
        y0 = yi;
      }

      switch (cmd) {
        case CMD.M:
          x0 = xi = d[i++];
          y0 = yi = d[i++];
          ctx.moveTo(xi, yi);
          break;

        case CMD.L:
          x = d[i++];
          y = d[i++]; // Not draw too small seg between

          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {
            ctx.lineTo(x, y);
            xi = x;
            yi = y;
          }

          break;

        case CMD.C:
          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);
          xi = d[i - 2];
          yi = d[i - 1];
          break;

        case CMD.Q:
          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);
          xi = d[i - 2];
          yi = d[i - 1];
          break;

        case CMD.A:
          var cx = d[i++];
          var cy = d[i++];
          var rx = d[i++];
          var ry = d[i++];
          var theta = d[i++];
          var dTheta = d[i++];
          var psi = d[i++];
          var fs = d[i++];
          var r = rx > ry ? rx : ry;
          var scaleX = rx > ry ? 1 : rx / ry;
          var scaleY = rx > ry ? ry / rx : 1;
          var isEllipse = Math.abs(rx - ry) > 1e-3;
          var endAngle = theta + dTheta;

          if (isEllipse) {
            ctx.translate(cx, cy);
            ctx.rotate(psi);
            ctx.scale(scaleX, scaleY);
            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);
            ctx.scale(1 / scaleX, 1 / scaleY);
            ctx.rotate(-psi);
            ctx.translate(-cx, -cy);
          } else {
            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);
          }

          if (i == 1) {
            // 直接使用 arc 命令
            // 第一个命令起点还未定义
            x0 = mathCos(theta) * rx + cx;
            y0 = mathSin(theta) * ry + cy;
          }

          xi = mathCos(endAngle) * rx + cx;
          yi = mathSin(endAngle) * ry + cy;
          break;

        case CMD.R:
          x0 = xi = d[i];
          y0 = yi = d[i + 1];
          ctx.rect(d[i++], d[i++], d[i++], d[i++]);
          break;

        case CMD.Z:
          ctx.closePath();
          xi = x0;
          yi = y0;
      }
    }
  }
};
PathProxy.CMD = CMD;
var _default = PathProxy;
module.exports = _default;

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var _clazz = __webpack_require__(48);

var parseClassType = _clazz.parseClassType;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var base = 0;
/**
 * @public
 * @param {string} type
 * @return {string}
 */

function getUID(type) {
  // Considering the case of crossing js context,
  // use Math.random to make id as unique as possible.
  return [type || '', base++, Math.random().toFixed(5)].join('_');
}
/**
 * @inner
 */


function enableSubTypeDefaulter(entity) {
  var subTypeDefaulters = {};

  entity.registerSubTypeDefaulter = function (componentType, defaulter) {
    componentType = parseClassType(componentType);
    subTypeDefaulters[componentType.main] = defaulter;
  };

  entity.determineSubType = function (componentType, option) {
    var type = option.type;

    if (!type) {
      var componentTypeMain = parseClassType(componentType).main;

      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {
        type = subTypeDefaulters[componentTypeMain](option);
      }
    }

    return type;
  };

  return entity;
}
/**
 * Topological travel on Activity Network (Activity On Vertices).
 * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].
 *
 * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.
 *
 * If there is circle dependencey, Error will be thrown.
 *
 */


function enableTopologicalTravel(entity, dependencyGetter) {
  /**
   * @public
   * @param {Array.<string>} targetNameList Target Component type list.
   *                                           Can be ['aa', 'bb', 'aa.xx']
   * @param {Array.<string>} fullNameList By which we can build dependency graph.
   * @param {Function} callback Params: componentType, dependencies.
   * @param {Object} context Scope of callback.
   */
  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {
    if (!targetNameList.length) {
      return;
    }

    var result = makeDepndencyGraph(fullNameList);
    var graph = result.graph;
    var stack = result.noEntryList;
    var targetNameSet = {};
    zrUtil.each(targetNameList, function (name) {
      targetNameSet[name] = true;
    });

    while (stack.length) {
      var currComponentType = stack.pop();
      var currVertex = graph[currComponentType];
      var isInTargetNameSet = !!targetNameSet[currComponentType];

      if (isInTargetNameSet) {
        callback.call(context, currComponentType, currVertex.originalDeps.slice());
        delete targetNameSet[currComponentType];
      }

      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);
    }

    zrUtil.each(targetNameSet, function () {
      throw new Error('Circle dependency may exists');
    });

    function removeEdge(succComponentType) {
      graph[succComponentType].entryCount--;

      if (graph[succComponentType].entryCount === 0) {
        stack.push(succComponentType);
      }
    } // Consider this case: legend depends on series, and we call
    // chart.setOption({series: [...]}), where only series is in option.
    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will
    // not be called, but only sereis.mergeOption is called. Thus legend
    // have no chance to update its local record about series (like which
    // name of series is available in legend).


    function removeEdgeAndAdd(succComponentType) {
      targetNameSet[succComponentType] = true;
      removeEdge(succComponentType);
    }
  };
  /**
   * DepndencyGraph: {Object}
   * key: conponentType,
   * value: {
   *     successor: [conponentTypes...],
   *     originalDeps: [conponentTypes...],
   *     entryCount: {number}
   * }
   */


  function makeDepndencyGraph(fullNameList) {
    var graph = {};
    var noEntryList = [];
    zrUtil.each(fullNameList, function (name) {
      var thisItem = createDependencyGraphItem(graph, name);
      var originalDeps = thisItem.originalDeps = dependencyGetter(name);
      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);
      thisItem.entryCount = availableDeps.length;

      if (thisItem.entryCount === 0) {
        noEntryList.push(name);
      }

      zrUtil.each(availableDeps, function (dependentName) {
        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {
          thisItem.predecessor.push(dependentName);
        }

        var thatItem = createDependencyGraphItem(graph, dependentName);

        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {
          thatItem.successor.push(name);
        }
      });
    });
    return {
      graph: graph,
      noEntryList: noEntryList
    };
  }

  function createDependencyGraphItem(graph, name) {
    if (!graph[name]) {
      graph[name] = {
        predecessor: [],
        successor: []
      };
    }

    return graph[name];
  }

  function getAvailableDependencies(originalDeps, fullNameList) {
    var availableDeps = [];
    zrUtil.each(originalDeps, function (dep) {
      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);
    });
    return availableDeps;
  }
}

exports.getUID = getUID;
exports.enableSubTypeDefaulter = enableSubTypeDefaulter;
exports.enableTopologicalTravel = enableTopologicalTravel;

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

var _config = __webpack_require__(16);

var __DEV__ = _config.__DEV__;

var _model = __webpack_require__(7);

var makeInner = _model.makeInner;
var getDataItemValue = _model.getDataItemValue;

var _referHelper = __webpack_require__(190);

var getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;

var _util = __webpack_require__(1);

var createHashMap = _util.createHashMap;
var each = _util.each;
var map = _util.map;
var isArray = _util.isArray;
var isString = _util.isString;
var isObject = _util.isObject;
var isTypedArray = _util.isTypedArray;
var isArrayLike = _util.isArrayLike;
var extend = _util.extend;
var assert = _util.assert;

var Source = __webpack_require__(76);

var _sourceType = __webpack_require__(77);

var SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;
var SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;
var SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;
var SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;
var SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;
var SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;
var SERIES_LAYOUT_BY_ROW = _sourceType.SERIES_LAYOUT_BY_ROW;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var inner = makeInner();
/**
 * @see {module:echarts/data/Source}
 * @param {module:echarts/component/dataset/DatasetModel} datasetModel
 * @return {string} sourceFormat
 */

function detectSourceFormat(datasetModel) {
  var data = datasetModel.option.source;
  var sourceFormat = SOURCE_FORMAT_UNKNOWN;

  if (isTypedArray(data)) {
    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;
  } else if (isArray(data)) {
    // FIXME Whether tolerate null in top level array?
    for (var i = 0, len = data.length; i < len; i++) {
      var item = data[i];

      if (item == null) {
        continue;
      } else if (isArray(item)) {
        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;
        break;
      } else if (isObject(item)) {
        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;
        break;
      }
    }
  } else if (isObject(data)) {
    for (var key in data) {
      if (data.hasOwnProperty(key) && isArrayLike(data[key])) {
        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;
        break;
      }
    }
  } else if (data != null) {
    throw new Error('Invalid data');
  }

  inner(datasetModel).sourceFormat = sourceFormat;
}
/**
 * [Scenarios]:
 * (1) Provide source data directly:
 *     series: {
 *         encode: {...},
 *         dimensions: [...]
 *         seriesLayoutBy: 'row',
 *         data: [[...]]
 *     }
 * (2) Refer to datasetModel.
 *     series: [{
 *         encode: {...}
 *         // Ignore datasetIndex means `datasetIndex: 0`
 *         // and the dimensions defination in dataset is used
 *     }, {
 *         encode: {...},
 *         seriesLayoutBy: 'column',
 *         datasetIndex: 1
 *     }]
 *
 * Get data from series itself or datset.
 * @return {module:echarts/data/Source} source
 */


function getSource(seriesModel) {
  return inner(seriesModel).source;
}
/**
 * MUST be called before mergeOption of all series.
 * @param {module:echarts/model/Global} ecModel
 */


function resetSourceDefaulter(ecModel) {
  // `datasetMap` is used to make default encode.
  inner(ecModel).datasetMap = createHashMap();
}
/**
 * [Caution]:
 * MUST be called after series option merged and
 * before "series.getInitailData()" called.
 *
 * [The rule of making default encode]:
 * Category axis (if exists) alway map to the first dimension.
 * Each other axis occupies a subsequent dimension.
 *
 * [Why make default encode]:
 * Simplify the typing of encode in option, avoiding the case like that:
 * series: [{encode: {x: 0, y: 1}}, {encode: {x: 0, y: 2}}, {encode: {x: 0, y: 3}}],
 * where the "y" have to be manually typed as "1, 2, 3, ...".
 *
 * @param {module:echarts/model/Series} seriesModel
 */


function prepareSource(seriesModel) {
  var seriesOption = seriesModel.option;
  var data = seriesOption.data;
  var sourceFormat = isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL;
  var fromDataset = false;
  var seriesLayoutBy = seriesOption.seriesLayoutBy;
  var sourceHeader = seriesOption.sourceHeader;
  var dimensionsDefine = seriesOption.dimensions;
  var datasetModel = getDatasetModel(seriesModel);

  if (datasetModel) {
    var datasetOption = datasetModel.option;
    data = datasetOption.source;
    sourceFormat = inner(datasetModel).sourceFormat;
    fromDataset = true; // These settings from series has higher priority.

    seriesLayoutBy = seriesLayoutBy || datasetOption.seriesLayoutBy;
    sourceHeader == null && (sourceHeader = datasetOption.sourceHeader);
    dimensionsDefine = dimensionsDefine || datasetOption.dimensions;
  }

  var completeResult = completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine); // Note: dataset option does not have `encode`.

  var encodeDefine = seriesOption.encode;

  if (!encodeDefine && datasetModel) {
    encodeDefine = makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult);
  }

  inner(seriesModel).source = new Source({
    data: data,
    fromDataset: fromDataset,
    seriesLayoutBy: seriesLayoutBy,
    sourceFormat: sourceFormat,
    dimensionsDefine: completeResult.dimensionsDefine,
    startIndex: completeResult.startIndex,
    dimensionsDetectCount: completeResult.dimensionsDetectCount,
    encodeDefine: encodeDefine
  });
} // return {startIndex, dimensionsDefine, dimensionsCount}


function completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine) {
  if (!data) {
    return {
      dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine)
    };
  }

  var dimensionsDetectCount;
  var startIndex;
  var findPotentialName;

  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {
    // Rule: Most of the first line are string: it is header.
    // Caution: consider a line with 5 string and 1 number,
    // it still can not be sure it is a head, because the
    // 5 string may be 5 values of category columns.
    if (sourceHeader === 'auto' || sourceHeader == null) {
      arrayRowsTravelFirst(function (val) {
        // '-' is regarded as null/undefined.
        if (val != null && val !== '-') {
          if (isString(val)) {
            startIndex == null && (startIndex = 1);
          } else {
            startIndex = 0;
          }
        } // 10 is an experience number, avoid long loop.

      }, seriesLayoutBy, data, 10);
    } else {
      startIndex = sourceHeader ? 1 : 0;
    }

    if (!dimensionsDefine && startIndex === 1) {
      dimensionsDefine = [];
      arrayRowsTravelFirst(function (val, index) {
        dimensionsDefine[index] = val != null ? val : '';
      }, seriesLayoutBy, data);
    }

    dimensionsDetectCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? data.length : data[0] ? data[0].length : null;
  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {
    if (!dimensionsDefine) {
      dimensionsDefine = objectRowsCollectDimensions(data);
      findPotentialName = true;
    }
  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {
    if (!dimensionsDefine) {
      dimensionsDefine = [];
      findPotentialName = true;
      each(data, function (colArr, key) {
        dimensionsDefine.push(key);
      });
    }
  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {
    var value0 = getDataItemValue(data[0]);
    dimensionsDetectCount = isArray(value0) && value0.length || 1;
  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {}

  var potentialNameDimIndex;

  if (findPotentialName) {
    each(dimensionsDefine, function (dim, idx) {
      if ((isObject(dim) ? dim.name : dim) === 'name') {
        potentialNameDimIndex = idx;
      }
    });
  }

  return {
    startIndex: startIndex,
    dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine),
    dimensionsDetectCount: dimensionsDetectCount,
    potentialNameDimIndex: potentialNameDimIndex // TODO: potentialIdDimIdx

  };
} // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],
// which is reasonable. But dimension name is duplicated.
// Returns undefined or an array contains only object without null/undefiend or string.


function normalizeDimensionsDefine(dimensionsDefine) {
  if (!dimensionsDefine) {
    // The meaning of null/undefined is different from empty array.
    return;
  }

  var nameMap = createHashMap();
  return map(dimensionsDefine, function (item, index) {
    item = extend({}, isObject(item) ? item : {
      name: item
    }); // User can set null in dimensions.
    // We dont auto specify name, othewise a given name may
    // cause it be refered unexpectedly.

    if (item.name == null) {
      return item;
    } // Also consider number form like 2012.


    item.name += ''; // User may also specify displayName.
    // displayName will always exists except user not
    // specified or dim name is not specified or detected.
    // (A auto generated dim name will not be used as
    // displayName).

    if (item.displayName == null) {
      item.displayName = item.name;
    }

    var exist = nameMap.get(item.name);

    if (!exist) {
      nameMap.set(item.name, {
        count: 1
      });
    } else {
      item.name += '-' + exist.count++;
    }

    return item;
  });
}

function arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {
  maxLoop == null && (maxLoop = Infinity);

  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {
    for (var i = 0; i < data.length && i < maxLoop; i++) {
      cb(data[i] ? data[i][0] : null, i);
    }
  } else {
    var value0 = data[0] || [];

    for (var i = 0; i < value0.length && i < maxLoop; i++) {
      cb(value0[i], i);
    }
  }
}

function objectRowsCollectDimensions(data) {
  var firstIndex = 0;
  var obj;

  while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line


  if (obj) {
    var dimensions = [];
    each(obj, function (value, key) {
      dimensions.push(key);
    });
    return dimensions;
  }
} // ??? TODO merge to completedimensions, where also has
// default encode making logic. And the default rule
// should depends on series? consider 'map'.


function makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult) {
  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);
  var encode = {}; // var encodeTooltip = [];
  // var encodeLabel = [];

  var encodeItemName = [];
  var encodeSeriesName = [];
  var seriesType = seriesModel.subType; // ??? TODO refactor: provide by series itself.
  // Consider the case: 'map' series is based on geo coordSys,
  // 'graph', 'heatmap' can be based on cartesian. But can not
  // give default rule simply here.

  var nSeriesMap = createHashMap(['pie', 'map', 'funnel']);
  var cSeriesMap = createHashMap(['line', 'bar', 'pictorialBar', 'scatter', 'effectScatter', 'candlestick', 'boxplot']); // Usually in this case series will use the first data
  // dimension as the "value" dimension, or other default
  // processes respectively.

  if (coordSysDefine && cSeriesMap.get(seriesType) != null) {
    var ecModel = seriesModel.ecModel;
    var datasetMap = inner(ecModel).datasetMap;
    var key = datasetModel.uid + '_' + seriesLayoutBy;
    var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {
      categoryWayDim: 1,
      valueWayDim: 0
    }); // TODO
    // Auto detect first time axis and do arrangement.

    each(coordSysDefine.coordSysDims, function (coordDim) {
      // In value way.
      if (coordSysDefine.firstCategoryDimIndex == null) {
        var dataDim = datasetRecord.valueWayDim++;
        encode[coordDim] = dataDim; // ??? TODO give a better default series name rule?
        // especially when encode x y specified.
        // consider: when mutiple series share one dimension
        // category axis, series name should better use
        // the other dimsion name. On the other hand, use
        // both dimensions name.

        encodeSeriesName.push(dataDim); // encodeTooltip.push(dataDim);
        // encodeLabel.push(dataDim);
      } // In category way, category axis.
      else if (coordSysDefine.categoryAxisMap.get(coordDim)) {
          encode[coordDim] = 0;
          encodeItemName.push(0);
        } // In category way, non-category axis.
        else {
            var dataDim = datasetRecord.categoryWayDim++;
            encode[coordDim] = dataDim; // encodeTooltip.push(dataDim);
            // encodeLabel.push(dataDim);

            encodeSeriesName.push(dataDim);
          }
    });
  } // Do not make a complex rule! Hard to code maintain and not necessary.
  // ??? TODO refactor: provide by series itself.
  // [{name: ..., value: ...}, ...] like:
  else if (nSeriesMap.get(seriesType) != null) {
      // Find the first not ordinal. (5 is an experience value)
      var firstNotOrdinal;

      for (var i = 0; i < 5 && firstNotOrdinal == null; i++) {
        if (!doGuessOrdinal(data, sourceFormat, seriesLayoutBy, completeResult.dimensionsDefine, completeResult.startIndex, i)) {
          firstNotOrdinal = i;
        }
      }

      if (firstNotOrdinal != null) {
        encode.value = firstNotOrdinal;
        var nameDimIndex = completeResult.potentialNameDimIndex || Math.max(firstNotOrdinal - 1, 0); // By default, label use itemName in charts.
        // So we dont set encodeLabel here.

        encodeSeriesName.push(nameDimIndex);
        encodeItemName.push(nameDimIndex); // encodeTooltip.push(firstNotOrdinal);
      }
    } // encodeTooltip.length && (encode.tooltip = encodeTooltip);
  // encodeLabel.length && (encode.label = encodeLabel);


  encodeItemName.length && (encode.itemName = encodeItemName);
  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);
  return encode;
}
/**
 * If return null/undefined, indicate that should not use datasetModel.
 */


function getDatasetModel(seriesModel) {
  var option = seriesModel.option; // Caution: consider the scenario:
  // A dataset is declared and a series is not expected to use the dataset,
  // and at the beginning `setOption({series: { noData })` (just prepare other
  // option but no data), then `setOption({series: {data: [...]}); In this case,
  // the user should set an empty array to avoid that dataset is used by default.

  var thisData = option.data;

  if (!thisData) {
    return seriesModel.ecModel.getComponent('dataset', option.datasetIndex || 0);
  }
}
/**
 * The rule should not be complex, otherwise user might not
 * be able to known where the data is wrong.
 * The code is ugly, but how to make it neat?
 *
 * @param {module:echars/data/Source} source
 * @param {number} dimIndex
 * @return {boolean} Whether ordinal.
 */


function guessOrdinal(source, dimIndex) {
  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);
} // dimIndex may be overflow source data.


function doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {
  var result; // Experience value.

  var maxLoop = 5;

  if (isTypedArray(data)) {
    return false;
  } // When sourceType is 'objectRows' or 'keyedColumns', dimensionsDefine
  // always exists in source.


  var dimName;

  if (dimensionsDefine) {
    dimName = dimensionsDefine[dimIndex];
    dimName = isObject(dimName) ? dimName.name : dimName;
  }

  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {
    if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {
      var sample = data[dimIndex];

      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {
        if ((result = detectValue(sample[startIndex + i])) != null) {
          return result;
        }
      }
    } else {
      for (var i = 0; i < data.length && i < maxLoop; i++) {
        var row = data[startIndex + i];

        if (row && (result = detectValue(row[dimIndex])) != null) {
          return result;
        }
      }
    }
  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {
    if (!dimName) {
      return;
    }

    for (var i = 0; i < data.length && i < maxLoop; i++) {
      var item = data[i];

      if (item && (result = detectValue(item[dimName])) != null) {
        return result;
      }
    }
  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {
    if (!dimName) {
      return;
    }

    var sample = data[dimName];

    if (!sample || isTypedArray(sample)) {
      return false;
    }

    for (var i = 0; i < sample.length && i < maxLoop; i++) {
      if ((result = detectValue(sample[i])) != null) {
        return result;
      }
    }
  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {
    for (var i = 0; i < data.length && i < maxLoop; i++) {
      var item = data[i];
      var val = getDataItemValue(item);

      if (!isArray(val)) {
        return false;
      }

      if ((result = detectValue(val[dimIndex])) != null) {
        return result;
      }
    }
  }

  function detectValue(val) {
    // Consider usage convenience, '1', '2' will be treated as "number".
    // `isFinit('')` get `true`.
    if (val != null && isFinite(val) && val !== '') {
      return false;
    } else if (isString(val) && val !== '-') {
      return true;
    }
  }

  return false;
}

exports.detectSourceFormat = detectSourceFormat;
exports.getSource = getSource;
exports.resetSourceDefaulter = resetSourceDefaulter;
exports.prepareSource = prepareSource;
exports.guessOrdinal = guessOrdinal;

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

var clazzUtil = __webpack_require__(48);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * // Scale class management
 * @module echarts/scale/Scale
 */

/**
 * @param {Object} [setting]
 */
function Scale(setting) {
  this._setting = setting || {};
  /**
   * Extent
   * @type {Array.<number>}
   * @protected
   */

  this._extent = [Infinity, -Infinity];
  /**
   * Step is calculated in adjustExtent
   * @type {Array.<number>}
   * @protected
   */

  this._interval = 0;
  this.init && this.init.apply(this, arguments);
}
/**
 * Parse input val to valid inner number.
 * @param {*} val
 * @return {number}
 */


Scale.prototype.parse = function (val) {
  // Notice: This would be a trap here, If the implementation
  // of this method depends on extent, and this method is used
  // before extent set (like in dataZoom), it would be wrong.
  // Nevertheless, parse does not depend on extent generally.
  return val;
};

Scale.prototype.getSetting = function (name) {
  return this._setting[name];
};

Scale.prototype.contain = function (val) {
  var extent = this._extent;
  return val >= extent[0] && val <= extent[1];
};
/**
 * Normalize value to linear [0, 1], return 0.5 if extent span is 0
 * @param {number} val
 * @return {number}
 */


Scale.prototype.normalize = function (val) {
  var extent = this._extent;

  if (extent[1] === extent[0]) {
    return 0.5;
  }

  return (val - extent[0]) / (extent[1] - extent[0]);
};
/**
 * Scale normalized value
 * @param {number} val
 * @return {number}
 */


Scale.prototype.scale = function (val) {
  var extent = this._extent;
  return val * (extent[1] - extent[0]) + extent[0];
};
/**
 * Set extent from data
 * @param {Array.<number>} other
 */


Scale.prototype.unionExtent = function (other) {
  var extent = this._extent;
  other[0] < extent[0] && (extent[0] = other[0]);
  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power
  // this.setExtent(extent[0], extent[1]);
};
/**
 * Set extent from data
 * @param {module:echarts/data/List} data
 * @param {string} dim
 */


Scale.prototype.unionExtentFromData = function (data, dim) {
  this.unionExtent(data.getApproximateExtent(dim));
};
/**
 * Get extent
 * @return {Array.<number>}
 */


Scale.prototype.getExtent = function () {
  return this._extent.slice();
};
/**
 * Set extent
 * @param {number} start
 * @param {number} end
 */


Scale.prototype.setExtent = function (start, end) {
  var thisExtent = this._extent;

  if (!isNaN(start)) {
    thisExtent[0] = start;
  }

  if (!isNaN(end)) {
    thisExtent[1] = end;
  }
};
/**
 * When axis extent depends on data and no data exists,
 * axis ticks should not be drawn, which is named 'blank'.
 */


Scale.prototype.isBlank = function () {
  return this._isBlank;
},
/**
 * When axis extent depends on data and no data exists,
 * axis ticks should not be drawn, which is named 'blank'.
 */
Scale.prototype.setBlank = function (isBlank) {
  this._isBlank = isBlank;
};
/**
 * @abstract
 * @param {*} tick
 * @return {string} label of the tick.
 */

Scale.prototype.getLabel = null;
clazzUtil.enableClassExtend(Scale);
clazzUtil.enableClassManagement(Scale, {
  registerWhenExtend: true
});
var _default = Scale;
module.exports = _default;

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var graphic = __webpack_require__(11);

var BoundingRect = __webpack_require__(30);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
// Symbol factory

/**
 * Triangle shape
 * @inner
 */
var Triangle = graphic.extendShape({
  type: 'triangle',
  shape: {
    cx: 0,
    cy: 0,
    width: 0,
    height: 0
  },
  buildPath: function (path, shape) {
    var cx = shape.cx;
    var cy = shape.cy;
    var width = shape.width / 2;
    var height = shape.height / 2;
    path.moveTo(cx, cy - height);
    path.lineTo(cx + width, cy + height);
    path.lineTo(cx - width, cy + height);
    path.closePath();
  }
});
/**
 * Diamond shape
 * @inner
 */

var Diamond = graphic.extendShape({
  type: 'diamond',
  shape: {
    cx: 0,
    cy: 0,
    width: 0,
    height: 0
  },
  buildPath: function (path, shape) {
    var cx = shape.cx;
    var cy = shape.cy;
    var width = shape.width / 2;
    var height = shape.height / 2;
    path.moveTo(cx, cy - height);
    path.lineTo(cx + width, cy);
    path.lineTo(cx, cy + height);
    path.lineTo(cx - width, cy);
    path.closePath();
  }
});
/**
 * Pin shape
 * @inner
 */

var Pin = graphic.extendShape({
  type: 'pin',
  shape: {
    // x, y on the cusp
    x: 0,
    y: 0,
    width: 0,
    height: 0
  },
  buildPath: function (path, shape) {
    var x = shape.x;
    var y = shape.y;
    var w = shape.width / 5 * 3; // Height must be larger than width

    var h = Math.max(w, shape.height);
    var r = w / 2; // Dist on y with tangent point and circle center

    var dy = r * r / (h - r);
    var cy = y - h + r + dy;
    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center

    var dx = Math.cos(angle) * r;
    var tanX = Math.sin(angle);
    var tanY = Math.cos(angle);
    var cpLen = r * 0.6;
    var cpLen2 = r * 0.7;
    path.moveTo(x - dx, cy + dy);
    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);
    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);
    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);
    path.closePath();
  }
});
/**
 * Arrow shape
 * @inner
 */

var Arrow = graphic.extendShape({
  type: 'arrow',
  shape: {
    x: 0,
    y: 0,
    width: 0,
    height: 0
  },
  buildPath: function (ctx, shape) {
    var height = shape.height;
    var width = shape.width;
    var x = shape.x;
    var y = shape.y;
    var dx = width / 3 * 2;
    ctx.moveTo(x, y);
    ctx.lineTo(x + dx, y + height);
    ctx.lineTo(x, y + height / 4 * 3);
    ctx.lineTo(x - dx, y + height);
    ctx.lineTo(x, y);
    ctx.closePath();
  }
});
/**
 * Map of path contructors
 * @type {Object.<string, module:zrender/graphic/Path>}
 */

var symbolCtors = {
  line: graphic.Line,
  rect: graphic.Rect,
  roundRect: graphic.Rect,
  square: graphic.Rect,
  circle: graphic.Circle,
  diamond: Diamond,
  pin: Pin,
  arrow: Arrow,
  triangle: Triangle
};
var symbolShapeMakers = {
  line: function (x, y, w, h, shape) {
    // FIXME
    shape.x1 = x;
    shape.y1 = y + h / 2;
    shape.x2 = x + w;
    shape.y2 = y + h / 2;
  },
  rect: function (x, y, w, h, shape) {
    shape.x = x;
    shape.y = y;
    shape.width = w;
    shape.height = h;
  },
  roundRect: function (x, y, w, h, shape) {
    shape.x = x;
    shape.y = y;
    shape.width = w;
    shape.height = h;
    shape.r = Math.min(w, h) / 4;
  },
  square: function (x, y, w, h, shape) {
    var size = Math.min(w, h);
    shape.x = x;
    shape.y = y;
    shape.width = size;
    shape.height = size;
  },
  circle: function (x, y, w, h, shape) {
    // Put circle in the center of square
    shape.cx = x + w / 2;
    shape.cy = y + h / 2;
    shape.r = Math.min(w, h) / 2;
  },
  diamond: function (x, y, w, h, shape) {
    shape.cx = x + w / 2;
    shape.cy = y + h / 2;
    shape.width = w;
    shape.height = h;
  },
  pin: function (x, y, w, h, shape) {
    shape.x = x + w / 2;
    shape.y = y + h / 2;
    shape.width = w;
    shape.height = h;
  },
  arrow: function (x, y, w, h, shape) {
    shape.x = x + w / 2;
    shape.y = y + h / 2;
    shape.width = w;
    shape.height = h;
  },
  triangle: function (x, y, w, h, shape) {
    shape.cx = x + w / 2;
    shape.cy = y + h / 2;
    shape.width = w;
    shape.height = h;
  }
};
var symbolBuildProxies = {};
zrUtil.each(symbolCtors, function (Ctor, name) {
  symbolBuildProxies[name] = new Ctor();
});
var SymbolClz = graphic.extendShape({
  type: 'symbol',
  shape: {
    symbolType: '',
    x: 0,
    y: 0,
    width: 0,
    height: 0
  },
  beforeBrush: function () {
    var style = this.style;
    var shape = this.shape; // FIXME

    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {
      style.textPosition = ['50%', '40%'];
      style.textAlign = 'center';
      style.textVerticalAlign = 'middle';
    }
  },
  buildPath: function (ctx, shape, inBundle) {
    var symbolType = shape.symbolType;
    var proxySymbol = symbolBuildProxies[symbolType];

    if (shape.symbolType !== 'none') {
      if (!proxySymbol) {
        // Default rect
        symbolType = 'rect';
        proxySymbol = symbolBuildProxies[symbolType];
      }

      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);
      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);
    }
  }
}); // Provide setColor helper method to avoid determine if set the fill or stroke outside

function symbolPathSetColor(color, innerColor) {
  if (this.type !== 'image') {
    var symbolStyle = this.style;
    var symbolShape = this.shape;

    if (symbolShape && symbolShape.symbolType === 'line') {
      symbolStyle.stroke = color;
    } else if (this.__isEmptyBrush) {
      symbolStyle.stroke = color;
      symbolStyle.fill = innerColor || '#fff';
    } else {
      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?
      symbolStyle.fill && (symbolStyle.fill = color);
      symbolStyle.stroke && (symbolStyle.stroke = color);
    }

    this.dirty(false);
  }
}
/**
 * Create a symbol element with given symbol configuration: shape, x, y, width, height, color
 * @param {string} symbolType
 * @param {number} x
 * @param {number} y
 * @param {number} w
 * @param {number} h
 * @param {string} color
 * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,
 *                            for path and image only.
 */


function createSymbol(symbolType, x, y, w, h, color, keepAspect) {
  // TODO Support image object, DynamicImage.
  var isEmpty = symbolType.indexOf('empty') === 0;

  if (isEmpty) {
    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);
  }

  var symbolPath;

  if (symbolType.indexOf('image://') === 0) {
    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');
  } else if (symbolType.indexOf('path://') === 0) {
    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');
  } else {
    symbolPath = new SymbolClz({
      shape: {
        symbolType: symbolType,
        x: x,
        y: y,
        width: w,
        height: h
      }
    });
  }

  symbolPath.__isEmptyBrush = isEmpty;
  symbolPath.setColor = symbolPathSetColor;
  symbolPath.setColor(color);
  return symbolPath;
}

exports.createSymbol = createSymbol;

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__(18);
var global = __webpack_require__(3);
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__(52) ? 'pure' : 'global',
  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'
});


/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(19);
var toLength = __webpack_require__(10);
var toAbsoluteIndex = __webpack_require__(57);
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),
/* 92 */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__(34);
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(52);
var $export = __webpack_require__(0);
var redefine = __webpack_require__(24);
var hide = __webpack_require__(23);
var Iterators = __webpack_require__(60);
var $iterCreate = __webpack_require__(95);
var setToStringTag = __webpack_require__(69);
var getPrototypeOf = __webpack_require__(26);
var ITERATOR = __webpack_require__(6)('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__(45);
var descriptor = __webpack_require__(50);
var setToStringTag = __webpack_require__(69);
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(23)(IteratorPrototype, __webpack_require__(6)('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.8 IsRegExp(argument)
var isObject = __webpack_require__(4);
var cof = __webpack_require__(34);
var MATCH = __webpack_require__(6)('match');
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
};


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

var ITERATOR = __webpack_require__(6)('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter, function () { throw 2; });
} catch (e) { /* empty */ }

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};


/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 21.2.5.3 get RegExp.prototype.flags
var anObject = __webpack_require__(2);
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};


/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var hide = __webpack_require__(23);
var redefine = __webpack_require__(24);
var fails = __webpack_require__(5);
var defined = __webpack_require__(38);
var wks = __webpack_require__(6);

module.exports = function (KEY, length, exec) {
  var SYMBOL = wks(KEY);
  var fns = exec(defined, SYMBOL, ''[KEY]);
  var strfn = fns[0];
  var rxfn = fns[1];
  if (fails(function () {
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  })) {
    redefine(String.prototype, KEY, strfn);
    hide(RegExp.prototype, SYMBOL, length == 2
      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
      ? function (string, arg) { return rxfn.call(string, this, arg); }
      // 21.2.5.6 RegExp.prototype[@@match](string)
      // 21.2.5.9 RegExp.prototype[@@search](string)
      : function (string) { return rxfn.call(string, this); }
    );
  }
};


/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject = __webpack_require__(2);
var aFunction = __webpack_require__(15);
var SPECIES = __webpack_require__(6)('species');
module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};


/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(3);
var navigator = global.navigator;

module.exports = navigator && navigator.userAgent || '';


/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(3);
var $export = __webpack_require__(0);
var redefine = __webpack_require__(24);
var redefineAll = __webpack_require__(63);
var meta = __webpack_require__(51);
var forOf = __webpack_require__(54);
var anInstance = __webpack_require__(62);
var isObject = __webpack_require__(4);
var fails = __webpack_require__(5);
var $iterDetect = __webpack_require__(97);
var setToStringTag = __webpack_require__(69);
var inheritIfRequired = __webpack_require__(134);

module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
  var Base = global[NAME];
  var C = Base;
  var ADDER = IS_MAP ? 'set' : 'add';
  var proto = C && C.prototype;
  var O = {};
  var fixMethod = function (KEY) {
    var fn = proto[KEY];
    redefine(proto, KEY,
      KEY == 'delete' ? function (a) {
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'has' ? function has(a) {
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'get' ? function get(a) {
        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'add' ? function add(a) { fn.call(this, a === 0 ? 0 : a); return this; }
        : function set(a, b) { fn.call(this, a === 0 ? 0 : a, b); return this; }
    );
  };
  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
    new C().entries().next();
  }))) {
    // create collection constructor
    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
    redefineAll(C.prototype, methods);
    meta.NEED = true;
  } else {
    var instance = new C();
    // early implementations not supports chaining
    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
    // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });
    // most early implementations doesn't supports iterables, most modern - not close it correctly
    var ACCEPT_ITERABLES = $iterDetect(function (iter) { new C(iter); }); // eslint-disable-line no-new
    // for early implementations -0 and +0 not the same
    var BUGGY_ZERO = !IS_WEAK && fails(function () {
      // V8 ~ Chromium 42- fails only with 5+ elements
      var $instance = new C();
      var index = 5;
      while (index--) $instance[ADDER](index, index);
      return !$instance.has(-0);
    });
    if (!ACCEPT_ITERABLES) {
      C = wrapper(function (target, iterable) {
        anInstance(target, C, NAME);
        var that = inheritIfRequired(new Base(), target, C);
        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
        return that;
      });
      C.prototype = proto;
      proto.constructor = C;
    }
    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
      fixMethod('delete');
      fixMethod('has');
      IS_MAP && fixMethod('get');
    }
    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);
    // weak collections should not contains .clear method
    if (IS_WEAK && proto.clear) delete proto.clear;
  }

  setToStringTag(C, NAME);

  O[NAME] = C;
  $export($export.G + $export.W + $export.F * (C != Base), O);

  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);

  return C;
};


/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(3);
var hide = __webpack_require__(23);
var uid = __webpack_require__(56);
var TYPED = uid('typed_array');
var VIEW = uid('view');
var ABV = !!(global.ArrayBuffer && global.DataView);
var CONSTR = ABV;
var i = 0;
var l = 9;
var Typed;

var TypedArrayConstructors = (
  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'
).split(',');

while (i < l) {
  if (Typed = global[TypedArrayConstructors[i++]]) {
    hide(Typed.prototype, TYPED, true);
    hide(Typed.prototype, VIEW, true);
  } else CONSTR = false;
}

module.exports = {
  ABV: ABV,
  CONSTR: CONSTR,
  TYPED: TYPED,
  VIEW: VIEW
};


/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// Forced replacement prototype accessors methods
module.exports = __webpack_require__(52) || !__webpack_require__(5)(function () {
  var K = Math.random();
  // In FF throws only define methods
  // eslint-disable-next-line no-undef, no-useless-call
  __defineSetter__.call(null, K, function () { /* empty */ });
  delete __webpack_require__(3)[K];
});


/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://tc39.github.io/proposal-setmap-offrom/
var $export = __webpack_require__(0);

module.exports = function (COLLECTION) {
  $export($export.S, COLLECTION, { of: function of() {
    var length = arguments.length;
    var A = new Array(length);
    while (length--) A[length] = arguments[length];
    return new this(A);
  } });
};


/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://tc39.github.io/proposal-setmap-offrom/
var $export = __webpack_require__(0);
var aFunction = __webpack_require__(15);
var ctx = __webpack_require__(31);
var forOf = __webpack_require__(54);

module.exports = function (COLLECTION) {
  $export($export.S, COLLECTION, { from: function from(source /* , mapFn, thisArg */) {
    var mapFn = arguments[1];
    var mapping, A, n, cb;
    aFunction(this);
    mapping = mapFn !== undefined;
    if (mapping) aFunction(mapFn);
    if (source == undefined) return new this();
    A = [];
    if (mapping) {
      n = 0;
      cb = ctx(mapFn, arguments[2], 2);
      forOf(source, false, function (nextItem) {
        A.push(cb(nextItem, n++));
      });
    } else {
      forOf(source, false, A.push, A);
    }
    return new this(A);
  } });
};


/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var Model = __webpack_require__(42);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var each = zrUtil.each;
var curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.
// allAxesInfo should be updated when setOption performed.

function collect(ecModel, api) {
  var result = {
    /**
     * key: makeKey(axis.model)
     * value: {
     *      axis,
     *      coordSys,
     *      axisPointerModel,
     *      triggerTooltip,
     *      involveSeries,
     *      snap,
     *      seriesModels,
     *      seriesDataCount
     * }
     */
    axesInfo: {},
    seriesInvolved: false,

    /**
     * key: makeKey(coordSys.model)
     * value: Object: key makeKey(axis.model), value: axisInfo
     */
    coordSysAxesInfo: {},
    coordSysMap: {}
  };
  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.

  result.seriesInvolved && collectSeriesInfo(result, ecModel);
  return result;
}

function collectAxesInfo(result, ecModel, api) {
  var globalTooltipModel = ecModel.getComponent('tooltip');
  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.

  var linksOption = globalAxisPointerModel.get('link', true) || [];
  var linkGroups = []; // Collect axes info.

  each(api.getCoordinateSystems(), function (coordSys) {
    // Some coordinate system do not support axes, like geo.
    if (!coordSys.axisPointerEnabled) {
      return;
    }

    var coordSysKey = makeKey(coordSys.model);
    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};
    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer
    // for user. So we enable seting tooltip on coordSys model.

    var coordSysModel = coordSys.model;
    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);
    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.
    // Notice this case: coordSys is `grid` but not `cartesian2D` here.

    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not
    // show but axisPointer will show as normal.
    && baseTooltipModel.get('show')) {
      // Compatible with previous logic. But series.tooltip.trigger: 'axis'
      // or series.data[n].tooltip.trigger: 'axis' are not support any more.
      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';
      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';
      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));

      if (triggerAxis || cross) {
        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));
      }

      if (cross) {
        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));
      }
    } // fromTooltip: true | false | 'cross'
    // triggerTooltip: true | false | null


    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {
      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);
      var axisPointerShow = axisPointerModel.get('show');

      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {
        return;
      }

      if (triggerTooltip == null) {
        triggerTooltip = axisPointerModel.get('triggerTooltip');
      }

      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;
      var snap = axisPointerModel.get('snap');
      var key = makeKey(axis.model);
      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).

      var axisInfo = result.axesInfo[key] = {
        key: key,
        axis: axis,
        coordSys: coordSys,
        axisPointerModel: axisPointerModel,
        triggerTooltip: triggerTooltip,
        involveSeries: involveSeries,
        snap: snap,
        useHandle: isHandleTrigger(axisPointerModel),
        seriesModels: []
      };
      axesInfoInCoordSys[key] = axisInfo;
      result.seriesInvolved |= involveSeries;
      var groupIndex = getLinkGroupIndex(linksOption, axis);

      if (groupIndex != null) {
        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {
          axesInfo: {}
        });
        linkGroup.axesInfo[key] = axisInfo;
        linkGroup.mapper = linksOption[groupIndex].mapper;
        axisInfo.linkGroup = linkGroup;
      }
    }
  });
}

function makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {
  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');
  var volatileOption = {};
  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {
    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));
  }); // category axis do not auto snap, otherwise some tick that do not
  // has value can not be hovered. value/time/log axis default snap if
  // triggered from tooltip and trigger tooltip.

  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.
  // Only these properties can be overrided from tooltip to axisPointer.

  if (tooltipAxisPointerModel.get('type') === 'cross') {
    volatileOption.type = 'line';
  }

  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.

  labelOption.show == null && (labelOption.show = false);

  if (fromTooltip === 'cross') {
    // When 'cross', both axes show labels.
    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');
    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style
    // (cross style is dashed by default)

    if (!triggerTooltip) {
      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');
      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);
    }
  }

  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));
}

function collectSeriesInfo(result, ecModel) {
  // Prepare data for axis trigger
  ecModel.eachSeries(function (seriesModel) {
    // Notice this case: this coordSys is `cartesian2D` but not `grid`.
    var coordSys = seriesModel.coordinateSystem;
    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);
    var seriesTooltipShow = seriesModel.get('tooltip.show', true);

    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {
      return;
    }

    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {
      var axis = axisInfo.axis;

      if (coordSys.getAxis(axis.dim) === axis) {
        axisInfo.seriesModels.push(seriesModel);
        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);
        axisInfo.seriesDataCount += seriesModel.getData().count();
      }
    });
  }, this);
}
/**
 * For example:
 * {
 *     axisPointer: {
 *         links: [{
 *             xAxisIndex: [2, 4],
 *             yAxisIndex: 'all'
 *         }, {
 *             xAxisId: ['a5', 'a7'],
 *             xAxisName: 'xxx'
 *         }]
 *     }
 * }
 */


function getLinkGroupIndex(linksOption, axis) {
  var axisModel = axis.model;
  var dim = axis.dim;

  for (var i = 0; i < linksOption.length; i++) {
    var linkOption = linksOption[i] || {};

    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {
      return i;
    }
  }
}

function checkPropInLink(linkPropValue, axisPropValue) {
  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;
}

function fixValue(axisModel) {
  var axisInfo = getAxisInfo(axisModel);

  if (!axisInfo) {
    return;
  }

  var axisPointerModel = axisInfo.axisPointerModel;
  var scale = axisInfo.axis.scale;
  var option = axisPointerModel.option;
  var status = axisPointerModel.get('status');
  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.

  if (value != null) {
    value = scale.parse(value);
  }

  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value
  // and status should be initialized.

  if (status == null) {
    option.status = useHandle ? 'show' : 'hide';
  }

  var extent = scale.getExtent().slice();
  extent[0] > extent[1] && extent.reverse();

  if ( // Pick a value on axis when initializing.
  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,
  // where we should re-pick a value to keep `handle` displaying normally.
  || value > extent[1]) {
    // Make handle displayed on the end of the axis when init, which looks better.
    value = extent[1];
  }

  if (value < extent[0]) {
    value = extent[0];
  }

  option.value = value;

  if (useHandle) {
    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';
  }
}

function getAxisInfo(axisModel) {
  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;
  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];
}

function getAxisPointerModel(axisModel) {
  var axisInfo = getAxisInfo(axisModel);
  return axisInfo && axisInfo.axisPointerModel;
}

function isHandleTrigger(axisPointerModel) {
  return !!axisPointerModel.get('handle.show');
}
/**
 * @param {module:echarts/model/Model} model
 * @return {string} unique key
 */


function makeKey(model) {
  return model.type + '||' + model.id;
}

exports.collect = collect;
exports.fixValue = fixValue;
exports.getAxisInfo = getAxisInfo;
exports.getAxisPointerModel = getAxisPointerModel;
exports.makeKey = makeKey;

/***/ }),
/* 108 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* WEBPACK VAR INJECTION */(function(process, global, setImmediate) {/*!
 * Vue.js v2.5.17
 * (c) 2014-2018 Evan You
 * Released under the MIT License.
 */
/*  */

var emptyObject = Object.freeze({});

// these helpers produces better vm code in JS engines due to their
// explicitness and function inlining
function isUndef (v) {
  return v === undefined || v === null
}

function isDef (v) {
  return v !== undefined && v !== null
}

function isTrue (v) {
  return v === true
}

function isFalse (v) {
  return v === false
}

/**
 * Check if value is primitive
 */
function isPrimitive (value) {
  return (
    typeof value === 'string' ||
    typeof value === 'number' ||
    // $flow-disable-line
    typeof value === 'symbol' ||
    typeof value === 'boolean'
  )
}

/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 */
function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

/**
 * Get the raw type string of a value e.g. [object Object]
 */
var _toString = Object.prototype.toString;

function toRawType (value) {
  return _toString.call(value).slice(8, -1)
}

/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */
function isPlainObject (obj) {
  return _toString.call(obj) === '[object Object]'
}

function isRegExp (v) {
  return _toString.call(v) === '[object RegExp]'
}

/**
 * Check if val is a valid array index.
 */
function isValidArrayIndex (val) {
  var n = parseFloat(String(val));
  return n >= 0 && Math.floor(n) === n && isFinite(val)
}

/**
 * Convert a value to a string that is actually rendered.
 */
function toString (val) {
  return val == null
    ? ''
    : typeof val === 'object'
      ? JSON.stringify(val, null, 2)
      : String(val)
}

/**
 * Convert a input value to a number for persistence.
 * If the conversion fails, return original string.
 */
function toNumber (val) {
  var n = parseFloat(val);
  return isNaN(n) ? val : n
}

/**
 * Make a map and return a function for checking if a key
 * is in that map.
 */
function makeMap (
  str,
  expectsLowerCase
) {
  var map = Object.create(null);
  var list = str.split(',');
  for (var i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }
  return expectsLowerCase
    ? function (val) { return map[val.toLowerCase()]; }
    : function (val) { return map[val]; }
}

/**
 * Check if a tag is a built-in tag.
 */
var isBuiltInTag = makeMap('slot,component', true);

/**
 * Check if a attribute is a reserved attribute.
 */
var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');

/**
 * Remove an item from an array
 */
function remove (arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);
    if (index > -1) {
      return arr.splice(index, 1)
    }
  }
}

/**
 * Check whether the object has the property.
 */
var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn (obj, key) {
  return hasOwnProperty.call(obj, key)
}

/**
 * Create a cached version of a pure function.
 */
function cached (fn) {
  var cache = Object.create(null);
  return (function cachedFn (str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str))
  })
}

/**
 * Camelize a hyphen-delimited string.
 */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })
});

/**
 * Capitalize a string.
 */
var capitalize = cached(function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1)
});

/**
 * Hyphenate a camelCase string.
 */
var hyphenateRE = /\B([A-Z])/g;
var hyphenate = cached(function (str) {
  return str.replace(hyphenateRE, '-$1').toLowerCase()
});

/**
 * Simple bind polyfill for environments that do not support it... e.g.
 * PhantomJS 1.x. Technically we don't need this anymore since native bind is
 * now more performant in most browsers, but removing it would be breaking for
 * code that was able to run in PhantomJS 1.x, so this must be kept for
 * backwards compatibility.
 */

/* istanbul ignore next */
function polyfillBind (fn, ctx) {
  function boundFn (a) {
    var l = arguments.length;
    return l
      ? l > 1
        ? fn.apply(ctx, arguments)
        : fn.call(ctx, a)
      : fn.call(ctx)
  }

  boundFn._length = fn.length;
  return boundFn
}

function nativeBind (fn, ctx) {
  return fn.bind(ctx)
}

var bind = Function.prototype.bind
  ? nativeBind
  : polyfillBind;

/**
 * Convert an Array-like object to a real Array.
 */
function toArray (list, start) {
  start = start || 0;
  var i = list.length - start;
  var ret = new Array(i);
  while (i--) {
    ret[i] = list[i + start];
  }
  return ret
}

/**
 * Mix properties into target object.
 */
function extend (to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to
}

/**
 * Merge an Array of Objects into a single Object.
 */
function toObject (arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res
}

/**
 * Perform no operation.
 * Stubbing args to make Flow happy without leaving useless transpiled code
 * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)
 */
function noop (a, b, c) {}

/**
 * Always return false.
 */
var no = function (a, b, c) { return false; };

/**
 * Return same value
 */
var identity = function (_) { return _; };

/**
 * Generate a static keys string from compiler modules.
 */


/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */
function looseEqual (a, b) {
  if (a === b) { return true }
  var isObjectA = isObject(a);
  var isObjectB = isObject(b);
  if (isObjectA && isObjectB) {
    try {
      var isArrayA = Array.isArray(a);
      var isArrayB = Array.isArray(b);
      if (isArrayA && isArrayB) {
        return a.length === b.length && a.every(function (e, i) {
          return looseEqual(e, b[i])
        })
      } else if (!isArrayA && !isArrayB) {
        var keysA = Object.keys(a);
        var keysB = Object.keys(b);
        return keysA.length === keysB.length && keysA.every(function (key) {
          return looseEqual(a[key], b[key])
        })
      } else {
        /* istanbul ignore next */
        return false
      }
    } catch (e) {
      /* istanbul ignore next */
      return false
    }
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b)
  } else {
    return false
  }
}

function looseIndexOf (arr, val) {
  for (var i = 0; i < arr.length; i++) {
    if (looseEqual(arr[i], val)) { return i }
  }
  return -1
}

/**
 * Ensure a function is called only once.
 */
function once (fn) {
  var called = false;
  return function () {
    if (!called) {
      called = true;
      fn.apply(this, arguments);
    }
  }
}

var SSR_ATTR = 'data-server-rendered';

var ASSET_TYPES = [
  'component',
  'directive',
  'filter'
];

var LIFECYCLE_HOOKS = [
  'beforeCreate',
  'created',
  'beforeMount',
  'mounted',
  'beforeUpdate',
  'updated',
  'beforeDestroy',
  'destroyed',
  'activated',
  'deactivated',
  'errorCaptured'
];

/*  */

var config = ({
  /**
   * Option merge strategies (used in core/util/options)
   */
  // $flow-disable-line
  optionMergeStrategies: Object.create(null),

  /**
   * Whether to suppress warnings.
   */
  silent: false,

  /**
   * Show production mode tip message on boot?
   */
  productionTip: process.env.NODE_ENV !== 'production',

  /**
   * Whether to enable devtools
   */
  devtools: process.env.NODE_ENV !== 'production',

  /**
   * Whether to record perf
   */
  performance: false,

  /**
   * Error handler for watcher errors
   */
  errorHandler: null,

  /**
   * Warn handler for watcher warns
   */
  warnHandler: null,

  /**
   * Ignore certain custom elements
   */
  ignoredElements: [],

  /**
   * Custom user key aliases for v-on
   */
  // $flow-disable-line
  keyCodes: Object.create(null),

  /**
   * Check if a tag is reserved so that it cannot be registered as a
   * component. This is platform-dependent and may be overwritten.
   */
  isReservedTag: no,

  /**
   * Check if an attribute is reserved so that it cannot be used as a component
   * prop. This is platform-dependent and may be overwritten.
   */
  isReservedAttr: no,

  /**
   * Check if a tag is an unknown element.
   * Platform-dependent.
   */
  isUnknownElement: no,

  /**
   * Get the namespace of an element
   */
  getTagNamespace: noop,

  /**
   * Parse the real tag name for the specific platform.
   */
  parsePlatformTagName: identity,

  /**
   * Check if an attribute must be bound using property, e.g. value
   * Platform-dependent.
   */
  mustUseProp: no,

  /**
   * Exposed for legacy reasons
   */
  _lifecycleHooks: LIFECYCLE_HOOKS
})

/*  */

/**
 * Check if a string starts with $ or _
 */
function isReserved (str) {
  var c = (str + '').charCodeAt(0);
  return c === 0x24 || c === 0x5F
}

/**
 * Define a property.
 */
function def (obj, key, val, enumerable) {
  Object.defineProperty(obj, key, {
    value: val,
    enumerable: !!enumerable,
    writable: true,
    configurable: true
  });
}

/**
 * Parse simple path.
 */
var bailRE = /[^\w.$]/;
function parsePath (path) {
  if (bailRE.test(path)) {
    return
  }
  var segments = path.split('.');
  return function (obj) {
    for (var i = 0; i < segments.length; i++) {
      if (!obj) { return }
      obj = obj[segments[i]];
    }
    return obj
  }
}

/*  */

// can we use __proto__?
var hasProto = '__proto__' in {};

// Browser environment sniffing
var inBrowser = typeof window !== 'undefined';
var inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;
var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
var UA = inBrowser && window.navigator.userAgent.toLowerCase();
var isIE = UA && /msie|trident/.test(UA);
var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
var isEdge = UA && UA.indexOf('edge/') > 0;
var isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');
var isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');
var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;

// Firefox has a "watch" function on Object.prototype...
var nativeWatch = ({}).watch;

var supportsPassive = false;
if (inBrowser) {
  try {
    var opts = {};
    Object.defineProperty(opts, 'passive', ({
      get: function get () {
        /* istanbul ignore next */
        supportsPassive = true;
      }
    })); // https://github.com/facebook/flow/issues/285
    window.addEventListener('test-passive', null, opts);
  } catch (e) {}
}

// this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV
var _isServer;
var isServerRendering = function () {
  if (_isServer === undefined) {
    /* istanbul ignore if */
    if (!inBrowser && !inWeex && typeof global !== 'undefined') {
      // detect presence of vue-server-renderer and avoid
      // Webpack shimming the process
      _isServer = global['process'].env.VUE_ENV === 'server';
    } else {
      _isServer = false;
    }
  }
  return _isServer
};

// detect devtools
var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

/* istanbul ignore next */
function isNative (Ctor) {
  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())
}

var hasSymbol =
  typeof Symbol !== 'undefined' && isNative(Symbol) &&
  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

var _Set;
/* istanbul ignore if */ // $flow-disable-line
if (typeof Set !== 'undefined' && isNative(Set)) {
  // use native Set when available.
  _Set = Set;
} else {
  // a non-standard Set polyfill that only works with primitive keys.
  _Set = (function () {
    function Set () {
      this.set = Object.create(null);
    }
    Set.prototype.has = function has (key) {
      return this.set[key] === true
    };
    Set.prototype.add = function add (key) {
      this.set[key] = true;
    };
    Set.prototype.clear = function clear () {
      this.set = Object.create(null);
    };

    return Set;
  }());
}

/*  */

var warn = noop;
var tip = noop;
var generateComponentTrace = (noop); // work around flow check
var formatComponentName = (noop);

if (process.env.NODE_ENV !== 'production') {
  var hasConsole = typeof console !== 'undefined';
  var classifyRE = /(?:^|[-_])(\w)/g;
  var classify = function (str) { return str
    .replace(classifyRE, function (c) { return c.toUpperCase(); })
    .replace(/[-_]/g, ''); };

  warn = function (msg, vm) {
    var trace = vm ? generateComponentTrace(vm) : '';

    if (config.warnHandler) {
      config.warnHandler.call(null, msg, vm, trace);
    } else if (hasConsole && (!config.silent)) {
      console.error(("[Vue warn]: " + msg + trace));
    }
  };

  tip = function (msg, vm) {
    if (hasConsole && (!config.silent)) {
      console.warn("[Vue tip]: " + msg + (
        vm ? generateComponentTrace(vm) : ''
      ));
    }
  };

  formatComponentName = function (vm, includeFile) {
    if (vm.$root === vm) {
      return '<Root>'
    }
    var options = typeof vm === 'function' && vm.cid != null
      ? vm.options
      : vm._isVue
        ? vm.$options || vm.constructor.options
        : vm || {};
    var name = options.name || options._componentTag;
    var file = options.__file;
    if (!name && file) {
      var match = file.match(/([^/\\]+)\.vue$/);
      name = match && match[1];
    }

    return (
      (name ? ("<" + (classify(name)) + ">") : "<Anonymous>") +
      (file && includeFile !== false ? (" at " + file) : '')
    )
  };

  var repeat = function (str, n) {
    var res = '';
    while (n) {
      if (n % 2 === 1) { res += str; }
      if (n > 1) { str += str; }
      n >>= 1;
    }
    return res
  };

  generateComponentTrace = function (vm) {
    if (vm._isVue && vm.$parent) {
      var tree = [];
      var currentRecursiveSequence = 0;
      while (vm) {
        if (tree.length > 0) {
          var last = tree[tree.length - 1];
          if (last.constructor === vm.constructor) {
            currentRecursiveSequence++;
            vm = vm.$parent;
            continue
          } else if (currentRecursiveSequence > 0) {
            tree[tree.length - 1] = [last, currentRecursiveSequence];
            currentRecursiveSequence = 0;
          }
        }
        tree.push(vm);
        vm = vm.$parent;
      }
      return '\n\nfound in\n\n' + tree
        .map(function (vm, i) { return ("" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)
            ? ((formatComponentName(vm[0])) + "... (" + (vm[1]) + " recursive calls)")
            : formatComponentName(vm))); })
        .join('\n')
    } else {
      return ("\n\n(found in " + (formatComponentName(vm)) + ")")
    }
  };
}

/*  */


var uid = 0;

/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 */
var Dep = function Dep () {
  this.id = uid++;
  this.subs = [];
};

Dep.prototype.addSub = function addSub (sub) {
  this.subs.push(sub);
};

Dep.prototype.removeSub = function removeSub (sub) {
  remove(this.subs, sub);
};

Dep.prototype.depend = function depend () {
  if (Dep.target) {
    Dep.target.addDep(this);
  }
};

Dep.prototype.notify = function notify () {
  // stabilize the subscriber list first
  var subs = this.subs.slice();
  for (var i = 0, l = subs.length; i < l; i++) {
    subs[i].update();
  }
};

// the current target watcher being evaluated.
// this is globally unique because there could be only one
// watcher being evaluated at any time.
Dep.target = null;
var targetStack = [];

function pushTarget (_target) {
  if (Dep.target) { targetStack.push(Dep.target); }
  Dep.target = _target;
}

function popTarget () {
  Dep.target = targetStack.pop();
}

/*  */

var VNode = function VNode (
  tag,
  data,
  children,
  text,
  elm,
  context,
  componentOptions,
  asyncFactory
) {
  this.tag = tag;
  this.data = data;
  this.children = children;
  this.text = text;
  this.elm = elm;
  this.ns = undefined;
  this.context = context;
  this.fnContext = undefined;
  this.fnOptions = undefined;
  this.fnScopeId = undefined;
  this.key = data && data.key;
  this.componentOptions = componentOptions;
  this.componentInstance = undefined;
  this.parent = undefined;
  this.raw = false;
  this.isStatic = false;
  this.isRootInsert = true;
  this.isComment = false;
  this.isCloned = false;
  this.isOnce = false;
  this.asyncFactory = asyncFactory;
  this.asyncMeta = undefined;
  this.isAsyncPlaceholder = false;
};

var prototypeAccessors = { child: { configurable: true } };

// DEPRECATED: alias for componentInstance for backwards compat.
/* istanbul ignore next */
prototypeAccessors.child.get = function () {
  return this.componentInstance
};

Object.defineProperties( VNode.prototype, prototypeAccessors );

var createEmptyVNode = function (text) {
  if ( text === void 0 ) text = '';

  var node = new VNode();
  node.text = text;
  node.isComment = true;
  return node
};

function createTextVNode (val) {
  return new VNode(undefined, undefined, undefined, String(val))
}

// optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.
function cloneVNode (vnode) {
  var cloned = new VNode(
    vnode.tag,
    vnode.data,
    vnode.children,
    vnode.text,
    vnode.elm,
    vnode.context,
    vnode.componentOptions,
    vnode.asyncFactory
  );
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isComment = vnode.isComment;
  cloned.fnContext = vnode.fnContext;
  cloned.fnOptions = vnode.fnOptions;
  cloned.fnScopeId = vnode.fnScopeId;
  cloned.isCloned = true;
  return cloned
}

/*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */

var arrayProto = Array.prototype;
var arrayMethods = Object.create(arrayProto);

var methodsToPatch = [
  'push',
  'pop',
  'shift',
  'unshift',
  'splice',
  'sort',
  'reverse'
];

/**
 * Intercept mutating methods and emit events
 */
methodsToPatch.forEach(function (method) {
  // cache original method
  var original = arrayProto[method];
  def(arrayMethods, method, function mutator () {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    var result = original.apply(this, args);
    var ob = this.__ob__;
    var inserted;
    switch (method) {
      case 'push':
      case 'unshift':
        inserted = args;
        break
      case 'splice':
        inserted = args.slice(2);
        break
    }
    if (inserted) { ob.observeArray(inserted); }
    // notify change
    ob.dep.notify();
    return result
  });
});

/*  */

var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

/**
 * In some cases we may want to disable observation inside a component's
 * update computation.
 */
var shouldObserve = true;

function toggleObserving (value) {
  shouldObserve = value;
}

/**
 * Observer class that is attached to each observed
 * object. Once attached, the observer converts the target
 * object's property keys into getter/setters that
 * collect dependencies and dispatch updates.
 */
var Observer = function Observer (value) {
  this.value = value;
  this.dep = new Dep();
  this.vmCount = 0;
  def(value, '__ob__', this);
  if (Array.isArray(value)) {
    var augment = hasProto
      ? protoAugment
      : copyAugment;
    augment(value, arrayMethods, arrayKeys);
    this.observeArray(value);
  } else {
    this.walk(value);
  }
};

/**
 * Walk through each property and convert them into
 * getter/setters. This method should only be called when
 * value type is Object.
 */
Observer.prototype.walk = function walk (obj) {
  var keys = Object.keys(obj);
  for (var i = 0; i < keys.length; i++) {
    defineReactive(obj, keys[i]);
  }
};

/**
 * Observe a list of Array items.
 */
Observer.prototype.observeArray = function observeArray (items) {
  for (var i = 0, l = items.length; i < l; i++) {
    observe(items[i]);
  }
};

// helpers

/**
 * Augment an target Object or Array by intercepting
 * the prototype chain using __proto__
 */
function protoAugment (target, src, keys) {
  /* eslint-disable no-proto */
  target.__proto__ = src;
  /* eslint-enable no-proto */
}

/**
 * Augment an target Object or Array by defining
 * hidden properties.
 */
/* istanbul ignore next */
function copyAugment (target, src, keys) {
  for (var i = 0, l = keys.length; i < l; i++) {
    var key = keys[i];
    def(target, key, src[key]);
  }
}

/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */
function observe (value, asRootData) {
  if (!isObject(value) || value instanceof VNode) {
    return
  }
  var ob;
  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
    ob = value.__ob__;
  } else if (
    shouldObserve &&
    !isServerRendering() &&
    (Array.isArray(value) || isPlainObject(value)) &&
    Object.isExtensible(value) &&
    !value._isVue
  ) {
    ob = new Observer(value);
  }
  if (asRootData && ob) {
    ob.vmCount++;
  }
  return ob
}

/**
 * Define a reactive property on an Object.
 */
function defineReactive (
  obj,
  key,
  val,
  customSetter,
  shallow
) {
  var dep = new Dep();

  var property = Object.getOwnPropertyDescriptor(obj, key);
  if (property && property.configurable === false) {
    return
  }

  // cater for pre-defined getter/setters
  var getter = property && property.get;
  if (!getter && arguments.length === 2) {
    val = obj[key];
  }
  var setter = property && property.set;

  var childOb = !shallow && observe(val);
  Object.defineProperty(obj, key, {
    enumerable: true,
    configurable: true,
    get: function reactiveGetter () {
      var value = getter ? getter.call(obj) : val;
      if (Dep.target) {
        dep.depend();
        if (childOb) {
          childOb.dep.depend();
          if (Array.isArray(value)) {
            dependArray(value);
          }
        }
      }
      return value
    },
    set: function reactiveSetter (newVal) {
      var value = getter ? getter.call(obj) : val;
      /* eslint-disable no-self-compare */
      if (newVal === value || (newVal !== newVal && value !== value)) {
        return
      }
      /* eslint-enable no-self-compare */
      if (process.env.NODE_ENV !== 'production' && customSetter) {
        customSetter();
      }
      if (setter) {
        setter.call(obj, newVal);
      } else {
        val = newVal;
      }
      childOb = !shallow && observe(newVal);
      dep.notify();
    }
  });
}

/**
 * Set a property on an object. Adds the new property and
 * triggers change notification if the property doesn't
 * already exist.
 */
function set (target, key, val) {
  if (process.env.NODE_ENV !== 'production' &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot set reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.length = Math.max(target.length, key);
    target.splice(key, 1, val);
    return val
  }
  if (key in target && !(key in Object.prototype)) {
    target[key] = val;
    return val
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
    process.env.NODE_ENV !== 'production' && warn(
      'Avoid adding reactive properties to a Vue instance or its root $data ' +
      'at runtime - declare it upfront in the data option.'
    );
    return val
  }
  if (!ob) {
    target[key] = val;
    return val
  }
  defineReactive(ob.value, key, val);
  ob.dep.notify();
  return val
}

/**
 * Delete a property and trigger change if necessary.
 */
function del (target, key) {
  if (process.env.NODE_ENV !== 'production' &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot delete reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.splice(key, 1);
    return
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
    process.env.NODE_ENV !== 'production' && warn(
      'Avoid deleting properties on a Vue instance or its root $data ' +
      '- just set it to null.'
    );
    return
  }
  if (!hasOwn(target, key)) {
    return
  }
  delete target[key];
  if (!ob) {
    return
  }
  ob.dep.notify();
}

/**
 * Collect dependencies on array elements when the array is touched, since
 * we cannot intercept array element access like property getters.
 */
function dependArray (value) {
  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {
    e = value[i];
    e && e.__ob__ && e.__ob__.dep.depend();
    if (Array.isArray(e)) {
      dependArray(e);
    }
  }
}

/*  */

/**
 * Option overwriting strategies are functions that handle
 * how to merge a parent option value and a child option
 * value into the final value.
 */
var strats = config.optionMergeStrategies;

/**
 * Options with restrictions
 */
if (process.env.NODE_ENV !== 'production') {
  strats.el = strats.propsData = function (parent, child, vm, key) {
    if (!vm) {
      warn(
        "option \"" + key + "\" can only be used during instance " +
        'creation with the `new` keyword.'
      );
    }
    return defaultStrat(parent, child)
  };
}

/**
 * Helper that recursively merges two data objects together.
 */
function mergeData (to, from) {
  if (!from) { return to }
  var key, toVal, fromVal;
  var keys = Object.keys(from);
  for (var i = 0; i < keys.length; i++) {
    key = keys[i];
    toVal = to[key];
    fromVal = from[key];
    if (!hasOwn(to, key)) {
      set(to, key, fromVal);
    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {
      mergeData(toVal, fromVal);
    }
  }
  return to
}

/**
 * Data
 */
function mergeDataOrFn (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    // in a Vue.extend merge, both should be functions
    if (!childVal) {
      return parentVal
    }
    if (!parentVal) {
      return childVal
    }
    // when parentVal & childVal are both present,
    // we need to return a function that returns the
    // merged result of both functions... no need to
    // check if parentVal is a function here because
    // it has to be a function to pass previous merges.
    return function mergedDataFn () {
      return mergeData(
        typeof childVal === 'function' ? childVal.call(this, this) : childVal,
        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal
      )
    }
  } else {
    return function mergedInstanceDataFn () {
      // instance merge
      var instanceData = typeof childVal === 'function'
        ? childVal.call(vm, vm)
        : childVal;
      var defaultData = typeof parentVal === 'function'
        ? parentVal.call(vm, vm)
        : parentVal;
      if (instanceData) {
        return mergeData(instanceData, defaultData)
      } else {
        return defaultData
      }
    }
  }
}

strats.data = function (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    if (childVal && typeof childVal !== 'function') {
      process.env.NODE_ENV !== 'production' && warn(
        'The "data" option should be a function ' +
        'that returns a per-instance value in component ' +
        'definitions.',
        vm
      );

      return parentVal
    }
    return mergeDataOrFn(parentVal, childVal)
  }

  return mergeDataOrFn(parentVal, childVal, vm)
};

/**
 * Hooks and props are merged as arrays.
 */
function mergeHook (
  parentVal,
  childVal
) {
  return childVal
    ? parentVal
      ? parentVal.concat(childVal)
      : Array.isArray(childVal)
        ? childVal
        : [childVal]
    : parentVal
}

LIFECYCLE_HOOKS.forEach(function (hook) {
  strats[hook] = mergeHook;
});

/**
 * Assets
 *
 * When a vm is present (instance creation), we need to do
 * a three-way merge between constructor options, instance
 * options and parent options.
 */
function mergeAssets (
  parentVal,
  childVal,
  vm,
  key
) {
  var res = Object.create(parentVal || null);
  if (childVal) {
    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);
    return extend(res, childVal)
  } else {
    return res
  }
}

ASSET_TYPES.forEach(function (type) {
  strats[type + 's'] = mergeAssets;
});

/**
 * Watchers.
 *
 * Watchers hashes should not overwrite one
 * another, so we merge them as arrays.
 */
strats.watch = function (
  parentVal,
  childVal,
  vm,
  key
) {
  // work around Firefox's Object.prototype.watch...
  if (parentVal === nativeWatch) { parentVal = undefined; }
  if (childVal === nativeWatch) { childVal = undefined; }
  /* istanbul ignore if */
  if (!childVal) { return Object.create(parentVal || null) }
  if (process.env.NODE_ENV !== 'production') {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = {};
  extend(ret, parentVal);
  for (var key$1 in childVal) {
    var parent = ret[key$1];
    var child = childVal[key$1];
    if (parent && !Array.isArray(parent)) {
      parent = [parent];
    }
    ret[key$1] = parent
      ? parent.concat(child)
      : Array.isArray(child) ? child : [child];
  }
  return ret
};

/**
 * Other object hashes.
 */
strats.props =
strats.methods =
strats.inject =
strats.computed = function (
  parentVal,
  childVal,
  vm,
  key
) {
  if (childVal && process.env.NODE_ENV !== 'production') {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = Object.create(null);
  extend(ret, parentVal);
  if (childVal) { extend(ret, childVal); }
  return ret
};
strats.provide = mergeDataOrFn;

/**
 * Default strategy.
 */
var defaultStrat = function (parentVal, childVal) {
  return childVal === undefined
    ? parentVal
    : childVal
};

/**
 * Validate component names
 */
function checkComponents (options) {
  for (var key in options.components) {
    validateComponentName(key);
  }
}

function validateComponentName (name) {
  if (!/^[a-zA-Z][\w-]*$/.test(name)) {
    warn(
      'Invalid component name: "' + name + '". Component names ' +
      'can only contain alphanumeric characters and the hyphen, ' +
      'and must start with a letter.'
    );
  }
  if (isBuiltInTag(name) || config.isReservedTag(name)) {
    warn(
      'Do not use built-in or reserved HTML elements as component ' +
      'id: ' + name
    );
  }
}

/**
 * Ensure all props option syntax are normalized into the
 * Object-based format.
 */
function normalizeProps (options, vm) {
  var props = options.props;
  if (!props) { return }
  var res = {};
  var i, val, name;
  if (Array.isArray(props)) {
    i = props.length;
    while (i--) {
      val = props[i];
      if (typeof val === 'string') {
        name = camelize(val);
        res[name] = { type: null };
      } else if (process.env.NODE_ENV !== 'production') {
        warn('props must be strings when using array syntax.');
      }
    }
  } else if (isPlainObject(props)) {
    for (var key in props) {
      val = props[key];
      name = camelize(key);
      res[name] = isPlainObject(val)
        ? val
        : { type: val };
    }
  } else if (process.env.NODE_ENV !== 'production') {
    warn(
      "Invalid value for option \"props\": expected an Array or an Object, " +
      "but got " + (toRawType(props)) + ".",
      vm
    );
  }
  options.props = res;
}

/**
 * Normalize all injections into Object-based format
 */
function normalizeInject (options, vm) {
  var inject = options.inject;
  if (!inject) { return }
  var normalized = options.inject = {};
  if (Array.isArray(inject)) {
    for (var i = 0; i < inject.length; i++) {
      normalized[inject[i]] = { from: inject[i] };
    }
  } else if (isPlainObject(inject)) {
    for (var key in inject) {
      var val = inject[key];
      normalized[key] = isPlainObject(val)
        ? extend({ from: key }, val)
        : { from: val };
    }
  } else if (process.env.NODE_ENV !== 'production') {
    warn(
      "Invalid value for option \"inject\": expected an Array or an Object, " +
      "but got " + (toRawType(inject)) + ".",
      vm
    );
  }
}

/**
 * Normalize raw function directives into object format.
 */
function normalizeDirectives (options) {
  var dirs = options.directives;
  if (dirs) {
    for (var key in dirs) {
      var def = dirs[key];
      if (typeof def === 'function') {
        dirs[key] = { bind: def, update: def };
      }
    }
  }
}

function assertObjectType (name, value, vm) {
  if (!isPlainObject(value)) {
    warn(
      "Invalid value for option \"" + name + "\": expected an Object, " +
      "but got " + (toRawType(value)) + ".",
      vm
    );
  }
}

/**
 * Merge two option objects into a new one.
 * Core utility used in both instantiation and inheritance.
 */
function mergeOptions (
  parent,
  child,
  vm
) {
  if (process.env.NODE_ENV !== 'production') {
    checkComponents(child);
  }

  if (typeof child === 'function') {
    child = child.options;
  }

  normalizeProps(child, vm);
  normalizeInject(child, vm);
  normalizeDirectives(child);
  var extendsFrom = child.extends;
  if (extendsFrom) {
    parent = mergeOptions(parent, extendsFrom, vm);
  }
  if (child.mixins) {
    for (var i = 0, l = child.mixins.length; i < l; i++) {
      parent = mergeOptions(parent, child.mixins[i], vm);
    }
  }
  var options = {};
  var key;
  for (key in parent) {
    mergeField(key);
  }
  for (key in child) {
    if (!hasOwn(parent, key)) {
      mergeField(key);
    }
  }
  function mergeField (key) {
    var strat = strats[key] || defaultStrat;
    options[key] = strat(parent[key], child[key], vm, key);
  }
  return options
}

/**
 * Resolve an asset.
 * This function is used because child instances need access
 * to assets defined in its ancestor chain.
 */
function resolveAsset (
  options,
  type,
  id,
  warnMissing
) {
  /* istanbul ignore if */
  if (typeof id !== 'string') {
    return
  }
  var assets = options[type];
  // check local registration variations first
  if (hasOwn(assets, id)) { return assets[id] }
  var camelizedId = camelize(id);
  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }
  var PascalCaseId = capitalize(camelizedId);
  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }
  // fallback to prototype chain
  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {
    warn(
      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
      options
    );
  }
  return res
}

/*  */

function validateProp (
  key,
  propOptions,
  propsData,
  vm
) {
  var prop = propOptions[key];
  var absent = !hasOwn(propsData, key);
  var value = propsData[key];
  // boolean casting
  var booleanIndex = getTypeIndex(Boolean, prop.type);
  if (booleanIndex > -1) {
    if (absent && !hasOwn(prop, 'default')) {
      value = false;
    } else if (value === '' || value === hyphenate(key)) {
      // only cast empty string / same name to boolean if
      // boolean has higher priority
      var stringIndex = getTypeIndex(String, prop.type);
      if (stringIndex < 0 || booleanIndex < stringIndex) {
        value = true;
      }
    }
  }
  // check default value
  if (value === undefined) {
    value = getPropDefaultValue(vm, prop, key);
    // since the default value is a fresh copy,
    // make sure to observe it.
    var prevShouldObserve = shouldObserve;
    toggleObserving(true);
    observe(value);
    toggleObserving(prevShouldObserve);
  }
  if (
    process.env.NODE_ENV !== 'production' &&
    // skip validation for weex recycle-list child component props
    !(false && isObject(value) && ('@binding' in value))
  ) {
    assertProp(prop, key, value, vm, absent);
  }
  return value
}

/**
 * Get the default value of a prop.
 */
function getPropDefaultValue (vm, prop, key) {
  // no default, return undefined
  if (!hasOwn(prop, 'default')) {
    return undefined
  }
  var def = prop.default;
  // warn against non-factory defaults for Object & Array
  if (process.env.NODE_ENV !== 'production' && isObject(def)) {
    warn(
      'Invalid default value for prop "' + key + '": ' +
      'Props with type Object/Array must use a factory function ' +
      'to return the default value.',
      vm
    );
  }
  // the raw prop value was also undefined from previous render,
  // return previous default value to avoid unnecessary watcher trigger
  if (vm && vm.$options.propsData &&
    vm.$options.propsData[key] === undefined &&
    vm._props[key] !== undefined
  ) {
    return vm._props[key]
  }
  // call factory function for non-Function types
  // a value is Function if its prototype is function even across different execution context
  return typeof def === 'function' && getType(prop.type) !== 'Function'
    ? def.call(vm)
    : def
}

/**
 * Assert whether a prop is valid.
 */
function assertProp (
  prop,
  name,
  value,
  vm,
  absent
) {
  if (prop.required && absent) {
    warn(
      'Missing required prop: "' + name + '"',
      vm
    );
    return
  }
  if (value == null && !prop.required) {
    return
  }
  var type = prop.type;
  var valid = !type || type === true;
  var expectedTypes = [];
  if (type) {
    if (!Array.isArray(type)) {
      type = [type];
    }
    for (var i = 0; i < type.length && !valid; i++) {
      var assertedType = assertType(value, type[i]);
      expectedTypes.push(assertedType.expectedType || '');
      valid = assertedType.valid;
    }
  }
  if (!valid) {
    warn(
      "Invalid prop: type check failed for prop \"" + name + "\"." +
      " Expected " + (expectedTypes.map(capitalize).join(', ')) +
      ", got " + (toRawType(value)) + ".",
      vm
    );
    return
  }
  var validator = prop.validator;
  if (validator) {
    if (!validator(value)) {
      warn(
        'Invalid prop: custom validator check failed for prop "' + name + '".',
        vm
      );
    }
  }
}

var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

function assertType (value, type) {
  var valid;
  var expectedType = getType(type);
  if (simpleCheckRE.test(expectedType)) {
    var t = typeof value;
    valid = t === expectedType.toLowerCase();
    // for primitive wrapper objects
    if (!valid && t === 'object') {
      valid = value instanceof type;
    }
  } else if (expectedType === 'Object') {
    valid = isPlainObject(value);
  } else if (expectedType === 'Array') {
    valid = Array.isArray(value);
  } else {
    valid = value instanceof type;
  }
  return {
    valid: valid,
    expectedType: expectedType
  }
}

/**
 * Use function string name to check built-in types,
 * because a simple equality check will fail when running
 * across different vms / iframes.
 */
function getType (fn) {
  var match = fn && fn.toString().match(/^\s*function (\w+)/);
  return match ? match[1] : ''
}

function isSameType (a, b) {
  return getType(a) === getType(b)
}

function getTypeIndex (type, expectedTypes) {
  if (!Array.isArray(expectedTypes)) {
    return isSameType(expectedTypes, type) ? 0 : -1
  }
  for (var i = 0, len = expectedTypes.length; i < len; i++) {
    if (isSameType(expectedTypes[i], type)) {
      return i
    }
  }
  return -1
}

/*  */

function handleError (err, vm, info) {
  if (vm) {
    var cur = vm;
    while ((cur = cur.$parent)) {
      var hooks = cur.$options.errorCaptured;
      if (hooks) {
        for (var i = 0; i < hooks.length; i++) {
          try {
            var capture = hooks[i].call(cur, err, vm, info) === false;
            if (capture) { return }
          } catch (e) {
            globalHandleError(e, cur, 'errorCaptured hook');
          }
        }
      }
    }
  }
  globalHandleError(err, vm, info);
}

function globalHandleError (err, vm, info) {
  if (config.errorHandler) {
    try {
      return config.errorHandler.call(null, err, vm, info)
    } catch (e) {
      logError(e, null, 'config.errorHandler');
    }
  }
  logError(err, vm, info);
}

function logError (err, vm, info) {
  if (process.env.NODE_ENV !== 'production') {
    warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
  }
  /* istanbul ignore else */
  if ((inBrowser || inWeex) && typeof console !== 'undefined') {
    console.error(err);
  } else {
    throw err
  }
}

/*  */
/* globals MessageChannel */

var callbacks = [];
var pending = false;

function flushCallbacks () {
  pending = false;
  var copies = callbacks.slice(0);
  callbacks.length = 0;
  for (var i = 0; i < copies.length; i++) {
    copies[i]();
  }
}

// Here we have async deferring wrappers using both microtasks and (macro) tasks.
// In < 2.4 we used microtasks everywhere, but there are some scenarios where
// microtasks have too high a priority and fire in between supposedly
// sequential events (e.g. #4521, #6690) or even between bubbling of the same
// event (#6566). However, using (macro) tasks everywhere also has subtle problems
// when state is changed right before repaint (e.g. #6813, out-in transitions).
// Here we use microtask by default, but expose a way to force (macro) task when
// needed (e.g. in event handlers attached by v-on).
var microTimerFunc;
var macroTimerFunc;
var useMacroTask = false;

// Determine (macro) task defer implementation.
// Technically setImmediate should be the ideal choice, but it's only available
// in IE. The only polyfill that consistently queues the callback after all DOM
// events triggered in the same loop is by using MessageChannel.
/* istanbul ignore if */
if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
  macroTimerFunc = function () {
    setImmediate(flushCallbacks);
  };
} else if (typeof MessageChannel !== 'undefined' && (
  isNative(MessageChannel) ||
  // PhantomJS
  MessageChannel.toString() === '[object MessageChannelConstructor]'
)) {
  var channel = new MessageChannel();
  var port = channel.port2;
  channel.port1.onmessage = flushCallbacks;
  macroTimerFunc = function () {
    port.postMessage(1);
  };
} else {
  /* istanbul ignore next */
  macroTimerFunc = function () {
    setTimeout(flushCallbacks, 0);
  };
}

// Determine microtask defer implementation.
/* istanbul ignore next, $flow-disable-line */
if (typeof Promise !== 'undefined' && isNative(Promise)) {
  var p = Promise.resolve();
  microTimerFunc = function () {
    p.then(flushCallbacks);
    // in problematic UIWebViews, Promise.then doesn't completely break, but
    // it can get stuck in a weird state where callbacks are pushed into the
    // microtask queue but the queue isn't being flushed, until the browser
    // needs to do some other work, e.g. handle a timer. Therefore we can
    // "force" the microtask queue to be flushed by adding an empty timer.
    if (isIOS) { setTimeout(noop); }
  };
} else {
  // fallback to macro
  microTimerFunc = macroTimerFunc;
}

/**
 * Wrap a function so that if any code inside triggers state change,
 * the changes are queued using a (macro) task instead of a microtask.
 */
function withMacroTask (fn) {
  return fn._withTask || (fn._withTask = function () {
    useMacroTask = true;
    var res = fn.apply(null, arguments);
    useMacroTask = false;
    return res
  })
}

function nextTick (cb, ctx) {
  var _resolve;
  callbacks.push(function () {
    if (cb) {
      try {
        cb.call(ctx);
      } catch (e) {
        handleError(e, ctx, 'nextTick');
      }
    } else if (_resolve) {
      _resolve(ctx);
    }
  });
  if (!pending) {
    pending = true;
    if (useMacroTask) {
      macroTimerFunc();
    } else {
      microTimerFunc();
    }
  }
  // $flow-disable-line
  if (!cb && typeof Promise !== 'undefined') {
    return new Promise(function (resolve) {
      _resolve = resolve;
    })
  }
}

/*  */

/* not type checking this file because flow doesn't play well with Proxy */

var initProxy;

if (process.env.NODE_ENV !== 'production') {
  var allowedGlobals = makeMap(
    'Infinity,undefined,NaN,isFinite,isNaN,' +
    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +
    'require' // for Webpack/Browserify
  );

  var warnNonPresent = function (target, key) {
    warn(
      "Property or method \"" + key + "\" is not defined on the instance but " +
      'referenced during render. Make sure that this property is reactive, ' +
      'either in the data option, or for class-based components, by ' +
      'initializing the property. ' +
      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',
      target
    );
  };

  var hasProxy =
    typeof Proxy !== 'undefined' && isNative(Proxy);

  if (hasProxy) {
    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');
    config.keyCodes = new Proxy(config.keyCodes, {
      set: function set (target, key, value) {
        if (isBuiltInModifier(key)) {
          warn(("Avoid overwriting built-in modifier in config.keyCodes: ." + key));
          return false
        } else {
          target[key] = value;
          return true
        }
      }
    });
  }

  var hasHandler = {
    has: function has (target, key) {
      var has = key in target;
      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';
      if (!has && !isAllowed) {
        warnNonPresent(target, key);
      }
      return has || !isAllowed
    }
  };

  var getHandler = {
    get: function get (target, key) {
      if (typeof key === 'string' && !(key in target)) {
        warnNonPresent(target, key);
      }
      return target[key]
    }
  };

  initProxy = function initProxy (vm) {
    if (hasProxy) {
      // determine which proxy handler to use
      var options = vm.$options;
      var handlers = options.render && options.render._withStripped
        ? getHandler
        : hasHandler;
      vm._renderProxy = new Proxy(vm, handlers);
    } else {
      vm._renderProxy = vm;
    }
  };
}

/*  */

var seenObjects = new _Set();

/**
 * Recursively traverse an object to evoke all converted
 * getters, so that every nested property inside the object
 * is collected as a "deep" dependency.
 */
function traverse (val) {
  _traverse(val, seenObjects);
  seenObjects.clear();
}

function _traverse (val, seen) {
  var i, keys;
  var isA = Array.isArray(val);
  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {
    return
  }
  if (val.__ob__) {
    var depId = val.__ob__.dep.id;
    if (seen.has(depId)) {
      return
    }
    seen.add(depId);
  }
  if (isA) {
    i = val.length;
    while (i--) { _traverse(val[i], seen); }
  } else {
    keys = Object.keys(val);
    i = keys.length;
    while (i--) { _traverse(val[keys[i]], seen); }
  }
}

var mark;
var measure;

if (process.env.NODE_ENV !== 'production') {
  var perf = inBrowser && window.performance;
  /* istanbul ignore if */
  if (
    perf &&
    perf.mark &&
    perf.measure &&
    perf.clearMarks &&
    perf.clearMeasures
  ) {
    mark = function (tag) { return perf.mark(tag); };
    measure = function (name, startTag, endTag) {
      perf.measure(name, startTag, endTag);
      perf.clearMarks(startTag);
      perf.clearMarks(endTag);
      perf.clearMeasures(name);
    };
  }
}

/*  */

var normalizeEvent = cached(function (name) {
  var passive = name.charAt(0) === '&';
  name = passive ? name.slice(1) : name;
  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
  name = once$$1 ? name.slice(1) : name;
  var capture = name.charAt(0) === '!';
  name = capture ? name.slice(1) : name;
  return {
    name: name,
    once: once$$1,
    capture: capture,
    passive: passive
  }
});

function createFnInvoker (fns) {
  function invoker () {
    var arguments$1 = arguments;

    var fns = invoker.fns;
    if (Array.isArray(fns)) {
      var cloned = fns.slice();
      for (var i = 0; i < cloned.length; i++) {
        cloned[i].apply(null, arguments$1);
      }
    } else {
      // return handler return value for single handlers
      return fns.apply(null, arguments)
    }
  }
  invoker.fns = fns;
  return invoker
}

function updateListeners (
  on,
  oldOn,
  add,
  remove$$1,
  vm
) {
  var name, def, cur, old, event;
  for (name in on) {
    def = cur = on[name];
    old = oldOn[name];
    event = normalizeEvent(name);
    /* istanbul ignore if */
    if (isUndef(cur)) {
      process.env.NODE_ENV !== 'production' && warn(
        "Invalid handler for event \"" + (event.name) + "\": got " + String(cur),
        vm
      );
    } else if (isUndef(old)) {
      if (isUndef(cur.fns)) {
        cur = on[name] = createFnInvoker(cur);
      }
      add(event.name, cur, event.once, event.capture, event.passive, event.params);
    } else if (cur !== old) {
      old.fns = cur;
      on[name] = old;
    }
  }
  for (name in oldOn) {
    if (isUndef(on[name])) {
      event = normalizeEvent(name);
      remove$$1(event.name, oldOn[name], event.capture);
    }
  }
}

/*  */

function mergeVNodeHook (def, hookKey, hook) {
  if (def instanceof VNode) {
    def = def.data.hook || (def.data.hook = {});
  }
  var invoker;
  var oldHook = def[hookKey];

  function wrappedHook () {
    hook.apply(this, arguments);
    // important: remove merged hook to ensure it's called only once
    // and prevent memory leak
    remove(invoker.fns, wrappedHook);
  }

  if (isUndef(oldHook)) {
    // no existing hook
    invoker = createFnInvoker([wrappedHook]);
  } else {
    /* istanbul ignore if */
    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {
      // already a merged invoker
      invoker = oldHook;
      invoker.fns.push(wrappedHook);
    } else {
      // existing plain hook
      invoker = createFnInvoker([oldHook, wrappedHook]);
    }
  }

  invoker.merged = true;
  def[hookKey] = invoker;
}

/*  */

function extractPropsFromVNodeData (
  data,
  Ctor,
  tag
) {
  // we are only extracting raw values here.
  // validation and default values are handled in the child
  // component itself.
  var propOptions = Ctor.options.props;
  if (isUndef(propOptions)) {
    return
  }
  var res = {};
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      if (process.env.NODE_ENV !== 'production') {
        var keyInLowerCase = key.toLowerCase();
        if (
          key !== keyInLowerCase &&
          attrs && hasOwn(attrs, keyInLowerCase)
        ) {
          tip(
            "Prop \"" + keyInLowerCase + "\" is passed to component " +
            (formatComponentName(tag || Ctor)) + ", but the declared prop name is" +
            " \"" + key + "\". " +
            "Note that HTML attributes are case-insensitive and camelCased " +
            "props need to use their kebab-case equivalents when using in-DOM " +
            "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\"."
          );
        }
      }
      checkProp(res, props, key, altKey, true) ||
      checkProp(res, attrs, key, altKey, false);
    }
  }
  return res
}

function checkProp (
  res,
  hash,
  key,
  altKey,
  preserve
) {
  if (isDef(hash)) {
    if (hasOwn(hash, key)) {
      res[key] = hash[key];
      if (!preserve) {
        delete hash[key];
      }
      return true
    } else if (hasOwn(hash, altKey)) {
      res[key] = hash[altKey];
      if (!preserve) {
        delete hash[altKey];
      }
      return true
    }
  }
  return false
}

/*  */

// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:

// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.
function simpleNormalizeChildren (children) {
  for (var i = 0; i < children.length; i++) {
    if (Array.isArray(children[i])) {
      return Array.prototype.concat.apply([], children)
    }
  }
  return children
}

// 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.
function normalizeChildren (children) {
  return isPrimitive(children)
    ? [createTextVNode(children)]
    : Array.isArray(children)
      ? normalizeArrayChildren(children)
      : undefined
}

function isTextNode (node) {
  return isDef(node) && isDef(node.text) && isFalse(node.isComment)
}

function normalizeArrayChildren (children, nestedIndex) {
  var res = [];
  var i, c, lastIndex, last;
  for (i = 0; i < children.length; i++) {
    c = children[i];
    if (isUndef(c) || typeof c === 'boolean') { continue }
    lastIndex = res.length - 1;
    last = res[lastIndex];
    //  nested
    if (Array.isArray(c)) {
      if (c.length > 0) {
        c = normalizeArrayChildren(c, ((nestedIndex || '') + "_" + i));
        // merge adjacent text nodes
        if (isTextNode(c[0]) && isTextNode(last)) {
          res[lastIndex] = createTextVNode(last.text + (c[0]).text);
          c.shift();
        }
        res.push.apply(res, c);
      }
    } else if (isPrimitive(c)) {
      if (isTextNode(last)) {
        // merge adjacent text nodes
        // this is necessary for SSR hydration because text nodes are
        // essentially merged when rendered to HTML strings
        res[lastIndex] = createTextVNode(last.text + c);
      } else if (c !== '') {
        // convert primitive to vnode
        res.push(createTextVNode(c));
      }
    } else {
      if (isTextNode(c) && isTextNode(last)) {
        // merge adjacent text nodes
        res[lastIndex] = createTextVNode(last.text + c.text);
      } else {
        // default key for nested array children (likely generated by v-for)
        if (isTrue(children._isVList) &&
          isDef(c.tag) &&
          isUndef(c.key) &&
          isDef(nestedIndex)) {
          c.key = "__vlist" + nestedIndex + "_" + i + "__";
        }
        res.push(c);
      }
    }
  }
  return res
}

/*  */

function ensureCtor (comp, base) {
  if (
    comp.__esModule ||
    (hasSymbol && comp[Symbol.toStringTag] === 'Module')
  ) {
    comp = comp.default;
  }
  return isObject(comp)
    ? base.extend(comp)
    : comp
}

function createAsyncPlaceholder (
  factory,
  data,
  context,
  children,
  tag
) {
  var node = createEmptyVNode();
  node.asyncFactory = factory;
  node.asyncMeta = { data: data, context: context, children: children, tag: tag };
  return node
}

function resolveAsyncComponent (
  factory,
  baseCtor,
  context
) {
  if (isTrue(factory.error) && isDef(factory.errorComp)) {
    return factory.errorComp
  }

  if (isDef(factory.resolved)) {
    return factory.resolved
  }

  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
    return factory.loadingComp
  }

  if (isDef(factory.contexts)) {
    // already pending
    factory.contexts.push(context);
  } else {
    var contexts = factory.contexts = [context];
    var sync = true;

    var forceRender = function () {
      for (var i = 0, l = contexts.length; i < l; i++) {
        contexts[i].$forceUpdate();
      }
    };

    var resolve = once(function (res) {
      // cache resolved
      factory.resolved = ensureCtor(res, baseCtor);
      // invoke callbacks only if this is not a synchronous resolve
      // (async resolves are shimmed as synchronous during SSR)
      if (!sync) {
        forceRender();
      }
    });

    var reject = once(function (reason) {
      process.env.NODE_ENV !== 'production' && warn(
        "Failed to resolve async component: " + (String(factory)) +
        (reason ? ("\nReason: " + reason) : '')
      );
      if (isDef(factory.errorComp)) {
        factory.error = true;
        forceRender();
      }
    });

    var res = factory(resolve, reject);

    if (isObject(res)) {
      if (typeof res.then === 'function') {
        // () => Promise
        if (isUndef(factory.resolved)) {
          res.then(resolve, reject);
        }
      } else if (isDef(res.component) && typeof res.component.then === 'function') {
        res.component.then(resolve, reject);

        if (isDef(res.error)) {
          factory.errorComp = ensureCtor(res.error, baseCtor);
        }

        if (isDef(res.loading)) {
          factory.loadingComp = ensureCtor(res.loading, baseCtor);
          if (res.delay === 0) {
            factory.loading = true;
          } else {
            setTimeout(function () {
              if (isUndef(factory.resolved) && isUndef(factory.error)) {
                factory.loading = true;
                forceRender();
              }
            }, res.delay || 200);
          }
        }

        if (isDef(res.timeout)) {
          setTimeout(function () {
            if (isUndef(factory.resolved)) {
              reject(
                process.env.NODE_ENV !== 'production'
                  ? ("timeout (" + (res.timeout) + "ms)")
                  : null
              );
            }
          }, res.timeout);
        }
      }
    }

    sync = false;
    // return in case resolved synchronously
    return factory.loading
      ? factory.loadingComp
      : factory.resolved
  }
}

/*  */

function isAsyncPlaceholder (node) {
  return node.isComment && node.asyncFactory
}

/*  */

function getFirstComponentChild (children) {
  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      var c = children[i];
      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
        return c
      }
    }
  }
}

/*  */

/*  */

function initEvents (vm) {
  vm._events = Object.create(null);
  vm._hasHookEvent = false;
  // init parent attached events
  var listeners = vm.$options._parentListeners;
  if (listeners) {
    updateComponentListeners(vm, listeners);
  }
}

var target;

function add (event, fn, once) {
  if (once) {
    target.$once(event, fn);
  } else {
    target.$on(event, fn);
  }
}

function remove$1 (event, fn) {
  target.$off(event, fn);
}

function updateComponentListeners (
  vm,
  listeners,
  oldListeners
) {
  target = vm;
  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);
  target = undefined;
}

function eventsMixin (Vue) {
  var hookRE = /^hook:/;
  Vue.prototype.$on = function (event, fn) {
    var this$1 = this;

    var vm = this;
    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        this$1.$on(event[i], fn);
      }
    } else {
      (vm._events[event] || (vm._events[event] = [])).push(fn);
      // optimize hook:event cost by using a boolean flag marked at registration
      // instead of a hash lookup
      if (hookRE.test(event)) {
        vm._hasHookEvent = true;
      }
    }
    return vm
  };

  Vue.prototype.$once = function (event, fn) {
    var vm = this;
    function on () {
      vm.$off(event, on);
      fn.apply(vm, arguments);
    }
    on.fn = fn;
    vm.$on(event, on);
    return vm
  };

  Vue.prototype.$off = function (event, fn) {
    var this$1 = this;

    var vm = this;
    // all
    if (!arguments.length) {
      vm._events = Object.create(null);
      return vm
    }
    // array of events
    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        this$1.$off(event[i], fn);
      }
      return vm
    }
    // specific event
    var cbs = vm._events[event];
    if (!cbs) {
      return vm
    }
    if (!fn) {
      vm._events[event] = null;
      return vm
    }
    if (fn) {
      // specific handler
      var cb;
      var i$1 = cbs.length;
      while (i$1--) {
        cb = cbs[i$1];
        if (cb === fn || cb.fn === fn) {
          cbs.splice(i$1, 1);
          break
        }
      }
    }
    return vm
  };

  Vue.prototype.$emit = function (event) {
    var vm = this;
    if (process.env.NODE_ENV !== 'production') {
      var lowerCaseEvent = event.toLowerCase();
      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
        tip(
          "Event \"" + lowerCaseEvent + "\" is emitted in component " +
          (formatComponentName(vm)) + " but the handler is registered for \"" + event + "\". " +
          "Note that HTML attributes are case-insensitive and you cannot use " +
          "v-on to listen to camelCase events when using in-DOM templates. " +
          "You should probably use \"" + (hyphenate(event)) + "\" instead of \"" + event + "\"."
        );
      }
    }
    var cbs = vm._events[event];
    if (cbs) {
      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
      var args = toArray(arguments, 1);
      for (var i = 0, l = cbs.length; i < l; i++) {
        try {
          cbs[i].apply(vm, args);
        } catch (e) {
          handleError(e, vm, ("event handler for \"" + event + "\""));
        }
      }
    }
    return vm
  };
}

/*  */



/**
 * Runtime helper for resolving raw children VNodes into a slot object.
 */
function resolveSlots (
  children,
  context
) {
  var slots = {};
  if (!children) {
    return slots
  }
  for (var i = 0, l = children.length; i < l; i++) {
    var child = children[i];
    var data = child.data;
    // remove slot attribute if the node is resolved as a Vue slot node
    if (data && data.attrs && data.attrs.slot) {
      delete data.attrs.slot;
    }
    // named slots should only be respected if the vnode was rendered in the
    // same context.
    if ((child.context === context || child.fnContext === context) &&
      data && data.slot != null
    ) {
      var name = data.slot;
      var slot = (slots[name] || (slots[name] = []));
      if (child.tag === 'template') {
        slot.push.apply(slot, child.children || []);
      } else {
        slot.push(child);
      }
    } else {
      (slots.default || (slots.default = [])).push(child);
    }
  }
  // ignore slots that contains only whitespace
  for (var name$1 in slots) {
    if (slots[name$1].every(isWhitespace)) {
      delete slots[name$1];
    }
  }
  return slots
}

function isWhitespace (node) {
  return (node.isComment && !node.asyncFactory) || node.text === ' '
}

function resolveScopedSlots (
  fns, // see flow/vnode
  res
) {
  res = res || {};
  for (var i = 0; i < fns.length; i++) {
    if (Array.isArray(fns[i])) {
      resolveScopedSlots(fns[i], res);
    } else {
      res[fns[i].key] = fns[i].fn;
    }
  }
  return res
}

/*  */

var activeInstance = null;
var isUpdatingChildComponent = false;

function initLifecycle (vm) {
  var options = vm.$options;

  // locate first non-abstract parent
  var parent = options.parent;
  if (parent && !options.abstract) {
    while (parent.$options.abstract && parent.$parent) {
      parent = parent.$parent;
    }
    parent.$children.push(vm);
  }

  vm.$parent = parent;
  vm.$root = parent ? parent.$root : vm;

  vm.$children = [];
  vm.$refs = {};

  vm._watcher = null;
  vm._inactive = null;
  vm._directInactive = false;
  vm._isMounted = false;
  vm._isDestroyed = false;
  vm._isBeingDestroyed = false;
}

function lifecycleMixin (Vue) {
  Vue.prototype._update = function (vnode, hydrating) {
    var vm = this;
    if (vm._isMounted) {
      callHook(vm, 'beforeUpdate');
    }
    var prevEl = vm.$el;
    var prevVnode = vm._vnode;
    var prevActiveInstance = activeInstance;
    activeInstance = vm;
    vm._vnode = vnode;
    // Vue.prototype.__patch__ is injected in entry points
    // based on the rendering backend used.
    if (!prevVnode) {
      // initial render
      vm.$el = vm.__patch__(
        vm.$el, vnode, hydrating, false /* removeOnly */,
        vm.$options._parentElm,
        vm.$options._refElm
      );
      // no need for the ref nodes after initial patch
      // this prevents keeping a detached DOM tree in memory (#5851)
      vm.$options._parentElm = vm.$options._refElm = null;
    } else {
      // updates
      vm.$el = vm.__patch__(prevVnode, vnode);
    }
    activeInstance = prevActiveInstance;
    // update __vue__ reference
    if (prevEl) {
      prevEl.__vue__ = null;
    }
    if (vm.$el) {
      vm.$el.__vue__ = vm;
    }
    // if parent is an HOC, update its $el as well
    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
      vm.$parent.$el = vm.$el;
    }
    // updated hook is called by the scheduler to ensure that children are
    // updated in a parent's updated hook.
  };

  Vue.prototype.$forceUpdate = function () {
    var vm = this;
    if (vm._watcher) {
      vm._watcher.update();
    }
  };

  Vue.prototype.$destroy = function () {
    var vm = this;
    if (vm._isBeingDestroyed) {
      return
    }
    callHook(vm, 'beforeDestroy');
    vm._isBeingDestroyed = true;
    // remove self from parent
    var parent = vm.$parent;
    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
      remove(parent.$children, vm);
    }
    // teardown watchers
    if (vm._watcher) {
      vm._watcher.teardown();
    }
    var i = vm._watchers.length;
    while (i--) {
      vm._watchers[i].teardown();
    }
    // remove reference from data ob
    // frozen object may not have observer.
    if (vm._data.__ob__) {
      vm._data.__ob__.vmCount--;
    }
    // call the last hook...
    vm._isDestroyed = true;
    // invoke destroy hooks on current rendered tree
    vm.__patch__(vm._vnode, null);
    // fire destroyed hook
    callHook(vm, 'destroyed');
    // turn off all instance listeners.
    vm.$off();
    // remove __vue__ reference
    if (vm.$el) {
      vm.$el.__vue__ = null;
    }
    // release circular reference (#6759)
    if (vm.$vnode) {
      vm.$vnode.parent = null;
    }
  };
}

function mountComponent (
  vm,
  el,
  hydrating
) {
  vm.$el = el;
  if (!vm.$options.render) {
    vm.$options.render = createEmptyVNode;
    if (process.env.NODE_ENV !== 'production') {
      /* istanbul ignore if */
      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||
        vm.$options.el || el) {
        warn(
          'You are using the runtime-only build of Vue where the template ' +
          'compiler is not available. Either pre-compile the templates into ' +
          'render functions, or use the compiler-included build.',
          vm
        );
      } else {
        warn(
          'Failed to mount component: template or render function not defined.',
          vm
        );
      }
    }
  }
  callHook(vm, 'beforeMount');

  var updateComponent;
  /* istanbul ignore if */
  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {
    updateComponent = function () {
      var name = vm._name;
      var id = vm._uid;
      var startTag = "vue-perf-start:" + id;
      var endTag = "vue-perf-end:" + id;

      mark(startTag);
      var vnode = vm._render();
      mark(endTag);
      measure(("vue " + name + " render"), startTag, endTag);

      mark(startTag);
      vm._update(vnode, hydrating);
      mark(endTag);
      measure(("vue " + name + " patch"), startTag, endTag);
    };
  } else {
    updateComponent = function () {
      vm._update(vm._render(), hydrating);
    };
  }

  // we set this to vm._watcher inside the watcher's constructor
  // since the watcher's initial patch may call $forceUpdate (e.g. inside child
  // component's mounted hook), which relies on vm._watcher being already defined
  new Watcher(vm, updateComponent, noop, null, true /* isRenderWatcher */);
  hydrating = false;

  // manually mounted instance, call mounted on self
  // mounted is called for render-created child components in its inserted hook
  if (vm.$vnode == null) {
    vm._isMounted = true;
    callHook(vm, 'mounted');
  }
  return vm
}

function updateChildComponent (
  vm,
  propsData,
  listeners,
  parentVnode,
  renderChildren
) {
  if (process.env.NODE_ENV !== 'production') {
    isUpdatingChildComponent = true;
  }

  // determine whether component has slot children
  // we need to do this before overwriting $options._renderChildren
  var hasChildren = !!(
    renderChildren ||               // has new static slots
    vm.$options._renderChildren ||  // has old static slots
    parentVnode.data.scopedSlots || // has new scoped slots
    vm.$scopedSlots !== emptyObject // has old scoped slots
  );

  vm.$options._parentVnode = parentVnode;
  vm.$vnode = parentVnode; // update vm's placeholder node without re-render

  if (vm._vnode) { // update child tree's parent
    vm._vnode.parent = parentVnode;
  }
  vm.$options._renderChildren = renderChildren;

  // update $attrs and $listeners hash
  // these are also reactive so they may trigger child update if the child
  // used them during render
  vm.$attrs = parentVnode.data.attrs || emptyObject;
  vm.$listeners = listeners || emptyObject;

  // update props
  if (propsData && vm.$options.props) {
    toggleObserving(false);
    var props = vm._props;
    var propKeys = vm.$options._propKeys || [];
    for (var i = 0; i < propKeys.length; i++) {
      var key = propKeys[i];
      var propOptions = vm.$options.props; // wtf flow?
      props[key] = validateProp(key, propOptions, propsData, vm);
    }
    toggleObserving(true);
    // keep a copy of raw propsData
    vm.$options.propsData = propsData;
  }

  // update listeners
  listeners = listeners || emptyObject;
  var oldListeners = vm.$options._parentListeners;
  vm.$options._parentListeners = listeners;
  updateComponentListeners(vm, listeners, oldListeners);

  // resolve slots + force update if has children
  if (hasChildren) {
    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
    vm.$forceUpdate();
  }

  if (process.env.NODE_ENV !== 'production') {
    isUpdatingChildComponent = false;
  }
}

function isInInactiveTree (vm) {
  while (vm && (vm = vm.$parent)) {
    if (vm._inactive) { return true }
  }
  return false
}

function activateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = false;
    if (isInInactiveTree(vm)) {
      return
    }
  } else if (vm._directInactive) {
    return
  }
  if (vm._inactive || vm._inactive === null) {
    vm._inactive = false;
    for (var i = 0; i < vm.$children.length; i++) {
      activateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'activated');
  }
}

function deactivateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = true;
    if (isInInactiveTree(vm)) {
      return
    }
  }
  if (!vm._inactive) {
    vm._inactive = true;
    for (var i = 0; i < vm.$children.length; i++) {
      deactivateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'deactivated');
  }
}

function callHook (vm, hook) {
  // #7573 disable dep collection when invoking lifecycle hooks
  pushTarget();
  var handlers = vm.$options[hook];
  if (handlers) {
    for (var i = 0, j = handlers.length; i < j; i++) {
      try {
        handlers[i].call(vm);
      } catch (e) {
        handleError(e, vm, (hook + " hook"));
      }
    }
  }
  if (vm._hasHookEvent) {
    vm.$emit('hook:' + hook);
  }
  popTarget();
}

/*  */


var MAX_UPDATE_COUNT = 100;

var queue = [];
var activatedChildren = [];
var has = {};
var circular = {};
var waiting = false;
var flushing = false;
var index = 0;

/**
 * Reset the scheduler's state.
 */
function resetSchedulerState () {
  index = queue.length = activatedChildren.length = 0;
  has = {};
  if (process.env.NODE_ENV !== 'production') {
    circular = {};
  }
  waiting = flushing = false;
}

/**
 * Flush both queues and run the watchers.
 */
function flushSchedulerQueue () {
  flushing = true;
  var watcher, id;

  // Sort queue before flush.
  // This ensures that:
  // 1. Components are updated from parent to child. (because parent is always
  //    created before the child)
  // 2. A component's user watchers are run before its render watcher (because
  //    user watchers are created before the render watcher)
  // 3. If a component is destroyed during a parent component's watcher run,
  //    its watchers can be skipped.
  queue.sort(function (a, b) { return a.id - b.id; });

  // do not cache length because more watchers might be pushed
  // as we run existing watchers
  for (index = 0; index < queue.length; index++) {
    watcher = queue[index];
    id = watcher.id;
    has[id] = null;
    watcher.run();
    // in dev build, check and stop circular updates.
    if (process.env.NODE_ENV !== 'production' && has[id] != null) {
      circular[id] = (circular[id] || 0) + 1;
      if (circular[id] > MAX_UPDATE_COUNT) {
        warn(
          'You may have an infinite update loop ' + (
            watcher.user
              ? ("in watcher with expression \"" + (watcher.expression) + "\"")
              : "in a component render function."
          ),
          watcher.vm
        );
        break
      }
    }
  }

  // keep copies of post queues before resetting state
  var activatedQueue = activatedChildren.slice();
  var updatedQueue = queue.slice();

  resetSchedulerState();

  // call component updated and activated hooks
  callActivatedHooks(activatedQueue);
  callUpdatedHooks(updatedQueue);

  // devtool hook
  /* istanbul ignore if */
  if (devtools && config.devtools) {
    devtools.emit('flush');
  }
}

function callUpdatedHooks (queue) {
  var i = queue.length;
  while (i--) {
    var watcher = queue[i];
    var vm = watcher.vm;
    if (vm._watcher === watcher && vm._isMounted) {
      callHook(vm, 'updated');
    }
  }
}

/**
 * Queue a kept-alive component that was activated during patch.
 * The queue will be processed after the entire tree has been patched.
 */
function queueActivatedComponent (vm) {
  // setting _inactive to false here so that a render function can
  // rely on checking whether it's in an inactive tree (e.g. router-view)
  vm._inactive = false;
  activatedChildren.push(vm);
}

function callActivatedHooks (queue) {
  for (var i = 0; i < queue.length; i++) {
    queue[i]._inactive = true;
    activateChildComponent(queue[i], true /* true */);
  }
}

/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it's
 * pushed when the queue is being flushed.
 */
function queueWatcher (watcher) {
  var id = watcher.id;
  if (has[id] == null) {
    has[id] = true;
    if (!flushing) {
      queue.push(watcher);
    } else {
      // if already flushing, splice the watcher based on its id
      // if already past its id, it will be run next immediately.
      var i = queue.length - 1;
      while (i > index && queue[i].id > watcher.id) {
        i--;
      }
      queue.splice(i + 1, 0, watcher);
    }
    // queue the flush
    if (!waiting) {
      waiting = true;
      nextTick(flushSchedulerQueue);
    }
  }
}

/*  */

var uid$1 = 0;

/**
 * A watcher parses an expression, collects dependencies,
 * and fires callback when the expression value changes.
 * This is used for both the $watch() api and directives.
 */
var Watcher = function Watcher (
  vm,
  expOrFn,
  cb,
  options,
  isRenderWatcher
) {
  this.vm = vm;
  if (isRenderWatcher) {
    vm._watcher = this;
  }
  vm._watchers.push(this);
  // options
  if (options) {
    this.deep = !!options.deep;
    this.user = !!options.user;
    this.lazy = !!options.lazy;
    this.sync = !!options.sync;
  } else {
    this.deep = this.user = this.lazy = this.sync = false;
  }
  this.cb = cb;
  this.id = ++uid$1; // uid for batching
  this.active = true;
  this.dirty = this.lazy; // for lazy watchers
  this.deps = [];
  this.newDeps = [];
  this.depIds = new _Set();
  this.newDepIds = new _Set();
  this.expression = process.env.NODE_ENV !== 'production'
    ? expOrFn.toString()
    : '';
  // parse expression for getter
  if (typeof expOrFn === 'function') {
    this.getter = expOrFn;
  } else {
    this.getter = parsePath(expOrFn);
    if (!this.getter) {
      this.getter = function () {};
      process.env.NODE_ENV !== 'production' && warn(
        "Failed watching path: \"" + expOrFn + "\" " +
        'Watcher only accepts simple dot-delimited paths. ' +
        'For full control, use a function instead.',
        vm
      );
    }
  }
  this.value = this.lazy
    ? undefined
    : this.get();
};

/**
 * Evaluate the getter, and re-collect dependencies.
 */
Watcher.prototype.get = function get () {
  pushTarget(this);
  var value;
  var vm = this.vm;
  try {
    value = this.getter.call(vm, vm);
  } catch (e) {
    if (this.user) {
      handleError(e, vm, ("getter for watcher \"" + (this.expression) + "\""));
    } else {
      throw e
    }
  } finally {
    // "touch" every property so they are all tracked as
    // dependencies for deep watching
    if (this.deep) {
      traverse(value);
    }
    popTarget();
    this.cleanupDeps();
  }
  return value
};

/**
 * Add a dependency to this directive.
 */
Watcher.prototype.addDep = function addDep (dep) {
  var id = dep.id;
  if (!this.newDepIds.has(id)) {
    this.newDepIds.add(id);
    this.newDeps.push(dep);
    if (!this.depIds.has(id)) {
      dep.addSub(this);
    }
  }
};

/**
 * Clean up for dependency collection.
 */
Watcher.prototype.cleanupDeps = function cleanupDeps () {
    var this$1 = this;

  var i = this.deps.length;
  while (i--) {
    var dep = this$1.deps[i];
    if (!this$1.newDepIds.has(dep.id)) {
      dep.removeSub(this$1);
    }
  }
  var tmp = this.depIds;
  this.depIds = this.newDepIds;
  this.newDepIds = tmp;
  this.newDepIds.clear();
  tmp = this.deps;
  this.deps = this.newDeps;
  this.newDeps = tmp;
  this.newDeps.length = 0;
};

/**
 * Subscriber interface.
 * Will be called when a dependency changes.
 */
Watcher.prototype.update = function update () {
  /* istanbul ignore else */
  if (this.lazy) {
    this.dirty = true;
  } else if (this.sync) {
    this.run();
  } else {
    queueWatcher(this);
  }
};

/**
 * Scheduler job interface.
 * Will be called by the scheduler.
 */
Watcher.prototype.run = function run () {
  if (this.active) {
    var value = this.get();
    if (
      value !== this.value ||
      // Deep watchers and watchers on Object/Arrays should fire even
      // when the value is the same, because the value may
      // have mutated.
      isObject(value) ||
      this.deep
    ) {
      // set new value
      var oldValue = this.value;
      this.value = value;
      if (this.user) {
        try {
          this.cb.call(this.vm, value, oldValue);
        } catch (e) {
          handleError(e, this.vm, ("callback for watcher \"" + (this.expression) + "\""));
        }
      } else {
        this.cb.call(this.vm, value, oldValue);
      }
    }
  }
};

/**
 * Evaluate the value of the watcher.
 * This only gets called for lazy watchers.
 */
Watcher.prototype.evaluate = function evaluate () {
  this.value = this.get();
  this.dirty = false;
};

/**
 * Depend on all deps collected by this watcher.
 */
Watcher.prototype.depend = function depend () {
    var this$1 = this;

  var i = this.deps.length;
  while (i--) {
    this$1.deps[i].depend();
  }
};

/**
 * Remove self from all dependencies' subscriber list.
 */
Watcher.prototype.teardown = function teardown () {
    var this$1 = this;

  if (this.active) {
    // remove self from vm's watcher list
    // this is a somewhat expensive operation so we skip it
    // if the vm is being destroyed.
    if (!this.vm._isBeingDestroyed) {
      remove(this.vm._watchers, this);
    }
    var i = this.deps.length;
    while (i--) {
      this$1.deps[i].removeSub(this$1);
    }
    this.active = false;
  }
};

/*  */

var sharedPropertyDefinition = {
  enumerable: true,
  configurable: true,
  get: noop,
  set: noop
};

function proxy (target, sourceKey, key) {
  sharedPropertyDefinition.get = function proxyGetter () {
    return this[sourceKey][key]
  };
  sharedPropertyDefinition.set = function proxySetter (val) {
    this[sourceKey][key] = val;
  };
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function initState (vm) {
  vm._watchers = [];
  var opts = vm.$options;
  if (opts.props) { initProps(vm, opts.props); }
  if (opts.methods) { initMethods(vm, opts.methods); }
  if (opts.data) {
    initData(vm);
  } else {
    observe(vm._data = {}, true /* asRootData */);
  }
  if (opts.computed) { initComputed(vm, opts.computed); }
  if (opts.watch && opts.watch !== nativeWatch) {
    initWatch(vm, opts.watch);
  }
}

function initProps (vm, propsOptions) {
  var propsData = vm.$options.propsData || {};
  var props = vm._props = {};
  // cache prop keys so that future props updates can iterate using Array
  // instead of dynamic object key enumeration.
  var keys = vm.$options._propKeys = [];
  var isRoot = !vm.$parent;
  // root instance props should be converted
  if (!isRoot) {
    toggleObserving(false);
  }
  var loop = function ( key ) {
    keys.push(key);
    var value = validateProp(key, propsOptions, propsData, vm);
    /* istanbul ignore else */
    if (process.env.NODE_ENV !== 'production') {
      var hyphenatedKey = hyphenate(key);
      if (isReservedAttribute(hyphenatedKey) ||
          config.isReservedAttr(hyphenatedKey)) {
        warn(
          ("\"" + hyphenatedKey + "\" is a reserved attribute and cannot be used as component prop."),
          vm
        );
      }
      defineReactive(props, key, value, function () {
        if (vm.$parent && !isUpdatingChildComponent) {
          warn(
            "Avoid mutating a prop directly since the value will be " +
            "overwritten whenever the parent component re-renders. " +
            "Instead, use a data or computed property based on the prop's " +
            "value. Prop being mutated: \"" + key + "\"",
            vm
          );
        }
      });
    } else {
      defineReactive(props, key, value);
    }
    // static props are already proxied on the component's prototype
    // during Vue.extend(). We only need to proxy props defined at
    // instantiation here.
    if (!(key in vm)) {
      proxy(vm, "_props", key);
    }
  };

  for (var key in propsOptions) loop( key );
  toggleObserving(true);
}

function initData (vm) {
  var data = vm.$options.data;
  data = vm._data = typeof data === 'function'
    ? getData(data, vm)
    : data || {};
  if (!isPlainObject(data)) {
    data = {};
    process.env.NODE_ENV !== 'production' && warn(
      'data functions should return an object:\n' +
      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
      vm
    );
  }
  // proxy data on instance
  var keys = Object.keys(data);
  var props = vm.$options.props;
  var methods = vm.$options.methods;
  var i = keys.length;
  while (i--) {
    var key = keys[i];
    if (process.env.NODE_ENV !== 'production') {
      if (methods && hasOwn(methods, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a data property."),
          vm
        );
      }
    }
    if (props && hasOwn(props, key)) {
      process.env.NODE_ENV !== 'production' && warn(
        "The data property \"" + key + "\" is already declared as a prop. " +
        "Use prop default value instead.",
        vm
      );
    } else if (!isReserved(key)) {
      proxy(vm, "_data", key);
    }
  }
  // observe data
  observe(data, true /* asRootData */);
}

function getData (data, vm) {
  // #7573 disable dep collection when invoking data getters
  pushTarget();
  try {
    return data.call(vm, vm)
  } catch (e) {
    handleError(e, vm, "data()");
    return {}
  } finally {
    popTarget();
  }
}

var computedWatcherOptions = { lazy: true };

function initComputed (vm, computed) {
  // $flow-disable-line
  var watchers = vm._computedWatchers = Object.create(null);
  // computed properties are just getters during SSR
  var isSSR = isServerRendering();

  for (var key in computed) {
    var userDef = computed[key];
    var getter = typeof userDef === 'function' ? userDef : userDef.get;
    if (process.env.NODE_ENV !== 'production' && getter == null) {
      warn(
        ("Getter is missing for computed property \"" + key + "\"."),
        vm
      );
    }

    if (!isSSR) {
      // create internal watcher for the computed property.
      watchers[key] = new Watcher(
        vm,
        getter || noop,
        noop,
        computedWatcherOptions
      );
    }

    // component-defined computed properties are already defined on the
    // component prototype. We only need to define computed properties defined
    // at instantiation here.
    if (!(key in vm)) {
      defineComputed(vm, key, userDef);
    } else if (process.env.NODE_ENV !== 'production') {
      if (key in vm.$data) {
        warn(("The computed property \"" + key + "\" is already defined in data."), vm);
      } else if (vm.$options.props && key in vm.$options.props) {
        warn(("The computed property \"" + key + "\" is already defined as a prop."), vm);
      }
    }
  }
}

function defineComputed (
  target,
  key,
  userDef
) {
  var shouldCache = !isServerRendering();
  if (typeof userDef === 'function') {
    sharedPropertyDefinition.get = shouldCache
      ? createComputedGetter(key)
      : userDef;
    sharedPropertyDefinition.set = noop;
  } else {
    sharedPropertyDefinition.get = userDef.get
      ? shouldCache && userDef.cache !== false
        ? createComputedGetter(key)
        : userDef.get
      : noop;
    sharedPropertyDefinition.set = userDef.set
      ? userDef.set
      : noop;
  }
  if (process.env.NODE_ENV !== 'production' &&
      sharedPropertyDefinition.set === noop) {
    sharedPropertyDefinition.set = function () {
      warn(
        ("Computed property \"" + key + "\" was assigned to but it has no setter."),
        this
      );
    };
  }
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function createComputedGetter (key) {
  return function computedGetter () {
    var watcher = this._computedWatchers && this._computedWatchers[key];
    if (watcher) {
      if (watcher.dirty) {
        watcher.evaluate();
      }
      if (Dep.target) {
        watcher.depend();
      }
      return watcher.value
    }
  }
}

function initMethods (vm, methods) {
  var props = vm.$options.props;
  for (var key in methods) {
    if (process.env.NODE_ENV !== 'production') {
      if (methods[key] == null) {
        warn(
          "Method \"" + key + "\" has an undefined value in the component definition. " +
          "Did you reference the function correctly?",
          vm
        );
      }
      if (props && hasOwn(props, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a prop."),
          vm
        );
      }
      if ((key in vm) && isReserved(key)) {
        warn(
          "Method \"" + key + "\" conflicts with an existing Vue instance method. " +
          "Avoid defining component methods that start with _ or $."
        );
      }
    }
    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);
  }
}

function initWatch (vm, watch) {
  for (var key in watch) {
    var handler = watch[key];
    if (Array.isArray(handler)) {
      for (var i = 0; i < handler.length; i++) {
        createWatcher(vm, key, handler[i]);
      }
    } else {
      createWatcher(vm, key, handler);
    }
  }
}

function createWatcher (
  vm,
  expOrFn,
  handler,
  options
) {
  if (isPlainObject(handler)) {
    options = handler;
    handler = handler.handler;
  }
  if (typeof handler === 'string') {
    handler = vm[handler];
  }
  return vm.$watch(expOrFn, handler, options)
}

function stateMixin (Vue) {
  // flow somehow has problems with directly declared definition object
  // when using Object.defineProperty, so we have to procedurally build up
  // the object here.
  var dataDef = {};
  dataDef.get = function () { return this._data };
  var propsDef = {};
  propsDef.get = function () { return this._props };
  if (process.env.NODE_ENV !== 'production') {
    dataDef.set = function (newData) {
      warn(
        'Avoid replacing instance root $data. ' +
        'Use nested data properties instead.',
        this
      );
    };
    propsDef.set = function () {
      warn("$props is readonly.", this);
    };
  }
  Object.defineProperty(Vue.prototype, '$data', dataDef);
  Object.defineProperty(Vue.prototype, '$props', propsDef);

  Vue.prototype.$set = set;
  Vue.prototype.$delete = del;

  Vue.prototype.$watch = function (
    expOrFn,
    cb,
    options
  ) {
    var vm = this;
    if (isPlainObject(cb)) {
      return createWatcher(vm, expOrFn, cb, options)
    }
    options = options || {};
    options.user = true;
    var watcher = new Watcher(vm, expOrFn, cb, options);
    if (options.immediate) {
      cb.call(vm, watcher.value);
    }
    return function unwatchFn () {
      watcher.teardown();
    }
  };
}

/*  */

function initProvide (vm) {
  var provide = vm.$options.provide;
  if (provide) {
    vm._provided = typeof provide === 'function'
      ? provide.call(vm)
      : provide;
  }
}

function initInjections (vm) {
  var result = resolveInject(vm.$options.inject, vm);
  if (result) {
    toggleObserving(false);
    Object.keys(result).forEach(function (key) {
      /* istanbul ignore else */
      if (process.env.NODE_ENV !== 'production') {
        defineReactive(vm, key, result[key], function () {
          warn(
            "Avoid mutating an injected value directly since the changes will be " +
            "overwritten whenever the provided component re-renders. " +
            "injection being mutated: \"" + key + "\"",
            vm
          );
        });
      } else {
        defineReactive(vm, key, result[key]);
      }
    });
    toggleObserving(true);
  }
}

function resolveInject (inject, vm) {
  if (inject) {
    // inject is :any because flow is not smart enough to figure out cached
    var result = Object.create(null);
    var keys = hasSymbol
      ? Reflect.ownKeys(inject).filter(function (key) {
        /* istanbul ignore next */
        return Object.getOwnPropertyDescriptor(inject, key).enumerable
      })
      : Object.keys(inject);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      var provideKey = inject[key].from;
      var source = vm;
      while (source) {
        if (source._provided && hasOwn(source._provided, provideKey)) {
          result[key] = source._provided[provideKey];
          break
        }
        source = source.$parent;
      }
      if (!source) {
        if ('default' in inject[key]) {
          var provideDefault = inject[key].default;
          result[key] = typeof provideDefault === 'function'
            ? provideDefault.call(vm)
            : provideDefault;
        } else if (process.env.NODE_ENV !== 'production') {
          warn(("Injection \"" + key + "\" not found"), vm);
        }
      }
    }
    return result
  }
}

/*  */

/**
 * Runtime helper for rendering v-for lists.
 */
function renderList (
  val,
  render
) {
  var ret, i, l, keys, key;
  if (Array.isArray(val) || typeof val === 'string') {
    ret = new Array(val.length);
    for (i = 0, l = val.length; i < l; i++) {
      ret[i] = render(val[i], i);
    }
  } else if (typeof val === 'number') {
    ret = new Array(val);
    for (i = 0; i < val; i++) {
      ret[i] = render(i + 1, i);
    }
  } else if (isObject(val)) {
    keys = Object.keys(val);
    ret = new Array(keys.length);
    for (i = 0, l = keys.length; i < l; i++) {
      key = keys[i];
      ret[i] = render(val[key], key, i);
    }
  }
  if (isDef(ret)) {
    (ret)._isVList = true;
  }
  return ret
}

/*  */

/**
 * Runtime helper for rendering <slot>
 */
function renderSlot (
  name,
  fallback,
  props,
  bindObject
) {
  var scopedSlotFn = this.$scopedSlots[name];
  var nodes;
  if (scopedSlotFn) { // scoped slot
    props = props || {};
    if (bindObject) {
      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {
        warn(
          'slot v-bind without argument expects an Object',
          this
        );
      }
      props = extend(extend({}, bindObject), props);
    }
    nodes = scopedSlotFn(props) || fallback;
  } else {
    var slotNodes = this.$slots[name];
    // warn duplicate slot usage
    if (slotNodes) {
      if (process.env.NODE_ENV !== 'production' && slotNodes._rendered) {
        warn(
          "Duplicate presence of slot \"" + name + "\" found in the same render tree " +
          "- this will likely cause render errors.",
          this
        );
      }
      slotNodes._rendered = true;
    }
    nodes = slotNodes || fallback;
  }

  var target = props && props.slot;
  if (target) {
    return this.$createElement('template', { slot: target }, nodes)
  } else {
    return nodes
  }
}

/*  */

/**
 * Runtime helper for resolving filters
 */
function resolveFilter (id) {
  return resolveAsset(this.$options, 'filters', id, true) || identity
}

/*  */

function isKeyNotMatch (expect, actual) {
  if (Array.isArray(expect)) {
    return expect.indexOf(actual) === -1
  } else {
    return expect !== actual
  }
}

/**
 * Runtime helper for checking keyCodes from config.
 * exposed as Vue.prototype._k
 * passing in eventKeyName as last argument separately for backwards compat
 */
function checkKeyCodes (
  eventKeyCode,
  key,
  builtInKeyCode,
  eventKeyName,
  builtInKeyName
) {
  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;
  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
    return isKeyNotMatch(builtInKeyName, eventKeyName)
  } else if (mappedKeyCode) {
    return isKeyNotMatch(mappedKeyCode, eventKeyCode)
  } else if (eventKeyName) {
    return hyphenate(eventKeyName) !== key
  }
}

/*  */

/**
 * Runtime helper for merging v-bind="object" into a VNode's data.
 */
function bindObjectProps (
  data,
  tag,
  value,
  asProp,
  isSync
) {
  if (value) {
    if (!isObject(value)) {
      process.env.NODE_ENV !== 'production' && warn(
        'v-bind without argument expects an Object or Array value',
        this
      );
    } else {
      if (Array.isArray(value)) {
        value = toObject(value);
      }
      var hash;
      var loop = function ( key ) {
        if (
          key === 'class' ||
          key === 'style' ||
          isReservedAttribute(key)
        ) {
          hash = data;
        } else {
          var type = data.attrs && data.attrs.type;
          hash = asProp || config.mustUseProp(tag, type, key)
            ? data.domProps || (data.domProps = {})
            : data.attrs || (data.attrs = {});
        }
        if (!(key in hash)) {
          hash[key] = value[key];

          if (isSync) {
            var on = data.on || (data.on = {});
            on[("update:" + key)] = function ($event) {
              value[key] = $event;
            };
          }
        }
      };

      for (var key in value) loop( key );
    }
  }
  return data
}

/*  */

/**
 * Runtime helper for rendering static trees.
 */
function renderStatic (
  index,
  isInFor
) {
  var cached = this._staticTrees || (this._staticTrees = []);
  var tree = cached[index];
  // if has already-rendered static tree and not inside v-for,
  // we can reuse the same tree.
  if (tree && !isInFor) {
    return tree
  }
  // otherwise, render a fresh tree.
  tree = cached[index] = this.$options.staticRenderFns[index].call(
    this._renderProxy,
    null,
    this // for render fns generated for functional component templates
  );
  markStatic(tree, ("__static__" + index), false);
  return tree
}

/**
 * Runtime helper for v-once.
 * Effectively it means marking the node as static with a unique key.
 */
function markOnce (
  tree,
  index,
  key
) {
  markStatic(tree, ("__once__" + index + (key ? ("_" + key) : "")), true);
  return tree
}

function markStatic (
  tree,
  key,
  isOnce
) {
  if (Array.isArray(tree)) {
    for (var i = 0; i < tree.length; i++) {
      if (tree[i] && typeof tree[i] !== 'string') {
        markStaticNode(tree[i], (key + "_" + i), isOnce);
      }
    }
  } else {
    markStaticNode(tree, key, isOnce);
  }
}

function markStaticNode (node, key, isOnce) {
  node.isStatic = true;
  node.key = key;
  node.isOnce = isOnce;
}

/*  */

function bindObjectListeners (data, value) {
  if (value) {
    if (!isPlainObject(value)) {
      process.env.NODE_ENV !== 'production' && warn(
        'v-on without argument expects an Object value',
        this
      );
    } else {
      var on = data.on = data.on ? extend({}, data.on) : {};
      for (var key in value) {
        var existing = on[key];
        var ours = value[key];
        on[key] = existing ? [].concat(existing, ours) : ours;
      }
    }
  }
  return data
}

/*  */

function installRenderHelpers (target) {
  target._o = markOnce;
  target._n = toNumber;
  target._s = toString;
  target._l = renderList;
  target._t = renderSlot;
  target._q = looseEqual;
  target._i = looseIndexOf;
  target._m = renderStatic;
  target._f = resolveFilter;
  target._k = checkKeyCodes;
  target._b = bindObjectProps;
  target._v = createTextVNode;
  target._e = createEmptyVNode;
  target._u = resolveScopedSlots;
  target._g = bindObjectListeners;
}

/*  */

function FunctionalRenderContext (
  data,
  props,
  children,
  parent,
  Ctor
) {
  var options = Ctor.options;
  // ensure the createElement function in functional components
  // gets a unique context - this is necessary for correct named slot check
  var contextVm;
  if (hasOwn(parent, '_uid')) {
    contextVm = Object.create(parent);
    // $flow-disable-line
    contextVm._original = parent;
  } else {
    // the context vm passed in is a functional context as well.
    // in this case we want to make sure we are able to get a hold to the
    // real context instance.
    contextVm = parent;
    // $flow-disable-line
    parent = parent._original;
  }
  var isCompiled = isTrue(options._compiled);
  var needNormalization = !isCompiled;

  this.data = data;
  this.props = props;
  this.children = children;
  this.parent = parent;
  this.listeners = data.on || emptyObject;
  this.injections = resolveInject(options.inject, parent);
  this.slots = function () { return resolveSlots(children, parent); };

  // support for compiled functional template
  if (isCompiled) {
    // exposing $options for renderStatic()
    this.$options = options;
    // pre-resolve slots for renderSlot()
    this.$slots = this.slots();
    this.$scopedSlots = data.scopedSlots || emptyObject;
  }

  if (options._scopeId) {
    this._c = function (a, b, c, d) {
      var vnode = createElement(contextVm, a, b, c, d, needNormalization);
      if (vnode && !Array.isArray(vnode)) {
        vnode.fnScopeId = options._scopeId;
        vnode.fnContext = parent;
      }
      return vnode
    };
  } else {
    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };
  }
}

installRenderHelpers(FunctionalRenderContext.prototype);

function createFunctionalComponent (
  Ctor,
  propsData,
  data,
  contextVm,
  children
) {
  var options = Ctor.options;
  var props = {};
  var propOptions = options.props;
  if (isDef(propOptions)) {
    for (var key in propOptions) {
      props[key] = validateProp(key, propOptions, propsData || emptyObject);
    }
  } else {
    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }
    if (isDef(data.props)) { mergeProps(props, data.props); }
  }

  var renderContext = new FunctionalRenderContext(
    data,
    props,
    children,
    contextVm,
    Ctor
  );

  var vnode = options.render.call(null, renderContext._c, renderContext);

  if (vnode instanceof VNode) {
    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options)
  } else if (Array.isArray(vnode)) {
    var vnodes = normalizeChildren(vnode) || [];
    var res = new Array(vnodes.length);
    for (var i = 0; i < vnodes.length; i++) {
      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options);
    }
    return res
  }
}

function cloneAndMarkFunctionalResult (vnode, data, contextVm, options) {
  // #7817 clone node before setting fnContext, otherwise if the node is reused
  // (e.g. it was from a cached normal slot) the fnContext causes named slots
  // that should not be matched to match.
  var clone = cloneVNode(vnode);
  clone.fnContext = contextVm;
  clone.fnOptions = options;
  if (data.slot) {
    (clone.data || (clone.data = {})).slot = data.slot;
  }
  return clone
}

function mergeProps (to, from) {
  for (var key in from) {
    to[camelize(key)] = from[key];
  }
}

/*  */




// Register the component hook to weex native render engine.
// The hook will be triggered by native, not javascript.


// Updates the state of the component to weex native render engine.

/*  */

// https://github.com/Hanks10100/weex-native-directive/tree/master/component

// listening on native callback

/*  */

/*  */

// inline hooks to be invoked on component VNodes during patch
var componentVNodeHooks = {
  init: function init (
    vnode,
    hydrating,
    parentElm,
    refElm
  ) {
    if (
      vnode.componentInstance &&
      !vnode.componentInstance._isDestroyed &&
      vnode.data.keepAlive
    ) {
      // kept-alive components, treat as a patch
      var mountedNode = vnode; // work around flow
      componentVNodeHooks.prepatch(mountedNode, mountedNode);
    } else {
      var child = vnode.componentInstance = createComponentInstanceForVnode(
        vnode,
        activeInstance,
        parentElm,
        refElm
      );
      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
    }
  },

  prepatch: function prepatch (oldVnode, vnode) {
    var options = vnode.componentOptions;
    var child = vnode.componentInstance = oldVnode.componentInstance;
    updateChildComponent(
      child,
      options.propsData, // updated props
      options.listeners, // updated listeners
      vnode, // new parent vnode
      options.children // new children
    );
  },

  insert: function insert (vnode) {
    var context = vnode.context;
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isMounted) {
      componentInstance._isMounted = true;
      callHook(componentInstance, 'mounted');
    }
    if (vnode.data.keepAlive) {
      if (context._isMounted) {
        // vue-router#1212
        // During updates, a kept-alive component's child components may
        // change, so directly walking the tree here may call activated hooks
        // on incorrect children. Instead we push them into a queue which will
        // be processed after the whole patch process ended.
        queueActivatedComponent(componentInstance);
      } else {
        activateChildComponent(componentInstance, true /* direct */);
      }
    }
  },

  destroy: function destroy (vnode) {
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isDestroyed) {
      if (!vnode.data.keepAlive) {
        componentInstance.$destroy();
      } else {
        deactivateChildComponent(componentInstance, true /* direct */);
      }
    }
  }
};

var hooksToMerge = Object.keys(componentVNodeHooks);

function createComponent (
  Ctor,
  data,
  context,
  children,
  tag
) {
  if (isUndef(Ctor)) {
    return
  }

  var baseCtor = context.$options._base;

  // plain options object: turn it into a constructor
  if (isObject(Ctor)) {
    Ctor = baseCtor.extend(Ctor);
  }

  // if at this stage it's not a constructor or an async component factory,
  // reject.
  if (typeof Ctor !== 'function') {
    if (process.env.NODE_ENV !== 'production') {
      warn(("Invalid Component definition: " + (String(Ctor))), context);
    }
    return
  }

  // async component
  var asyncFactory;
  if (isUndef(Ctor.cid)) {
    asyncFactory = Ctor;
    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);
    if (Ctor === undefined) {
      // return a placeholder node for async component, which is rendered
      // as a comment node but preserves all the raw information for the node.
      // the information will be used for async server-rendering and hydration.
      return createAsyncPlaceholder(
        asyncFactory,
        data,
        context,
        children,
        tag
      )
    }
  }

  data = data || {};

  // resolve constructor options in case global mixins are applied after
  // component constructor creation
  resolveConstructorOptions(Ctor);

  // transform component v-model data into props & events
  if (isDef(data.model)) {
    transformModel(Ctor.options, data);
  }

  // extract props
  var propsData = extractPropsFromVNodeData(data, Ctor, tag);

  // functional component
  if (isTrue(Ctor.options.functional)) {
    return createFunctionalComponent(Ctor, propsData, data, context, children)
  }

  // extract listeners, since these needs to be treated as
  // child component listeners instead of DOM listeners
  var listeners = data.on;
  // replace with listeners with .native modifier
  // so it gets processed during parent component patch.
  data.on = data.nativeOn;

  if (isTrue(Ctor.options.abstract)) {
    // abstract components do not keep anything
    // other than props & listeners & slot

    // work around flow
    var slot = data.slot;
    data = {};
    if (slot) {
      data.slot = slot;
    }
  }

  // install component management hooks onto the placeholder node
  installComponentHooks(data);

  // return a placeholder vnode
  var name = Ctor.options.name || tag;
  var vnode = new VNode(
    ("vue-component-" + (Ctor.cid) + (name ? ("-" + name) : '')),
    data, undefined, undefined, undefined, context,
    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },
    asyncFactory
  );

  // Weex specific: invoke recycle-list optimized @render function for
  // extracting cell-slot template.
  // https://github.com/Hanks10100/weex-native-directive/tree/master/component
  /* istanbul ignore if */
  return vnode
}

function createComponentInstanceForVnode (
  vnode, // we know it's MountedComponentVNode but flow doesn't
  parent, // activeInstance in lifecycle state
  parentElm,
  refElm
) {
  var options = {
    _isComponent: true,
    parent: parent,
    _parentVnode: vnode,
    _parentElm: parentElm || null,
    _refElm: refElm || null
  };
  // check inline-template render functions
  var inlineTemplate = vnode.data.inlineTemplate;
  if (isDef(inlineTemplate)) {
    options.render = inlineTemplate.render;
    options.staticRenderFns = inlineTemplate.staticRenderFns;
  }
  return new vnode.componentOptions.Ctor(options)
}

function installComponentHooks (data) {
  var hooks = data.hook || (data.hook = {});
  for (var i = 0; i < hooksToMerge.length; i++) {
    var key = hooksToMerge[i];
    hooks[key] = componentVNodeHooks[key];
  }
}

// transform component v-model info (value and callback) into
// prop and event handler respectively.
function transformModel (options, data) {
  var prop = (options.model && options.model.prop) || 'value';
  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;
  var on = data.on || (data.on = {});
  if (isDef(on[event])) {
    on[event] = [data.model.callback].concat(on[event]);
  } else {
    on[event] = data.model.callback;
  }
}

/*  */

var SIMPLE_NORMALIZE = 1;
var ALWAYS_NORMALIZE = 2;

// wrapper function for providing a more flexible interface
// without getting yelled at by flow
function createElement (
  context,
  tag,
  data,
  children,
  normalizationType,
  alwaysNormalize
) {
  if (Array.isArray(data) || isPrimitive(data)) {
    normalizationType = children;
    children = data;
    data = undefined;
  }
  if (isTrue(alwaysNormalize)) {
    normalizationType = ALWAYS_NORMALIZE;
  }
  return _createElement(context, tag, data, children, normalizationType)
}

function _createElement (
  context,
  tag,
  data,
  children,
  normalizationType
) {
  if (isDef(data) && isDef((data).__ob__)) {
    process.env.NODE_ENV !== 'production' && warn(
      "Avoid using observed data object as vnode data: " + (JSON.stringify(data)) + "\n" +
      'Always create fresh vnode data objects in each render!',
      context
    );
    return createEmptyVNode()
  }
  // object syntax in v-bind
  if (isDef(data) && isDef(data.is)) {
    tag = data.is;
  }
  if (!tag) {
    // in case of component :is set to falsy value
    return createEmptyVNode()
  }
  // warn against non-primitive key
  if (process.env.NODE_ENV !== 'production' &&
    isDef(data) && isDef(data.key) && !isPrimitive(data.key)
  ) {
    {
      warn(
        'Avoid using non-primitive value as key, ' +
        'use string/number value instead.',
        context
      );
    }
  }
  // support single function children as default scoped slot
  if (Array.isArray(children) &&
    typeof children[0] === 'function'
  ) {
    data = data || {};
    data.scopedSlots = { default: children[0] };
    children.length = 0;
  }
  if (normalizationType === ALWAYS_NORMALIZE) {
    children = normalizeChildren(children);
  } else if (normalizationType === SIMPLE_NORMALIZE) {
    children = simpleNormalizeChildren(children);
  }
  var vnode, ns;
  if (typeof tag === 'string') {
    var Ctor;
    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);
    if (config.isReservedTag(tag)) {
      // platform built-in elements
      vnode = new VNode(
        config.parsePlatformTagName(tag), data, children,
        undefined, undefined, context
      );
    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
      // component
      vnode = createComponent(Ctor, data, context, children, tag);
    } else {
      // unknown or unlisted namespaced elements
      // check at runtime because it may get assigned a namespace when its
      // parent normalizes children
      vnode = new VNode(
        tag, data, children,
        undefined, undefined, context
      );
    }
  } else {
    // direct component options / constructor
    vnode = createComponent(tag, data, context, children);
  }
  if (Array.isArray(vnode)) {
    return vnode
  } else if (isDef(vnode)) {
    if (isDef(ns)) { applyNS(vnode, ns); }
    if (isDef(data)) { registerDeepBindings(data); }
    return vnode
  } else {
    return createEmptyVNode()
  }
}

function applyNS (vnode, ns, force) {
  vnode.ns = ns;
  if (vnode.tag === 'foreignObject') {
    // use default namespace inside foreignObject
    ns = undefined;
    force = true;
  }
  if (isDef(vnode.children)) {
    for (var i = 0, l = vnode.children.length; i < l; i++) {
      var child = vnode.children[i];
      if (isDef(child.tag) && (
        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {
        applyNS(child, ns, force);
      }
    }
  }
}

// ref #5318
// necessary to ensure parent re-render when deep bindings like :style and
// :class are used on slot nodes
function registerDeepBindings (data) {
  if (isObject(data.style)) {
    traverse(data.style);
  }
  if (isObject(data.class)) {
    traverse(data.class);
  }
}

/*  */

function initRender (vm) {
  vm._vnode = null; // the root of the child tree
  vm._staticTrees = null; // v-once cached trees
  var options = vm.$options;
  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree
  var renderContext = parentVnode && parentVnode.context;
  vm.$slots = resolveSlots(options._renderChildren, renderContext);
  vm.$scopedSlots = emptyObject;
  // bind the createElement fn to this instance
  // so that we get proper render context inside it.
  // args order: tag, data, children, normalizationType, alwaysNormalize
  // internal version is used by render functions compiled from templates
  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };
  // normalization is always applied for the public version, used in
  // user-written render functions.
  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };

  // $attrs & $listeners are exposed for easier HOC creation.
  // they need to be reactive so that HOCs using them are always updated
  var parentData = parentVnode && parentVnode.data;

  /* istanbul ignore else */
  if (process.env.NODE_ENV !== 'production') {
    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {
      !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
    }, true);
    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {
      !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
    }, true);
  } else {
    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);
    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, null, true);
  }
}

function renderMixin (Vue) {
  // install runtime convenience helpers
  installRenderHelpers(Vue.prototype);

  Vue.prototype.$nextTick = function (fn) {
    return nextTick(fn, this)
  };

  Vue.prototype._render = function () {
    var vm = this;
    var ref = vm.$options;
    var render = ref.render;
    var _parentVnode = ref._parentVnode;

    // reset _rendered flag on slots for duplicate slot check
    if (process.env.NODE_ENV !== 'production') {
      for (var key in vm.$slots) {
        // $flow-disable-line
        vm.$slots[key]._rendered = false;
      }
    }

    if (_parentVnode) {
      vm.$scopedSlots = _parentVnode.data.scopedSlots || emptyObject;
    }

    // set parent vnode. this allows render functions to have access
    // to the data on the placeholder node.
    vm.$vnode = _parentVnode;
    // render self
    var vnode;
    try {
      vnode = render.call(vm._renderProxy, vm.$createElement);
    } catch (e) {
      handleError(e, vm, "render");
      // return error render result,
      // or previous vnode to prevent render error causing blank component
      /* istanbul ignore else */
      if (process.env.NODE_ENV !== 'production') {
        if (vm.$options.renderError) {
          try {
            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);
          } catch (e) {
            handleError(e, vm, "renderError");
            vnode = vm._vnode;
          }
        } else {
          vnode = vm._vnode;
        }
      } else {
        vnode = vm._vnode;
      }
    }
    // return empty vnode in case the render function errored out
    if (!(vnode instanceof VNode)) {
      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {
        warn(
          'Multiple root nodes returned from render function. Render function ' +
          'should return a single root node.',
          vm
        );
      }
      vnode = createEmptyVNode();
    }
    // set parent
    vnode.parent = _parentVnode;
    return vnode
  };
}

/*  */

var uid$3 = 0;

function initMixin (Vue) {
  Vue.prototype._init = function (options) {
    var vm = this;
    // a uid
    vm._uid = uid$3++;

    var startTag, endTag;
    /* istanbul ignore if */
    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {
      startTag = "vue-perf-start:" + (vm._uid);
      endTag = "vue-perf-end:" + (vm._uid);
      mark(startTag);
    }

    // a flag to avoid this being observed
    vm._isVue = true;
    // merge options
    if (options && options._isComponent) {
      // optimize internal component instantiation
      // since dynamic options merging is pretty slow, and none of the
      // internal component options needs special treatment.
      initInternalComponent(vm, options);
    } else {
      vm.$options = mergeOptions(
        resolveConstructorOptions(vm.constructor),
        options || {},
        vm
      );
    }
    /* istanbul ignore else */
    if (process.env.NODE_ENV !== 'production') {
      initProxy(vm);
    } else {
      vm._renderProxy = vm;
    }
    // expose real self
    vm._self = vm;
    initLifecycle(vm);
    initEvents(vm);
    initRender(vm);
    callHook(vm, 'beforeCreate');
    initInjections(vm); // resolve injections before data/props
    initState(vm);
    initProvide(vm); // resolve provide after data/props
    callHook(vm, 'created');

    /* istanbul ignore if */
    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {
      vm._name = formatComponentName(vm, false);
      mark(endTag);
      measure(("vue " + (vm._name) + " init"), startTag, endTag);
    }

    if (vm.$options.el) {
      vm.$mount(vm.$options.el);
    }
  };
}

function initInternalComponent (vm, options) {
  var opts = vm.$options = Object.create(vm.constructor.options);
  // doing this because it's faster than dynamic enumeration.
  var parentVnode = options._parentVnode;
  opts.parent = options.parent;
  opts._parentVnode = parentVnode;
  opts._parentElm = options._parentElm;
  opts._refElm = options._refElm;

  var vnodeComponentOptions = parentVnode.componentOptions;
  opts.propsData = vnodeComponentOptions.propsData;
  opts._parentListeners = vnodeComponentOptions.listeners;
  opts._renderChildren = vnodeComponentOptions.children;
  opts._componentTag = vnodeComponentOptions.tag;

  if (options.render) {
    opts.render = options.render;
    opts.staticRenderFns = options.staticRenderFns;
  }
}

function resolveConstructorOptions (Ctor) {
  var options = Ctor.options;
  if (Ctor.super) {
    var superOptions = resolveConstructorOptions(Ctor.super);
    var cachedSuperOptions = Ctor.superOptions;
    if (superOptions !== cachedSuperOptions) {
      // super option changed,
      // need to resolve new options.
      Ctor.superOptions = superOptions;
      // check if there are any late-modified/attached options (#4976)
      var modifiedOptions = resolveModifiedOptions(Ctor);
      // update base extend options
      if (modifiedOptions) {
        extend(Ctor.extendOptions, modifiedOptions);
      }
      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
      if (options.name) {
        options.components[options.name] = Ctor;
      }
    }
  }
  return options
}

function resolveModifiedOptions (Ctor) {
  var modified;
  var latest = Ctor.options;
  var extended = Ctor.extendOptions;
  var sealed = Ctor.sealedOptions;
  for (var key in latest) {
    if (latest[key] !== sealed[key]) {
      if (!modified) { modified = {}; }
      modified[key] = dedupe(latest[key], extended[key], sealed[key]);
    }
  }
  return modified
}

function dedupe (latest, extended, sealed) {
  // compare latest and sealed to ensure lifecycle hooks won't be duplicated
  // between merges
  if (Array.isArray(latest)) {
    var res = [];
    sealed = Array.isArray(sealed) ? sealed : [sealed];
    extended = Array.isArray(extended) ? extended : [extended];
    for (var i = 0; i < latest.length; i++) {
      // push original options and not sealed options to exclude duplicated options
      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {
        res.push(latest[i]);
      }
    }
    return res
  } else {
    return latest
  }
}

function Vue (options) {
  if (process.env.NODE_ENV !== 'production' &&
    !(this instanceof Vue)
  ) {
    warn('Vue is a constructor and should be called with the `new` keyword');
  }
  this._init(options);
}

initMixin(Vue);
stateMixin(Vue);
eventsMixin(Vue);
lifecycleMixin(Vue);
renderMixin(Vue);

/*  */

function initUse (Vue) {
  Vue.use = function (plugin) {
    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));
    if (installedPlugins.indexOf(plugin) > -1) {
      return this
    }

    // additional parameters
    var args = toArray(arguments, 1);
    args.unshift(this);
    if (typeof plugin.install === 'function') {
      plugin.install.apply(plugin, args);
    } else if (typeof plugin === 'function') {
      plugin.apply(null, args);
    }
    installedPlugins.push(plugin);
    return this
  };
}

/*  */

function initMixin$1 (Vue) {
  Vue.mixin = function (mixin) {
    this.options = mergeOptions(this.options, mixin);
    return this
  };
}

/*  */

function initExtend (Vue) {
  /**
   * Each instance constructor, including Vue, has a unique
   * cid. This enables us to create wrapped "child
   * constructors" for prototypal inheritance and cache them.
   */
  Vue.cid = 0;
  var cid = 1;

  /**
   * Class inheritance
   */
  Vue.extend = function (extendOptions) {
    extendOptions = extendOptions || {};
    var Super = this;
    var SuperId = Super.cid;
    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
    if (cachedCtors[SuperId]) {
      return cachedCtors[SuperId]
    }

    var name = extendOptions.name || Super.options.name;
    if (process.env.NODE_ENV !== 'production' && name) {
      validateComponentName(name);
    }

    var Sub = function VueComponent (options) {
      this._init(options);
    };
    Sub.prototype = Object.create(Super.prototype);
    Sub.prototype.constructor = Sub;
    Sub.cid = cid++;
    Sub.options = mergeOptions(
      Super.options,
      extendOptions
    );
    Sub['super'] = Super;

    // For props and computed properties, we define the proxy getters on
    // the Vue instances at extension time, on the extended prototype. This
    // avoids Object.defineProperty calls for each instance created.
    if (Sub.options.props) {
      initProps$1(Sub);
    }
    if (Sub.options.computed) {
      initComputed$1(Sub);
    }

    // allow further extension/mixin/plugin usage
    Sub.extend = Super.extend;
    Sub.mixin = Super.mixin;
    Sub.use = Super.use;

    // create asset registers, so extended classes
    // can have their private assets too.
    ASSET_TYPES.forEach(function (type) {
      Sub[type] = Super[type];
    });
    // enable recursive self-lookup
    if (name) {
      Sub.options.components[name] = Sub;
    }

    // keep a reference to the super options at extension time.
    // later at instantiation we can check if Super's options have
    // been updated.
    Sub.superOptions = Super.options;
    Sub.extendOptions = extendOptions;
    Sub.sealedOptions = extend({}, Sub.options);

    // cache constructor
    cachedCtors[SuperId] = Sub;
    return Sub
  };
}

function initProps$1 (Comp) {
  var props = Comp.options.props;
  for (var key in props) {
    proxy(Comp.prototype, "_props", key);
  }
}

function initComputed$1 (Comp) {
  var computed = Comp.options.computed;
  for (var key in computed) {
    defineComputed(Comp.prototype, key, computed[key]);
  }
}

/*  */

function initAssetRegisters (Vue) {
  /**
   * Create asset registration methods.
   */
  ASSET_TYPES.forEach(function (type) {
    Vue[type] = function (
      id,
      definition
    ) {
      if (!definition) {
        return this.options[type + 's'][id]
      } else {
        /* istanbul ignore if */
        if (process.env.NODE_ENV !== 'production' && type === 'component') {
          validateComponentName(id);
        }
        if (type === 'component' && isPlainObject(definition)) {
          definition.name = definition.name || id;
          definition = this.options._base.extend(definition);
        }
        if (type === 'directive' && typeof definition === 'function') {
          definition = { bind: definition, update: definition };
        }
        this.options[type + 's'][id] = definition;
        return definition
      }
    };
  });
}

/*  */

function getComponentName (opts) {
  return opts && (opts.Ctor.options.name || opts.tag)
}

function matches (pattern, name) {
  if (Array.isArray(pattern)) {
    return pattern.indexOf(name) > -1
  } else if (typeof pattern === 'string') {
    return pattern.split(',').indexOf(name) > -1
  } else if (isRegExp(pattern)) {
    return pattern.test(name)
  }
  /* istanbul ignore next */
  return false
}

function pruneCache (keepAliveInstance, filter) {
  var cache = keepAliveInstance.cache;
  var keys = keepAliveInstance.keys;
  var _vnode = keepAliveInstance._vnode;
  for (var key in cache) {
    var cachedNode = cache[key];
    if (cachedNode) {
      var name = getComponentName(cachedNode.componentOptions);
      if (name && !filter(name)) {
        pruneCacheEntry(cache, key, keys, _vnode);
      }
    }
  }
}

function pruneCacheEntry (
  cache,
  key,
  keys,
  current
) {
  var cached$$1 = cache[key];
  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {
    cached$$1.componentInstance.$destroy();
  }
  cache[key] = null;
  remove(keys, key);
}

var patternTypes = [String, RegExp, Array];

var KeepAlive = {
  name: 'keep-alive',
  abstract: true,

  props: {
    include: patternTypes,
    exclude: patternTypes,
    max: [String, Number]
  },

  created: function created () {
    this.cache = Object.create(null);
    this.keys = [];
  },

  destroyed: function destroyed () {
    var this$1 = this;

    for (var key in this$1.cache) {
      pruneCacheEntry(this$1.cache, key, this$1.keys);
    }
  },

  mounted: function mounted () {
    var this$1 = this;

    this.$watch('include', function (val) {
      pruneCache(this$1, function (name) { return matches(val, name); });
    });
    this.$watch('exclude', function (val) {
      pruneCache(this$1, function (name) { return !matches(val, name); });
    });
  },

  render: function render () {
    var slot = this.$slots.default;
    var vnode = getFirstComponentChild(slot);
    var componentOptions = vnode && vnode.componentOptions;
    if (componentOptions) {
      // check pattern
      var name = getComponentName(componentOptions);
      var ref = this;
      var include = ref.include;
      var exclude = ref.exclude;
      if (
        // not included
        (include && (!name || !matches(include, name))) ||
        // excluded
        (exclude && name && matches(exclude, name))
      ) {
        return vnode
      }

      var ref$1 = this;
      var cache = ref$1.cache;
      var keys = ref$1.keys;
      var key = vnode.key == null
        // same constructor may get registered as different local components
        // so cid alone is not enough (#3269)
        ? componentOptions.Ctor.cid + (componentOptions.tag ? ("::" + (componentOptions.tag)) : '')
        : vnode.key;
      if (cache[key]) {
        vnode.componentInstance = cache[key].componentInstance;
        // make current key freshest
        remove(keys, key);
        keys.push(key);
      } else {
        cache[key] = vnode;
        keys.push(key);
        // prune oldest entry
        if (this.max && keys.length > parseInt(this.max)) {
          pruneCacheEntry(cache, keys[0], keys, this._vnode);
        }
      }

      vnode.data.keepAlive = true;
    }
    return vnode || (slot && slot[0])
  }
}

var builtInComponents = {
  KeepAlive: KeepAlive
}

/*  */

function initGlobalAPI (Vue) {
  // config
  var configDef = {};
  configDef.get = function () { return config; };
  if (process.env.NODE_ENV !== 'production') {
    configDef.set = function () {
      warn(
        'Do not replace the Vue.config object, set individual fields instead.'
      );
    };
  }
  Object.defineProperty(Vue, 'config', configDef);

  // exposed util methods.
  // NOTE: these are not considered part of the public API - avoid relying on
  // them unless you are aware of the risk.
  Vue.util = {
    warn: warn,
    extend: extend,
    mergeOptions: mergeOptions,
    defineReactive: defineReactive
  };

  Vue.set = set;
  Vue.delete = del;
  Vue.nextTick = nextTick;

  Vue.options = Object.create(null);
  ASSET_TYPES.forEach(function (type) {
    Vue.options[type + 's'] = Object.create(null);
  });

  // this is used to identify the "base" constructor to extend all plain-object
  // components with in Weex's multi-instance scenarios.
  Vue.options._base = Vue;

  extend(Vue.options.components, builtInComponents);

  initUse(Vue);
  initMixin$1(Vue);
  initExtend(Vue);
  initAssetRegisters(Vue);
}

initGlobalAPI(Vue);

Object.defineProperty(Vue.prototype, '$isServer', {
  get: isServerRendering
});

Object.defineProperty(Vue.prototype, '$ssrContext', {
  get: function get () {
    /* istanbul ignore next */
    return this.$vnode && this.$vnode.ssrContext
  }
});

// expose FunctionalRenderContext for ssr runtime helper installation
Object.defineProperty(Vue, 'FunctionalRenderContext', {
  value: FunctionalRenderContext
});

Vue.version = '2.5.17';

/*  */

// these are reserved for web because they are directly compiled away
// during template compilation
var isReservedAttr = makeMap('style,class');

// attributes that should be using props for binding
var acceptValue = makeMap('input,textarea,option,select,progress');
var mustUseProp = function (tag, type, attr) {
  return (
    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||
    (attr === 'selected' && tag === 'option') ||
    (attr === 'checked' && tag === 'input') ||
    (attr === 'muted' && tag === 'video')
  )
};

var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');

var isBooleanAttr = makeMap(
  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +
  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +
  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +
  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +
  'required,reversed,scoped,seamless,selected,sortable,translate,' +
  'truespeed,typemustmatch,visible'
);

var xlinkNS = 'http://www.w3.org/1999/xlink';

var isXlink = function (name) {
  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'
};

var getXlinkProp = function (name) {
  return isXlink(name) ? name.slice(6, name.length) : ''
};

var isFalsyAttrValue = function (val) {
  return val == null || val === false
};

/*  */

function genClassForVnode (vnode) {
  var data = vnode.data;
  var parentNode = vnode;
  var childNode = vnode;
  while (isDef(childNode.componentInstance)) {
    childNode = childNode.componentInstance._vnode;
    if (childNode && childNode.data) {
      data = mergeClassData(childNode.data, data);
    }
  }
  while (isDef(parentNode = parentNode.parent)) {
    if (parentNode && parentNode.data) {
      data = mergeClassData(data, parentNode.data);
    }
  }
  return renderClass(data.staticClass, data.class)
}

function mergeClassData (child, parent) {
  return {
    staticClass: concat(child.staticClass, parent.staticClass),
    class: isDef(child.class)
      ? [child.class, parent.class]
      : parent.class
  }
}

function renderClass (
  staticClass,
  dynamicClass
) {
  if (isDef(staticClass) || isDef(dynamicClass)) {
    return concat(staticClass, stringifyClass(dynamicClass))
  }
  /* istanbul ignore next */
  return ''
}

function concat (a, b) {
  return a ? b ? (a + ' ' + b) : a : (b || '')
}

function stringifyClass (value) {
  if (Array.isArray(value)) {
    return stringifyArray(value)
  }
  if (isObject(value)) {
    return stringifyObject(value)
  }
  if (typeof value === 'string') {
    return value
  }
  /* istanbul ignore next */
  return ''
}

function stringifyArray (value) {
  var res = '';
  var stringified;
  for (var i = 0, l = value.length; i < l; i++) {
    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
      if (res) { res += ' '; }
      res += stringified;
    }
  }
  return res
}

function stringifyObject (value) {
  var res = '';
  for (var key in value) {
    if (value[key]) {
      if (res) { res += ' '; }
      res += key;
    }
  }
  return res
}

/*  */

var namespaceMap = {
  svg: 'http://www.w3.org/2000/svg',
  math: 'http://www.w3.org/1998/Math/MathML'
};

var isHTMLTag = makeMap(
  'html,body,base,head,link,meta,style,title,' +
  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +
  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +
  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +
  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +
  'embed,object,param,source,canvas,script,noscript,del,ins,' +
  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +
  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +
  'output,progress,select,textarea,' +
  'details,dialog,menu,menuitem,summary,' +
  'content,element,shadow,template,blockquote,iframe,tfoot'
);

// this map is intentionally selective, only covering SVG elements that may
// contain child elements.
var isSVG = makeMap(
  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +
  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +
  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',
  true
);



var isReservedTag = function (tag) {
  return isHTMLTag(tag) || isSVG(tag)
};

function getTagNamespace (tag) {
  if (isSVG(tag)) {
    return 'svg'
  }
  // basic support for MathML
  // note it doesn't support other MathML elements being component roots
  if (tag === 'math') {
    return 'math'
  }
}

var unknownElementCache = Object.create(null);
function isUnknownElement (tag) {
  /* istanbul ignore if */
  if (!inBrowser) {
    return true
  }
  if (isReservedTag(tag)) {
    return false
  }
  tag = tag.toLowerCase();
  /* istanbul ignore if */
  if (unknownElementCache[tag] != null) {
    return unknownElementCache[tag]
  }
  var el = document.createElement(tag);
  if (tag.indexOf('-') > -1) {
    // http://stackoverflow.com/a/28210364/1070244
    return (unknownElementCache[tag] = (
      el.constructor === window.HTMLUnknownElement ||
      el.constructor === window.HTMLElement
    ))
  } else {
    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))
  }
}

var isTextInputType = makeMap('text,number,password,search,email,tel,url');

/*  */

/**
 * Query an element selector if it's not an element already.
 */
function query (el) {
  if (typeof el === 'string') {
    var selected = document.querySelector(el);
    if (!selected) {
      process.env.NODE_ENV !== 'production' && warn(
        'Cannot find element: ' + el
      );
      return document.createElement('div')
    }
    return selected
  } else {
    return el
  }
}

/*  */

function createElement$1 (tagName, vnode) {
  var elm = document.createElement(tagName);
  if (tagName !== 'select') {
    return elm
  }
  // false or null will remove the attribute but undefined will not
  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {
    elm.setAttribute('multiple', 'multiple');
  }
  return elm
}

function createElementNS (namespace, tagName) {
  return document.createElementNS(namespaceMap[namespace], tagName)
}

function createTextNode (text) {
  return document.createTextNode(text)
}

function createComment (text) {
  return document.createComment(text)
}

function insertBefore (parentNode, newNode, referenceNode) {
  parentNode.insertBefore(newNode, referenceNode);
}

function removeChild (node, child) {
  node.removeChild(child);
}

function appendChild (node, child) {
  node.appendChild(child);
}

function parentNode (node) {
  return node.parentNode
}

function nextSibling (node) {
  return node.nextSibling
}

function tagName (node) {
  return node.tagName
}

function setTextContent (node, text) {
  node.textContent = text;
}

function setStyleScope (node, scopeId) {
  node.setAttribute(scopeId, '');
}


var nodeOps = Object.freeze({
	createElement: createElement$1,
	createElementNS: createElementNS,
	createTextNode: createTextNode,
	createComment: createComment,
	insertBefore: insertBefore,
	removeChild: removeChild,
	appendChild: appendChild,
	parentNode: parentNode,
	nextSibling: nextSibling,
	tagName: tagName,
	setTextContent: setTextContent,
	setStyleScope: setStyleScope
});

/*  */

var ref = {
  create: function create (_, vnode) {
    registerRef(vnode);
  },
  update: function update (oldVnode, vnode) {
    if (oldVnode.data.ref !== vnode.data.ref) {
      registerRef(oldVnode, true);
      registerRef(vnode);
    }
  },
  destroy: function destroy (vnode) {
    registerRef(vnode, true);
  }
}

function registerRef (vnode, isRemoval) {
  var key = vnode.data.ref;
  if (!isDef(key)) { return }

  var vm = vnode.context;
  var ref = vnode.componentInstance || vnode.elm;
  var refs = vm.$refs;
  if (isRemoval) {
    if (Array.isArray(refs[key])) {
      remove(refs[key], ref);
    } else if (refs[key] === ref) {
      refs[key] = undefined;
    }
  } else {
    if (vnode.data.refInFor) {
      if (!Array.isArray(refs[key])) {
        refs[key] = [ref];
      } else if (refs[key].indexOf(ref) < 0) {
        // $flow-disable-line
        refs[key].push(ref);
      }
    } else {
      refs[key] = ref;
    }
  }
}

/**
 * Virtual DOM patching algorithm based on Snabbdom by
 * Simon Friis Vindum (@paldepind)
 * Licensed under the MIT License
 * https://github.com/paldepind/snabbdom/blob/master/LICENSE
 *
 * modified by Evan You (@yyx990803)
 *
 * Not type-checking this because this file is perf-critical and the cost
 * of making flow understand it is not worth it.
 */

var emptyNode = new VNode('', {}, []);

var hooks = ['create', 'activate', 'update', 'remove', 'destroy'];

function sameVnode (a, b) {
  return (
    a.key === b.key && (
      (
        a.tag === b.tag &&
        a.isComment === b.isComment &&
        isDef(a.data) === isDef(b.data) &&
        sameInputType(a, b)
      ) || (
        isTrue(a.isAsyncPlaceholder) &&
        a.asyncFactory === b.asyncFactory &&
        isUndef(b.asyncFactory.error)
      )
    )
  )
}

function sameInputType (a, b) {
  if (a.tag !== 'input') { return true }
  var i;
  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;
  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;
  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)
}

function createKeyToOldIdx (children, beginIdx, endIdx) {
  var i, key;
  var map = {};
  for (i = beginIdx; i <= endIdx; ++i) {
    key = children[i].key;
    if (isDef(key)) { map[key] = i; }
  }
  return map
}

function createPatchFunction (backend) {
  var i, j;
  var cbs = {};

  var modules = backend.modules;
  var nodeOps = backend.nodeOps;

  for (i = 0; i < hooks.length; ++i) {
    cbs[hooks[i]] = [];
    for (j = 0; j < modules.length; ++j) {
      if (isDef(modules[j][hooks[i]])) {
        cbs[hooks[i]].push(modules[j][hooks[i]]);
      }
    }
  }

  function emptyNodeAt (elm) {
    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)
  }

  function createRmCb (childElm, listeners) {
    function remove () {
      if (--remove.listeners === 0) {
        removeNode(childElm);
      }
    }
    remove.listeners = listeners;
    return remove
  }

  function removeNode (el) {
    var parent = nodeOps.parentNode(el);
    // element may have already been removed due to v-html / v-text
    if (isDef(parent)) {
      nodeOps.removeChild(parent, el);
    }
  }

  function isUnknownElement$$1 (vnode, inVPre) {
    return (
      !inVPre &&
      !vnode.ns &&
      !(
        config.ignoredElements.length &&
        config.ignoredElements.some(function (ignore) {
          return isRegExp(ignore)
            ? ignore.test(vnode.tag)
            : ignore === vnode.tag
        })
      ) &&
      config.isUnknownElement(vnode.tag)
    )
  }

  var creatingElmInVPre = 0;

  function createElm (
    vnode,
    insertedVnodeQueue,
    parentElm,
    refElm,
    nested,
    ownerArray,
    index
  ) {
    if (isDef(vnode.elm) && isDef(ownerArray)) {
      // This vnode was used in a previous render!
      // now it's used as a new node, overwriting its elm would cause
      // potential patch errors down the road when it's used as an insertion
      // reference node. Instead, we clone the node on-demand before creating
      // associated DOM element for it.
      vnode = ownerArray[index] = cloneVNode(vnode);
    }

    vnode.isRootInsert = !nested; // for transition enter check
    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {
      return
    }

    var data = vnode.data;
    var children = vnode.children;
    var tag = vnode.tag;
    if (isDef(tag)) {
      if (process.env.NODE_ENV !== 'production') {
        if (data && data.pre) {
          creatingElmInVPre++;
        }
        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {
          warn(
            'Unknown custom element: <' + tag + '> - did you ' +
            'register the component correctly? For recursive components, ' +
            'make sure to provide the "name" option.',
            vnode.context
          );
        }
      }

      vnode.elm = vnode.ns
        ? nodeOps.createElementNS(vnode.ns, tag)
        : nodeOps.createElement(tag, vnode);
      setScope(vnode);

      /* istanbul ignore if */
      {
        createChildren(vnode, children, insertedVnodeQueue);
        if (isDef(data)) {
          invokeCreateHooks(vnode, insertedVnodeQueue);
        }
        insert(parentElm, vnode.elm, refElm);
      }

      if (process.env.NODE_ENV !== 'production' && data && data.pre) {
        creatingElmInVPre--;
      }
    } else if (isTrue(vnode.isComment)) {
      vnode.elm = nodeOps.createComment(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    } else {
      vnode.elm = nodeOps.createTextNode(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    }
  }

  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
    var i = vnode.data;
    if (isDef(i)) {
      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;
      if (isDef(i = i.hook) && isDef(i = i.init)) {
        i(vnode, false /* hydrating */, parentElm, refElm);
      }
      // after calling the init hook, if the vnode is a child component
      // it should've created a child instance and mounted it. the child
      // component also has set the placeholder vnode's elm.
      // in that case we can just return the element and be done.
      if (isDef(vnode.componentInstance)) {
        initComponent(vnode, insertedVnodeQueue);
        if (isTrue(isReactivated)) {
          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);
        }
        return true
      }
    }
  }

  function initComponent (vnode, insertedVnodeQueue) {
    if (isDef(vnode.data.pendingInsert)) {
      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);
      vnode.data.pendingInsert = null;
    }
    vnode.elm = vnode.componentInstance.$el;
    if (isPatchable(vnode)) {
      invokeCreateHooks(vnode, insertedVnodeQueue);
      setScope(vnode);
    } else {
      // empty component root.
      // skip all element-related modules except for ref (#3455)
      registerRef(vnode);
      // make sure to invoke the insert hook
      insertedVnodeQueue.push(vnode);
    }
  }

  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
    var i;
    // hack for #4339: a reactivated component with inner transition
    // does not trigger because the inner node's created hooks are not called
    // again. It's not ideal to involve module-specific logic in here but
    // there doesn't seem to be a better way to do it.
    var innerNode = vnode;
    while (innerNode.componentInstance) {
      innerNode = innerNode.componentInstance._vnode;
      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {
        for (i = 0; i < cbs.activate.length; ++i) {
          cbs.activate[i](emptyNode, innerNode);
        }
        insertedVnodeQueue.push(innerNode);
        break
      }
    }
    // unlike a newly created component,
    // a reactivated keep-alive component doesn't insert itself
    insert(parentElm, vnode.elm, refElm);
  }

  function insert (parent, elm, ref$$1) {
    if (isDef(parent)) {
      if (isDef(ref$$1)) {
        if (ref$$1.parentNode === parent) {
          nodeOps.insertBefore(parent, elm, ref$$1);
        }
      } else {
        nodeOps.appendChild(parent, elm);
      }
    }
  }

  function createChildren (vnode, children, insertedVnodeQueue) {
    if (Array.isArray(children)) {
      if (process.env.NODE_ENV !== 'production') {
        checkDuplicateKeys(children);
      }
      for (var i = 0; i < children.length; ++i) {
        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);
      }
    } else if (isPrimitive(vnode.text)) {
      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));
    }
  }

  function isPatchable (vnode) {
    while (vnode.componentInstance) {
      vnode = vnode.componentInstance._vnode;
    }
    return isDef(vnode.tag)
  }

  function invokeCreateHooks (vnode, insertedVnodeQueue) {
    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
      cbs.create[i$1](emptyNode, vnode);
    }
    i = vnode.data.hook; // Reuse variable
    if (isDef(i)) {
      if (isDef(i.create)) { i.create(emptyNode, vnode); }
      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }
    }
  }

  // set scope id attribute for scoped CSS.
  // this is implemented as a special case to avoid the overhead
  // of going through the normal attribute patching process.
  function setScope (vnode) {
    var i;
    if (isDef(i = vnode.fnScopeId)) {
      nodeOps.setStyleScope(vnode.elm, i);
    } else {
      var ancestor = vnode;
      while (ancestor) {
        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {
          nodeOps.setStyleScope(vnode.elm, i);
        }
        ancestor = ancestor.parent;
      }
    }
    // for slot content they should also get the scopeId from the host instance.
    if (isDef(i = activeInstance) &&
      i !== vnode.context &&
      i !== vnode.fnContext &&
      isDef(i = i.$options._scopeId)
    ) {
      nodeOps.setStyleScope(vnode.elm, i);
    }
  }

  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {
    for (; startIdx <= endIdx; ++startIdx) {
      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);
    }
  }

  function invokeDestroyHook (vnode) {
    var i, j;
    var data = vnode.data;
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }
      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }
    }
    if (isDef(i = vnode.children)) {
      for (j = 0; j < vnode.children.length; ++j) {
        invokeDestroyHook(vnode.children[j]);
      }
    }
  }

  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {
    for (; startIdx <= endIdx; ++startIdx) {
      var ch = vnodes[startIdx];
      if (isDef(ch)) {
        if (isDef(ch.tag)) {
          removeAndInvokeRemoveHook(ch);
          invokeDestroyHook(ch);
        } else { // Text node
          removeNode(ch.elm);
        }
      }
    }
  }

  function removeAndInvokeRemoveHook (vnode, rm) {
    if (isDef(rm) || isDef(vnode.data)) {
      var i;
      var listeners = cbs.remove.length + 1;
      if (isDef(rm)) {
        // we have a recursively passed down rm callback
        // increase the listeners count
        rm.listeners += listeners;
      } else {
        // directly removing
        rm = createRmCb(vnode.elm, listeners);
      }
      // recursively invoke hooks on child component root node
      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {
        removeAndInvokeRemoveHook(i, rm);
      }
      for (i = 0; i < cbs.remove.length; ++i) {
        cbs.remove[i](vnode, rm);
      }
      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {
        i(vnode, rm);
      } else {
        rm();
      }
    } else {
      removeNode(vnode.elm);
    }
  }

  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {
    var oldStartIdx = 0;
    var newStartIdx = 0;
    var oldEndIdx = oldCh.length - 1;
    var oldStartVnode = oldCh[0];
    var oldEndVnode = oldCh[oldEndIdx];
    var newEndIdx = newCh.length - 1;
    var newStartVnode = newCh[0];
    var newEndVnode = newCh[newEndIdx];
    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;

    // removeOnly is a special flag used only by <transition-group>
    // to ensure removed elements stay in correct relative positions
    // during leaving transitions
    var canMove = !removeOnly;

    if (process.env.NODE_ENV !== 'production') {
      checkDuplicateKeys(newCh);
    }

    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
      if (isUndef(oldStartVnode)) {
        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left
      } else if (isUndef(oldEndVnode)) {
        oldEndVnode = oldCh[--oldEndIdx];
      } else if (sameVnode(oldStartVnode, newStartVnode)) {
        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);
        oldStartVnode = oldCh[++oldStartIdx];
        newStartVnode = newCh[++newStartIdx];
      } else if (sameVnode(oldEndVnode, newEndVnode)) {
        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);
        oldEndVnode = oldCh[--oldEndIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right
        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);
        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));
        oldStartVnode = oldCh[++oldStartIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left
        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);
        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
        oldEndVnode = oldCh[--oldEndIdx];
        newStartVnode = newCh[++newStartIdx];
      } else {
        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }
        idxInOld = isDef(newStartVnode.key)
          ? oldKeyToIdx[newStartVnode.key]
          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);
        if (isUndef(idxInOld)) { // New element
          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
        } else {
          vnodeToMove = oldCh[idxInOld];
          if (sameVnode(vnodeToMove, newStartVnode)) {
            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);
            oldCh[idxInOld] = undefined;
            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);
          } else {
            // same key but different element. treat as new element
            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
          }
        }
        newStartVnode = newCh[++newStartIdx];
      }
    }
    if (oldStartIdx > oldEndIdx) {
      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;
      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
    } else if (newStartIdx > newEndIdx) {
      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);
    }
  }

  function checkDuplicateKeys (children) {
    var seenKeys = {};
    for (var i = 0; i < children.length; i++) {
      var vnode = children[i];
      var key = vnode.key;
      if (isDef(key)) {
        if (seenKeys[key]) {
          warn(
            ("Duplicate keys detected: '" + key + "'. This may cause an update error."),
            vnode.context
          );
        } else {
          seenKeys[key] = true;
        }
      }
    }
  }

  function findIdxInOld (node, oldCh, start, end) {
    for (var i = start; i < end; i++) {
      var c = oldCh[i];
      if (isDef(c) && sameVnode(node, c)) { return i }
    }
  }

  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {
    if (oldVnode === vnode) {
      return
    }

    var elm = vnode.elm = oldVnode.elm;

    if (isTrue(oldVnode.isAsyncPlaceholder)) {
      if (isDef(vnode.asyncFactory.resolved)) {
        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);
      } else {
        vnode.isAsyncPlaceholder = true;
      }
      return
    }

    // reuse element for static trees.
    // note we only do this if the vnode is cloned -
    // if the new node is not cloned it means the render functions have been
    // reset by the hot-reload-api and we need to do a proper re-render.
    if (isTrue(vnode.isStatic) &&
      isTrue(oldVnode.isStatic) &&
      vnode.key === oldVnode.key &&
      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))
    ) {
      vnode.componentInstance = oldVnode.componentInstance;
      return
    }

    var i;
    var data = vnode.data;
    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {
      i(oldVnode, vnode);
    }

    var oldCh = oldVnode.children;
    var ch = vnode.children;
    if (isDef(data) && isPatchable(vnode)) {
      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }
      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }
    }
    if (isUndef(vnode.text)) {
      if (isDef(oldCh) && isDef(ch)) {
        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }
      } else if (isDef(ch)) {
        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }
        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
      } else if (isDef(oldCh)) {
        removeVnodes(elm, oldCh, 0, oldCh.length - 1);
      } else if (isDef(oldVnode.text)) {
        nodeOps.setTextContent(elm, '');
      }
    } else if (oldVnode.text !== vnode.text) {
      nodeOps.setTextContent(elm, vnode.text);
    }
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }
    }
  }

  function invokeInsertHook (vnode, queue, initial) {
    // delay insert hooks for component root nodes, invoke them after the
    // element is really inserted
    if (isTrue(initial) && isDef(vnode.parent)) {
      vnode.parent.data.pendingInsert = queue;
    } else {
      for (var i = 0; i < queue.length; ++i) {
        queue[i].data.hook.insert(queue[i]);
      }
    }
  }

  var hydrationBailed = false;
  // list of modules that can skip create hook during hydration because they
  // are already rendered on the client or has no need for initialization
  // Note: style is excluded because it relies on initial clone for future
  // deep updates (#7063).
  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');

  // Note: this is a browser-only function so we can assume elms are DOM nodes.
  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {
    var i;
    var tag = vnode.tag;
    var data = vnode.data;
    var children = vnode.children;
    inVPre = inVPre || (data && data.pre);
    vnode.elm = elm;

    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {
      vnode.isAsyncPlaceholder = true;
      return true
    }
    // assert node match
    if (process.env.NODE_ENV !== 'production') {
      if (!assertNodeMatch(elm, vnode, inVPre)) {
        return false
      }
    }
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }
      if (isDef(i = vnode.componentInstance)) {
        // child component. it should have hydrated its own tree.
        initComponent(vnode, insertedVnodeQueue);
        return true
      }
    }
    if (isDef(tag)) {
      if (isDef(children)) {
        // empty element, allow client to pick up and populate children
        if (!elm.hasChildNodes()) {
          createChildren(vnode, children, insertedVnodeQueue);
        } else {
          // v-html and domProps: innerHTML
          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {
            if (i !== elm.innerHTML) {
              /* istanbul ignore if */
              if (process.env.NODE_ENV !== 'production' &&
                typeof console !== 'undefined' &&
                !hydrationBailed
              ) {
                hydrationBailed = true;
                console.warn('Parent: ', elm);
                console.warn('server innerHTML: ', i);
                console.warn('client innerHTML: ', elm.innerHTML);
              }
              return false
            }
          } else {
            // iterate and compare children lists
            var childrenMatch = true;
            var childNode = elm.firstChild;
            for (var i$1 = 0; i$1 < children.length; i$1++) {
              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {
                childrenMatch = false;
                break
              }
              childNode = childNode.nextSibling;
            }
            // if childNode is not null, it means the actual childNodes list is
            // longer than the virtual children list.
            if (!childrenMatch || childNode) {
              /* istanbul ignore if */
              if (process.env.NODE_ENV !== 'production' &&
                typeof console !== 'undefined' &&
                !hydrationBailed
              ) {
                hydrationBailed = true;
                console.warn('Parent: ', elm);
                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);
              }
              return false
            }
          }
        }
      }
      if (isDef(data)) {
        var fullInvoke = false;
        for (var key in data) {
          if (!isRenderedModule(key)) {
            fullInvoke = true;
            invokeCreateHooks(vnode, insertedVnodeQueue);
            break
          }
        }
        if (!fullInvoke && data['class']) {
          // ensure collecting deps for deep class bindings for future updates
          traverse(data['class']);
        }
      }
    } else if (elm.data !== vnode.text) {
      elm.data = vnode.text;
    }
    return true
  }

  function assertNodeMatch (node, vnode, inVPre) {
    if (isDef(vnode.tag)) {
      return vnode.tag.indexOf('vue-component') === 0 || (
        !isUnknownElement$$1(vnode, inVPre) &&
        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())
      )
    } else {
      return node.nodeType === (vnode.isComment ? 8 : 3)
    }
  }

  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {
    if (isUndef(vnode)) {
      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }
      return
    }

    var isInitialPatch = false;
    var insertedVnodeQueue = [];

    if (isUndef(oldVnode)) {
      // empty mount (likely as component), create new root element
      isInitialPatch = true;
      createElm(vnode, insertedVnodeQueue, parentElm, refElm);
    } else {
      var isRealElement = isDef(oldVnode.nodeType);
      if (!isRealElement && sameVnode(oldVnode, vnode)) {
        // patch existing root node
        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);
      } else {
        if (isRealElement) {
          // mounting to a real element
          // check if this is server-rendered content and if we can perform
          // a successful hydration.
          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {
            oldVnode.removeAttribute(SSR_ATTR);
            hydrating = true;
          }
          if (isTrue(hydrating)) {
            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {
              invokeInsertHook(vnode, insertedVnodeQueue, true);
              return oldVnode
            } else if (process.env.NODE_ENV !== 'production') {
              warn(
                'The client-side rendered virtual DOM tree is not matching ' +
                'server-rendered content. This is likely caused by incorrect ' +
                'HTML markup, for example nesting block-level elements inside ' +
                '<p>, or missing <tbody>. Bailing hydration and performing ' +
                'full client-side render.'
              );
            }
          }
          // either not server-rendered, or hydration failed.
          // create an empty node and replace it
          oldVnode = emptyNodeAt(oldVnode);
        }

        // replacing existing element
        var oldElm = oldVnode.elm;
        var parentElm$1 = nodeOps.parentNode(oldElm);

        // create new node
        createElm(
          vnode,
          insertedVnodeQueue,
          // extremely rare edge case: do not insert if old element is in a
          // leaving transition. Only happens when combining transition +
          // keep-alive + HOCs. (#4590)
          oldElm._leaveCb ? null : parentElm$1,
          nodeOps.nextSibling(oldElm)
        );

        // update parent placeholder node element, recursively
        if (isDef(vnode.parent)) {
          var ancestor = vnode.parent;
          var patchable = isPatchable(vnode);
          while (ancestor) {
            for (var i = 0; i < cbs.destroy.length; ++i) {
              cbs.destroy[i](ancestor);
            }
            ancestor.elm = vnode.elm;
            if (patchable) {
              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
                cbs.create[i$1](emptyNode, ancestor);
              }
              // #6513
              // invoke insert hooks that may have been merged by create hooks.
              // e.g. for directives that uses the "inserted" hook.
              var insert = ancestor.data.hook.insert;
              if (insert.merged) {
                // start at index 1 to avoid re-invoking component mounted hook
                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {
                  insert.fns[i$2]();
                }
              }
            } else {
              registerRef(ancestor);
            }
            ancestor = ancestor.parent;
          }
        }

        // destroy old node
        if (isDef(parentElm$1)) {
          removeVnodes(parentElm$1, [oldVnode], 0, 0);
        } else if (isDef(oldVnode.tag)) {
          invokeDestroyHook(oldVnode);
        }
      }
    }

    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);
    return vnode.elm
  }
}

/*  */

var directives = {
  create: updateDirectives,
  update: updateDirectives,
  destroy: function unbindDirectives (vnode) {
    updateDirectives(vnode, emptyNode);
  }
}

function updateDirectives (oldVnode, vnode) {
  if (oldVnode.data.directives || vnode.data.directives) {
    _update(oldVnode, vnode);
  }
}

function _update (oldVnode, vnode) {
  var isCreate = oldVnode === emptyNode;
  var isDestroy = vnode === emptyNode;
  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);
  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);

  var dirsWithInsert = [];
  var dirsWithPostpatch = [];

  var key, oldDir, dir;
  for (key in newDirs) {
    oldDir = oldDirs[key];
    dir = newDirs[key];
    if (!oldDir) {
      // new directive, bind
      callHook$1(dir, 'bind', vnode, oldVnode);
      if (dir.def && dir.def.inserted) {
        dirsWithInsert.push(dir);
      }
    } else {
      // existing directive, update
      dir.oldValue = oldDir.value;
      callHook$1(dir, 'update', vnode, oldVnode);
      if (dir.def && dir.def.componentUpdated) {
        dirsWithPostpatch.push(dir);
      }
    }
  }

  if (dirsWithInsert.length) {
    var callInsert = function () {
      for (var i = 0; i < dirsWithInsert.length; i++) {
        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);
      }
    };
    if (isCreate) {
      mergeVNodeHook(vnode, 'insert', callInsert);
    } else {
      callInsert();
    }
  }

  if (dirsWithPostpatch.length) {
    mergeVNodeHook(vnode, 'postpatch', function () {
      for (var i = 0; i < dirsWithPostpatch.length; i++) {
        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);
      }
    });
  }

  if (!isCreate) {
    for (key in oldDirs) {
      if (!newDirs[key]) {
        // no longer present, unbind
        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);
      }
    }
  }
}

var emptyModifiers = Object.create(null);

function normalizeDirectives$1 (
  dirs,
  vm
) {
  var res = Object.create(null);
  if (!dirs) {
    // $flow-disable-line
    return res
  }
  var i, dir;
  for (i = 0; i < dirs.length; i++) {
    dir = dirs[i];
    if (!dir.modifiers) {
      // $flow-disable-line
      dir.modifiers = emptyModifiers;
    }
    res[getRawDirName(dir)] = dir;
    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);
  }
  // $flow-disable-line
  return res
}

function getRawDirName (dir) {
  return dir.rawName || ((dir.name) + "." + (Object.keys(dir.modifiers || {}).join('.')))
}

function callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {
  var fn = dir.def && dir.def[hook];
  if (fn) {
    try {
      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);
    } catch (e) {
      handleError(e, vnode.context, ("directive " + (dir.name) + " " + hook + " hook"));
    }
  }
}

var baseModules = [
  ref,
  directives
]

/*  */

function updateAttrs (oldVnode, vnode) {
  var opts = vnode.componentOptions;
  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {
    return
  }
  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {
    return
  }
  var key, cur, old;
  var elm = vnode.elm;
  var oldAttrs = oldVnode.data.attrs || {};
  var attrs = vnode.data.attrs || {};
  // clone observed objects, as the user probably wants to mutate it
  if (isDef(attrs.__ob__)) {
    attrs = vnode.data.attrs = extend({}, attrs);
  }

  for (key in attrs) {
    cur = attrs[key];
    old = oldAttrs[key];
    if (old !== cur) {
      setAttr(elm, key, cur);
    }
  }
  // #4391: in IE9, setting type can reset value for input[type=radio]
  // #6666: IE/Edge forces progress value down to 1 before setting a max
  /* istanbul ignore if */
  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {
    setAttr(elm, 'value', attrs.value);
  }
  for (key in oldAttrs) {
    if (isUndef(attrs[key])) {
      if (isXlink(key)) {
        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));
      } else if (!isEnumeratedAttr(key)) {
        elm.removeAttribute(key);
      }
    }
  }
}

function setAttr (el, key, value) {
  if (el.tagName.indexOf('-') > -1) {
    baseSetAttr(el, key, value);
  } else if (isBooleanAttr(key)) {
    // set attribute for blank value
    // e.g. <option disabled>Select one</option>
    if (isFalsyAttrValue(value)) {
      el.removeAttribute(key);
    } else {
      // technically allowfullscreen is a boolean attribute for <iframe>,
      // but Flash expects a value of "true" when used on <embed> tag
      value = key === 'allowfullscreen' && el.tagName === 'EMBED'
        ? 'true'
        : key;
      el.setAttribute(key, value);
    }
  } else if (isEnumeratedAttr(key)) {
    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');
  } else if (isXlink(key)) {
    if (isFalsyAttrValue(value)) {
      el.removeAttributeNS(xlinkNS, getXlinkProp(key));
    } else {
      el.setAttributeNS(xlinkNS, key, value);
    }
  } else {
    baseSetAttr(el, key, value);
  }
}

function baseSetAttr (el, key, value) {
  if (isFalsyAttrValue(value)) {
    el.removeAttribute(key);
  } else {
    // #7138: IE10 & 11 fires input event when setting placeholder on
    // <textarea>... block the first input event and remove the blocker
    // immediately.
    /* istanbul ignore if */
    if (
      isIE && !isIE9 &&
      el.tagName === 'TEXTAREA' &&
      key === 'placeholder' && !el.__ieph
    ) {
      var blocker = function (e) {
        e.stopImmediatePropagation();
        el.removeEventListener('input', blocker);
      };
      el.addEventListener('input', blocker);
      // $flow-disable-line
      el.__ieph = true; /* IE placeholder patched */
    }
    el.setAttribute(key, value);
  }
}

var attrs = {
  create: updateAttrs,
  update: updateAttrs
}

/*  */

function updateClass (oldVnode, vnode) {
  var el = vnode.elm;
  var data = vnode.data;
  var oldData = oldVnode.data;
  if (
    isUndef(data.staticClass) &&
    isUndef(data.class) && (
      isUndef(oldData) || (
        isUndef(oldData.staticClass) &&
        isUndef(oldData.class)
      )
    )
  ) {
    return
  }

  var cls = genClassForVnode(vnode);

  // handle transition classes
  var transitionClass = el._transitionClasses;
  if (isDef(transitionClass)) {
    cls = concat(cls, stringifyClass(transitionClass));
  }

  // set the class
  if (cls !== el._prevClass) {
    el.setAttribute('class', cls);
    el._prevClass = cls;
  }
}

var klass = {
  create: updateClass,
  update: updateClass
}

/*  */

/*  */









// add a raw attr (use this in preTransforms)








// note: this only removes the attr from the Array (attrsList) so that it
// doesn't get processed by processAttrs.
// By default it does NOT remove it from the map (attrsMap) because the map is
// needed during codegen.

/*  */

/**
 * Cross-platform code generation for component v-model
 */


/**
 * Cross-platform codegen helper for generating v-model value assignment code.
 */

/*  */

// in some cases, the event used has to be determined at runtime
// so we used some reserved tokens during compile.
var RANGE_TOKEN = '__r';
var CHECKBOX_RADIO_TOKEN = '__c';

/*  */

// normalize v-model event tokens that can only be determined at runtime.
// it's important to place the event as the first in the array because
// the whole point is ensuring the v-model callback gets called before
// user-attached handlers.
function normalizeEvents (on) {
  /* istanbul ignore if */
  if (isDef(on[RANGE_TOKEN])) {
    // IE input[type=range] only supports `change` event
    var event = isIE ? 'change' : 'input';
    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);
    delete on[RANGE_TOKEN];
  }
  // This was originally intended to fix #4521 but no longer necessary
  // after 2.5. Keeping it for backwards compat with generated code from < 2.4
  /* istanbul ignore if */
  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {
    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);
    delete on[CHECKBOX_RADIO_TOKEN];
  }
}

var target$1;

function createOnceHandler (handler, event, capture) {
  var _target = target$1; // save current target element in closure
  return function onceHandler () {
    var res = handler.apply(null, arguments);
    if (res !== null) {
      remove$2(event, onceHandler, capture, _target);
    }
  }
}

function add$1 (
  event,
  handler,
  once$$1,
  capture,
  passive
) {
  handler = withMacroTask(handler);
  if (once$$1) { handler = createOnceHandler(handler, event, capture); }
  target$1.addEventListener(
    event,
    handler,
    supportsPassive
      ? { capture: capture, passive: passive }
      : capture
  );
}

function remove$2 (
  event,
  handler,
  capture,
  _target
) {
  (_target || target$1).removeEventListener(
    event,
    handler._withTask || handler,
    capture
  );
}

function updateDOMListeners (oldVnode, vnode) {
  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {
    return
  }
  var on = vnode.data.on || {};
  var oldOn = oldVnode.data.on || {};
  target$1 = vnode.elm;
  normalizeEvents(on);
  updateListeners(on, oldOn, add$1, remove$2, vnode.context);
  target$1 = undefined;
}

var events = {
  create: updateDOMListeners,
  update: updateDOMListeners
}

/*  */

function updateDOMProps (oldVnode, vnode) {
  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {
    return
  }
  var key, cur;
  var elm = vnode.elm;
  var oldProps = oldVnode.data.domProps || {};
  var props = vnode.data.domProps || {};
  // clone observed objects, as the user probably wants to mutate it
  if (isDef(props.__ob__)) {
    props = vnode.data.domProps = extend({}, props);
  }

  for (key in oldProps) {
    if (isUndef(props[key])) {
      elm[key] = '';
    }
  }
  for (key in props) {
    cur = props[key];
    // ignore children if the node has textContent or innerHTML,
    // as these will throw away existing DOM nodes and cause removal errors
    // on subsequent patches (#3360)
    if (key === 'textContent' || key === 'innerHTML') {
      if (vnode.children) { vnode.children.length = 0; }
      if (cur === oldProps[key]) { continue }
      // #6601 work around Chrome version <= 55 bug where single textNode
      // replaced by innerHTML/textContent retains its parentNode property
      if (elm.childNodes.length === 1) {
        elm.removeChild(elm.childNodes[0]);
      }
    }

    if (key === 'value') {
      // store value as _value as well since
      // non-string values will be stringified
      elm._value = cur;
      // avoid resetting cursor position when value is the same
      var strCur = isUndef(cur) ? '' : String(cur);
      if (shouldUpdateValue(elm, strCur)) {
        elm.value = strCur;
      }
    } else {
      elm[key] = cur;
    }
  }
}

// check platforms/web/util/attrs.js acceptValue


function shouldUpdateValue (elm, checkVal) {
  return (!elm.composing && (
    elm.tagName === 'OPTION' ||
    isNotInFocusAndDirty(elm, checkVal) ||
    isDirtyWithModifiers(elm, checkVal)
  ))
}

function isNotInFocusAndDirty (elm, checkVal) {
  // return true when textbox (.number and .trim) loses focus and its value is
  // not equal to the updated value
  var notInFocus = true;
  // #6157
  // work around IE bug when accessing document.activeElement in an iframe
  try { notInFocus = document.activeElement !== elm; } catch (e) {}
  return notInFocus && elm.value !== checkVal
}

function isDirtyWithModifiers (elm, newVal) {
  var value = elm.value;
  var modifiers = elm._vModifiers; // injected by v-model runtime
  if (isDef(modifiers)) {
    if (modifiers.lazy) {
      // inputs with lazy should only be updated when not in focus
      return false
    }
    if (modifiers.number) {
      return toNumber(value) !== toNumber(newVal)
    }
    if (modifiers.trim) {
      return value.trim() !== newVal.trim()
    }
  }
  return value !== newVal
}

var domProps = {
  create: updateDOMProps,
  update: updateDOMProps
}

/*  */

var parseStyleText = cached(function (cssText) {
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return res
});

// merge static and dynamic style data on the same vnode
function normalizeStyleData (data) {
  var style = normalizeStyleBinding(data.style);
  // static style is pre-processed into an object during compilation
  // and is always a fresh object, so it's safe to merge into it
  return data.staticStyle
    ? extend(data.staticStyle, style)
    : style
}

// normalize possible array / string values into Object
function normalizeStyleBinding (bindingStyle) {
  if (Array.isArray(bindingStyle)) {
    return toObject(bindingStyle)
  }
  if (typeof bindingStyle === 'string') {
    return parseStyleText(bindingStyle)
  }
  return bindingStyle
}

/**
 * parent component style should be after child's
 * so that parent component's style could override it
 */
function getStyle (vnode, checkChild) {
  var res = {};
  var styleData;

  if (checkChild) {
    var childNode = vnode;
    while (childNode.componentInstance) {
      childNode = childNode.componentInstance._vnode;
      if (
        childNode && childNode.data &&
        (styleData = normalizeStyleData(childNode.data))
      ) {
        extend(res, styleData);
      }
    }
  }

  if ((styleData = normalizeStyleData(vnode.data))) {
    extend(res, styleData);
  }

  var parentNode = vnode;
  while ((parentNode = parentNode.parent)) {
    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {
      extend(res, styleData);
    }
  }
  return res
}

/*  */

var cssVarRE = /^--/;
var importantRE = /\s*!important$/;
var setProp = function (el, name, val) {
  /* istanbul ignore if */
  if (cssVarRE.test(name)) {
    el.style.setProperty(name, val);
  } else if (importantRE.test(val)) {
    el.style.setProperty(name, val.replace(importantRE, ''), 'important');
  } else {
    var normalizedName = normalize(name);
    if (Array.isArray(val)) {
      // Support values array created by autoprefixer, e.g.
      // {display: ["-webkit-box", "-ms-flexbox", "flex"]}
      // Set them one by one, and the browser will only set those it can recognize
      for (var i = 0, len = val.length; i < len; i++) {
        el.style[normalizedName] = val[i];
      }
    } else {
      el.style[normalizedName] = val;
    }
  }
};

var vendorNames = ['Webkit', 'Moz', 'ms'];

var emptyStyle;
var normalize = cached(function (prop) {
  emptyStyle = emptyStyle || document.createElement('div').style;
  prop = camelize(prop);
  if (prop !== 'filter' && (prop in emptyStyle)) {
    return prop
  }
  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);
  for (var i = 0; i < vendorNames.length; i++) {
    var name = vendorNames[i] + capName;
    if (name in emptyStyle) {
      return name
    }
  }
});

function updateStyle (oldVnode, vnode) {
  var data = vnode.data;
  var oldData = oldVnode.data;

  if (isUndef(data.staticStyle) && isUndef(data.style) &&
    isUndef(oldData.staticStyle) && isUndef(oldData.style)
  ) {
    return
  }

  var cur, name;
  var el = vnode.elm;
  var oldStaticStyle = oldData.staticStyle;
  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};

  // if static style exists, stylebinding already merged into it when doing normalizeStyleData
  var oldStyle = oldStaticStyle || oldStyleBinding;

  var style = normalizeStyleBinding(vnode.data.style) || {};

  // store normalized style under a different key for next diff
  // make sure to clone it if it's reactive, since the user likely wants
  // to mutate it.
  vnode.data.normalizedStyle = isDef(style.__ob__)
    ? extend({}, style)
    : style;

  var newStyle = getStyle(vnode, true);

  for (name in oldStyle) {
    if (isUndef(newStyle[name])) {
      setProp(el, name, '');
    }
  }
  for (name in newStyle) {
    cur = newStyle[name];
    if (cur !== oldStyle[name]) {
      // ie9 setting to null has no effect, must use empty string
      setProp(el, name, cur == null ? '' : cur);
    }
  }
}

var style = {
  create: updateStyle,
  update: updateStyle
}

/*  */

/**
 * Add class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */
function addClass (el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return
  }

  /* istanbul ignore else */
  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(/\s+/).forEach(function (c) { return el.classList.add(c); });
    } else {
      el.classList.add(cls);
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";
    if (cur.indexOf(' ' + cls + ' ') < 0) {
      el.setAttribute('class', (cur + cls).trim());
    }
  }
}

/**
 * Remove class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */
function removeClass (el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return
  }

  /* istanbul ignore else */
  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(/\s+/).forEach(function (c) { return el.classList.remove(c); });
    } else {
      el.classList.remove(cls);
    }
    if (!el.classList.length) {
      el.removeAttribute('class');
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";
    var tar = ' ' + cls + ' ';
    while (cur.indexOf(tar) >= 0) {
      cur = cur.replace(tar, ' ');
    }
    cur = cur.trim();
    if (cur) {
      el.setAttribute('class', cur);
    } else {
      el.removeAttribute('class');
    }
  }
}

/*  */

function resolveTransition (def) {
  if (!def) {
    return
  }
  /* istanbul ignore else */
  if (typeof def === 'object') {
    var res = {};
    if (def.css !== false) {
      extend(res, autoCssTransition(def.name || 'v'));
    }
    extend(res, def);
    return res
  } else if (typeof def === 'string') {
    return autoCssTransition(def)
  }
}

var autoCssTransition = cached(function (name) {
  return {
    enterClass: (name + "-enter"),
    enterToClass: (name + "-enter-to"),
    enterActiveClass: (name + "-enter-active"),
    leaveClass: (name + "-leave"),
    leaveToClass: (name + "-leave-to"),
    leaveActiveClass: (name + "-leave-active")
  }
});

var hasTransition = inBrowser && !isIE9;
var TRANSITION = 'transition';
var ANIMATION = 'animation';

// Transition property/event sniffing
var transitionProp = 'transition';
var transitionEndEvent = 'transitionend';
var animationProp = 'animation';
var animationEndEvent = 'animationend';
if (hasTransition) {
  /* istanbul ignore if */
  if (window.ontransitionend === undefined &&
    window.onwebkittransitionend !== undefined
  ) {
    transitionProp = 'WebkitTransition';
    transitionEndEvent = 'webkitTransitionEnd';
  }
  if (window.onanimationend === undefined &&
    window.onwebkitanimationend !== undefined
  ) {
    animationProp = 'WebkitAnimation';
    animationEndEvent = 'webkitAnimationEnd';
  }
}

// binding to window is necessary to make hot reload work in IE in strict mode
var raf = inBrowser
  ? window.requestAnimationFrame
    ? window.requestAnimationFrame.bind(window)
    : setTimeout
  : /* istanbul ignore next */ function (fn) { return fn(); };

function nextFrame (fn) {
  raf(function () {
    raf(fn);
  });
}

function addTransitionClass (el, cls) {
  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);
  if (transitionClasses.indexOf(cls) < 0) {
    transitionClasses.push(cls);
    addClass(el, cls);
  }
}

function removeTransitionClass (el, cls) {
  if (el._transitionClasses) {
    remove(el._transitionClasses, cls);
  }
  removeClass(el, cls);
}

function whenTransitionEnds (
  el,
  expectedType,
  cb
) {
  var ref = getTransitionInfo(el, expectedType);
  var type = ref.type;
  var timeout = ref.timeout;
  var propCount = ref.propCount;
  if (!type) { return cb() }
  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;
  var ended = 0;
  var end = function () {
    el.removeEventListener(event, onEnd);
    cb();
  };
  var onEnd = function (e) {
    if (e.target === el) {
      if (++ended >= propCount) {
        end();
      }
    }
  };
  setTimeout(function () {
    if (ended < propCount) {
      end();
    }
  }, timeout + 1);
  el.addEventListener(event, onEnd);
}

var transformRE = /\b(transform|all)(,|$)/;

function getTransitionInfo (el, expectedType) {
  var styles = window.getComputedStyle(el);
  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');
  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');
  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);
  var animationDelays = styles[animationProp + 'Delay'].split(', ');
  var animationDurations = styles[animationProp + 'Duration'].split(', ');
  var animationTimeout = getTimeout(animationDelays, animationDurations);

  var type;
  var timeout = 0;
  var propCount = 0;
  /* istanbul ignore if */
  if (expectedType === TRANSITION) {
    if (transitionTimeout > 0) {
      type = TRANSITION;
      timeout = transitionTimeout;
      propCount = transitionDurations.length;
    }
  } else if (expectedType === ANIMATION) {
    if (animationTimeout > 0) {
      type = ANIMATION;
      timeout = animationTimeout;
      propCount = animationDurations.length;
    }
  } else {
    timeout = Math.max(transitionTimeout, animationTimeout);
    type = timeout > 0
      ? transitionTimeout > animationTimeout
        ? TRANSITION
        : ANIMATION
      : null;
    propCount = type
      ? type === TRANSITION
        ? transitionDurations.length
        : animationDurations.length
      : 0;
  }
  var hasTransform =
    type === TRANSITION &&
    transformRE.test(styles[transitionProp + 'Property']);
  return {
    type: type,
    timeout: timeout,
    propCount: propCount,
    hasTransform: hasTransform
  }
}

function getTimeout (delays, durations) {
  /* istanbul ignore next */
  while (delays.length < durations.length) {
    delays = delays.concat(delays);
  }

  return Math.max.apply(null, durations.map(function (d, i) {
    return toMs(d) + toMs(delays[i])
  }))
}

function toMs (s) {
  return Number(s.slice(0, -1)) * 1000
}

/*  */

function enter (vnode, toggleDisplay) {
  var el = vnode.elm;

  // call leave callback now
  if (isDef(el._leaveCb)) {
    el._leaveCb.cancelled = true;
    el._leaveCb();
  }

  var data = resolveTransition(vnode.data.transition);
  if (isUndef(data)) {
    return
  }

  /* istanbul ignore if */
  if (isDef(el._enterCb) || el.nodeType !== 1) {
    return
  }

  var css = data.css;
  var type = data.type;
  var enterClass = data.enterClass;
  var enterToClass = data.enterToClass;
  var enterActiveClass = data.enterActiveClass;
  var appearClass = data.appearClass;
  var appearToClass = data.appearToClass;
  var appearActiveClass = data.appearActiveClass;
  var beforeEnter = data.beforeEnter;
  var enter = data.enter;
  var afterEnter = data.afterEnter;
  var enterCancelled = data.enterCancelled;
  var beforeAppear = data.beforeAppear;
  var appear = data.appear;
  var afterAppear = data.afterAppear;
  var appearCancelled = data.appearCancelled;
  var duration = data.duration;

  // activeInstance will always be the <transition> component managing this
  // transition. One edge case to check is when the <transition> is placed
  // as the root node of a child component. In that case we need to check
  // <transition>'s parent for appear check.
  var context = activeInstance;
  var transitionNode = activeInstance.$vnode;
  while (transitionNode && transitionNode.parent) {
    transitionNode = transitionNode.parent;
    context = transitionNode.context;
  }

  var isAppear = !context._isMounted || !vnode.isRootInsert;

  if (isAppear && !appear && appear !== '') {
    return
  }

  var startClass = isAppear && appearClass
    ? appearClass
    : enterClass;
  var activeClass = isAppear && appearActiveClass
    ? appearActiveClass
    : enterActiveClass;
  var toClass = isAppear && appearToClass
    ? appearToClass
    : enterToClass;

  var beforeEnterHook = isAppear
    ? (beforeAppear || beforeEnter)
    : beforeEnter;
  var enterHook = isAppear
    ? (typeof appear === 'function' ? appear : enter)
    : enter;
  var afterEnterHook = isAppear
    ? (afterAppear || afterEnter)
    : afterEnter;
  var enterCancelledHook = isAppear
    ? (appearCancelled || enterCancelled)
    : enterCancelled;

  var explicitEnterDuration = toNumber(
    isObject(duration)
      ? duration.enter
      : duration
  );

  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {
    checkDuration(explicitEnterDuration, 'enter', vnode);
  }

  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(enterHook);

  var cb = el._enterCb = once(function () {
    if (expectsCSS) {
      removeTransitionClass(el, toClass);
      removeTransitionClass(el, activeClass);
    }
    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, startClass);
      }
      enterCancelledHook && enterCancelledHook(el);
    } else {
      afterEnterHook && afterEnterHook(el);
    }
    el._enterCb = null;
  });

  if (!vnode.data.show) {
    // remove pending leave element on enter by injecting an insert hook
    mergeVNodeHook(vnode, 'insert', function () {
      var parent = el.parentNode;
      var pendingNode = parent && parent._pending && parent._pending[vnode.key];
      if (pendingNode &&
        pendingNode.tag === vnode.tag &&
        pendingNode.elm._leaveCb
      ) {
        pendingNode.elm._leaveCb();
      }
      enterHook && enterHook(el, cb);
    });
  }

  // start enter transition
  beforeEnterHook && beforeEnterHook(el);
  if (expectsCSS) {
    addTransitionClass(el, startClass);
    addTransitionClass(el, activeClass);
    nextFrame(function () {
      removeTransitionClass(el, startClass);
      if (!cb.cancelled) {
        addTransitionClass(el, toClass);
        if (!userWantsControl) {
          if (isValidDuration(explicitEnterDuration)) {
            setTimeout(cb, explicitEnterDuration);
          } else {
            whenTransitionEnds(el, type, cb);
          }
        }
      }
    });
  }

  if (vnode.data.show) {
    toggleDisplay && toggleDisplay();
    enterHook && enterHook(el, cb);
  }

  if (!expectsCSS && !userWantsControl) {
    cb();
  }
}

function leave (vnode, rm) {
  var el = vnode.elm;

  // call enter callback now
  if (isDef(el._enterCb)) {
    el._enterCb.cancelled = true;
    el._enterCb();
  }

  var data = resolveTransition(vnode.data.transition);
  if (isUndef(data) || el.nodeType !== 1) {
    return rm()
  }

  /* istanbul ignore if */
  if (isDef(el._leaveCb)) {
    return
  }

  var css = data.css;
  var type = data.type;
  var leaveClass = data.leaveClass;
  var leaveToClass = data.leaveToClass;
  var leaveActiveClass = data.leaveActiveClass;
  var beforeLeave = data.beforeLeave;
  var leave = data.leave;
  var afterLeave = data.afterLeave;
  var leaveCancelled = data.leaveCancelled;
  var delayLeave = data.delayLeave;
  var duration = data.duration;

  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(leave);

  var explicitLeaveDuration = toNumber(
    isObject(duration)
      ? duration.leave
      : duration
  );

  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {
    checkDuration(explicitLeaveDuration, 'leave', vnode);
  }

  var cb = el._leaveCb = once(function () {
    if (el.parentNode && el.parentNode._pending) {
      el.parentNode._pending[vnode.key] = null;
    }
    if (expectsCSS) {
      removeTransitionClass(el, leaveToClass);
      removeTransitionClass(el, leaveActiveClass);
    }
    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, leaveClass);
      }
      leaveCancelled && leaveCancelled(el);
    } else {
      rm();
      afterLeave && afterLeave(el);
    }
    el._leaveCb = null;
  });

  if (delayLeave) {
    delayLeave(performLeave);
  } else {
    performLeave();
  }

  function performLeave () {
    // the delayed leave may have already been cancelled
    if (cb.cancelled) {
      return
    }
    // record leaving element
    if (!vnode.data.show) {
      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;
    }
    beforeLeave && beforeLeave(el);
    if (expectsCSS) {
      addTransitionClass(el, leaveClass);
      addTransitionClass(el, leaveActiveClass);
      nextFrame(function () {
        removeTransitionClass(el, leaveClass);
        if (!cb.cancelled) {
          addTransitionClass(el, leaveToClass);
          if (!userWantsControl) {
            if (isValidDuration(explicitLeaveDuration)) {
              setTimeout(cb, explicitLeaveDuration);
            } else {
              whenTransitionEnds(el, type, cb);
            }
          }
        }
      });
    }
    leave && leave(el, cb);
    if (!expectsCSS && !userWantsControl) {
      cb();
    }
  }
}

// only used in dev mode
function checkDuration (val, name, vnode) {
  if (typeof val !== 'number') {
    warn(
      "<transition> explicit " + name + " duration is not a valid number - " +
      "got " + (JSON.stringify(val)) + ".",
      vnode.context
    );
  } else if (isNaN(val)) {
    warn(
      "<transition> explicit " + name + " duration is NaN - " +
      'the duration expression might be incorrect.',
      vnode.context
    );
  }
}

function isValidDuration (val) {
  return typeof val === 'number' && !isNaN(val)
}

/**
 * Normalize a transition hook's argument length. The hook may be:
 * - a merged hook (invoker) with the original in .fns
 * - a wrapped component method (check ._length)
 * - a plain function (.length)
 */
function getHookArgumentsLength (fn) {
  if (isUndef(fn)) {
    return false
  }
  var invokerFns = fn.fns;
  if (isDef(invokerFns)) {
    // invoker
    return getHookArgumentsLength(
      Array.isArray(invokerFns)
        ? invokerFns[0]
        : invokerFns
    )
  } else {
    return (fn._length || fn.length) > 1
  }
}

function _enter (_, vnode) {
  if (vnode.data.show !== true) {
    enter(vnode);
  }
}

var transition = inBrowser ? {
  create: _enter,
  activate: _enter,
  remove: function remove$$1 (vnode, rm) {
    /* istanbul ignore else */
    if (vnode.data.show !== true) {
      leave(vnode, rm);
    } else {
      rm();
    }
  }
} : {}

var platformModules = [
  attrs,
  klass,
  events,
  domProps,
  style,
  transition
]

/*  */

// the directive module should be applied last, after all
// built-in modules have been applied.
var modules = platformModules.concat(baseModules);

var patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });

/**
 * Not type checking this file because flow doesn't like attaching
 * properties to Elements.
 */

/* istanbul ignore if */
if (isIE9) {
  // http://www.matts411.com/post/internet-explorer-9-oninput/
  document.addEventListener('selectionchange', function () {
    var el = document.activeElement;
    if (el && el.vmodel) {
      trigger(el, 'input');
    }
  });
}

var directive = {
  inserted: function inserted (el, binding, vnode, oldVnode) {
    if (vnode.tag === 'select') {
      // #6903
      if (oldVnode.elm && !oldVnode.elm._vOptions) {
        mergeVNodeHook(vnode, 'postpatch', function () {
          directive.componentUpdated(el, binding, vnode);
        });
      } else {
        setSelected(el, binding, vnode.context);
      }
      el._vOptions = [].map.call(el.options, getValue);
    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {
      el._vModifiers = binding.modifiers;
      if (!binding.modifiers.lazy) {
        el.addEventListener('compositionstart', onCompositionStart);
        el.addEventListener('compositionend', onCompositionEnd);
        // Safari < 10.2 & UIWebView doesn't fire compositionend when
        // switching focus before confirming composition choice
        // this also fixes the issue where some browsers e.g. iOS Chrome
        // fires "change" instead of "input" on autocomplete.
        el.addEventListener('change', onCompositionEnd);
        /* istanbul ignore if */
        if (isIE9) {
          el.vmodel = true;
        }
      }
    }
  },

  componentUpdated: function componentUpdated (el, binding, vnode) {
    if (vnode.tag === 'select') {
      setSelected(el, binding, vnode.context);
      // in case the options rendered by v-for have changed,
      // it's possible that the value is out-of-sync with the rendered options.
      // detect such cases and filter out values that no longer has a matching
      // option in the DOM.
      var prevOptions = el._vOptions;
      var curOptions = el._vOptions = [].map.call(el.options, getValue);
      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {
        // trigger change event if
        // no matching option found for at least one value
        var needReset = el.multiple
          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })
          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);
        if (needReset) {
          trigger(el, 'change');
        }
      }
    }
  }
};

function setSelected (el, binding, vm) {
  actuallySetSelected(el, binding, vm);
  /* istanbul ignore if */
  if (isIE || isEdge) {
    setTimeout(function () {
      actuallySetSelected(el, binding, vm);
    }, 0);
  }
}

function actuallySetSelected (el, binding, vm) {
  var value = binding.value;
  var isMultiple = el.multiple;
  if (isMultiple && !Array.isArray(value)) {
    process.env.NODE_ENV !== 'production' && warn(
      "<select multiple v-model=\"" + (binding.expression) + "\"> " +
      "expects an Array value for its binding, but got " + (Object.prototype.toString.call(value).slice(8, -1)),
      vm
    );
    return
  }
  var selected, option;
  for (var i = 0, l = el.options.length; i < l; i++) {
    option = el.options[i];
    if (isMultiple) {
      selected = looseIndexOf(value, getValue(option)) > -1;
      if (option.selected !== selected) {
        option.selected = selected;
      }
    } else {
      if (looseEqual(getValue(option), value)) {
        if (el.selectedIndex !== i) {
          el.selectedIndex = i;
        }
        return
      }
    }
  }
  if (!isMultiple) {
    el.selectedIndex = -1;
  }
}

function hasNoMatchingOption (value, options) {
  return options.every(function (o) { return !looseEqual(o, value); })
}

function getValue (option) {
  return '_value' in option
    ? option._value
    : option.value
}

function onCompositionStart (e) {
  e.target.composing = true;
}

function onCompositionEnd (e) {
  // prevent triggering an input event for no reason
  if (!e.target.composing) { return }
  e.target.composing = false;
  trigger(e.target, 'input');
}

function trigger (el, type) {
  var e = document.createEvent('HTMLEvents');
  e.initEvent(type, true, true);
  el.dispatchEvent(e);
}

/*  */

// recursively search for possible transition defined inside the component root
function locateNode (vnode) {
  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)
    ? locateNode(vnode.componentInstance._vnode)
    : vnode
}

var show = {
  bind: function bind (el, ref, vnode) {
    var value = ref.value;

    vnode = locateNode(vnode);
    var transition$$1 = vnode.data && vnode.data.transition;
    var originalDisplay = el.__vOriginalDisplay =
      el.style.display === 'none' ? '' : el.style.display;
    if (value && transition$$1) {
      vnode.data.show = true;
      enter(vnode, function () {
        el.style.display = originalDisplay;
      });
    } else {
      el.style.display = value ? originalDisplay : 'none';
    }
  },

  update: function update (el, ref, vnode) {
    var value = ref.value;
    var oldValue = ref.oldValue;

    /* istanbul ignore if */
    if (!value === !oldValue) { return }
    vnode = locateNode(vnode);
    var transition$$1 = vnode.data && vnode.data.transition;
    if (transition$$1) {
      vnode.data.show = true;
      if (value) {
        enter(vnode, function () {
          el.style.display = el.__vOriginalDisplay;
        });
      } else {
        leave(vnode, function () {
          el.style.display = 'none';
        });
      }
    } else {
      el.style.display = value ? el.__vOriginalDisplay : 'none';
    }
  },

  unbind: function unbind (
    el,
    binding,
    vnode,
    oldVnode,
    isDestroy
  ) {
    if (!isDestroy) {
      el.style.display = el.__vOriginalDisplay;
    }
  }
}

var platformDirectives = {
  model: directive,
  show: show
}

/*  */

// Provides transition support for a single element/component.
// supports transition mode (out-in / in-out)

var transitionProps = {
  name: String,
  appear: Boolean,
  css: Boolean,
  mode: String,
  type: String,
  enterClass: String,
  leaveClass: String,
  enterToClass: String,
  leaveToClass: String,
  enterActiveClass: String,
  leaveActiveClass: String,
  appearClass: String,
  appearActiveClass: String,
  appearToClass: String,
  duration: [Number, String, Object]
};

// in case the child is also an abstract component, e.g. <keep-alive>
// we want to recursively retrieve the real component to be rendered
function getRealChild (vnode) {
  var compOptions = vnode && vnode.componentOptions;
  if (compOptions && compOptions.Ctor.options.abstract) {
    return getRealChild(getFirstComponentChild(compOptions.children))
  } else {
    return vnode
  }
}

function extractTransitionData (comp) {
  var data = {};
  var options = comp.$options;
  // props
  for (var key in options.propsData) {
    data[key] = comp[key];
  }
  // events.
  // extract listeners and pass them directly to the transition methods
  var listeners = options._parentListeners;
  for (var key$1 in listeners) {
    data[camelize(key$1)] = listeners[key$1];
  }
  return data
}

function placeholder (h, rawChild) {
  if (/\d-keep-alive$/.test(rawChild.tag)) {
    return h('keep-alive', {
      props: rawChild.componentOptions.propsData
    })
  }
}

function hasParentTransition (vnode) {
  while ((vnode = vnode.parent)) {
    if (vnode.data.transition) {
      return true
    }
  }
}

function isSameChild (child, oldChild) {
  return oldChild.key === child.key && oldChild.tag === child.tag
}

var Transition = {
  name: 'transition',
  props: transitionProps,
  abstract: true,

  render: function render (h) {
    var this$1 = this;

    var children = this.$slots.default;
    if (!children) {
      return
    }

    // filter out text nodes (possible whitespaces)
    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });
    /* istanbul ignore if */
    if (!children.length) {
      return
    }

    // warn multiple elements
    if (process.env.NODE_ENV !== 'production' && children.length > 1) {
      warn(
        '<transition> can only be used on a single element. Use ' +
        '<transition-group> for lists.',
        this.$parent
      );
    }

    var mode = this.mode;

    // warn invalid mode
    if (process.env.NODE_ENV !== 'production' &&
      mode && mode !== 'in-out' && mode !== 'out-in'
    ) {
      warn(
        'invalid <transition> mode: ' + mode,
        this.$parent
      );
    }

    var rawChild = children[0];

    // if this is a component root node and the component's
    // parent container node also has transition, skip.
    if (hasParentTransition(this.$vnode)) {
      return rawChild
    }

    // apply transition data to child
    // use getRealChild() to ignore abstract components e.g. keep-alive
    var child = getRealChild(rawChild);
    /* istanbul ignore if */
    if (!child) {
      return rawChild
    }

    if (this._leaving) {
      return placeholder(h, rawChild)
    }

    // ensure a key that is unique to the vnode type and to this transition
    // component instance. This key will be used to remove pending leaving nodes
    // during entering.
    var id = "__transition-" + (this._uid) + "-";
    child.key = child.key == null
      ? child.isComment
        ? id + 'comment'
        : id + child.tag
      : isPrimitive(child.key)
        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)
        : child.key;

    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);
    var oldRawChild = this._vnode;
    var oldChild = getRealChild(oldRawChild);

    // mark v-show
    // so that the transition module can hand over the control to the directive
    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {
      child.data.show = true;
    }

    if (
      oldChild &&
      oldChild.data &&
      !isSameChild(child, oldChild) &&
      !isAsyncPlaceholder(oldChild) &&
      // #6687 component root is a comment node
      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)
    ) {
      // replace old child transition data with fresh one
      // important for dynamic transitions!
      var oldData = oldChild.data.transition = extend({}, data);
      // handle transition mode
      if (mode === 'out-in') {
        // return placeholder node and queue update when leave finishes
        this._leaving = true;
        mergeVNodeHook(oldData, 'afterLeave', function () {
          this$1._leaving = false;
          this$1.$forceUpdate();
        });
        return placeholder(h, rawChild)
      } else if (mode === 'in-out') {
        if (isAsyncPlaceholder(child)) {
          return oldRawChild
        }
        var delayedLeave;
        var performLeave = function () { delayedLeave(); };
        mergeVNodeHook(data, 'afterEnter', performLeave);
        mergeVNodeHook(data, 'enterCancelled', performLeave);
        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });
      }
    }

    return rawChild
  }
}

/*  */

// Provides transition support for list items.
// supports move transitions using the FLIP technique.

// Because the vdom's children update algorithm is "unstable" - i.e.
// it doesn't guarantee the relative positioning of removed elements,
// we force transition-group to update its children into two passes:
// in the first pass, we remove all nodes that need to be removed,
// triggering their leaving transition; in the second pass, we insert/move
// into the final desired state. This way in the second pass removed
// nodes will remain where they should be.

var props = extend({
  tag: String,
  moveClass: String
}, transitionProps);

delete props.mode;

var TransitionGroup = {
  props: props,

  render: function render (h) {
    var tag = this.tag || this.$vnode.data.tag || 'span';
    var map = Object.create(null);
    var prevChildren = this.prevChildren = this.children;
    var rawChildren = this.$slots.default || [];
    var children = this.children = [];
    var transitionData = extractTransitionData(this);

    for (var i = 0; i < rawChildren.length; i++) {
      var c = rawChildren[i];
      if (c.tag) {
        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {
          children.push(c);
          map[c.key] = c
          ;(c.data || (c.data = {})).transition = transitionData;
        } else if (process.env.NODE_ENV !== 'production') {
          var opts = c.componentOptions;
          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;
          warn(("<transition-group> children must be keyed: <" + name + ">"));
        }
      }
    }

    if (prevChildren) {
      var kept = [];
      var removed = [];
      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {
        var c$1 = prevChildren[i$1];
        c$1.data.transition = transitionData;
        c$1.data.pos = c$1.elm.getBoundingClientRect();
        if (map[c$1.key]) {
          kept.push(c$1);
        } else {
          removed.push(c$1);
        }
      }
      this.kept = h(tag, null, kept);
      this.removed = removed;
    }

    return h(tag, null, children)
  },

  beforeUpdate: function beforeUpdate () {
    // force removing pass
    this.__patch__(
      this._vnode,
      this.kept,
      false, // hydrating
      true // removeOnly (!important, avoids unnecessary moves)
    );
    this._vnode = this.kept;
  },

  updated: function updated () {
    var children = this.prevChildren;
    var moveClass = this.moveClass || ((this.name || 'v') + '-move');
    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {
      return
    }

    // we divide the work into three loops to avoid mixing DOM reads and writes
    // in each iteration - which helps prevent layout thrashing.
    children.forEach(callPendingCbs);
    children.forEach(recordPosition);
    children.forEach(applyTranslation);

    // force reflow to put everything in position
    // assign to this to avoid being removed in tree-shaking
    // $flow-disable-line
    this._reflow = document.body.offsetHeight;

    children.forEach(function (c) {
      if (c.data.moved) {
        var el = c.elm;
        var s = el.style;
        addTransitionClass(el, moveClass);
        s.transform = s.WebkitTransform = s.transitionDuration = '';
        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {
          if (!e || /transform$/.test(e.propertyName)) {
            el.removeEventListener(transitionEndEvent, cb);
            el._moveCb = null;
            removeTransitionClass(el, moveClass);
          }
        });
      }
    });
  },

  methods: {
    hasMove: function hasMove (el, moveClass) {
      /* istanbul ignore if */
      if (!hasTransition) {
        return false
      }
      /* istanbul ignore if */
      if (this._hasMove) {
        return this._hasMove
      }
      // Detect whether an element with the move class applied has
      // CSS transitions. Since the element may be inside an entering
      // transition at this very moment, we make a clone of it and remove
      // all other transition classes applied to ensure only the move class
      // is applied.
      var clone = el.cloneNode();
      if (el._transitionClasses) {
        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });
      }
      addClass(clone, moveClass);
      clone.style.display = 'none';
      this.$el.appendChild(clone);
      var info = getTransitionInfo(clone);
      this.$el.removeChild(clone);
      return (this._hasMove = info.hasTransform)
    }
  }
}

function callPendingCbs (c) {
  /* istanbul ignore if */
  if (c.elm._moveCb) {
    c.elm._moveCb();
  }
  /* istanbul ignore if */
  if (c.elm._enterCb) {
    c.elm._enterCb();
  }
}

function recordPosition (c) {
  c.data.newPos = c.elm.getBoundingClientRect();
}

function applyTranslation (c) {
  var oldPos = c.data.pos;
  var newPos = c.data.newPos;
  var dx = oldPos.left - newPos.left;
  var dy = oldPos.top - newPos.top;
  if (dx || dy) {
    c.data.moved = true;
    var s = c.elm.style;
    s.transform = s.WebkitTransform = "translate(" + dx + "px," + dy + "px)";
    s.transitionDuration = '0s';
  }
}

var platformComponents = {
  Transition: Transition,
  TransitionGroup: TransitionGroup
}

/*  */

// install platform specific utils
Vue.config.mustUseProp = mustUseProp;
Vue.config.isReservedTag = isReservedTag;
Vue.config.isReservedAttr = isReservedAttr;
Vue.config.getTagNamespace = getTagNamespace;
Vue.config.isUnknownElement = isUnknownElement;

// install platform runtime directives & components
extend(Vue.options.directives, platformDirectives);
extend(Vue.options.components, platformComponents);

// install platform patch function
Vue.prototype.__patch__ = inBrowser ? patch : noop;

// public mount method
Vue.prototype.$mount = function (
  el,
  hydrating
) {
  el = el && inBrowser ? query(el) : undefined;
  return mountComponent(this, el, hydrating)
};

// devtools global hook
/* istanbul ignore next */
if (inBrowser) {
  setTimeout(function () {
    if (config.devtools) {
      if (devtools) {
        devtools.emit('init', Vue);
      } else if (
        process.env.NODE_ENV !== 'production' &&
        process.env.NODE_ENV !== 'test' &&
        isChrome
      ) {
        console[console.info ? 'info' : 'log'](
          'Download the Vue Devtools extension for a better development experience:\n' +
          'https://github.com/vuejs/vue-devtools'
        );
      }
    }
    if (process.env.NODE_ENV !== 'production' &&
      process.env.NODE_ENV !== 'test' &&
      config.productionTip !== false &&
      typeof console !== 'undefined'
    ) {
      console[console.info ? 'info' : 'log'](
        "You are running Vue in development mode.\n" +
        "Make sure to turn on production mode when deploying for production.\n" +
        "See more tips at https://vuejs.org/guide/deployment.html"
      );
    }
  }, 0);
}

/*  */

/* harmony default export */ __webpack_exports__["default"] = (Vue);

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(28), __webpack_require__(36), __webpack_require__(109).setImmediate))

/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== "undefined" && global) ||
            (typeof self !== "undefined" && self) ||
            window;
var apply = Function.prototype.apply;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) {
  if (timeout) {
    timeout.close();
  }
};

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(scope, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// setimmediate attaches itself to the global object
__webpack_require__(110);
// On some exotic environments, it's not clear which object `setimmediate` was
// able to install onto.  Search each possibility in the same order as the
// `setimmediate` library.
exports.setImmediate = (typeof self !== "undefined" && self.setImmediate) ||
                       (typeof global !== "undefined" && global.setImmediate) ||
                       (this && this.setImmediate);
exports.clearImmediate = (typeof self !== "undefined" && self.clearImmediate) ||
                         (typeof global !== "undefined" && global.clearImmediate) ||
                         (this && this.clearImmediate);

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(36)))

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
    "use strict";

    if (global.setImmediate) {
        return;
    }

    var nextHandle = 1; // Spec says greater than zero
    var tasksByHandle = {};
    var currentlyRunningATask = false;
    var doc = global.document;
    var registerImmediate;

    function setImmediate(callback) {
      // Callback can either be a function or a string
      if (typeof callback !== "function") {
        callback = new Function("" + callback);
      }
      // Copy function arguments
      var args = new Array(arguments.length - 1);
      for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i + 1];
      }
      // Store and register the task
      var task = { callback: callback, args: args };
      tasksByHandle[nextHandle] = task;
      registerImmediate(nextHandle);
      return nextHandle++;
    }

    function clearImmediate(handle) {
        delete tasksByHandle[handle];
    }

    function run(task) {
        var callback = task.callback;
        var args = task.args;
        switch (args.length) {
        case 0:
            callback();
            break;
        case 1:
            callback(args[0]);
            break;
        case 2:
            callback(args[0], args[1]);
            break;
        case 3:
            callback(args[0], args[1], args[2]);
            break;
        default:
            callback.apply(undefined, args);
            break;
        }
    }

    function runIfPresent(handle) {
        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
        // So if we're currently running a task, we'll need to delay this invocation.
        if (currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // "too much recursion" error.
            setTimeout(runIfPresent, 0, handle);
        } else {
            var task = tasksByHandle[handle];
            if (task) {
                currentlyRunningATask = true;
                try {
                    run(task);
                } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                }
            }
        }
    }

    function installNextTickImplementation() {
        registerImmediate = function(handle) {
            process.nextTick(function () { runIfPresent(handle); });
        };
    }

    function canUsePostMessage() {
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `global.postMessage` means something completely different and can't be used for this purpose.
        if (global.postMessage && !global.importScripts) {
            var postMessageIsAsynchronous = true;
            var oldOnMessage = global.onmessage;
            global.onmessage = function() {
                postMessageIsAsynchronous = false;
            };
            global.postMessage("", "*");
            global.onmessage = oldOnMessage;
            return postMessageIsAsynchronous;
        }
    }

    function installPostMessageImplementation() {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

        var messagePrefix = "setImmediate$" + Math.random() + "$";
        var onGlobalMessage = function(event) {
            if (event.source === global &&
                typeof event.data === "string" &&
                event.data.indexOf(messagePrefix) === 0) {
                runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };

        if (global.addEventListener) {
            global.addEventListener("message", onGlobalMessage, false);
        } else {
            global.attachEvent("onmessage", onGlobalMessage);
        }

        registerImmediate = function(handle) {
            global.postMessage(messagePrefix + handle, "*");
        };
    }

    function installMessageChannelImplementation() {
        var channel = new MessageChannel();
        channel.port1.onmessage = function(event) {
            var handle = event.data;
            runIfPresent(handle);
        };

        registerImmediate = function(handle) {
            channel.port2.postMessage(handle);
        };
    }

    function installReadyStateChangeImplementation() {
        var html = doc.documentElement;
        registerImmediate = function(handle) {
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement("script");
            script.onreadystatechange = function () {
                runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
        };
    }

    function installSetTimeoutImplementation() {
        registerImmediate = function(handle) {
            setTimeout(runIfPresent, 0, handle);
        };
    }

    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

    // Don't get fooled by e.g. browserify environments.
    if ({}.toString.call(global.process) === "[object process]") {
        // For Node.js before 0.9
        installNextTickImplementation();

    } else if (canUsePostMessage()) {
        // For non-IE10 modern browsers
        installPostMessageImplementation();

    } else if (global.MessageChannel) {
        // For web workers, where supported
        installMessageChannelImplementation();

    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
        // For IE 6–8
        installReadyStateChangeImplementation();

    } else {
        // For older browsers
        installSetTimeoutImplementation();
    }

    attachTo.setImmediate = setImmediate;
    attachTo.clearImmediate = clearImmediate;
}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(36), __webpack_require__(28)))

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

var utils = __webpack_require__(29);
var normalizeHeaderName = __webpack_require__(260);

var PROTECTION_PREFIX = /^\)\]\}',?\n/;
var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __webpack_require__(155);
  } else if (typeof process !== 'undefined') {
    // For node use HTTP adapter
    adapter = __webpack_require__(155);
  }
  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    /*eslint no-param-reassign:0*/
    if (typeof data === 'string') {
      data = data.replace(PROTECTION_PREFIX, '');
      try {
        data = JSON.parse(data);
      } catch (e) { /* Ignore */ }
    }
    return data;
  }],

  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMehtodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(28)))

/***/ }),
/* 112 */
/***/ (function(module, exports) {

// https://github.com/mziccard/node-timsort
var DEFAULT_MIN_MERGE = 32;
var DEFAULT_MIN_GALLOPING = 7;
var DEFAULT_TMP_STORAGE_LENGTH = 256;

function minRunLength(n) {
  var r = 0;

  while (n >= DEFAULT_MIN_MERGE) {
    r |= n & 1;
    n >>= 1;
  }

  return n + r;
}

function makeAscendingRun(array, lo, hi, compare) {
  var runHi = lo + 1;

  if (runHi === hi) {
    return 1;
  }

  if (compare(array[runHi++], array[lo]) < 0) {
    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {
      runHi++;
    }

    reverseRun(array, lo, runHi);
  } else {
    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {
      runHi++;
    }
  }

  return runHi - lo;
}

function reverseRun(array, lo, hi) {
  hi--;

  while (lo < hi) {
    var t = array[lo];
    array[lo++] = array[hi];
    array[hi--] = t;
  }
}

function binaryInsertionSort(array, lo, hi, start, compare) {
  if (start === lo) {
    start++;
  }

  for (; start < hi; start++) {
    var pivot = array[start];
    var left = lo;
    var right = start;
    var mid;

    while (left < right) {
      mid = left + right >>> 1;

      if (compare(pivot, array[mid]) < 0) {
        right = mid;
      } else {
        left = mid + 1;
      }
    }

    var n = start - left;

    switch (n) {
      case 3:
        array[left + 3] = array[left + 2];

      case 2:
        array[left + 2] = array[left + 1];

      case 1:
        array[left + 1] = array[left];
        break;

      default:
        while (n > 0) {
          array[left + n] = array[left + n - 1];
          n--;
        }

    }

    array[left] = pivot;
  }
}

function gallopLeft(value, array, start, length, hint, compare) {
  var lastOffset = 0;
  var maxOffset = 0;
  var offset = 1;

  if (compare(value, array[start + hint]) > 0) {
    maxOffset = length - hint;

    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {
      lastOffset = offset;
      offset = (offset << 1) + 1;

      if (offset <= 0) {
        offset = maxOffset;
      }
    }

    if (offset > maxOffset) {
      offset = maxOffset;
    }

    lastOffset += hint;
    offset += hint;
  } else {
    maxOffset = hint + 1;

    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {
      lastOffset = offset;
      offset = (offset << 1) + 1;

      if (offset <= 0) {
        offset = maxOffset;
      }
    }

    if (offset > maxOffset) {
      offset = maxOffset;
    }

    var tmp = lastOffset;
    lastOffset = hint - offset;
    offset = hint - tmp;
  }

  lastOffset++;

  while (lastOffset < offset) {
    var m = lastOffset + (offset - lastOffset >>> 1);

    if (compare(value, array[start + m]) > 0) {
      lastOffset = m + 1;
    } else {
      offset = m;
    }
  }

  return offset;
}

function gallopRight(value, array, start, length, hint, compare) {
  var lastOffset = 0;
  var maxOffset = 0;
  var offset = 1;

  if (compare(value, array[start + hint]) < 0) {
    maxOffset = hint + 1;

    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {
      lastOffset = offset;
      offset = (offset << 1) + 1;

      if (offset <= 0) {
        offset = maxOffset;
      }
    }

    if (offset > maxOffset) {
      offset = maxOffset;
    }

    var tmp = lastOffset;
    lastOffset = hint - offset;
    offset = hint - tmp;
  } else {
    maxOffset = length - hint;

    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {
      lastOffset = offset;
      offset = (offset << 1) + 1;

      if (offset <= 0) {
        offset = maxOffset;
      }
    }

    if (offset > maxOffset) {
      offset = maxOffset;
    }

    lastOffset += hint;
    offset += hint;
  }

  lastOffset++;

  while (lastOffset < offset) {
    var m = lastOffset + (offset - lastOffset >>> 1);

    if (compare(value, array[start + m]) < 0) {
      offset = m;
    } else {
      lastOffset = m + 1;
    }
  }

  return offset;
}

function TimSort(array, compare) {
  var minGallop = DEFAULT_MIN_GALLOPING;
  var length = 0;
  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;
  var stackLength = 0;
  var runStart;
  var runLength;
  var stackSize = 0;
  length = array.length;

  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {
    tmpStorageLength = length >>> 1;
  }

  var tmp = [];
  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;
  runStart = [];
  runLength = [];

  function pushRun(_runStart, _runLength) {
    runStart[stackSize] = _runStart;
    runLength[stackSize] = _runLength;
    stackSize += 1;
  }

  function mergeRuns() {
    while (stackSize > 1) {
      var n = stackSize - 2;

      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {
        if (runLength[n - 1] < runLength[n + 1]) {
          n--;
        }
      } else if (runLength[n] > runLength[n + 1]) {
        break;
      }

      mergeAt(n);
    }
  }

  function forceMergeRuns() {
    while (stackSize > 1) {
      var n = stackSize - 2;

      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {
        n--;
      }

      mergeAt(n);
    }
  }

  function mergeAt(i) {
    var start1 = runStart[i];
    var length1 = runLength[i];
    var start2 = runStart[i + 1];
    var length2 = runLength[i + 1];
    runLength[i] = length1 + length2;

    if (i === stackSize - 3) {
      runStart[i + 1] = runStart[i + 2];
      runLength[i + 1] = runLength[i + 2];
    }

    stackSize--;
    var k = gallopRight(array[start2], array, start1, length1, 0, compare);
    start1 += k;
    length1 -= k;

    if (length1 === 0) {
      return;
    }

    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);

    if (length2 === 0) {
      return;
    }

    if (length1 <= length2) {
      mergeLow(start1, length1, start2, length2);
    } else {
      mergeHigh(start1, length1, start2, length2);
    }
  }

  function mergeLow(start1, length1, start2, length2) {
    var i = 0;

    for (i = 0; i < length1; i++) {
      tmp[i] = array[start1 + i];
    }

    var cursor1 = 0;
    var cursor2 = start2;
    var dest = start1;
    array[dest++] = array[cursor2++];

    if (--length2 === 0) {
      for (i = 0; i < length1; i++) {
        array[dest + i] = tmp[cursor1 + i];
      }

      return;
    }

    if (length1 === 1) {
      for (i = 0; i < length2; i++) {
        array[dest + i] = array[cursor2 + i];
      }

      array[dest + length2] = tmp[cursor1];
      return;
    }

    var _minGallop = minGallop;
    var count1, count2, exit;

    while (1) {
      count1 = 0;
      count2 = 0;
      exit = false;

      do {
        if (compare(array[cursor2], tmp[cursor1]) < 0) {
          array[dest++] = array[cursor2++];
          count2++;
          count1 = 0;

          if (--length2 === 0) {
            exit = true;
            break;
          }
        } else {
          array[dest++] = tmp[cursor1++];
          count1++;
          count2 = 0;

          if (--length1 === 1) {
            exit = true;
            break;
          }
        }
      } while ((count1 | count2) < _minGallop);

      if (exit) {
        break;
      }

      do {
        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);

        if (count1 !== 0) {
          for (i = 0; i < count1; i++) {
            array[dest + i] = tmp[cursor1 + i];
          }

          dest += count1;
          cursor1 += count1;
          length1 -= count1;

          if (length1 <= 1) {
            exit = true;
            break;
          }
        }

        array[dest++] = array[cursor2++];

        if (--length2 === 0) {
          exit = true;
          break;
        }

        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);

        if (count2 !== 0) {
          for (i = 0; i < count2; i++) {
            array[dest + i] = array[cursor2 + i];
          }

          dest += count2;
          cursor2 += count2;
          length2 -= count2;

          if (length2 === 0) {
            exit = true;
            break;
          }
        }

        array[dest++] = tmp[cursor1++];

        if (--length1 === 1) {
          exit = true;
          break;
        }

        _minGallop--;
      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);

      if (exit) {
        break;
      }

      if (_minGallop < 0) {
        _minGallop = 0;
      }

      _minGallop += 2;
    }

    minGallop = _minGallop;
    minGallop < 1 && (minGallop = 1);

    if (length1 === 1) {
      for (i = 0; i < length2; i++) {
        array[dest + i] = array[cursor2 + i];
      }

      array[dest + length2] = tmp[cursor1];
    } else if (length1 === 0) {
      throw new Error(); // throw new Error('mergeLow preconditions were not respected');
    } else {
      for (i = 0; i < length1; i++) {
        array[dest + i] = tmp[cursor1 + i];
      }
    }
  }

  function mergeHigh(start1, length1, start2, length2) {
    var i = 0;

    for (i = 0; i < length2; i++) {
      tmp[i] = array[start2 + i];
    }

    var cursor1 = start1 + length1 - 1;
    var cursor2 = length2 - 1;
    var dest = start2 + length2 - 1;
    var customCursor = 0;
    var customDest = 0;
    array[dest--] = array[cursor1--];

    if (--length1 === 0) {
      customCursor = dest - (length2 - 1);

      for (i = 0; i < length2; i++) {
        array[customCursor + i] = tmp[i];
      }

      return;
    }

    if (length2 === 1) {
      dest -= length1;
      cursor1 -= length1;
      customDest = dest + 1;
      customCursor = cursor1 + 1;

      for (i = length1 - 1; i >= 0; i--) {
        array[customDest + i] = array[customCursor + i];
      }

      array[dest] = tmp[cursor2];
      return;
    }

    var _minGallop = minGallop;

    while (true) {
      var count1 = 0;
      var count2 = 0;
      var exit = false;

      do {
        if (compare(tmp[cursor2], array[cursor1]) < 0) {
          array[dest--] = array[cursor1--];
          count1++;
          count2 = 0;

          if (--length1 === 0) {
            exit = true;
            break;
          }
        } else {
          array[dest--] = tmp[cursor2--];
          count2++;
          count1 = 0;

          if (--length2 === 1) {
            exit = true;
            break;
          }
        }
      } while ((count1 | count2) < _minGallop);

      if (exit) {
        break;
      }

      do {
        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);

        if (count1 !== 0) {
          dest -= count1;
          cursor1 -= count1;
          length1 -= count1;
          customDest = dest + 1;
          customCursor = cursor1 + 1;

          for (i = count1 - 1; i >= 0; i--) {
            array[customDest + i] = array[customCursor + i];
          }

          if (length1 === 0) {
            exit = true;
            break;
          }
        }

        array[dest--] = tmp[cursor2--];

        if (--length2 === 1) {
          exit = true;
          break;
        }

        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);

        if (count2 !== 0) {
          dest -= count2;
          cursor2 -= count2;
          length2 -= count2;
          customDest = dest + 1;
          customCursor = cursor2 + 1;

          for (i = 0; i < count2; i++) {
            array[customDest + i] = tmp[customCursor + i];
          }

          if (length2 <= 1) {
            exit = true;
            break;
          }
        }

        array[dest--] = array[cursor1--];

        if (--length1 === 0) {
          exit = true;
          break;
        }

        _minGallop--;
      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);

      if (exit) {
        break;
      }

      if (_minGallop < 0) {
        _minGallop = 0;
      }

      _minGallop += 2;
    }

    minGallop = _minGallop;

    if (minGallop < 1) {
      minGallop = 1;
    }

    if (length2 === 1) {
      dest -= length1;
      cursor1 -= length1;
      customDest = dest + 1;
      customCursor = cursor1 + 1;

      for (i = length1 - 1; i >= 0; i--) {
        array[customDest + i] = array[customCursor + i];
      }

      array[dest] = tmp[cursor2];
    } else if (length2 === 0) {
      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');
    } else {
      customCursor = dest - (length2 - 1);

      for (i = 0; i < length2; i++) {
        array[customCursor + i] = tmp[i];
      }
    }
  }

  this.mergeRuns = mergeRuns;
  this.forceMergeRuns = forceMergeRuns;
  this.pushRun = pushRun;
}

function sort(array, compare, lo, hi) {
  if (!lo) {
    lo = 0;
  }

  if (!hi) {
    hi = array.length;
  }

  var remaining = hi - lo;

  if (remaining < 2) {
    return;
  }

  var runLength = 0;

  if (remaining < DEFAULT_MIN_MERGE) {
    runLength = makeAscendingRun(array, lo, hi, compare);
    binaryInsertionSort(array, lo, hi, lo + runLength, compare);
    return;
  }

  var ts = new TimSort(array, compare);
  var minRun = minRunLength(remaining);

  do {
    runLength = makeAscendingRun(array, lo, hi, compare);

    if (runLength < minRun) {
      var force = remaining;

      if (force > minRun) {
        force = minRun;
      }

      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);
      runLength = force;
    }

    ts.pushRun(lo, runLength);
    ts.mergeRuns();
    remaining -= runLength;
    lo += runLength;
  } while (remaining !== 0);

  ts.forceMergeRuns();
}

module.exports = sort;

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

var LRU = __webpack_require__(174);

var globalImageCache = new LRU(50);
/**
 * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc
 * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image
 */

function findExistImage(newImageOrSrc) {
  if (typeof newImageOrSrc === 'string') {
    var cachedImgObj = globalImageCache.get(newImageOrSrc);
    return cachedImgObj && cachedImgObj.image;
  } else {
    return newImageOrSrc;
  }
}
/**
 * Caution: User should cache loaded images, but not just count on LRU.
 * Consider if required images more than LRU size, will dead loop occur?
 *
 * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc
 * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.
 * @param {module:zrender/Element} [hostEl] For calling `dirty`.
 * @param {Function} [cb] params: (image, cbPayload)
 * @param {Object} [cbPayload] Payload on cb calling.
 * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image
 */


function createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {
  if (!newImageOrSrc) {
    return image;
  } else if (typeof newImageOrSrc === 'string') {
    // Image should not be loaded repeatly.
    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {
      return image;
    } // Only when there is no existent image or existent image src
    // is different, this method is responsible for load.


    var cachedImgObj = globalImageCache.get(newImageOrSrc);
    var pendingWrap = {
      hostEl: hostEl,
      cb: cb,
      cbPayload: cbPayload
    };

    if (cachedImgObj) {
      image = cachedImgObj.image;
      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);
    } else {
      !image && (image = new Image());
      image.onload = imageOnLoad;
      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {
        image: image,
        pending: [pendingWrap]
      });
      image.src = image.__zrImageSrc = newImageOrSrc;
    }

    return image;
  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas
  else {
      return newImageOrSrc;
    }
}

function imageOnLoad() {
  var cachedImgObj = this.__cachedImgObj;
  this.onload = this.__cachedImgObj = null;

  for (var i = 0; i < cachedImgObj.pending.length; i++) {
    var pendingWrap = cachedImgObj.pending[i];
    var cb = pendingWrap.cb;
    cb && cb(this, pendingWrap.cbPayload);
    pendingWrap.hostEl.dirty();
  }

  cachedImgObj.pending.length = 0;
}

function isImageReady(image) {
  return image && image.width && image.height;
}

exports.findExistImage = findExistImage;
exports.createOrUpdateImage = createOrUpdateImage;
exports.isImageReady = isImageReady;

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
// TODO Parse shadow style
// TODO Only shallow path support
function _default(properties) {
  // Normalize
  for (var i = 0; i < properties.length; i++) {
    if (!properties[i][1]) {
      properties[i][1] = properties[i][0];
    }
  }

  return function (model, excludes, includes) {
    var style = {};

    for (var i = 0; i < properties.length; i++) {
      var propName = properties[i][1];

      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {
        continue;
      }

      var val = model.getShallow(propName);

      if (val != null) {
        style[properties[i][0]] = val;
      }
    }

    return style;
  };
}

module.exports = _default;

/***/ }),
/* 115 */
/***/ (function(module, exports) {

/**
 * @param {Array.<Object>} colorStops
 */
var Gradient = function (colorStops) {
  this.colorStops = colorStops || [];
};

Gradient.prototype = {
  constructor: Gradient,
  addColorStop: function (offset, color) {
    this.colorStops.push({
      offset: offset,
      color: color
    });
  }
};
var _default = Gradient;
module.exports = _default;

/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var coordinateSystemCreators = {};

function CoordinateSystemManager() {
  this._coordinateSystems = [];
}

CoordinateSystemManager.prototype = {
  constructor: CoordinateSystemManager,
  create: function (ecModel, api) {
    var coordinateSystems = [];
    zrUtil.each(coordinateSystemCreators, function (creater, type) {
      var list = creater.create(ecModel, api);
      coordinateSystems = coordinateSystems.concat(list || []);
    });
    this._coordinateSystems = coordinateSystems;
  },
  update: function (ecModel, api) {
    zrUtil.each(this._coordinateSystems, function (coordSys) {
      coordSys.update && coordSys.update(ecModel, api);
    });
  },
  getCoordinateSystems: function () {
    return this._coordinateSystems.slice();
  }
};

CoordinateSystemManager.register = function (type, coordinateSystemCreator) {
  coordinateSystemCreators[type] = coordinateSystemCreator;
};

CoordinateSystemManager.get = function (type) {
  return coordinateSystemCreators[type];
};

var _default = CoordinateSystemManager;
module.exports = _default;

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

var _util = __webpack_require__(1);

var assert = _util.assert;
var isArray = _util.isArray;

var _config = __webpack_require__(16);

var __DEV__ = _config.__DEV__;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * @param {Object} define
 * @return See the return of `createTask`.
 */
function createTask(define) {
  return new Task(define);
}
/**
 * @constructor
 * @param {Object} define
 * @param {Function} define.reset Custom reset
 * @param {Function} [define.plan] Returns 'reset' indicate reset immediately.
 * @param {Function} [define.count] count is used to determin data task.
 * @param {Function} [define.onDirty] count is used to determin data task.
 */


function Task(define) {
  define = define || {};
  this._reset = define.reset;
  this._plan = define.plan;
  this._count = define.count;
  this._onDirty = define.onDirty;
  this._dirty = true; // Context must be specified implicitly, to
  // avoid miss update context when model changed.

  this.context;
}

var taskProto = Task.prototype;
/**
 * @param {Object} performArgs
 * @param {number} [performArgs.step] Specified step.
 * @param {number} [performArgs.skip] Skip customer perform call.
 * @param {number} [performArgs.modBy] Sampling window size.
 * @param {number} [performArgs.modDataCount] Sampling count.
 */

taskProto.perform = function (performArgs) {
  var upTask = this._upstream;
  var skip = performArgs && performArgs.skip; // TODO some refactor.
  // Pull data. Must pull data each time, because context.data
  // may be updated by Series.setData.

  if (this._dirty && upTask) {
    var context = this.context;
    context.data = context.outputData = upTask.context.outputData;
  }

  if (this.__pipeline) {
    this.__pipeline.currentTask = this;
  }

  var planResult;

  if (this._plan && !skip) {
    planResult = this._plan(this.context);
  } // Support sharding by mod, which changes the render sequence and makes the rendered graphic
  // elements uniformed distributed when progress, especially when moving or zooming.


  var lastModBy = normalizeModBy(this._modBy);
  var lastModDataCount = this._modDataCount || 0;
  var modBy = normalizeModBy(performArgs && performArgs.modBy);
  var modDataCount = performArgs && performArgs.modDataCount || 0;

  if (lastModBy !== modBy || lastModDataCount !== modDataCount) {
    planResult = 'reset';
  }

  function normalizeModBy(val) {
    !(val >= 1) && (val = 1); // jshint ignore:line

    return val;
  }

  var forceFirstProgress;

  if (this._dirty || planResult === 'reset') {
    this._dirty = false;
    forceFirstProgress = reset(this, skip);
  }

  this._modBy = modBy;
  this._modDataCount = modDataCount;
  var step = performArgs && performArgs.step;

  if (upTask) {
    this._dueEnd = upTask._outputDueEnd;
  } // DataTask or overallTask
  else {
      this._dueEnd = this._count ? this._count(this.context) : Infinity;
    } // Note: Stubs, that its host overall task let it has progress, has progress.
  // If no progress, pass index from upstream to downstream each time plan called.


  if (this._progress) {
    var start = this._dueIndex;
    var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);

    if (!skip && (forceFirstProgress || start < end)) {
      var progress = this._progress;

      if (isArray(progress)) {
        for (var i = 0; i < progress.length; i++) {
          doProgress(this, progress[i], start, end, modBy, modDataCount);
        }
      } else {
        doProgress(this, progress, start, end, modBy, modDataCount);
      }
    }

    this._dueIndex = end; // If no `outputDueEnd`, assume that output data and
    // input data is the same, so use `dueIndex` as `outputDueEnd`.

    var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;
    this._outputDueEnd = outputDueEnd;
  } else {
    // (1) Some overall task has no progress.
    // (2) Stubs, that its host overall task do not let it has progress, has no progress.
    // This should always be performed so it can be passed to downstream.
    this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;
  }

  return this.unfinished();
};

var iterator = function () {
  var end;
  var current;
  var modBy;
  var modDataCount;
  var winCount;
  var it = {
    reset: function (s, e, sStep, sCount) {
      current = s;
      end = e;
      modBy = sStep;
      modDataCount = sCount;
      winCount = Math.ceil(modDataCount / modBy);
      it.next = modBy > 1 && modDataCount > 0 ? modNext : sequentialNext;
    }
  };
  return it;

  function sequentialNext() {
    return current < end ? current++ : null;
  }

  function modNext() {
    var dataIndex = current % winCount * modBy + Math.ceil(current / winCount);
    var result = current >= end ? null : dataIndex < modDataCount ? dataIndex // If modDataCount is smaller than data.count() (consider `appendData` case),
    // Use normal linear rendering mode.
    : current;
    current++;
    return result;
  }
}();

taskProto.dirty = function () {
  this._dirty = true;
  this._onDirty && this._onDirty(this.context);
};

function doProgress(taskIns, progress, start, end, modBy, modDataCount) {
  iterator.reset(start, end, modBy, modDataCount);
  taskIns._callingProgress = progress;

  taskIns._callingProgress({
    start: start,
    end: end,
    count: end - start,
    next: iterator.next
  }, taskIns.context);
}

function reset(taskIns, skip) {
  taskIns._dueIndex = taskIns._outputDueEnd = taskIns._dueEnd = 0;
  taskIns._settedOutputEnd = null;
  var progress;
  var forceFirstProgress;

  if (!skip && taskIns._reset) {
    progress = taskIns._reset(taskIns.context);

    if (progress && progress.progress) {
      forceFirstProgress = progress.forceFirstProgress;
      progress = progress.progress;
    } // To simplify no progress checking, array must has item.


    if (isArray(progress) && !progress.length) {
      progress = null;
    }
  }

  taskIns._progress = progress;
  taskIns._modBy = taskIns._modDataCount = null;
  var downstream = taskIns._downstream;
  downstream && downstream.dirty();
  return forceFirstProgress;
}
/**
 * @return {boolean}
 */


taskProto.unfinished = function () {
  return this._progress && this._dueIndex < this._dueEnd;
};
/**
 * @param {Object} downTask The downstream task.
 * @return {Object} The downstream task.
 */


taskProto.pipe = function (downTask) {
  // If already downstream, do not dirty downTask.
  if (this._downstream !== downTask || this._dirty) {
    this._downstream = downTask;
    downTask._upstream = this;
    downTask.dirty();
  }
};

taskProto.dispose = function () {
  if (this._disposed) {
    return;
  }

  this._upstream && (this._upstream._downstream = null);
  this._downstream && (this._downstream._upstream = null);
  this._dirty = false;
  this._disposed = true;
};

taskProto.getUpstream = function () {
  return this._upstream;
};

taskProto.getDownstream = function () {
  return this._downstream;
};

taskProto.setOutputEnd = function (end) {
  // This only happend in dataTask, dataZoom, map, currently.
  // where dataZoom do not set end each time, but only set
  // when reset. So we should record the setted end, in case
  // that the stub of dataZoom perform again and earse the
  // setted end by upstream.
  this._outputDueEnd = this._settedOutputEnd = end;
}; ///////////////////////////////////////////////////////////
// For stream debug (Should be commented out after used!)
// Usage: printTask(this, 'begin');
// Usage: printTask(this, null, {someExtraProp});
// function printTask(task, prefix, extra) {
//     window.ecTaskUID == null && (window.ecTaskUID = 0);
//     task.uidDebug == null && (task.uidDebug = `task_${window.ecTaskUID++}`);
//     task.agent && task.agent.uidDebug == null && (task.agent.uidDebug = `task_${window.ecTaskUID++}`);
//     var props = [];
//     if (task.__pipeline) {
//         var val = `${task.__idxInPipeline}/${task.__pipeline.tail.__idxInPipeline} ${task.agent ? '(stub)' : ''}`;
//         props.push({text: 'idx', value: val});
//     } else {
//         var stubCount = 0;
//         task.agentStubMap.each(() => stubCount++);
//         props.push({text: 'idx', value: `overall (stubs: ${stubCount})`});
//     }
//     props.push({text: 'uid', value: task.uidDebug});
//     if (task.__pipeline) {
//         props.push({text: 'pid', value: task.__pipeline.id});
//         task.agent && props.push(
//             {text: 'stubFor', value: task.agent.uidDebug}
//         );
//     }
//     props.push(
//         {text: 'dirty', value: task._dirty},
//         {text: 'dueIndex', value: task._dueIndex},
//         {text: 'dueEnd', value: task._dueEnd},
//         {text: 'outputDueEnd', value: task._outputDueEnd}
//     );
//     if (extra) {
//         Object.keys(extra).forEach(key => {
//             props.push({text: key, value: extra[key]});
//         });
//     }
//     var args = ['color: blue'];
//     var msg = `%c[${prefix || 'T'}] %c` + props.map(item => (
//         args.push('color: black', 'color: red'),
//         `${item.text}: %c${item.value}`
//     )).join('%c, ');
//     console.log.apply(console, [msg].concat(args));
//     // console.log(this);
// }


exports.createTask = createTask;

/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

var _util = __webpack_require__(1);

var each = _util.each;

var Group = __webpack_require__(82);

var componentUtil = __webpack_require__(86);

var clazzUtil = __webpack_require__(48);

var modelUtil = __webpack_require__(7);

var _task = __webpack_require__(117);

var createTask = _task.createTask;

var createRenderPlanner = __webpack_require__(119);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var inner = modelUtil.makeInner();
var renderPlanner = createRenderPlanner();

function Chart() {
  /**
   * @type {module:zrender/container/Group}
   * @readOnly
   */
  this.group = new Group();
  /**
   * @type {string}
   * @readOnly
   */

  this.uid = componentUtil.getUID('viewChart');
  this.renderTask = createTask({
    plan: renderTaskPlan,
    reset: renderTaskReset
  });
  this.renderTask.context = {
    view: this
  };
}

Chart.prototype = {
  type: 'chart',

  /**
   * Init the chart.
   * @param  {module:echarts/model/Global} ecModel
   * @param  {module:echarts/ExtensionAPI} api
   */
  init: function (ecModel, api) {},

  /**
   * Render the chart.
   * @param  {module:echarts/model/Series} seriesModel
   * @param  {module:echarts/model/Global} ecModel
   * @param  {module:echarts/ExtensionAPI} api
   * @param  {Object} payload
   */
  render: function (seriesModel, ecModel, api, payload) {},

  /**
   * Highlight series or specified data item.
   * @param  {module:echarts/model/Series} seriesModel
   * @param  {module:echarts/model/Global} ecModel
   * @param  {module:echarts/ExtensionAPI} api
   * @param  {Object} payload
   */
  highlight: function (seriesModel, ecModel, api, payload) {
    toggleHighlight(seriesModel.getData(), payload, 'emphasis');
  },

  /**
   * Downplay series or specified data item.
   * @param  {module:echarts/model/Series} seriesModel
   * @param  {module:echarts/model/Global} ecModel
   * @param  {module:echarts/ExtensionAPI} api
   * @param  {Object} payload
   */
  downplay: function (seriesModel, ecModel, api, payload) {
    toggleHighlight(seriesModel.getData(), payload, 'normal');
  },

  /**
   * Remove self.
   * @param  {module:echarts/model/Global} ecModel
   * @param  {module:echarts/ExtensionAPI} api
   */
  remove: function (ecModel, api) {
    this.group.removeAll();
  },

  /**
   * Dispose self.
   * @param  {module:echarts/model/Global} ecModel
   * @param  {module:echarts/ExtensionAPI} api
   */
  dispose: function () {},

  /**
   * Rendering preparation in progressive mode.
   * @param  {module:echarts/model/Series} seriesModel
   * @param  {module:echarts/model/Global} ecModel
   * @param  {module:echarts/ExtensionAPI} api
   * @param  {Object} payload
   */
  incrementalPrepareRender: null,

  /**
   * Render in progressive mode.
   * @param  {module:echarts/model/Series} seriesModel
   * @param  {module:echarts/model/Global} ecModel
   * @param  {module:echarts/ExtensionAPI} api
   * @param  {Object} payload
   */
  incrementalRender: null,

  /**
   * Update transform directly.
   * @param  {module:echarts/model/Series} seriesModel
   * @param  {module:echarts/model/Global} ecModel
   * @param  {module:echarts/ExtensionAPI} api
   * @param  {Object} payload
   * @return {Object} {update: true}
   */
  updateTransform: null
  /**
   * The view contains the given point.
   * @interface
   * @param {Array.<number>} point
   * @return {boolean}
   */
  // containPoint: function () {}

};
var chartProto = Chart.prototype;

chartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {
  this.render(seriesModel, ecModel, api, payload);
};
/**
 * Set state of single element
 * @param  {module:zrender/Element} el
 * @param  {string} state
 */


function elSetState(el, state) {
  if (el) {
    el.trigger(state);

    if (el.type === 'group') {
      for (var i = 0; i < el.childCount(); i++) {
        elSetState(el.childAt(i), state);
      }
    }
  }
}
/**
 * @param  {module:echarts/data/List} data
 * @param  {Object} payload
 * @param  {string} state 'normal'|'emphasis'
 */


function toggleHighlight(data, payload, state) {
  var dataIndex = modelUtil.queryDataIndex(data, payload);

  if (dataIndex != null) {
    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {
      elSetState(data.getItemGraphicEl(dataIdx), state);
    });
  } else {
    data.eachItemGraphicEl(function (el) {
      elSetState(el, state);
    });
  }
} // Enable Chart.extend.


clazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.

clazzUtil.enableClassManagement(Chart, {
  registerWhenExtend: true
});

Chart.markUpdateMethod = function (payload, methodName) {
  inner(payload).updateMethod = methodName;
};

function renderTaskPlan(context) {
  return renderPlanner(context.model);
}

function renderTaskReset(context) {
  var seriesModel = context.model;
  var ecModel = context.ecModel;
  var api = context.api;
  var payload = context.payload; // ???! remove updateView updateVisual

  var progressiveRender = seriesModel.pipelineContext.progressiveRender;
  var view = context.view;
  var updateMethod = payload && inner(payload).updateMethod;
  var methodName = progressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod // `appendData` is also supported when data amount
  // is less than progressive threshold.
  : 'render';

  if (methodName !== 'render') {
    view[methodName](seriesModel, ecModel, api, payload);
  }

  return progressMethodMap[methodName];
}

var progressMethodMap = {
  incrementalPrepareRender: {
    progress: function (params, context) {
      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);
    }
  },
  render: {
    // Put view.render in `progress` to support appendData. But in this case
    // view.render should not be called in reset, otherwise it will be called
    // twise. Use `forceFirstProgress` to make sure that view.render is called
    // in any cases.
    forceFirstProgress: true,
    progress: function (params, context) {
      context.view.render(context.model, context.ecModel, context.api, context.payload);
    }
  }
};
var _default = Chart;
module.exports = _default;

/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

var _model = __webpack_require__(7);

var makeInner = _model.makeInner;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * @return {string} If large mode changed, return string 'reset';
 */
function _default() {
  var inner = makeInner();
  return function (seriesModel) {
    var fields = inner(seriesModel);
    var pipelineContext = seriesModel.pipelineContext;
    var originalLarge = fields.large;
    var originalProgressive = fields.progressiveRender;
    var large = fields.large = pipelineContext.large;
    var progressive = fields.progressiveRender = pipelineContext.progressiveRender;
    return !!(originalLarge ^ large || originalProgressive ^ progressive) && 'reset';
  };
}

module.exports = _default;

/***/ }),
/* 120 */
/***/ (function(module, exports) {

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var ORIGIN_METHOD = '\0__throttleOriginMethod';
var RATE = '\0__throttleRate';
var THROTTLE_TYPE = '\0__throttleType';
/**
 * @public
 * @param {(Function)} fn
 * @param {number} [delay=0] Unit: ms.
 * @param {boolean} [debounce=false]
 *        true: If call interval less than `delay`, only the last call works.
 *        false: If call interval less than `delay, call works on fixed rate.
 * @return {(Function)} throttled fn.
 */

function throttle(fn, delay, debounce) {
  var currCall;
  var lastCall = 0;
  var lastExec = 0;
  var timer = null;
  var diff;
  var scope;
  var args;
  var debounceNextCall;
  delay = delay || 0;

  function exec() {
    lastExec = new Date().getTime();
    timer = null;
    fn.apply(scope, args || []);
  }

  var cb = function () {
    currCall = new Date().getTime();
    scope = this;
    args = arguments;
    var thisDelay = debounceNextCall || delay;
    var thisDebounce = debounceNextCall || debounce;
    debounceNextCall = null;
    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;
    clearTimeout(timer); // Here we should make sure that: the `exec` SHOULD NOT be called later
    // than a new call of `cb`, that is, preserving the command order. Consider
    // calculating "scale rate" when roaming as an example. When a call of `cb`
    // happens, either the `exec` is called dierectly, or the call is delayed.
    // But the delayed call should never be later than next call of `cb`. Under
    // this assurance, we can simply update view state each time `dispatchAction`
    // triggered by user roaming, but not need to add extra code to avoid the
    // state being "rolled-back".

    if (thisDebounce) {
      timer = setTimeout(exec, thisDelay);
    } else {
      if (diff >= 0) {
        exec();
      } else {
        timer = setTimeout(exec, -diff);
      }
    }

    lastCall = currCall;
  };
  /**
   * Clear throttle.
   * @public
   */


  cb.clear = function () {
    if (timer) {
      clearTimeout(timer);
      timer = null;
    }
  };
  /**
   * Enable debounce once.
   */


  cb.debounceNextCall = function (debounceDelay) {
    debounceNextCall = debounceDelay;
  };

  return cb;
}
/**
 * Create throttle method or update throttle rate.
 *
 * @example
 * ComponentView.prototype.render = function () {
 *     ...
 *     throttle.createOrUpdate(
 *         this,
 *         '_dispatchAction',
 *         this.model.get('throttle'),
 *         'fixRate'
 *     );
 * };
 * ComponentView.prototype.remove = function () {
 *     throttle.clear(this, '_dispatchAction');
 * };
 * ComponentView.prototype.dispose = function () {
 *     throttle.clear(this, '_dispatchAction');
 * };
 *
 * @public
 * @param {Object} obj
 * @param {string} fnAttr
 * @param {number} [rate]
 * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'
 * @return {Function} throttled function.
 */


function createOrUpdate(obj, fnAttr, rate, throttleType) {
  var fn = obj[fnAttr];

  if (!fn) {
    return;
  }

  var originFn = fn[ORIGIN_METHOD] || fn;
  var lastThrottleType = fn[THROTTLE_TYPE];
  var lastRate = fn[RATE];

  if (lastRate !== rate || lastThrottleType !== throttleType) {
    if (rate == null || !throttleType) {
      return obj[fnAttr] = originFn;
    }

    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');
    fn[ORIGIN_METHOD] = originFn;
    fn[THROTTLE_TYPE] = throttleType;
    fn[RATE] = rate;
  }

  return fn;
}
/**
 * Clear throttle. Example see throttle.createOrUpdate.
 *
 * @public
 * @param {Object} obj
 * @param {string} fnAttr
 */


function clear(obj, fnAttr) {
  var fn = obj[fnAttr];

  if (fn && fn[ORIGIN_METHOD]) {
    obj[fnAttr] = fn[ORIGIN_METHOD];
  }
}

exports.throttle = throttle;
exports.createOrUpdate = createOrUpdate;
exports.clear = clear;

/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

var _config = __webpack_require__(16);

var __DEV__ = _config.__DEV__;

var zrUtil = __webpack_require__(1);

var Model = __webpack_require__(42);

var DataDiffer = __webpack_require__(492);

var Source = __webpack_require__(76);

var _dataProvider = __webpack_require__(66);

var defaultDimValueGetters = _dataProvider.defaultDimValueGetters;
var DefaultDataProvider = _dataProvider.DefaultDataProvider;

var _dimensionHelper = __webpack_require__(122);

var summarizeDimensions = _dimensionHelper.summarizeDimensions;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * List for data storage
 * @module echarts/data/List
 */
var isObject = zrUtil.isObject;
var UNDEFINED = 'undefined'; // Use prefix to avoid index to be the same as otherIdList[idx],
// which will cause weird udpate animation.

var ID_PREFIX = 'e\0\0';
var dataCtors = {
  'float': typeof Float64Array === UNDEFINED ? Array : Float64Array,
  'int': typeof Int32Array === UNDEFINED ? Array : Int32Array,
  // Ordinal data type can be string or int
  'ordinal': Array,
  'number': Array,
  'time': Array
}; // Caution: MUST not use `new CtorUint32Array(arr, 0, len)`, because the Ctor of array is
// different from the Ctor of typed array.

var CtorUint32Array = typeof Uint32Array === UNDEFINED ? Array : Uint32Array;
var CtorUint16Array = typeof Uint16Array === UNDEFINED ? Array : Uint16Array;

function getIndicesCtor(list) {
  // The possible max value in this._indicies is always this._rawCount despite of filtering.
  return list._rawCount > 65535 ? CtorUint32Array : CtorUint16Array;
}

function cloneChunk(originalChunk) {
  var Ctor = originalChunk.constructor; // Only shallow clone is enough when Array.

  return Ctor === Array ? originalChunk.slice() : new Ctor(originalChunk);
}

var TRANSFERABLE_PROPERTIES = ['hasItemOption', '_nameList', '_idList', '_invertedIndicesMap', '_rawData', '_chunkSize', '_chunkCount', '_dimValueGetter', '_count', '_rawCount', '_nameDimIdx', '_idDimIdx'];
var CLONE_PROPERTIES = ['_extent', '_approximateExtent', '_rawExtent'];

function transferProperties(target, source) {
  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(source.__wrappedMethods || []), function (propName) {
    if (source.hasOwnProperty(propName)) {
      target[propName] = source[propName];
    }
  });
  target.__wrappedMethods = source.__wrappedMethods;
  zrUtil.each(CLONE_PROPERTIES, function (propName) {
    target[propName] = zrUtil.clone(source[propName]);
  });
  target._calculationInfo = zrUtil.extend(source._calculationInfo);
}
/**
 * @constructor
 * @alias module:echarts/data/List
 *
 * @param {Array.<string|Object>} dimensions
 *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].
 *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius
 *      Spetial fields: {
 *          ordinalMeta: <module:echarts/data/OrdinalMeta>
 *          createInvertedIndices: <boolean>
 *      }
 * @param {module:echarts/model/Model} hostModel
 */


var List = function (dimensions, hostModel) {
  dimensions = dimensions || ['x', 'y'];
  var dimensionInfos = {};
  var dimensionNames = [];
  var invertedIndicesMap = {};

  for (var i = 0; i < dimensions.length; i++) {
    // Use the original dimensions[i], where other flag props may exists.
    var dimensionInfo = dimensions[i];

    if (zrUtil.isString(dimensionInfo)) {
      dimensionInfo = {
        name: dimensionInfo
      };
    }

    var dimensionName = dimensionInfo.name;
    dimensionInfo.type = dimensionInfo.type || 'float';

    if (!dimensionInfo.coordDim) {
      dimensionInfo.coordDim = dimensionName;
      dimensionInfo.coordDimIndex = 0;
    }

    dimensionInfo.otherDims = dimensionInfo.otherDims || {};
    dimensionNames.push(dimensionName);
    dimensionInfos[dimensionName] = dimensionInfo;
    dimensionInfo.index = i;

    if (dimensionInfo.createInvertedIndices) {
      invertedIndicesMap[dimensionName] = [];
    }
  }
  /**
   * @readOnly
   * @type {Array.<string>}
   */


  this.dimensions = dimensionNames;
  /**
   * Infomation of each data dimension, like data type.
   * @type {Object}
   */

  this._dimensionInfos = dimensionInfos;
  /**
   * @type {module:echarts/model/Model}
   */

  this.hostModel = hostModel;
  /**
   * @type {module:echarts/model/Model}
   */

  this.dataType;
  /**
   * Indices stores the indices of data subset after filtered.
   * This data subset will be used in chart.
   * @type {Array.<number>}
   * @readOnly
   */

  this._indices = null;
  this._count = 0;
  this._rawCount = 0;
  /**
   * Data storage
   * @type {Object.<key, Array.<TypedArray|Array>>}
   * @private
   */

  this._storage = {};
  /**
   * @type {Array.<string>}
   */

  this._nameList = [];
  /**
   * @type {Array.<string>}
   */

  this._idList = [];
  /**
   * Models of data option is stored sparse for optimizing memory cost
   * @type {Array.<module:echarts/model/Model>}
   * @private
   */

  this._optionModels = [];
  /**
   * Global visual properties after visual coding
   * @type {Object}
   * @private
   */

  this._visual = {};
  /**
   * Globel layout properties.
   * @type {Object}
   * @private
   */

  this._layout = {};
  /**
   * Item visual properties after visual coding
   * @type {Array.<Object>}
   * @private
   */

  this._itemVisuals = [];
  /**
   * Key: visual type, Value: boolean
   * @type {Object}
   * @readOnly
   */

  this.hasItemVisual = {};
  /**
   * Item layout properties after layout
   * @type {Array.<Object>}
   * @private
   */

  this._itemLayouts = [];
  /**
   * Graphic elemnents
   * @type {Array.<module:zrender/Element>}
   * @private
   */

  this._graphicEls = [];
  /**
   * Max size of each chunk.
   * @type {number}
   * @private
   */

  this._chunkSize = 1e5;
  /**
   * @type {number}
   * @private
   */

  this._chunkCount = 0;
  /**
   * @type {Array.<Array|Object>}
   * @private
   */

  this._rawData;
  /**
   * Raw extent will not be cloned, but only transfered.
   * It will not be calculated util needed.
   * key: dim,
   * value: {end: number, extent: Array.<number>}
   * @type {Object}
   * @private
   */

  this._rawExtent = {};
  /**
   * @type {Object}
   * @private
   */

  this._extent = {};
  /**
   * key: dim
   * value: extent
   * @type {Object}
   * @private
   */

  this._approximateExtent = {};
  /**
   * Cache summary info for fast visit. See "dimensionHelper".
   * @type {Object}
   * @private
   */

  this._dimensionsSummary = summarizeDimensions(this);
  /**
   * @type {Object.<Array|TypedArray>}
   * @private
   */

  this._invertedIndicesMap = invertedIndicesMap;
  /**
   * @type {Object}
   * @private
   */

  this._calculationInfo = {};
};

var listProto = List.prototype;
listProto.type = 'list';
/**
 * If each data item has it's own option
 * @type {boolean}
 */

listProto.hasItemOption = true;
/**
 * Get dimension name
 * @param {string|number} dim
 *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius
 *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'
 * @return {string} Concrete dim name.
 */

listProto.getDimension = function (dim) {
  if (!isNaN(dim)) {
    dim = this.dimensions[dim] || dim;
  }

  return dim;
};
/**
 * Get type and calculation info of particular dimension
 * @param {string|number} dim
 *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius
 *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'
 */


listProto.getDimensionInfo = function (dim) {
  // Do not clone, because there may be categories in dimInfo.
  return this._dimensionInfos[this.getDimension(dim)];
};
/**
 * @return {Array.<string>} concrete dimension name list on coord.
 */


listProto.getDimensionsOnCoord = function () {
  return this._dimensionsSummary.dataDimsOnCoord.slice();
};
/**
 * @param {string} coordDim
 * @param {number} [idx] A coordDim may map to more than one data dim.
 *        If idx is `true`, return a array of all mapped dims.
 *        If idx is not specified, return the first dim not extra.
 * @return {string|Array.<string>} concrete data dim.
 *        If idx is number, and not found, return null/undefined.
 *        If idx is `true`, and not found, return empty array (always return array).
 */


listProto.mapDimension = function (coordDim, idx) {
  var dimensionsSummary = this._dimensionsSummary;

  if (idx == null) {
    return dimensionsSummary.encodeFirstDimNotExtra[coordDim];
  }

  var dims = dimensionsSummary.encode[coordDim];
  return idx === true // always return array if idx is `true`
  ? (dims || []).slice() : dims && dims[idx];
};
/**
 * Initialize from data
 * @param {Array.<Object|number|Array>} data source or data or data provider.
 * @param {Array.<string>} [nameLIst] The name of a datum is used on data diff and
 *        defualt label/tooltip.
 *        A name can be specified in encode.itemName,
 *        or dataItem.name (only for series option data),
 *        or provided in nameList from outside.
 * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number
 */


listProto.initData = function (data, nameList, dimValueGetter) {
  var notProvider = Source.isInstance(data) || zrUtil.isArrayLike(data);

  if (notProvider) {
    data = new DefaultDataProvider(data, this.dimensions.length);
  }

  this._rawData = data; // Clear

  this._storage = {};
  this._indices = null;
  this._nameList = nameList || [];
  this._idList = [];
  this._nameRepeatCount = {};

  if (!dimValueGetter) {
    this.hasItemOption = false;
  }
  /**
   * @readOnly
   */


  this.defaultDimValueGetter = defaultDimValueGetters[this._rawData.getSource().sourceFormat]; // Default dim value getter

  this._dimValueGetter = dimValueGetter = dimValueGetter || this.defaultDimValueGetter; // Reset raw extent.

  this._rawExtent = {};

  this._initDataFromProvider(0, data.count()); // If data has no item option.


  if (data.pure) {
    this.hasItemOption = false;
  }
};

listProto.getProvider = function () {
  return this._rawData;
};

listProto.appendData = function (data) {
  var rawData = this._rawData;
  var start = this.count();
  rawData.appendData(data);
  var end = rawData.count();

  if (!rawData.persistent) {
    end += start;
  }

  this._initDataFromProvider(start, end);
};

listProto._initDataFromProvider = function (start, end) {
  // Optimize.
  if (start >= end) {
    return;
  }

  var chunkSize = this._chunkSize;
  var rawData = this._rawData;
  var storage = this._storage;
  var dimensions = this.dimensions;
  var dimLen = dimensions.length;
  var dimensionInfoMap = this._dimensionInfos;
  var nameList = this._nameList;
  var idList = this._idList;
  var rawExtent = this._rawExtent;
  var nameRepeatCount = this._nameRepeatCount = {};
  var nameDimIdx;
  var chunkCount = this._chunkCount;
  var lastChunkIndex = chunkCount - 1;

  for (var i = 0; i < dimLen; i++) {
    var dim = dimensions[i];

    if (!rawExtent[dim]) {
      rawExtent[dim] = getInitialExtent();
    }

    var dimInfo = dimensionInfoMap[dim];

    if (dimInfo.otherDims.itemName === 0) {
      nameDimIdx = this._nameDimIdx = i;
    }

    if (dimInfo.otherDims.itemId === 0) {
      this._idDimIdx = i;
    }

    var DataCtor = dataCtors[dimInfo.type];

    if (!storage[dim]) {
      storage[dim] = [];
    }

    var resizeChunkArray = storage[dim][lastChunkIndex];

    if (resizeChunkArray && resizeChunkArray.length < chunkSize) {
      var newStore = new DataCtor(Math.min(end - lastChunkIndex * chunkSize, chunkSize)); // The cost of the copy is probably inconsiderable
      // within the initial chunkSize.

      for (var j = 0; j < resizeChunkArray.length; j++) {
        newStore[j] = resizeChunkArray[j];
      }

      storage[dim][lastChunkIndex] = newStore;
    } // Create new chunks.


    for (var k = chunkCount * chunkSize; k < end; k += chunkSize) {
      storage[dim].push(new DataCtor(Math.min(end - k, chunkSize)));
    }

    this._chunkCount = storage[dim].length;
  }

  var dataItem = new Array(dimLen);

  for (var idx = start; idx < end; idx++) {
    // NOTICE: Try not to write things into dataItem
    dataItem = rawData.getItem(idx, dataItem); // Each data item is value
    // [1, 2]
    // 2
    // Bar chart, line chart which uses category axis
    // only gives the 'y' value. 'x' value is the indices of category
    // Use a tempValue to normalize the value to be a (x, y) value

    var chunkIndex = Math.floor(idx / chunkSize);
    var chunkOffset = idx % chunkSize; // Store the data by dimensions

    for (var k = 0; k < dimLen; k++) {
      var dim = dimensions[k];
      var dimStorage = storage[dim][chunkIndex]; // PENDING NULL is empty or zero

      var val = this._dimValueGetter(dataItem, dim, idx, k);

      dimStorage[chunkOffset] = val;
      var dimRawExtent = rawExtent[dim];

      if (val < dimRawExtent[0]) {
        dimRawExtent[0] = val;
      }

      if (val > dimRawExtent[1]) {
        dimRawExtent[1] = val;
      }
    } // ??? FIXME not check by pure but sourceFormat?
    // TODO refactor these logic.


    if (!rawData.pure) {
      var name = nameList[idx];

      if (dataItem && name == null) {
        // If dataItem is {name: ...}, it has highest priority.
        // That is appropriate for many common cases.
        if (dataItem.name != null) {
          // There is no other place to persistent dataItem.name,
          // so save it to nameList.
          nameList[idx] = name = dataItem.name;
        } else if (nameDimIdx != null) {
          var nameDim = dimensions[nameDimIdx];
          var nameDimChunk = storage[nameDim][chunkIndex];

          if (nameDimChunk) {
            name = nameDimChunk[chunkOffset];
            var ordinalMeta = dimensionInfoMap[nameDim].ordinalMeta;

            if (ordinalMeta && ordinalMeta.categories.length) {
              name = ordinalMeta.categories[name];
            }
          }
        }
      } // Try using the id in option
      // id or name is used on dynamical data, mapping old and new items.


      var id = dataItem == null ? null : dataItem.id;

      if (id == null && name != null) {
        // Use name as id and add counter to avoid same name
        nameRepeatCount[name] = nameRepeatCount[name] || 0;
        id = name;

        if (nameRepeatCount[name] > 0) {
          id += '__ec__' + nameRepeatCount[name];
        }

        nameRepeatCount[name]++;
      }

      id != null && (idList[idx] = id);
    }
  }

  if (!rawData.persistent && rawData.clean) {
    // Clean unused data if data source is typed array.
    rawData.clean();
  }

  this._rawCount = this._count = end; // Reset data extent

  this._extent = {};
  prepareInvertedIndex(this);
};

function prepareInvertedIndex(list) {
  var invertedIndicesMap = list._invertedIndicesMap;
  zrUtil.each(invertedIndicesMap, function (invertedIndices, dim) {
    var dimInfo = list._dimensionInfos[dim]; // Currently, only dimensions that has ordinalMeta can create inverted indices.

    var ordinalMeta = dimInfo.ordinalMeta;

    if (ordinalMeta) {
      invertedIndices = invertedIndicesMap[dim] = new CtorUint32Array(ordinalMeta.categories.length); // The default value of TypedArray is 0. To avoid miss
      // mapping to 0, we should set it as NaN.

      for (var i = 0; i < invertedIndices.length; i++) {
        invertedIndices[i] = NaN;
      }

      for (var i = 0; i < list._count; i++) {
        // Only support the case that all values are distinct.
        invertedIndices[list.get(dim, i)] = i;
      }
    }
  });
}

function getRawValueFromStore(list, dimIndex, rawIndex) {
  var val;

  if (dimIndex != null) {
    var chunkSize = list._chunkSize;
    var chunkIndex = Math.floor(rawIndex / chunkSize);
    var chunkOffset = rawIndex % chunkSize;
    var dim = list.dimensions[dimIndex];
    var chunk = list._storage[dim][chunkIndex];

    if (chunk) {
      val = chunk[chunkOffset];
      var ordinalMeta = list._dimensionInfos[dim].ordinalMeta;

      if (ordinalMeta && ordinalMeta.categories.length) {
        val = ordinalMeta.categories[val];
      }
    }
  }

  return val;
}
/**
 * @return {number}
 */


listProto.count = function () {
  return this._count;
};

listProto.getIndices = function () {
  var newIndices;
  var indices = this._indices;

  if (indices) {
    var Ctor = indices.constructor;
    var thisCount = this._count; // `new Array(a, b, c)` is different from `new Uint32Array(a, b, c)`.

    if (Ctor === Array) {
      newIndices = new Ctor(thisCount);

      for (var i = 0; i < thisCount; i++) {
        newIndices[i] = indices[i];
      }
    } else {
      newIndices = new Ctor(indices.buffer, 0, thisCount);
    }
  } else {
    var Ctor = getIndicesCtor(this);
    var newIndices = new Ctor(this.count());

    for (var i = 0; i < newIndices.length; i++) {
      newIndices[i] = i;
    }
  }

  return newIndices;
};
/**
 * Get value. Return NaN if idx is out of range.
 * @param {string} dim Dim must be concrete name.
 * @param {number} idx
 * @param {boolean} stack
 * @return {number}
 */


listProto.get = function (dim, idx
/*, stack */
) {
  if (!(idx >= 0 && idx < this._count)) {
    return NaN;
  }

  var storage = this._storage;

  if (!storage[dim]) {
    // TODO Warn ?
    return NaN;
  }

  idx = this.getRawIndex(idx);
  var chunkIndex = Math.floor(idx / this._chunkSize);
  var chunkOffset = idx % this._chunkSize;
  var chunkStore = storage[dim][chunkIndex];
  var value = chunkStore[chunkOffset]; // FIXME ordinal data type is not stackable
  // if (stack) {
  //     var dimensionInfo = this._dimensionInfos[dim];
  //     if (dimensionInfo && dimensionInfo.stackable) {
  //         var stackedOn = this.stackedOn;
  //         while (stackedOn) {
  //             // Get no stacked data of stacked on
  //             var stackedValue = stackedOn.get(dim, idx);
  //             // Considering positive stack, negative stack and empty data
  //             if ((value >= 0 && stackedValue > 0)  // Positive stack
  //                 || (value <= 0 && stackedValue < 0) // Negative stack
  //             ) {
  //                 value += stackedValue;
  //             }
  //             stackedOn = stackedOn.stackedOn;
  //         }
  //     }
  // }

  return value;
};
/**
 * @param {string} dim concrete dim
 * @param {number} rawIndex
 * @return {number|string}
 */


listProto.getByRawIndex = function (dim, rawIdx) {
  if (!(rawIdx >= 0 && rawIdx < this._rawCount)) {
    return NaN;
  }

  var dimStore = this._storage[dim];

  if (!dimStore) {
    // TODO Warn ?
    return NaN;
  }

  var chunkIndex = Math.floor(rawIdx / this._chunkSize);
  var chunkOffset = rawIdx % this._chunkSize;
  var chunkStore = dimStore[chunkIndex];
  return chunkStore[chunkOffset];
};
/**
 * FIXME Use `get` on chrome maybe slow(in filterSelf and selectRange).
 * Hack a much simpler _getFast
 * @private
 */


listProto._getFast = function (dim, rawIdx) {
  var chunkIndex = Math.floor(rawIdx / this._chunkSize);
  var chunkOffset = rawIdx % this._chunkSize;
  var chunkStore = this._storage[dim][chunkIndex];
  return chunkStore[chunkOffset];
};
/**
 * Get value for multi dimensions.
 * @param {Array.<string>} [dimensions] If ignored, using all dimensions.
 * @param {number} idx
 * @return {number}
 */


listProto.getValues = function (dimensions, idx
/*, stack */
) {
  var values = [];

  if (!zrUtil.isArray(dimensions)) {
    // stack = idx;
    idx = dimensions;
    dimensions = this.dimensions;
  }

  for (var i = 0, len = dimensions.length; i < len; i++) {
    values.push(this.get(dimensions[i], idx
    /*, stack */
    ));
  }

  return values;
};
/**
 * If value is NaN. Inlcuding '-'
 * Only check the coord dimensions.
 * @param {string} dim
 * @param {number} idx
 * @return {number}
 */


listProto.hasValue = function (idx) {
  var dataDimsOnCoord = this._dimensionsSummary.dataDimsOnCoord;
  var dimensionInfos = this._dimensionInfos;

  for (var i = 0, len = dataDimsOnCoord.length; i < len; i++) {
    if ( // Ordinal type can be string or number
    dimensionInfos[dataDimsOnCoord[i]].type !== 'ordinal' // FIXME check ordinal when using index?
    && isNaN(this.get(dataDimsOnCoord[i], idx))) {
      return false;
    }
  }

  return true;
};
/**
 * Get extent of data in one dimension
 * @param {string} dim
 * @param {boolean} stack
 */


listProto.getDataExtent = function (dim
/*, stack */
) {
  // Make sure use concrete dim as cache name.
  dim = this.getDimension(dim);
  var dimData = this._storage[dim];
  var initialExtent = getInitialExtent(); // stack = !!((stack || false) && this.getCalculationInfo(dim));

  if (!dimData) {
    return initialExtent;
  } // Make more strict checkings to ensure hitting cache.


  var currEnd = this.count(); // var cacheName = [dim, !!stack].join('_');
  // var cacheName = dim;
  // Consider the most cases when using data zoom, `getDataExtent`
  // happened before filtering. We cache raw extent, which is not
  // necessary to be cleared and recalculated when restore data.

  var useRaw = !this._indices; // && !stack;

  var dimExtent;

  if (useRaw) {
    return this._rawExtent[dim].slice();
  }

  dimExtent = this._extent[dim];

  if (dimExtent) {
    return dimExtent.slice();
  }

  dimExtent = initialExtent;
  var min = dimExtent[0];
  var max = dimExtent[1];

  for (var i = 0; i < currEnd; i++) {
    // var value = stack ? this.get(dim, i, true) : this._getFast(dim, this.getRawIndex(i));
    var value = this._getFast(dim, this.getRawIndex(i));

    value < min && (min = value);
    value > max && (max = value);
  }

  dimExtent = [min, max];
  this._extent[dim] = dimExtent;
  return dimExtent;
};
/**
 * Optimize for the scenario that data is filtered by a given extent.
 * Consider that if data amount is more than hundreds of thousand,
 * extent calculation will cost more than 10ms and the cache will
 * be erased because of the filtering.
 */


listProto.getApproximateExtent = function (dim
/*, stack */
) {
  dim = this.getDimension(dim);
  return this._approximateExtent[dim] || this.getDataExtent(dim
  /*, stack */
  );
};

listProto.setApproximateExtent = function (extent, dim
/*, stack */
) {
  dim = this.getDimension(dim);
  this._approximateExtent[dim] = extent.slice();
};
/**
 * @param {string} key
 * @return {*}
 */


listProto.getCalculationInfo = function (key) {
  return this._calculationInfo[key];
};
/**
 * @param {string|Object} key or k-v object
 * @param {*} [value]
 */


listProto.setCalculationInfo = function (key, value) {
  isObject(key) ? zrUtil.extend(this._calculationInfo, key) : this._calculationInfo[key] = value;
};
/**
 * Get sum of data in one dimension
 * @param {string} dim
 */


listProto.getSum = function (dim
/*, stack */
) {
  var dimData = this._storage[dim];
  var sum = 0;

  if (dimData) {
    for (var i = 0, len = this.count(); i < len; i++) {
      var value = this.get(dim, i
      /*, stack */
      );

      if (!isNaN(value)) {
        sum += value;
      }
    }
  }

  return sum;
};
/**
 * Get median of data in one dimension
 * @param {string} dim
 */


listProto.getMedian = function (dim
/*, stack */
) {
  var dimDataArray = []; // map all data of one dimension

  this.each(dim, function (val, idx) {
    if (!isNaN(val)) {
      dimDataArray.push(val);
    }
  }); // TODO
  // Use quick select?
  // immutability & sort

  var sortedDimDataArray = [].concat(dimDataArray).sort(function (a, b) {
    return a - b;
  });
  var len = this.count(); // calculate median

  return len === 0 ? 0 : len % 2 === 1 ? sortedDimDataArray[(len - 1) / 2] : (sortedDimDataArray[len / 2] + sortedDimDataArray[len / 2 - 1]) / 2;
}; // /**
//  * Retreive the index with given value
//  * @param {string} dim Concrete dimension.
//  * @param {number} value
//  * @return {number}
//  */
// Currently incorrect: should return dataIndex but not rawIndex.
// Do not fix it until this method is to be used somewhere.
// FIXME Precision of float value
// listProto.indexOf = function (dim, value) {
//     var storage = this._storage;
//     var dimData = storage[dim];
//     var chunkSize = this._chunkSize;
//     if (dimData) {
//         for (var i = 0, len = this.count(); i < len; i++) {
//             var chunkIndex = Math.floor(i / chunkSize);
//             var chunkOffset = i % chunkSize;
//             if (dimData[chunkIndex][chunkOffset] === value) {
//                 return i;
//             }
//         }
//     }
//     return -1;
// };

/**
 * Only support the dimension which inverted index created.
 * Do not support other cases until required.
 * @param {string} concrete dim
 * @param {number|string} value
 * @return {number} rawIndex
 */


listProto.rawIndexOf = function (dim, value) {
  var invertedIndices = dim && this._invertedIndicesMap[dim];
  var rawIndex = invertedIndices[value];

  if (rawIndex == null || isNaN(rawIndex)) {
    return -1;
  }

  return rawIndex;
};
/**
 * Retreive the index with given name
 * @param {number} idx
 * @param {number} name
 * @return {number}
 */


listProto.indexOfName = function (name) {
  for (var i = 0, len = this.count(); i < len; i++) {
    if (this.getName(i) === name) {
      return i;
    }
  }

  return -1;
};
/**
 * Retreive the index with given raw data index
 * @param {number} idx
 * @param {number} name
 * @return {number}
 */


listProto.indexOfRawIndex = function (rawIndex) {
  if (!this._indices) {
    return rawIndex;
  }

  if (rawIndex >= this._rawCount || rawIndex < 0) {
    return -1;
  } // Indices are ascending


  var indices = this._indices; // If rawIndex === dataIndex

  var rawDataIndex = indices[rawIndex];

  if (rawDataIndex != null && rawDataIndex < this._count && rawDataIndex === rawIndex) {
    return rawIndex;
  }

  var left = 0;
  var right = this._count - 1;

  while (left <= right) {
    var mid = (left + right) / 2 | 0;

    if (indices[mid] < rawIndex) {
      left = mid + 1;
    } else if (indices[mid] > rawIndex) {
      right = mid - 1;
    } else {
      return mid;
    }
  }

  return -1;
};
/**
 * Retreive the index of nearest value
 * @param {string} dim
 * @param {number} value
 * @param {number} [maxDistance=Infinity]
 * @return {Array.<number>} Considere multiple points has the same value.
 */


listProto.indicesOfNearest = function (dim, value, maxDistance) {
  var storage = this._storage;
  var dimData = storage[dim];
  var nearestIndices = [];

  if (!dimData) {
    return nearestIndices;
  }

  if (maxDistance == null) {
    maxDistance = Infinity;
  }

  var minDist = Number.MAX_VALUE;
  var minDiff = -1;

  for (var i = 0, len = this.count(); i < len; i++) {
    var diff = value - this.get(dim, i
    /*, stack */
    );
    var dist = Math.abs(diff);

    if (diff <= maxDistance && dist <= minDist) {
      // For the case of two data are same on xAxis, which has sequence data.
      // Show the nearest index
      // https://github.com/ecomfe/echarts/issues/2869
      if (dist < minDist || diff >= 0 && minDiff < 0) {
        minDist = dist;
        minDiff = diff;
        nearestIndices.length = 0;
      }

      nearestIndices.push(i);
    }
  }

  return nearestIndices;
};
/**
 * Get raw data index
 * @param {number} idx
 * @return {number}
 */


listProto.getRawIndex = getRawIndexWithoutIndices;

function getRawIndexWithoutIndices(idx) {
  return idx;
}

function getRawIndexWithIndices(idx) {
  if (idx < this._count && idx >= 0) {
    return this._indices[idx];
  }

  return -1;
}
/**
 * Get raw data item
 * @param {number} idx
 * @return {number}
 */


listProto.getRawDataItem = function (idx) {
  if (!this._rawData.persistent) {
    var val = [];

    for (var i = 0; i < this.dimensions.length; i++) {
      var dim = this.dimensions[i];
      val.push(this.get(dim, idx));
    }

    return val;
  } else {
    return this._rawData.getItem(this.getRawIndex(idx));
  }
};
/**
 * @param {number} idx
 * @param {boolean} [notDefaultIdx=false]
 * @return {string}
 */


listProto.getName = function (idx) {
  var rawIndex = this.getRawIndex(idx);
  return this._nameList[rawIndex] || getRawValueFromStore(this, this._nameDimIdx, rawIndex) || '';
};
/**
 * @param {number} idx
 * @param {boolean} [notDefaultIdx=false]
 * @return {string}
 */


listProto.getId = function (idx) {
  return getId(this, this.getRawIndex(idx));
};

function getId(list, rawIndex) {
  var id = list._idList[rawIndex];

  if (id == null) {
    id = getRawValueFromStore(list, list._idDimIdx, rawIndex);
  }

  if (id == null) {
    // FIXME Check the usage in graph, should not use prefix.
    id = ID_PREFIX + rawIndex;
  }

  return id;
}

function normalizeDimensions(dimensions) {
  if (!zrUtil.isArray(dimensions)) {
    dimensions = [dimensions];
  }

  return dimensions;
}

function validateDimensions(list, dims) {
  for (var i = 0; i < dims.length; i++) {
    // stroage may be empty when no data, so use
    // dimensionInfos to check.
    if (!list._dimensionInfos[dims[i]]) {
      console.error('Unkown dimension ' + dims[i]);
    }
  }
}
/**
 * Data iteration
 * @param {string|Array.<string>}
 * @param {Function} cb
 * @param {*} [context=this]
 *
 * @example
 *  list.each('x', function (x, idx) {});
 *  list.each(['x', 'y'], function (x, y, idx) {});
 *  list.each(function (idx) {})
 */


listProto.each = function (dims, cb, context, contextCompat) {
  'use strict';

  if (!this._count) {
    return;
  }

  if (typeof dims === 'function') {
    contextCompat = context;
    context = cb;
    cb = dims;
    dims = [];
  } // contextCompat just for compat echarts3


  context = context || contextCompat || this;
  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);
  var dimSize = dims.length;

  for (var i = 0; i < this.count(); i++) {
    // Simple optimization
    switch (dimSize) {
      case 0:
        cb.call(context, i);
        break;

      case 1:
        cb.call(context, this.get(dims[0], i), i);
        break;

      case 2:
        cb.call(context, this.get(dims[0], i), this.get(dims[1], i), i);
        break;

      default:
        var k = 0;
        var value = [];

        for (; k < dimSize; k++) {
          value[k] = this.get(dims[k], i);
        } // Index


        value[k] = i;
        cb.apply(context, value);
    }
  }
};
/**
 * Data filter
 * @param {string|Array.<string>}
 * @param {Function} cb
 * @param {*} [context=this]
 */


listProto.filterSelf = function (dimensions, cb, context, contextCompat) {
  'use strict';

  if (!this._count) {
    return;
  }

  if (typeof dimensions === 'function') {
    contextCompat = context;
    context = cb;
    cb = dimensions;
    dimensions = [];
  } // contextCompat just for compat echarts3


  context = context || contextCompat || this;
  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);
  var count = this.count();
  var Ctor = getIndicesCtor(this);
  var newIndices = new Ctor(count);
  var value = [];
  var dimSize = dimensions.length;
  var offset = 0;
  var dim0 = dimensions[0];

  for (var i = 0; i < count; i++) {
    var keep;
    var rawIdx = this.getRawIndex(i); // Simple optimization

    if (dimSize === 0) {
      keep = cb.call(context, i);
    } else if (dimSize === 1) {
      var val = this._getFast(dim0, rawIdx);

      keep = cb.call(context, val, i);
    } else {
      for (var k = 0; k < dimSize; k++) {
        value[k] = this._getFast(dim0, rawIdx);
      }

      value[k] = i;
      keep = cb.apply(context, value);
    }

    if (keep) {
      newIndices[offset++] = rawIdx;
    }
  } // Set indices after filtered.


  if (offset < count) {
    this._indices = newIndices;
  }

  this._count = offset; // Reset data extent

  this._extent = {};
  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;
  return this;
};
/**
 * Select data in range. (For optimization of filter)
 * (Manually inline code, support 5 million data filtering in data zoom.)
 */


listProto.selectRange = function (range) {
  'use strict';

  if (!this._count) {
    return;
  }

  var dimensions = [];

  for (var dim in range) {
    if (range.hasOwnProperty(dim)) {
      dimensions.push(dim);
    }
  }

  var dimSize = dimensions.length;

  if (!dimSize) {
    return;
  }

  var originalCount = this.count();
  var Ctor = getIndicesCtor(this);
  var newIndices = new Ctor(originalCount);
  var offset = 0;
  var dim0 = dimensions[0];
  var min = range[dim0][0];
  var max = range[dim0][1];
  var quickFinished = false;

  if (!this._indices) {
    // Extreme optimization for common case. About 2x faster in chrome.
    var idx = 0;

    if (dimSize === 1) {
      var dimStorage = this._storage[dimensions[0]];

      for (var k = 0; k < this._chunkCount; k++) {
        var chunkStorage = dimStorage[k];
        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);

        for (var i = 0; i < len; i++) {
          var val = chunkStorage[i]; // NaN will not be filtered. Consider the case, in line chart, empty
          // value indicates the line should be broken. But for the case like
          // scatter plot, a data item with empty value will not be rendered,
          // but the axis extent may be effected if some other dim of the data
          // item has value. Fortunately it is not a significant negative effect.

          if (val >= min && val <= max || isNaN(val)) {
            newIndices[offset++] = idx;
          }

          idx++;
        }
      }

      quickFinished = true;
    } else if (dimSize === 2) {
      var dimStorage = this._storage[dim0];
      var dimStorage2 = this._storage[dimensions[1]];
      var min2 = range[dimensions[1]][0];
      var max2 = range[dimensions[1]][1];

      for (var k = 0; k < this._chunkCount; k++) {
        var chunkStorage = dimStorage[k];
        var chunkStorage2 = dimStorage2[k];
        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);

        for (var i = 0; i < len; i++) {
          var val = chunkStorage[i];
          var val2 = chunkStorage2[i]; // Do not filter NaN, see comment above.

          if ((val >= min && val <= max || isNaN(val)) && (val2 >= min2 && val2 <= max2 || isNaN(val2))) {
            newIndices[offset++] = idx;
          }

          idx++;
        }
      }

      quickFinished = true;
    }
  }

  if (!quickFinished) {
    if (dimSize === 1) {
      for (var i = 0; i < originalCount; i++) {
        var rawIndex = this.getRawIndex(i);

        var val = this._getFast(dim0, rawIndex); // Do not filter NaN, see comment above.


        if (val >= min && val <= max || isNaN(val)) {
          newIndices[offset++] = rawIndex;
        }
      }
    } else {
      for (var i = 0; i < originalCount; i++) {
        var keep = true;
        var rawIndex = this.getRawIndex(i);

        for (var k = 0; k < dimSize; k++) {
          var dimk = dimensions[k];

          var val = this._getFast(dim, rawIndex); // Do not filter NaN, see comment above.


          if (val < range[dimk][0] || val > range[dimk][1]) {
            keep = false;
          }
        }

        if (keep) {
          newIndices[offset++] = this.getRawIndex(i);
        }
      }
    }
  } // Set indices after filtered.


  if (offset < originalCount) {
    this._indices = newIndices;
  }

  this._count = offset; // Reset data extent

  this._extent = {};
  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;
  return this;
};
/**
 * Data mapping to a plain array
 * @param {string|Array.<string>} [dimensions]
 * @param {Function} cb
 * @param {*} [context=this]
 * @return {Array}
 */


listProto.mapArray = function (dimensions, cb, context, contextCompat) {
  'use strict';

  if (typeof dimensions === 'function') {
    contextCompat = context;
    context = cb;
    cb = dimensions;
    dimensions = [];
  } // contextCompat just for compat echarts3


  context = context || contextCompat || this;
  var result = [];
  this.each(dimensions, function () {
    result.push(cb && cb.apply(this, arguments));
  }, context);
  return result;
}; // Data in excludeDimensions is copied, otherwise transfered.


function cloneListForMapAndSample(original, excludeDimensions) {
  var allDimensions = original.dimensions;
  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked

  transferProperties(list, original);
  var storage = list._storage = {};
  var originalStorage = original._storage; // Init storage

  for (var i = 0; i < allDimensions.length; i++) {
    var dim = allDimensions[i];

    if (originalStorage[dim]) {
      // Notice that we do not reset invertedIndicesMap here, becuase
      // there is no scenario of mapping or sampling ordinal dimension.
      if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {
        storage[dim] = cloneDimStore(originalStorage[dim]);
        list._rawExtent[dim] = getInitialExtent();
        list._extent[dim] = null;
      } else {
        // Direct reference for other dimensions
        storage[dim] = originalStorage[dim];
      }
    }
  }

  return list;
}

function cloneDimStore(originalDimStore) {
  var newDimStore = new Array(originalDimStore.length);

  for (var j = 0; j < originalDimStore.length; j++) {
    newDimStore[j] = cloneChunk(originalDimStore[j]);
  }

  return newDimStore;
}

function getInitialExtent() {
  return [Infinity, -Infinity];
}
/**
 * Data mapping to a new List with given dimensions
 * @param {string|Array.<string>} dimensions
 * @param {Function} cb
 * @param {*} [context=this]
 * @return {Array}
 */


listProto.map = function (dimensions, cb, context, contextCompat) {
  'use strict'; // contextCompat just for compat echarts3

  context = context || contextCompat || this;
  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);
  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.
  // So we can reference to the same value

  list._indices = this._indices;
  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;
  var storage = list._storage;
  var tmpRetValue = [];
  var chunkSize = this._chunkSize;
  var dimSize = dimensions.length;
  var dataCount = this.count();
  var values = [];
  var rawExtent = list._rawExtent;

  for (var dataIndex = 0; dataIndex < dataCount; dataIndex++) {
    for (var dimIndex = 0; dimIndex < dimSize; dimIndex++) {
      values[dimIndex] = this.get(dimensions[dimIndex], dataIndex
      /*, stack */
      );
    }

    values[dimSize] = dataIndex;
    var retValue = cb && cb.apply(context, values);

    if (retValue != null) {
      // a number or string (in oridinal dimension)?
      if (typeof retValue !== 'object') {
        tmpRetValue[0] = retValue;
        retValue = tmpRetValue;
      }

      var rawIndex = this.getRawIndex(dataIndex);
      var chunkIndex = Math.floor(rawIndex / chunkSize);
      var chunkOffset = rawIndex % chunkSize;

      for (var i = 0; i < retValue.length; i++) {
        var dim = dimensions[i];
        var val = retValue[i];
        var rawExtentOnDim = rawExtent[dim];
        var dimStore = storage[dim];

        if (dimStore) {
          dimStore[chunkIndex][chunkOffset] = val;
        }

        if (val < rawExtentOnDim[0]) {
          rawExtentOnDim[0] = val;
        }

        if (val > rawExtentOnDim[1]) {
          rawExtentOnDim[1] = val;
        }
      }
    }
  }

  return list;
};
/**
 * Large data down sampling on given dimension
 * @param {string} dimension
 * @param {number} rate
 * @param {Function} sampleValue
 * @param {Function} sampleIndex Sample index for name and id
 */


listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {
  var list = cloneListForMapAndSample(this, [dimension]);
  var targetStorage = list._storage;
  var frameValues = [];
  var frameSize = Math.floor(1 / rate);
  var dimStore = targetStorage[dimension];
  var len = this.count();
  var chunkSize = this._chunkSize;
  var rawExtentOnDim = list._rawExtent[dimension];
  var newIndices = new (getIndicesCtor(this))(len);
  var offset = 0;

  for (var i = 0; i < len; i += frameSize) {
    // Last frame
    if (frameSize > len - i) {
      frameSize = len - i;
      frameValues.length = frameSize;
    }

    for (var k = 0; k < frameSize; k++) {
      var dataIdx = this.getRawIndex(i + k);
      var originalChunkIndex = Math.floor(dataIdx / chunkSize);
      var originalChunkOffset = dataIdx % chunkSize;
      frameValues[k] = dimStore[originalChunkIndex][originalChunkOffset];
    }

    var value = sampleValue(frameValues);
    var sampleFrameIdx = this.getRawIndex(Math.min(i + sampleIndex(frameValues, value) || 0, len - 1));
    var sampleChunkIndex = Math.floor(sampleFrameIdx / chunkSize);
    var sampleChunkOffset = sampleFrameIdx % chunkSize; // Only write value on the filtered data

    dimStore[sampleChunkIndex][sampleChunkOffset] = value;

    if (value < rawExtentOnDim[0]) {
      rawExtentOnDim[0] = value;
    }

    if (value > rawExtentOnDim[1]) {
      rawExtentOnDim[1] = value;
    }

    newIndices[offset++] = sampleFrameIdx;
  }

  list._count = offset;
  list._indices = newIndices;
  list.getRawIndex = getRawIndexWithIndices;
  return list;
};
/**
 * Get model of one data item.
 *
 * @param {number} idx
 */
// FIXME Model proxy ?


listProto.getItemModel = function (idx) {
  var hostModel = this.hostModel;
  return new Model(this.getRawDataItem(idx), hostModel, hostModel && hostModel.ecModel);
};
/**
 * Create a data differ
 * @param {module:echarts/data/List} otherList
 * @return {module:echarts/data/DataDiffer}
 */


listProto.diff = function (otherList) {
  var thisList = this;
  return new DataDiffer(otherList ? otherList.getIndices() : [], this.getIndices(), function (idx) {
    return getId(otherList, idx);
  }, function (idx) {
    return getId(thisList, idx);
  });
};
/**
 * Get visual property.
 * @param {string} key
 */


listProto.getVisual = function (key) {
  var visual = this._visual;
  return visual && visual[key];
};
/**
 * Set visual property
 * @param {string|Object} key
 * @param {*} [value]
 *
 * @example
 *  setVisual('color', color);
 *  setVisual({
 *      'color': color
 *  });
 */


listProto.setVisual = function (key, val) {
  if (isObject(key)) {
    for (var name in key) {
      if (key.hasOwnProperty(name)) {
        this.setVisual(name, key[name]);
      }
    }

    return;
  }

  this._visual = this._visual || {};
  this._visual[key] = val;
};
/**
 * Set layout property.
 * @param {string|Object} key
 * @param {*} [val]
 */


listProto.setLayout = function (key, val) {
  if (isObject(key)) {
    for (var name in key) {
      if (key.hasOwnProperty(name)) {
        this.setLayout(name, key[name]);
      }
    }

    return;
  }

  this._layout[key] = val;
};
/**
 * Get layout property.
 * @param  {string} key.
 * @return {*}
 */


listProto.getLayout = function (key) {
  return this._layout[key];
};
/**
 * Get layout of single data item
 * @param {number} idx
 */


listProto.getItemLayout = function (idx) {
  return this._itemLayouts[idx];
};
/**
 * Set layout of single data item
 * @param {number} idx
 * @param {Object} layout
 * @param {boolean=} [merge=false]
 */


listProto.setItemLayout = function (idx, layout, merge) {
  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;
};
/**
 * Clear all layout of single data item
 */


listProto.clearItemLayouts = function () {
  this._itemLayouts.length = 0;
};
/**
 * Get visual property of single data item
 * @param {number} idx
 * @param {string} key
 * @param {boolean} [ignoreParent=false]
 */


listProto.getItemVisual = function (idx, key, ignoreParent) {
  var itemVisual = this._itemVisuals[idx];
  var val = itemVisual && itemVisual[key];

  if (val == null && !ignoreParent) {
    // Use global visual property
    return this.getVisual(key);
  }

  return val;
};
/**
 * Set visual property of single data item
 *
 * @param {number} idx
 * @param {string|Object} key
 * @param {*} [value]
 *
 * @example
 *  setItemVisual(0, 'color', color);
 *  setItemVisual(0, {
 *      'color': color
 *  });
 */


listProto.setItemVisual = function (idx, key, value) {
  var itemVisual = this._itemVisuals[idx] || {};
  var hasItemVisual = this.hasItemVisual;
  this._itemVisuals[idx] = itemVisual;

  if (isObject(key)) {
    for (var name in key) {
      if (key.hasOwnProperty(name)) {
        itemVisual[name] = key[name];
        hasItemVisual[name] = true;
      }
    }

    return;
  }

  itemVisual[key] = value;
  hasItemVisual[key] = true;
};
/**
 * Clear itemVisuals and list visual.
 */


listProto.clearAllVisual = function () {
  this._visual = {};
  this._itemVisuals = [];
  this.hasItemVisual = {};
};

var setItemDataAndSeriesIndex = function (child) {
  child.seriesIndex = this.seriesIndex;
  child.dataIndex = this.dataIndex;
  child.dataType = this.dataType;
};
/**
 * Set graphic element relative to data. It can be set as null
 * @param {number} idx
 * @param {module:zrender/Element} [el]
 */


listProto.setItemGraphicEl = function (idx, el) {
  var hostModel = this.hostModel;

  if (el) {
    // Add data index and series index for indexing the data by element
    // Useful in tooltip
    el.dataIndex = idx;
    el.dataType = this.dataType;
    el.seriesIndex = hostModel && hostModel.seriesIndex;

    if (el.type === 'group') {
      el.traverse(setItemDataAndSeriesIndex, el);
    }
  }

  this._graphicEls[idx] = el;
};
/**
 * @param {number} idx
 * @return {module:zrender/Element}
 */


listProto.getItemGraphicEl = function (idx) {
  return this._graphicEls[idx];
};
/**
 * @param {Function} cb
 * @param {*} context
 */


listProto.eachItemGraphicEl = function (cb, context) {
  zrUtil.each(this._graphicEls, function (el, idx) {
    if (el) {
      cb && cb.call(context, el, idx);
    }
  });
};
/**
 * Shallow clone a new list except visual and layout properties, and graph elements.
 * New list only change the indices.
 */


listProto.cloneShallow = function (list) {
  if (!list) {
    var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);
    list = new List(dimensionInfoList, this.hostModel);
  } // FIXME


  list._storage = this._storage;
  transferProperties(list, this); // Clone will not change the data extent and indices

  if (this._indices) {
    var Ctor = this._indices.constructor;
    list._indices = new Ctor(this._indices);
  } else {
    list._indices = null;
  }

  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;
  return list;
};
/**
 * Wrap some method to add more feature
 * @param {string} methodName
 * @param {Function} injectFunction
 */


listProto.wrapMethod = function (methodName, injectFunction) {
  var originalMethod = this[methodName];

  if (typeof originalMethod !== 'function') {
    return;
  }

  this.__wrappedMethods = this.__wrappedMethods || [];

  this.__wrappedMethods.push(methodName);

  this[methodName] = function () {
    var res = originalMethod.apply(this, arguments);
    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));
  };
}; // Methods that create a new list based on this list should be listed here.
// Notice that those method should `RETURN` the new list.


listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.

listProto.CHANGABLE_METHODS = ['filterSelf', 'selectRange'];
var _default = List;
module.exports = _default;

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

var _util = __webpack_require__(1);

var each = _util.each;
var createHashMap = _util.createHashMap;
var assert = _util.assert;

var _config = __webpack_require__(16);

var __DEV__ = _config.__DEV__;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var OTHER_DIMENSIONS = createHashMap(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']);

function summarizeDimensions(data) {
  var summary = {};
  var encode = summary.encode = {};
  var notExtraCoordDimMap = createHashMap();
  var defaultedLabel = [];
  var defaultedTooltip = [];
  each(data.dimensions, function (dimName) {
    var dimItem = data.getDimensionInfo(dimName);
    var coordDim = dimItem.coordDim;

    if (coordDim) {
      var coordDimArr = encode[coordDim];

      if (!encode.hasOwnProperty(coordDim)) {
        coordDimArr = encode[coordDim] = [];
      }

      coordDimArr[dimItem.coordDimIndex] = dimName;

      if (!dimItem.isExtraCoord) {
        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,
        // because when dataset is used, it is hard to guess which dimension
        // can be value dimension. If both show x, y on label is not look good,
        // and conventionally y axis is focused more.

        if (mayLabelDimType(dimItem.type)) {
          defaultedLabel[0] = dimName;
        }
      }

      if (dimItem.defaultTooltip) {
        defaultedTooltip.push(dimName);
      }
    }

    OTHER_DIMENSIONS.each(function (v, otherDim) {
      var otherDimArr = encode[otherDim];

      if (!encode.hasOwnProperty(otherDim)) {
        otherDimArr = encode[otherDim] = [];
      }

      var dimIndex = dimItem.otherDims[otherDim];

      if (dimIndex != null && dimIndex !== false) {
        otherDimArr[dimIndex] = dimItem.name;
      }
    });
  });
  var dataDimsOnCoord = [];
  var encodeFirstDimNotExtra = {};
  notExtraCoordDimMap.each(function (v, coordDim) {
    var dimArr = encode[coordDim]; // ??? FIXME extra coord should not be set in dataDimsOnCoord.
    // But should fix the case that radar axes: simplify the logic
    // of `completeDimension`, remove `extraPrefix`.

    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data
    // dim canot on more than one coordDim.

    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);
  });
  summary.dataDimsOnCoord = dataDimsOnCoord;
  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;
  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set
  // in this way. Use label.formatter instead. May be remove this approach someday.

  if (encodeLabel && encodeLabel.length) {
    defaultedLabel = encodeLabel.slice();
  }

  var encodeTooltip = encode.tooltip;

  if (encodeTooltip && encodeTooltip.length) {
    defaultedTooltip = encodeTooltip.slice();
  } else if (!defaultedTooltip.length) {
    defaultedTooltip = defaultedLabel.slice();
  }

  encode.defaultedLabel = defaultedLabel;
  encode.defaultedTooltip = defaultedTooltip;
  return summary;
}

function getDimensionTypeByAxis(axisType) {
  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';
}

function mayLabelDimType(dimType) {
  // In most cases, ordinal and time do not suitable for label.
  // Ordinal info can be displayed on axis. Time is too long.
  return !(dimType === 'ordinal' || dimType === 'time');
} // function findTheLastDimMayLabel(data) {
//     // Get last value dim
//     var dimensions = data.dimensions.slice();
//     var valueType;
//     var valueDim;
//     while (dimensions.length && (
//         valueDim = dimensions.pop(),
//         valueType = data.getDimensionInfo(valueDim).type,
//         valueType === 'ordinal' || valueType === 'time'
//     )) {} // jshint ignore:line
//     return valueDim;
// }


exports.OTHER_DIMENSIONS = OTHER_DIMENSIONS;
exports.summarizeDimensions = summarizeDimensions;
exports.getDimensionTypeByAxis = getDimensionTypeByAxis;

/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

var completeDimensions = __webpack_require__(195);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * Substitute `completeDimensions`.
 * `completeDimensions` is to be deprecated.
 */

/**
 * @param {module:echarts/data/Source|module:echarts/data/List} source or data.
 * @param {Object|Array} [opt]
 * @param {Array.<string|Object>} [opt.coordDimensions=[]]
 * @param {number} [opt.dimensionsCount]
 * @param {string} [opt.generateCoord]
 * @param {string} [opt.generateCoordCount]
 * @param {Array.<string|Object>} [opt.dimensionsDefine=source.dimensionsDefine] Overwrite source define.
 * @param {Object|HashMap} [opt.encodeDefine=source.encodeDefine] Overwrite source define.
 * @return {Array.<Object>} dimensionsInfo
 */
function _default(source, opt) {
  opt = opt || {};
  return completeDimensions(opt.coordDimensions || [], source, {
    dimsDef: opt.dimensionsDefine || source.dimensionsDefine,
    encodeDef: opt.encodeDefine || source.encodeDefine,
    dimCount: opt.dimensionsCount,
    generateCoord: opt.generateCoord,
    generateCoordCount: opt.generateCoordCount
  });
}

module.exports = _default;

/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

var numberUtil = __webpack_require__(14);

var formatUtil = __webpack_require__(33);

var Scale = __webpack_require__(88);

var helper = __webpack_require__(197);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * Interval scale
 * @module echarts/scale/Interval
 */
var roundNumber = numberUtil.round;
/**
 * @alias module:echarts/coord/scale/Interval
 * @constructor
 */

var IntervalScale = Scale.extend({
  type: 'interval',
  _interval: 0,
  _intervalPrecision: 2,
  setExtent: function (start, end) {
    var thisExtent = this._extent; //start,end may be a Number like '25',so...

    if (!isNaN(start)) {
      thisExtent[0] = parseFloat(start);
    }

    if (!isNaN(end)) {
      thisExtent[1] = parseFloat(end);
    }
  },
  unionExtent: function (other) {
    var extent = this._extent;
    other[0] < extent[0] && (extent[0] = other[0]);
    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes

    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);
  },

  /**
   * Get interval
   */
  getInterval: function () {
    return this._interval;
  },

  /**
   * Set interval
   */
  setInterval: function (interval) {
    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent
    // We assume user wan't to set both interval, min, max to get a better result

    this._niceExtent = this._extent.slice();
    this._intervalPrecision = helper.getIntervalPrecision(interval);
  },

  /**
   * @return {Array.<number>}
   */
  getTicks: function () {
    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);
  },

  /**
   * @param {number} data
   * @param {Object} [opt]
   * @param {number|string} [opt.precision] If 'auto', use nice presision.
   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.
   * @return {string}
   */
  getLabel: function (data, opt) {
    if (data == null) {
      return '';
    }

    var precision = opt && opt.precision;

    if (precision == null) {
      precision = numberUtil.getPrecisionSafe(data) || 0;
    } else if (precision === 'auto') {
      // Should be more precise then tick.
      precision = this._intervalPrecision;
    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.
    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.


    data = roundNumber(data, precision, true);
    return formatUtil.addCommas(data);
  },

  /**
   * Update interval and extent of intervals for nice ticks
   *
   * @param {number} [splitNumber = 5] Desired number of ticks
   * @param {number} [minInterval]
   * @param {number} [maxInterval]
   */
  niceTicks: function (splitNumber, minInterval, maxInterval) {
    splitNumber = splitNumber || 5;
    var extent = this._extent;
    var span = extent[1] - extent[0];

    if (!isFinite(span)) {
      return;
    } // User may set axis min 0 and data are all negative
    // FIXME If it needs to reverse ?


    if (span < 0) {
      span = -span;
      extent.reverse();
    }

    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);
    this._intervalPrecision = result.intervalPrecision;
    this._interval = result.interval;
    this._niceExtent = result.niceTickExtent;
  },

  /**
   * Nice extent.
   * @param {Object} opt
   * @param {number} [opt.splitNumber = 5] Given approx tick number
   * @param {boolean} [opt.fixMin=false]
   * @param {boolean} [opt.fixMax=false]
   * @param {boolean} [opt.minInterval]
   * @param {boolean} [opt.maxInterval]
   */
  niceExtent: function (opt) {
    var extent = this._extent; // If extent start and end are same, expand them

    if (extent[0] === extent[1]) {
      if (extent[0] !== 0) {
        // Expand extent
        var expandSize = extent[0]; // In the fowllowing case
        //      Axis has been fixed max 100
        //      Plus data are all 100 and axis extent are [100, 100].
        // Extend to the both side will cause expanded max is larger than fixed max.
        // So only expand to the smaller side.

        if (!opt.fixMax) {
          extent[1] += expandSize / 2;
          extent[0] -= expandSize / 2;
        } else {
          extent[0] -= expandSize / 2;
        }
      } else {
        extent[1] = 1;
      }
    }

    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]

    if (!isFinite(span)) {
      extent[0] = 0;
      extent[1] = 1;
    }

    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;

    var interval = this._interval;

    if (!opt.fixMin) {
      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);
    }

    if (!opt.fixMax) {
      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);
    }
  }
});
/**
 * @return {module:echarts/scale/Time}
 */

IntervalScale.create = function () {
  return new IntervalScale();
};

var _default = IntervalScale;
module.exports = _default;

/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(4);
var document = __webpack_require__(3).document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(3);
var core = __webpack_require__(18);
var LIBRARY = __webpack_require__(52);
var wksExt = __webpack_require__(201);
var defineProperty = __webpack_require__(8).f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};


/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(90)('keys');
var uid = __webpack_require__(56);
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),
/* 128 */
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__(3).document;
module.exports = document && document.documentElement;


/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.2.1 Object.assign(target, source, ...)
var getKeys = __webpack_require__(44);
var gOPS = __webpack_require__(92);
var pIE = __webpack_require__(79);
var toObject = __webpack_require__(12);
var IObject = __webpack_require__(78);
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || __webpack_require__(5)(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
  } return T;
} : $assign;


/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = __webpack_require__(4);
var anObject = __webpack_require__(2);
var check = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = __webpack_require__(31)(Function.call, __webpack_require__(25).f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};


/***/ }),
/* 132 */
/***/ (function(module, exports) {

// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function (fn, args, that) {
  var un = that === undefined;
  switch (args.length) {
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return fn.apply(that, args);
};


/***/ }),
/* 133 */
/***/ (function(module, exports) {

module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
  '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';


/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(4);
var setPrototypeOf = __webpack_require__(131).set;
module.exports = function (that, target, C) {
  var S = target.constructor;
  var P;
  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {
    setPrototypeOf(that, P);
  } return that;
};


/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toInteger = __webpack_require__(39);
var defined = __webpack_require__(38);

module.exports = function repeat(count) {
  var str = String(defined(this));
  var res = '';
  var n = toInteger(count);
  if (n < 0 || n == Infinity) throw RangeError("Count can't be negative");
  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;
  return res;
};


/***/ }),
/* 136 */
/***/ (function(module, exports) {

// 20.2.2.28 Math.sign(x)
module.exports = Math.sign || function sign(x) {
  // eslint-disable-next-line no-self-compare
  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
};


/***/ }),
/* 137 */
/***/ (function(module, exports) {

// 20.2.2.14 Math.expm1(x)
var $expm1 = Math.expm1;
module.exports = (!$expm1
  // Old FF bug
  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
  // Tor Browser bug
  || $expm1(-2e-17) != -2e-17
) ? function expm1(x) {
  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
} : $expm1;


/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(39);
var defined = __webpack_require__(38);
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

// helper for String#{startsWith, endsWith, includes}
var isRegExp = __webpack_require__(96);
var defined = __webpack_require__(38);

module.exports = function (that, searchString, NAME) {
  if (isRegExp(searchString)) throw TypeError('String#' + NAME + " doesn't accept regex!");
  return String(defined(that));
};


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

var MATCH = __webpack_require__(6)('match');
module.exports = function (KEY) {
  var re = /./;
  try {
    '/./'[KEY](re);
  } catch (e) {
    try {
      re[MATCH] = false;
      return !'/./'[KEY](re);
    } catch (f) { /* empty */ }
  } return true;
};


/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

// check on default Array iterator
var Iterators = __webpack_require__(60);
var ITERATOR = __webpack_require__(6)('iterator');
var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};


/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $defineProperty = __webpack_require__(8);
var createDesc = __webpack_require__(50);

module.exports = function (object, index, value) {
  if (index in object) $defineProperty.f(object, index, createDesc(0, value));
  else object[index] = value;
};


/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
var speciesConstructor = __webpack_require__(593);

module.exports = function (original, length) {
  return new (speciesConstructor(original))(length);
};


/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)

var toObject = __webpack_require__(12);
var toAbsoluteIndex = __webpack_require__(57);
var toLength = __webpack_require__(10);
module.exports = function fill(value /* , start = 0, end = @length */) {
  var O = toObject(this);
  var length = toLength(O.length);
  var aLen = arguments.length;
  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);
  var end = aLen > 2 ? arguments[2] : undefined;
  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
  while (endPos > index) O[index++] = value;
  return O;
};


/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__(53);
var step = __webpack_require__(146);
var Iterators = __webpack_require__(60);
var toIObject = __webpack_require__(19);

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__(94)(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),
/* 146 */
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__(31);
var invoke = __webpack_require__(132);
var html = __webpack_require__(129);
var cel = __webpack_require__(125);
var global = __webpack_require__(3);
var process = global.process;
var setTask = global.setImmediate;
var clearTask = global.clearImmediate;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;
var run = function () {
  var id = +this;
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function (event) {
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!setTask || !clearTask) {
  setTask = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (__webpack_require__(34)(process) == 'process') {
    defer = function (id) {
      process.nextTick(ctx(run, id, 1));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
    defer = function (id) {
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in cel('script')) {
    defer = function (id) {
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set: setTask,
  clear: clearTask
};


/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(3);
var macrotask = __webpack_require__(147).set;
var Observer = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var isNode = __webpack_require__(34)(process) == 'process';

module.exports = function () {
  var head, last, notify;

  var flush = function () {
    var parent, fn;
    if (isNode && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (e) {
        if (head) notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (isNode) {
    notify = function () {
      process.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    var promise = Promise.resolve(undefined);
    notify = function () {
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }

  return function (fn) {
    var task = { fn: fn, next: undefined };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify();
    } last = task;
  };
};


/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 25.4.1.5 NewPromiseCapability(C)
var aFunction = __webpack_require__(15);

function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
}

module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(3);
var DESCRIPTORS = __webpack_require__(9);
var LIBRARY = __webpack_require__(52);
var $typed = __webpack_require__(103);
var hide = __webpack_require__(23);
var redefineAll = __webpack_require__(63);
var fails = __webpack_require__(5);
var anInstance = __webpack_require__(62);
var toInteger = __webpack_require__(39);
var toLength = __webpack_require__(10);
var toIndex = __webpack_require__(223);
var gOPN = __webpack_require__(58).f;
var dP = __webpack_require__(8).f;
var arrayFill = __webpack_require__(144);
var setToStringTag = __webpack_require__(69);
var ARRAY_BUFFER = 'ArrayBuffer';
var DATA_VIEW = 'DataView';
var PROTOTYPE = 'prototype';
var WRONG_LENGTH = 'Wrong length!';
var WRONG_INDEX = 'Wrong index!';
var $ArrayBuffer = global[ARRAY_BUFFER];
var $DataView = global[DATA_VIEW];
var Math = global.Math;
var RangeError = global.RangeError;
// eslint-disable-next-line no-shadow-restricted-names
var Infinity = global.Infinity;
var BaseBuffer = $ArrayBuffer;
var abs = Math.abs;
var pow = Math.pow;
var floor = Math.floor;
var log = Math.log;
var LN2 = Math.LN2;
var BUFFER = 'buffer';
var BYTE_LENGTH = 'byteLength';
var BYTE_OFFSET = 'byteOffset';
var $BUFFER = DESCRIPTORS ? '_b' : BUFFER;
var $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;
var $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;

// IEEE754 conversions based on https://github.com/feross/ieee754
function packIEEE754(value, mLen, nBytes) {
  var buffer = new Array(nBytes);
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;
  var i = 0;
  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
  var e, m, c;
  value = abs(value);
  // eslint-disable-next-line no-self-compare
  if (value != value || value === Infinity) {
    // eslint-disable-next-line no-self-compare
    m = value != value ? 1 : 0;
    e = eMax;
  } else {
    e = floor(log(value) / LN2);
    if (value * (c = pow(2, -e)) < 1) {
      e--;
      c *= 2;
    }
    if (e + eBias >= 1) {
      value += rt / c;
    } else {
      value += rt * pow(2, 1 - eBias);
    }
    if (value * c >= 2) {
      e++;
      c /= 2;
    }
    if (e + eBias >= eMax) {
      m = 0;
      e = eMax;
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * pow(2, mLen);
      e = e + eBias;
    } else {
      m = value * pow(2, eBias - 1) * pow(2, mLen);
      e = 0;
    }
  }
  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
  e = e << mLen | m;
  eLen += mLen;
  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
  buffer[--i] |= s * 128;
  return buffer;
}
function unpackIEEE754(buffer, mLen, nBytes) {
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var nBits = eLen - 7;
  var i = nBytes - 1;
  var s = buffer[i--];
  var e = s & 127;
  var m;
  s >>= 7;
  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
  m = e & (1 << -nBits) - 1;
  e >>= -nBits;
  nBits += mLen;
  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
  if (e === 0) {
    e = 1 - eBias;
  } else if (e === eMax) {
    return m ? NaN : s ? -Infinity : Infinity;
  } else {
    m = m + pow(2, mLen);
    e = e - eBias;
  } return (s ? -1 : 1) * m * pow(2, e - mLen);
}

function unpackI32(bytes) {
  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
}
function packI8(it) {
  return [it & 0xff];
}
function packI16(it) {
  return [it & 0xff, it >> 8 & 0xff];
}
function packI32(it) {
  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
}
function packF64(it) {
  return packIEEE754(it, 52, 8);
}
function packF32(it) {
  return packIEEE754(it, 23, 4);
}

function addGetter(C, key, internal) {
  dP(C[PROTOTYPE], key, { get: function () { return this[internal]; } });
}

function get(view, bytes, index, isLittleEndian) {
  var numIndex = +index;
  var intIndex = toIndex(numIndex);
  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
  var store = view[$BUFFER]._b;
  var start = intIndex + view[$OFFSET];
  var pack = store.slice(start, start + bytes);
  return isLittleEndian ? pack : pack.reverse();
}
function set(view, bytes, index, conversion, value, isLittleEndian) {
  var numIndex = +index;
  var intIndex = toIndex(numIndex);
  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
  var store = view[$BUFFER]._b;
  var start = intIndex + view[$OFFSET];
  var pack = conversion(+value);
  for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
}

if (!$typed.ABV) {
  $ArrayBuffer = function ArrayBuffer(length) {
    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);
    var byteLength = toIndex(length);
    this._b = arrayFill.call(new Array(byteLength), 0);
    this[$LENGTH] = byteLength;
  };

  $DataView = function DataView(buffer, byteOffset, byteLength) {
    anInstance(this, $DataView, DATA_VIEW);
    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
    var bufferLength = buffer[$LENGTH];
    var offset = toInteger(byteOffset);
    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');
    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);
    this[$BUFFER] = buffer;
    this[$OFFSET] = offset;
    this[$LENGTH] = byteLength;
  };

  if (DESCRIPTORS) {
    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
    addGetter($DataView, BUFFER, '_b');
    addGetter($DataView, BYTE_LENGTH, '_l');
    addGetter($DataView, BYTE_OFFSET, '_o');
  }

  redefineAll($DataView[PROTOTYPE], {
    getInt8: function getInt8(byteOffset) {
      return get(this, 1, byteOffset)[0] << 24 >> 24;
    },
    getUint8: function getUint8(byteOffset) {
      return get(this, 1, byteOffset)[0];
    },
    getInt16: function getInt16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments[1]);
      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
    },
    getUint16: function getUint16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments[1]);
      return bytes[1] << 8 | bytes[0];
    },
    getInt32: function getInt32(byteOffset /* , littleEndian */) {
      return unpackI32(get(this, 4, byteOffset, arguments[1]));
    },
    getUint32: function getUint32(byteOffset /* , littleEndian */) {
      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
    },
    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
    },
    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
    },
    setInt8: function setInt8(byteOffset, value) {
      set(this, 1, byteOffset, packI8, value);
    },
    setUint8: function setUint8(byteOffset, value) {
      set(this, 1, byteOffset, packI8, value);
    },
    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packI16, value, arguments[2]);
    },
    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packI16, value, arguments[2]);
    },
    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packI32, value, arguments[2]);
    },
    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packI32, value, arguments[2]);
    },
    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packF32, value, arguments[2]);
    },
    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {
      set(this, 8, byteOffset, packF64, value, arguments[2]);
    }
  });
} else {
  if (!fails(function () {
    $ArrayBuffer(1);
  }) || !fails(function () {
    new $ArrayBuffer(-1); // eslint-disable-line no-new
  }) || fails(function () {
    new $ArrayBuffer(); // eslint-disable-line no-new
    new $ArrayBuffer(1.5); // eslint-disable-line no-new
    new $ArrayBuffer(NaN); // eslint-disable-line no-new
    return $ArrayBuffer.name != ARRAY_BUFFER;
  })) {
    $ArrayBuffer = function ArrayBuffer(length) {
      anInstance(this, $ArrayBuffer);
      return new BaseBuffer(toIndex(length));
    };
    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {
      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);
    }
    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;
  }
  // iOS Safari 7.x bug
  var view = new $DataView(new $ArrayBuffer(2));
  var $setInt8 = $DataView[PROTOTYPE].setInt8;
  view.setInt8(0, 2147483648);
  view.setInt8(1, 2147483649);
  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {
    setInt8: function setInt8(byteOffset, value) {
      $setInt8.call(this, byteOffset, value << 24 >> 24);
    },
    setUint8: function setUint8(byteOffset, value) {
      $setInt8.call(this, byteOffset, value << 24 >> 24);
    }
  }, true);
}
setToStringTag($ArrayBuffer, ARRAY_BUFFER);
setToStringTag($DataView, DATA_VIEW);
hide($DataView[PROTOTYPE], $typed.VIEW, true);
exports[ARRAY_BUFFER] = $ArrayBuffer;
exports[DATA_VIEW] = $DataView;


/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

// all object keys, includes non-enumerable and symbols
var gOPN = __webpack_require__(58);
var gOPS = __webpack_require__(92);
var anObject = __webpack_require__(2);
var Reflect = __webpack_require__(3).Reflect;
module.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {
  var keys = gOPN.f(anObject(it));
  var getSymbols = gOPS.f;
  return getSymbols ? keys.concat(getSymbols(it)) : keys;
};


/***/ }),
/* 152 */
/***/ (function(module, exports) {

module.exports = function (regExp, replace) {
  var replacer = replace === Object(replace) ? function (part) {
    return replace[part];
  } : replace;
  return function (it) {
    return String(it).replace(regExp, replacer);
  };
};


/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

var utils = __webpack_require__(32);
var normalizeHeaderName = __webpack_require__(716);

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __webpack_require__(235);
  } else if (typeof process !== 'undefined') {
    // For node use HTTP adapter
    adapter = __webpack_require__(235);
  }
  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    /*eslint no-param-reassign:0*/
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) { /* Ignore */ }
    }
    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(28)))

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};


/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

var utils = __webpack_require__(29);
var settle = __webpack_require__(261);
var buildURL = __webpack_require__(263);
var parseHeaders = __webpack_require__(264);
var isURLSameOrigin = __webpack_require__(265);
var createError = __webpack_require__(156);
var btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || __webpack_require__(266);

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();
    var loadEvent = 'onreadystatechange';
    var xDomain = false;

    // For IE 8/9 CORS support
    // Only supports POST and GET calls and doesn't returns the response headers.
    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.
    if (process.env.NODE_ENV !== 'test' &&
        typeof window !== 'undefined' &&
        window.XDomainRequest && !('withCredentials' in request) &&
        !isURLSameOrigin(config.url)) {
      request = new window.XDomainRequest();
      loadEvent = 'onload';
      xDomain = true;
      request.onprogress = function handleProgress() {};
      request.ontimeout = function handleTimeout() {};
    }

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password || '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    // Listen for ready state
    request[loadEvent] = function handleLoad() {
      if (!request || (request.readyState !== 4 && !xDomain)) {
        return;
      }

      // The request errored out and we didn't get a response, this will be
      // handled by onerror instead
      // With one exception: request that using file: protocol, most browsers
      // will return status as 0 even though it's a successful request
      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }

      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,
        // IE sends 1223 instead of 204 (https://github.com/mzabriskie/axios/issues/201)
        status: request.status === 1223 ? 204 : request.status,
        statusText: request.status === 1223 ? 'No Content' : request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED'));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      var cookies = __webpack_require__(267);

      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?
          cookies.read(config.xsrfCookieName) :
          undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (config.withCredentials) {
      request.withCredentials = true;
    }

    // Add responseType to request if needed
    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        if (request.responseType !== 'json') {
          throw e;
        }
      }
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (requestData === undefined) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(28)))

/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var enhanceError = __webpack_require__(262);

/**
 * Create an Error with the specified message, config, error code, and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 @ @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
module.exports = function createError(message, config, code, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, response);
};


/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};


/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;


/***/ }),
/* 159 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (immutable) */ __webpack_exports__["createVM"] = createVM;
/* harmony export (immutable) */ __webpack_exports__["show"] = show;
/* harmony export (immutable) */ __webpack_exports__["hide"] = hide;
throw new Error("Cannot find module \"../../components/alert\"");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__libs_plugin_helper__ = __webpack_require__(81);



function createVM (Vue) {
  if (typeof document === 'undefined') {
    console.error('[VUX] Alert plugin cannot be used in ssr.')
    return
  }
  const Alert = Vue.extend(__WEBPACK_IMPORTED_MODULE_0__components_alert___default.a)
  const $vm = new Alert({
    el: document.createElement('div')
  })
  document.body.appendChild($vm.$el)
  return $vm
}

function show ($vm, options) {
  if (typeof options === 'object') {
    Object(__WEBPACK_IMPORTED_MODULE_1__libs_plugin_helper__["mergeOptions"])($vm, options)
  } else if (typeof options === 'string') {
    $vm.content = options
  }
  this.watcher && this.watcher()
  this.watcher = $vm.$watch('showValue', (val) => {
    val && options.onShow && options.onShow($vm)
    if (val === false && options.onHide) {
      options.onHide($vm)
      this.watcher && this.watcher()
    }
  })
  $vm.showValue = true
}

function hide ($vm) {
  $vm.showValue = false
  $vm.$nextTick(() => {
    this.watcher && this.watcher()
    this.watcher = null
  })
}

/* harmony default export */ __webpack_exports__["default"] = ({
  show,
  hide
});


/***/ }),
/* 160 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
// Cookie
// https://github.com/MoeKit/cookie
// -------------
// Thanks to:
//  - http://www.nczonline.net/blog/2009/05/05/http-cookies-explained/
//  - http://developer.yahoo.com/yui/3/cookie/

const Cookie = {} 

var decode = decodeURIComponent;
var encode = encodeURIComponent;

/**
 * Returns the cookie value for the given name.
 *
 * @param {String} name The name of the cookie to retrieve.
 *
 * @param {Function|Object} options (Optional) An object containing one or
 *     more cookie options: raw (true/false) and converter (a function).
 *     The converter function is run on the value before returning it. The
 *     function is not used if the cookie doesn't exist. The function can be
 *     passed instead of the options object for conveniently. When raw is
 *     set to true, the cookie value is not URI decoded.
 *
 * @return {*} If no converter is specified, returns a string or undefined
 *     if the cookie doesn't exist. If the converter is specified, returns
 *     the value returned from the converter.
 */
Cookie.get = function (name, options) {
  validateCookieName(name);

  if (typeof options === 'function') {
    options = {
      converter: options
    };
  } else {
    options = options || {};
  }

  var cookies = parseCookieString(document.cookie, !options['raw']);
  return (options.converter || same)(cookies[name]);
};

/**
 * Sets a cookie with a given name and value.
 *
 * @param {string} name The name of the cookie to set.
 *
 * @param {*} value The value to set for the cookie.
 *
 * @param {Object} options (Optional) An object containing one or more
 *     cookie options: path (a string), domain (a string),
 *     expires (number or a Date object), secure (true/false),
 *     and raw (true/false). Setting raw to true indicates that the cookie
 *     should not be URI encoded before being set.
 *
 * @return {string} The created cookie string.
 */
Cookie.set = function (name, value, options) {
  validateCookieName(name);

  options = options || {};
  var expires = options['expires'];
  var domain = options['domain'];
  var path = options['path'];

  if (!options['raw']) {
    value = encode(String(value));
  }

  var text = name + '=' + value;

  // expires
  var date = expires;
  if (typeof date === 'number') {
    date = new Date();
    date.setDate(date.getDate() + expires);
  }
  if (date instanceof Date) {
    text += '; expires=' + date.toUTCString();
  }

  // domain
  if (isNonEmptyString(domain)) {
    text += '; domain=' + domain;
  }

  // path
  if (isNonEmptyString(path)) {
    text += '; path=' + path;
  }

  // secure
  if (options['secure']) {
    text += '; secure';
  }

  document.cookie = text;
  return text;
};

/**
 * Removes a cookie from the machine by setting its expiration date to
 * sometime in the past.
 *
 * @param {string} name The name of the cookie to remove.
 *
 * @param {Object} options (Optional) An object containing one or more
 *     cookie options: path (a string), domain (a string),
 *     and secure (true/false). The expires option will be overwritten
 *     by the method.
 *
 * @return {string} The created cookie string.
 */
Cookie.remove = function (name, options) {
  options = options || {};
  options['expires'] = new Date(0);
  return this.set(name, '', options);
};

function parseCookieString(text, shouldDecode) {
  var cookies = {};

  if (isString(text) && text.length > 0) {

    var decodeValue = shouldDecode ? decode : same;
    var cookieParts = text.split(/;\s/g);
    var cookieName;
    var cookieValue;
    var cookieNameValue;

    for (var i = 0, len = cookieParts.length; i < len; i++) {

      // Check for normally-formatted cookie (name-value)
      cookieNameValue = cookieParts[i].match(/([^=]+)=/i);
      if (cookieNameValue instanceof Array) {
        try {
          cookieName = decode(cookieNameValue[1]);
          cookieValue = decodeValue(cookieParts[i]
            .substring(cookieNameValue[1].length + 1));
        } catch (ex) {
          // Intentionally ignore the cookie -
          // the encoding is wrong
        }
      } else {
        // Means the cookie does not have an "=", so treat it as
        // a boolean flag
        cookieName = decode(cookieParts[i]);
        cookieValue = '';
      }

      if (cookieName) {
        cookies[cookieName] = cookieValue;
      }
    }

  }

  return cookies;
}

// Helpers

function isString(o) {
  return typeof o === 'string';
}

function isNonEmptyString(s) {
  return isString(s) && s !== '';
}

function validateCookieName(name) {
  if (!isNonEmptyString(name)) {
    throw new TypeError('Cookie name must be a non-empty string');
  }
}

function same(s) {
  return s;
}

/* harmony default export */ __webpack_exports__["default"] = (Cookie);


/***/ }),
/* 161 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony default export */ __webpack_exports__["default"] = (function (date, fmt = 'YYYY-MM-DD HH:mm:ss') {
  if (!date) {
    return ''
  }
  if (typeof date === 'string') {
    date = new Date(date.replace(/-/g, '/'))
  }
  if (typeof date === 'number') {
    date = new Date(date)
  }
  var o = {
    'M+': date.getMonth() + 1,
    'D+': date.getDate(),
    'h+': date.getHours() % 12 === 0 ? 12 : date.getHours() % 12,
    'H+': date.getHours(),
    'm+': date.getMinutes(),
    's+': date.getSeconds(),
    'q+': Math.floor((date.getMonth() + 3) / 3),
    'S': date.getMilliseconds()
  }
  var week = {
    '0': '\u65e5',
    '1': '\u4e00',
    '2': '\u4e8c',
    '3': '\u4e09',
    '4': '\u56db',
    '5': '\u4e94',
    '6': '\u516d'
  }
  if (/(Y+)/.test(fmt)) {
    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length))
  }
  if (/(E+)/.test(fmt)) {
    fmt = fmt.replace(RegExp.$1, ((RegExp.$1.length > 1) ? (RegExp.$1.length > 2 ? '\u661f\u671f' : '\u5468') : '') + week[date.getDay() + ''])
  }
  for (var k in o) {
    if (new RegExp('(' + k + ')').test(fmt)) {
      fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : (('00' + o[k]).substr(('' + o[k]).length)))
    }
  }
  return fmt
});


/***/ }),
/* 162 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <a\n|     class=\"vux-datetime weui-cell\"");

/***/ }),
/* 163 */
/***/ (function(module, exports) {

// QueryString
// ---------------
// This module provides utilities for dealing with query strings.
//
// Thanks to:
//  - http://nodejs.org/docs/v0.4.7/api/querystring.html
//  - http://developer.yahoo.com/yui/3/api/QueryString.html
//  - https://github.com/lifesinger/dew/tree/master/lib/querystring

var QueryString = exports;

// The escape/unescape function used by stringify/parse, provided so that it
// could be overridden if necessary. This is important in cases where
// non-standard delimiters are used, if the delimiters would not normally be
// handled properly by the built-in (en|de)codeURIComponent functions.
QueryString.escape = encodeURIComponent;

QueryString.unescape = function (s) {
  // The + character is interpreted as a space on the server side as well as
  // generated by forms with spaces in their fields.
  return decodeURIComponent(s.replace(/\+/g, ' '));
};

/**
 * Serialize an object to a query string. Optionally override the default
 * separator and assignment characters.
 *
 * stringify({foo: 'bar'})
 *   // returns 'foo=bar'
 *
 * stringify({foo: 'bar', baz: 'bob'}, ';', ':')
 *   // returns 'foo:bar;baz:bob'
 */
QueryString.stringify = function (obj, sep, eq, arrayKey) {
  if (!isPlainObject(obj)) return '';

  sep = sep || '&';
  eq = eq || '=';
  arrayKey = arrayKey || false;

  var buf = [],
    key, val;
  var escape = QueryString.escape;

  for (key in obj) {
    if (!hasOwnProperty.call(obj, key)) continue;

    val = obj[key];
    key = QueryString.escape(key);

    // val is primitive value
    if (isPrimitive(val)) {
      buf.push(key, eq, escape(val + ''), sep);
    }
    // val is not empty array
    else if (isArray(val) && val.length) {
      for (var i = 0; i < val.length; i++) {
        if (isPrimitive(val[i])) {
          buf.push(
            key,
            (arrayKey ? escape('[]') : '') + eq,
            escape(val[i] + ''),
            sep);
        }
      }
    }
    // ignore other cases, including empty array, Function, RegExp, Date etc.
    else {
      buf.push(key, eq, sep);
    }
  }

  buf.pop();
  return buf.join('');
};

/**
 * Deserialize a query string to an object. Optionally override the default
 * separator and assignment characters.
 *
 * parse('a=b&c=d')
 *   // returns {a: 'b', c: 'c'}
 */
QueryString.parse = function (str, sep, eq) {
  if (typeof str === 'undefined' && typeof document !== 'undefined') {
    str = document.location.search
  }
  var ret = {};

  if (typeof str !== 'string' || trim(str).length === 0) {
    return ret;
  }

  // remove ^?
  str = str.replace(/^\?/, '');

  var pairs = str.split(sep || '&');
  eq = eq || '=';
  var unescape = QueryString.unescape;

  for (var i = 0; i < pairs.length; i++) {

    var pair = pairs[i].split(eq);
    var key = unescape(trim(pair[0]));
    var val = unescape(trim(pair.slice(1).join(eq)));

    var m = key.match(/^(\w+)\[\]$/);
    if (m && m[1]) {
      key = m[1];
    }

    if (hasOwnProperty.call(ret, key)) {
      if (!isArray(ret[key])) {
        ret[key] = [ret[key]];
      }
      ret[key].push(val);
    } else {
      ret[key] = m ? [val] : val;
    }
  }

  return ret;
};

// Helpers

var toString = Object.prototype.toString;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var isArray = Array.isArray || function (val) {
  return toString.call(val) === '[object Array]';
};
var trim = String.prototype.trim ?
  function (str) {
    return (str == null) ?
      '' :
      String.prototype.trim.call(str);
  } :
  function (str) {
    return (str == null) ?
      '' :
      str.toString().replace(/^\s+/, '').replace(/\s+$/, '');
  };

/**
 * Checks to see if an object is a plain object (created using "{}" or
 * "new Object()" or "new FunctionClass()").
 */
function isPlainObject(o) {
  /**
   * NOTES:
   * isPlainObject(node = document.getElementById("xx")) -> false
   * toString.call(node):
   *   ie678 === '[object Object]', other === '[object HTMLElement]'
   * 'isPrototypeOf' in node:
   *   ie678 === false, other === true
   */
  return o &&
    toString.call(o) === '[object Object]' &&
    'isPrototypeOf' in o;
}

/**
 * If the type of o is null, undefined, number, string, boolean,
 * return true.
 */
function isPrimitive(o) {
  return o !== Object(o);
}

/***/ }),
/* 164 */
/***/ (function(module, exports) {

module.exports = function (xs, f) {
    if (xs.map) return xs.map(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        var x = xs[i];
        if (hasOwn.call(xs, i)) res.push(f(x, i, xs));
    }
    return res;
};

var hasOwn = Object.prototype.hasOwnProperty;


/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function find(array, predicate, context) {
  if (typeof Array.prototype.find === 'function') {
    return array.find(predicate, context);
  }

  context = context || this;
  var length = array.length;
  var i;

  if (typeof predicate !== 'function') {
    throw new TypeError(predicate + ' is not a function');
  }

  for (i = 0; i < length; i++) {
    if (predicate.call(context, array[i], i, array)) {
      return array[i];
    }
  }
}

module.exports = find;


/***/ }),
/* 166 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

/* harmony default export */ __webpack_exports__["default"] = (function (source, length = 2) {
  let pre = ""
  const negative = source < 0
  const string = String(Math.abs(source))
  if (string.length < length) {
      pre = (new Array(length - string.length + 1)).join('0')
  }
  return (negative ?  "-" : "") + pre + string
});


/***/ }),
/* 167 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

/* harmony default export */ __webpack_exports__["default"] = (function (string) {
  const reg = new RegExp('(^[\\s\\t\\xa0\\u3000]+)|([\\u3000\\xa0\\s\\t]+\x24)', 'g')
  return string.replace(reg, '')
});


/***/ }),
/* 168 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
// Thanks to: https://github.com/calebroseland/vue-dom-portal

const objectAssign = __webpack_require__(72)
/**
 * Get target DOM Node
 * @param {(Node|string|Boolean)} [node=document.body] DOM Node, CSS selector, or Boolean
 * @return {Node} The target that the el will be appended to
 */
function getTarget (node) {
  if (node === void 0) {
    return document.body
  }

  if (typeof node === 'string' && node.indexOf('?') === 0) {
    return document.body
  } else if (typeof node === 'string' && node.indexOf('?') > 0) {
    node = node.split('?')[0]
  }

  if (node === 'body' || node === true) {
    return document.body
  }

  return node instanceof window.Node ? node : document.querySelector(node)
}

function getShouldUpdate (node) {
  // do not updated by default
  if (!node) {
    return false
  }
  if (typeof node === 'string' && node.indexOf('?') > 0) {
    try {
      const config = JSON.parse(node.split('?')[1])
      return config.autoUpdate || false
    } catch (e) {
      return false
    }
  }
  return false
}

const directive = {
  inserted (el, { value }, vnode) {
    el.className = el.className ? el.className + ' v-transfer-dom' : 'v-transfer-dom'
    const parentNode = el.parentNode
    var home = document.createComment('')
    var hasMovedOut = false

    if (value !== false) {
      parentNode.replaceChild(home, el) // moving out, el is no longer in the document
      getTarget(value).appendChild(el) // moving into new place
      hasMovedOut = true
    }
    if (!el.__transferDomData) {
      el.__transferDomData = {
        parentNode: parentNode,
        home: home,
        target: getTarget(value),
        hasMovedOut: hasMovedOut
      }
    }
  },
  componentUpdated (el, { value }) {
    const shouldUpdate = getShouldUpdate(value)
    if (!shouldUpdate) {
      return
    }
    // need to make sure children are done updating (vs. `update`)
    var ref$1 = el.__transferDomData
    // homes.get(el)
    var parentNode = ref$1.parentNode
    var home = ref$1.home
    var hasMovedOut = ref$1.hasMovedOut // recall where home is

    if (!hasMovedOut && value) {
      // remove from document and leave placeholder
      parentNode.replaceChild(home, el)
      // append to target
      getTarget(value).appendChild(el)
      el.__transferDomData = objectAssign({}, el.__transferDomData, { hasMovedOut: true, target: getTarget(value) })
    } else if (hasMovedOut && value === false) {
      // previously moved, coming back home
      parentNode.replaceChild(el, home)
      el.__transferDomData = objectAssign({}, el.__transferDomData, { hasMovedOut: false, target: getTarget(value) })
    } else if (value) {
      // already moved, going somewhere else
      getTarget(value).appendChild(el)
    }
  },
  unbind: function unbind (el, binding) {
    el.className = el.className.replace('v-transfer-dom', '')
    if (el.__transferDomData && el.__transferDomData.hasMovedOut === true) {
      el.__transferDomData.parentNode && el.__transferDomData.parentNode.appendChild(el)
    }
    el.__transferDomData = null
  }
}

/* harmony default export */ __webpack_exports__["default"] = (directive);


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

var guid = __webpack_require__(170);

var env = __webpack_require__(20);

var zrUtil = __webpack_require__(1);

var Handler = __webpack_require__(436);

var Storage = __webpack_require__(438);

var Painter = __webpack_require__(442);

var Animation = __webpack_require__(445);

var HandlerProxy = __webpack_require__(446);

/*!
* ZRender, a high performance 2d drawing library.
*
* Copyright (c) 2013, Baidu Inc.
* All rights reserved.
*
* LICENSE
* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt
*/
var useVML = !env.canvasSupported;
var painterCtors = {
  canvas: Painter
};
var instances = {}; // ZRender实例map索引

/**
 * @type {string}
 */

var version = '4.0.4';
/**
 * Initializing a zrender instance
 * @param {HTMLElement} dom
 * @param {Object} opts
 * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'
 * @param {number} [opts.devicePixelRatio]
 * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)
 * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)
 * @return {module:zrender/ZRender}
 */

function init(dom, opts) {
  var zr = new ZRender(guid(), dom, opts);
  instances[zr.id] = zr;
  return zr;
}
/**
 * Dispose zrender instance
 * @param {module:zrender/ZRender} zr
 */


function dispose(zr) {
  if (zr) {
    zr.dispose();
  } else {
    for (var key in instances) {
      if (instances.hasOwnProperty(key)) {
        instances[key].dispose();
      }
    }

    instances = {};
  }

  return this;
}
/**
 * Get zrender instance by id
 * @param {string} id zrender instance id
 * @return {module:zrender/ZRender}
 */


function getInstance(id) {
  return instances[id];
}

function registerPainter(name, Ctor) {
  painterCtors[name] = Ctor;
}

function delInstance(id) {
  delete instances[id];
}
/**
 * @module zrender/ZRender
 */

/**
 * @constructor
 * @alias module:zrender/ZRender
 * @param {string} id
 * @param {HTMLElement} dom
 * @param {Object} opts
 * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'
 * @param {number} [opts.devicePixelRatio]
 * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)
 * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)
 */


var ZRender = function (id, dom, opts) {
  opts = opts || {};
  /**
   * @type {HTMLDomElement}
   */

  this.dom = dom;
  /**
   * @type {string}
   */

  this.id = id;
  var self = this;
  var storage = new Storage();
  var rendererType = opts.renderer; // TODO WebGL

  if (useVML) {
    if (!painterCtors.vml) {
      throw new Error('You need to require \'zrender/vml/vml\' to support IE8');
    }

    rendererType = 'vml';
  } else if (!rendererType || !painterCtors[rendererType]) {
    rendererType = 'canvas';
  }

  var painter = new painterCtors[rendererType](dom, storage, opts, id);
  this.storage = storage;
  this.painter = painter;
  var handerProxy = !env.node && !env.worker ? new HandlerProxy(painter.getViewportRoot()) : null;
  this.handler = new Handler(storage, painter, handerProxy, painter.root);
  /**
   * @type {module:zrender/animation/Animation}
   */

  this.animation = new Animation({
    stage: {
      update: zrUtil.bind(this.flush, this)
    }
  });
  this.animation.start();
  /**
   * @type {boolean}
   * @private
   */

  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画
  // FIXME 有点ugly

  var oldDelFromStorage = storage.delFromStorage;
  var oldAddToStorage = storage.addToStorage;

  storage.delFromStorage = function (el) {
    oldDelFromStorage.call(storage, el);
    el && el.removeSelfFromZr(self);
  };

  storage.addToStorage = function (el) {
    oldAddToStorage.call(storage, el);
    el.addSelfToZr(self);
  };
};

ZRender.prototype = {
  constructor: ZRender,

  /**
   * 获取实例唯一标识
   * @return {string}
   */
  getId: function () {
    return this.id;
  },

  /**
   * 添加元素
   * @param  {module:zrender/Element} el
   */
  add: function (el) {
    this.storage.addRoot(el);
    this._needsRefresh = true;
  },

  /**
   * 删除元素
   * @param  {module:zrender/Element} el
   */
  remove: function (el) {
    this.storage.delRoot(el);
    this._needsRefresh = true;
  },

  /**
   * Change configuration of layer
   * @param {string} zLevel
   * @param {Object} config
   * @param {string} [config.clearColor=0] Clear color
   * @param {string} [config.motionBlur=false] If enable motion blur
   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer
  */
  configLayer: function (zLevel, config) {
    if (this.painter.configLayer) {
      this.painter.configLayer(zLevel, config);
    }

    this._needsRefresh = true;
  },

  /**
   * Set background color
   * @param {string} backgroundColor
   */
  setBackgroundColor: function (backgroundColor) {
    if (this.painter.setBackgroundColor) {
      this.painter.setBackgroundColor(backgroundColor);
    }

    this._needsRefresh = true;
  },

  /**
   * Repaint the canvas immediately
   */
  refreshImmediately: function () {
    // var start = new Date();
    // Clear needsRefresh ahead to avoid something wrong happens in refresh
    // Or it will cause zrender refreshes again and again.
    this._needsRefresh = false;
    this.painter.refresh();
    /**
     * Avoid trigger zr.refresh in Element#beforeUpdate hook
     */

    this._needsRefresh = false; // var end = new Date();
    // var log = document.getElementById('log');
    // if (log) {
    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);
    // }
  },

  /**
   * Mark and repaint the canvas in the next frame of browser
   */
  refresh: function () {
    this._needsRefresh = true;
  },

  /**
   * Perform all refresh
   */
  flush: function () {
    var triggerRendered;

    if (this._needsRefresh) {
      triggerRendered = true;
      this.refreshImmediately();
    }

    if (this._needsRefreshHover) {
      triggerRendered = true;
      this.refreshHoverImmediately();
    }

    triggerRendered && this.trigger('rendered');
  },

  /**
   * Add element to hover layer
   * @param  {module:zrender/Element} el
   * @param {Object} style
   */
  addHover: function (el, style) {
    if (this.painter.addHover) {
      this.painter.addHover(el, style);
      this.refreshHover();
    }
  },

  /**
   * Add element from hover layer
   * @param  {module:zrender/Element} el
   */
  removeHover: function (el) {
    if (this.painter.removeHover) {
      this.painter.removeHover(el);
      this.refreshHover();
    }
  },

  /**
   * Clear all hover elements in hover layer
   * @param  {module:zrender/Element} el
   */
  clearHover: function () {
    if (this.painter.clearHover) {
      this.painter.clearHover();
      this.refreshHover();
    }
  },

  /**
   * Refresh hover in next frame
   */
  refreshHover: function () {
    this._needsRefreshHover = true;
  },

  /**
   * Refresh hover immediately
   */
  refreshHoverImmediately: function () {
    this._needsRefreshHover = false;
    this.painter.refreshHover && this.painter.refreshHover();
  },

  /**
   * Resize the canvas.
   * Should be invoked when container size is changed
   * @param {Object} [opts]
   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)
   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)
   */
  resize: function (opts) {
    opts = opts || {};
    this.painter.resize(opts.width, opts.height);
    this.handler.resize();
  },

  /**
   * Stop and clear all animation immediately
   */
  clearAnimation: function () {
    this.animation.clear();
  },

  /**
   * Get container width
   */
  getWidth: function () {
    return this.painter.getWidth();
  },

  /**
   * Get container height
   */
  getHeight: function () {
    return this.painter.getHeight();
  },

  /**
   * Export the canvas as Base64 URL
   * @param {string} type
   * @param {string} [backgroundColor='#fff']
   * @return {string} Base64 URL
   */
  // toDataURL: function(type, backgroundColor) {
  //     return this.painter.getRenderedCanvas({
  //         backgroundColor: backgroundColor
  //     }).toDataURL(type);
  // },

  /**
   * Converting a path to image.
   * It has much better performance of drawing image rather than drawing a vector path.
   * @param {module:zrender/graphic/Path} e
   * @param {number} width
   * @param {number} height
   */
  pathToImage: function (e, dpr) {
    return this.painter.pathToImage(e, dpr);
  },

  /**
   * Set default cursor
   * @param {string} [cursorStyle='default'] 例如 crosshair
   */
  setCursorStyle: function (cursorStyle) {
    this.handler.setCursorStyle(cursorStyle);
  },

  /**
   * Find hovered element
   * @param {number} x
   * @param {number} y
   * @return {Object} {target, topTarget}
   */
  findHover: function (x, y) {
    return this.handler.findHover(x, y);
  },

  /**
   * Bind event
   *
   * @param {string} eventName Event name
   * @param {Function} eventHandler Handler function
   * @param {Object} [context] Context object
   */
  on: function (eventName, eventHandler, context) {
    this.handler.on(eventName, eventHandler, context);
  },

  /**
   * Unbind event
   * @param {string} eventName Event name
   * @param {Function} [eventHandler] Handler function
   */
  off: function (eventName, eventHandler) {
    this.handler.off(eventName, eventHandler);
  },

  /**
   * Trigger event manually
   *
   * @param {string} eventName Event name
   * @param {event=} event Event object
   */
  trigger: function (eventName, event) {
    this.handler.trigger(eventName, event);
  },

  /**
   * Clear all objects and the canvas.
   */
  clear: function () {
    this.storage.delRoot();
    this.painter.clear();
  },

  /**
   * Dispose self.
   */
  dispose: function () {
    this.animation.stop();
    this.clear();
    this.storage.dispose();
    this.painter.dispose();
    this.handler.dispose();
    this.animation = this.storage = this.painter = this.handler = null;
    delInstance(this.id);
  }
};
exports.version = version;
exports.init = init;
exports.dispose = dispose;
exports.getInstance = getInstance;
exports.registerPainter = registerPainter;

/***/ }),
/* 170 */
/***/ (function(module, exports) {

/**
 * zrender: 生成唯一id
 *
 * @author errorrik (errorrik@gmail.com)
 */
var idStart = 0x0907;

function _default() {
  return idStart++;
}

module.exports = _default;

/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

var guid = __webpack_require__(170);

var Eventful = __webpack_require__(73);

var Transformable = __webpack_require__(172);

var Animatable = __webpack_require__(439);

var zrUtil = __webpack_require__(1);

/**
 * @alias module:zrender/Element
 * @constructor
 * @extends {module:zrender/mixin/Animatable}
 * @extends {module:zrender/mixin/Transformable}
 * @extends {module:zrender/mixin/Eventful}
 */
var Element = function (opts) {
  // jshint ignore:line
  Transformable.call(this, opts);
  Eventful.call(this, opts);
  Animatable.call(this, opts);
  /**
   * 画布元素ID
   * @type {string}
   */

  this.id = opts.id || guid();
};

Element.prototype = {
  /**
   * 元素类型
   * Element type
   * @type {string}
   */
  type: 'element',

  /**
   * 元素名字
   * Element name
   * @type {string}
   */
  name: '',

  /**
   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值
   * ZRender instance will be assigned when element is associated with zrender
   * @name module:/zrender/Element#__zr
   * @type {module:zrender/ZRender}
   */
  __zr: null,

  /**
   * 图形是否忽略，为true时忽略图形的绘制以及事件触发
   * If ignore drawing and events of the element object
   * @name module:/zrender/Element#ignore
   * @type {boolean}
   * @default false
   */
  ignore: false,

  /**
   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪
   * 该路径会继承被裁减对象的变换
   * @type {module:zrender/graphic/Path}
   * @see http://www.w3.org/TR/2dcontext/#clipping-region
   * @readOnly
   */
  clipPath: null,

  /**
   * 是否是 Group
   * @type {boolean}
   */
  isGroup: false,

  /**
   * Drift element
   * @param  {number} dx dx on the global space
   * @param  {number} dy dy on the global space
   */
  drift: function (dx, dy) {
    switch (this.draggable) {
      case 'horizontal':
        dy = 0;
        break;

      case 'vertical':
        dx = 0;
        break;
    }

    var m = this.transform;

    if (!m) {
      m = this.transform = [1, 0, 0, 1, 0, 0];
    }

    m[4] += dx;
    m[5] += dy;
    this.decomposeTransform();
    this.dirty(false);
  },

  /**
   * Hook before update
   */
  beforeUpdate: function () {},

  /**
   * Hook after update
   */
  afterUpdate: function () {},

  /**
   * Update each frame
   */
  update: function () {
    this.updateTransform();
  },

  /**
   * @param  {Function} cb
   * @param  {}   context
   */
  traverse: function (cb, context) {},

  /**
   * @protected
   */
  attrKV: function (key, value) {
    if (key === 'position' || key === 'scale' || key === 'origin') {
      // Copy the array
      if (value) {
        var target = this[key];

        if (!target) {
          target = this[key] = [];
        }

        target[0] = value[0];
        target[1] = value[1];
      }
    } else {
      this[key] = value;
    }
  },

  /**
   * Hide the element
   */
  hide: function () {
    this.ignore = true;
    this.__zr && this.__zr.refresh();
  },

  /**
   * Show the element
   */
  show: function () {
    this.ignore = false;
    this.__zr && this.__zr.refresh();
  },

  /**
   * @param {string|Object} key
   * @param {*} value
   */
  attr: function (key, value) {
    if (typeof key === 'string') {
      this.attrKV(key, value);
    } else if (zrUtil.isObject(key)) {
      for (var name in key) {
        if (key.hasOwnProperty(name)) {
          this.attrKV(name, key[name]);
        }
      }
    }

    this.dirty(false);
    return this;
  },

  /**
   * @param {module:zrender/graphic/Path} clipPath
   */
  setClipPath: function (clipPath) {
    var zr = this.__zr;

    if (zr) {
      clipPath.addSelfToZr(zr);
    } // Remove previous clip path


    if (this.clipPath && this.clipPath !== clipPath) {
      this.removeClipPath();
    }

    this.clipPath = clipPath;
    clipPath.__zr = zr;
    clipPath.__clipTarget = this;
    this.dirty(false);
  },

  /**
   */
  removeClipPath: function () {
    var clipPath = this.clipPath;

    if (clipPath) {
      if (clipPath.__zr) {
        clipPath.removeSelfFromZr(clipPath.__zr);
      }

      clipPath.__zr = null;
      clipPath.__clipTarget = null;
      this.clipPath = null;
      this.dirty(false);
    }
  },

  /**
   * Add self from zrender instance.
   * Not recursively because it will be invoked when element added to storage.
   * @param {module:zrender/ZRender} zr
   */
  addSelfToZr: function (zr) {
    this.__zr = zr; // 添加动画

    var animators = this.animators;

    if (animators) {
      for (var i = 0; i < animators.length; i++) {
        zr.animation.addAnimator(animators[i]);
      }
    }

    if (this.clipPath) {
      this.clipPath.addSelfToZr(zr);
    }
  },

  /**
   * Remove self from zrender instance.
   * Not recursively because it will be invoked when element added to storage.
   * @param {module:zrender/ZRender} zr
   */
  removeSelfFromZr: function (zr) {
    this.__zr = null; // 移除动画

    var animators = this.animators;

    if (animators) {
      for (var i = 0; i < animators.length; i++) {
        zr.animation.removeAnimator(animators[i]);
      }
    }

    if (this.clipPath) {
      this.clipPath.removeSelfFromZr(zr);
    }
  }
};
zrUtil.mixin(Element, Animatable);
zrUtil.mixin(Element, Transformable);
zrUtil.mixin(Element, Eventful);
var _default = Element;
module.exports = _default;

/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

var matrix = __webpack_require__(64);

var vector = __webpack_require__(17);

/**
 * 提供变换扩展
 * @module zrender/mixin/Transformable
 * @author pissang (https://www.github.com/pissang)
 */
var mIdentity = matrix.identity;
var EPSILON = 5e-5;

function isNotAroundZero(val) {
  return val > EPSILON || val < -EPSILON;
}
/**
 * @alias module:zrender/mixin/Transformable
 * @constructor
 */


var Transformable = function (opts) {
  opts = opts || {}; // If there are no given position, rotation, scale

  if (!opts.position) {
    /**
     * 平移
     * @type {Array.<number>}
     * @default [0, 0]
     */
    this.position = [0, 0];
  }

  if (opts.rotation == null) {
    /**
     * 旋转
     * @type {Array.<number>}
     * @default 0
     */
    this.rotation = 0;
  }

  if (!opts.scale) {
    /**
     * 缩放
     * @type {Array.<number>}
     * @default [1, 1]
     */
    this.scale = [1, 1];
  }
  /**
   * 旋转和缩放的原点
   * @type {Array.<number>}
   * @default null
   */


  this.origin = this.origin || null;
};

var transformableProto = Transformable.prototype;
transformableProto.transform = null;
/**
 * 判断是否需要有坐标变换
 * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵
 */

transformableProto.needLocalTransform = function () {
  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);
};

transformableProto.updateTransform = function () {
  var parent = this.parent;
  var parentHasTransform = parent && parent.transform;
  var needLocalTransform = this.needLocalTransform();
  var m = this.transform;

  if (!(needLocalTransform || parentHasTransform)) {
    m && mIdentity(m);
    return;
  }

  m = m || matrix.create();

  if (needLocalTransform) {
    this.getLocalTransform(m);
  } else {
    mIdentity(m);
  } // 应用父节点变换


  if (parentHasTransform) {
    if (needLocalTransform) {
      matrix.mul(m, parent.transform, m);
    } else {
      matrix.copy(m, parent.transform);
    }
  } // 保存这个变换矩阵


  this.transform = m;
  this.invTransform = this.invTransform || matrix.create();
  matrix.invert(this.invTransform, m);
};

transformableProto.getLocalTransform = function (m) {
  return Transformable.getLocalTransform(this, m);
};
/**
 * 将自己的transform应用到context上
 * @param {CanvasRenderingContext2D} ctx
 */


transformableProto.setTransform = function (ctx) {
  var m = this.transform;
  var dpr = ctx.dpr || 1;

  if (m) {
    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);
  } else {
    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);
  }
};

transformableProto.restoreTransform = function (ctx) {
  var dpr = ctx.dpr || 1;
  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);
};

var tmpTransform = [];
/**
 * 分解`transform`矩阵到`position`, `rotation`, `scale`
 */

transformableProto.decomposeTransform = function () {
  if (!this.transform) {
    return;
  }

  var parent = this.parent;
  var m = this.transform;

  if (parent && parent.transform) {
    // Get local transform and decompose them to position, scale, rotation
    matrix.mul(tmpTransform, parent.invTransform, m);
    m = tmpTransform;
  }

  var sx = m[0] * m[0] + m[1] * m[1];
  var sy = m[2] * m[2] + m[3] * m[3];
  var position = this.position;
  var scale = this.scale;

  if (isNotAroundZero(sx - 1)) {
    sx = Math.sqrt(sx);
  }

  if (isNotAroundZero(sy - 1)) {
    sy = Math.sqrt(sy);
  }

  if (m[0] < 0) {
    sx = -sx;
  }

  if (m[3] < 0) {
    sy = -sy;
  }

  position[0] = m[4];
  position[1] = m[5];
  scale[0] = sx;
  scale[1] = sy;
  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);
};
/**
 * Get global scale
 * @return {Array.<number>}
 */


transformableProto.getGlobalScale = function () {
  var m = this.transform;

  if (!m) {
    return [1, 1];
  }

  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);
  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);

  if (m[0] < 0) {
    sx = -sx;
  }

  if (m[3] < 0) {
    sy = -sy;
  }

  return [sx, sy];
};
/**
 * 变换坐标位置到 shape 的局部坐标空间
 * @method
 * @param {number} x
 * @param {number} y
 * @return {Array.<number>}
 */


transformableProto.transformCoordToLocal = function (x, y) {
  var v2 = [x, y];
  var invTransform = this.invTransform;

  if (invTransform) {
    vector.applyTransform(v2, v2, invTransform);
  }

  return v2;
};
/**
 * 变换局部坐标位置到全局坐标空间
 * @method
 * @param {number} x
 * @param {number} y
 * @return {Array.<number>}
 */


transformableProto.transformCoordToGlobal = function (x, y) {
  var v2 = [x, y];
  var transform = this.transform;

  if (transform) {
    vector.applyTransform(v2, v2, transform);
  }

  return v2;
};
/**
 * @static
 * @param {Object} target
 * @param {Array.<number>} target.origin
 * @param {number} target.rotation
 * @param {Array.<number>} target.position
 * @param {Array.<number>} [m]
 */


Transformable.getLocalTransform = function (target, m) {
  m = m || [];
  mIdentity(m);
  var origin = target.origin;
  var scale = target.scale || [1, 1];
  var rotation = target.rotation || 0;
  var position = target.position || [0, 0];

  if (origin) {
    // Translate to origin
    m[4] -= origin[0];
    m[5] -= origin[1];
  }

  matrix.scale(m, m, scale);

  if (rotation) {
    matrix.rotate(m, m, rotation);
  }

  if (origin) {
    // Translate back from origin
    m[4] += origin[0];
    m[5] += origin[1];
  }

  m[4] += position[0];
  m[5] += position[1];
  return m;
};

var _default = Transformable;
module.exports = _default;

/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

var Clip = __webpack_require__(440);

var color = __webpack_require__(74);

var _util = __webpack_require__(1);

var isArrayLike = _util.isArrayLike;

/**
 * @module echarts/animation/Animator
 */
var arraySlice = Array.prototype.slice;

function defaultGetter(target, key) {
  return target[key];
}

function defaultSetter(target, key, value) {
  target[key] = value;
}
/**
 * @param  {number} p0
 * @param  {number} p1
 * @param  {number} percent
 * @return {number}
 */


function interpolateNumber(p0, p1, percent) {
  return (p1 - p0) * percent + p0;
}
/**
 * @param  {string} p0
 * @param  {string} p1
 * @param  {number} percent
 * @return {string}
 */


function interpolateString(p0, p1, percent) {
  return percent > 0.5 ? p1 : p0;
}
/**
 * @param  {Array} p0
 * @param  {Array} p1
 * @param  {number} percent
 * @param  {Array} out
 * @param  {number} arrDim
 */


function interpolateArray(p0, p1, percent, out, arrDim) {
  var len = p0.length;

  if (arrDim == 1) {
    for (var i = 0; i < len; i++) {
      out[i] = interpolateNumber(p0[i], p1[i], percent);
    }
  } else {
    var len2 = len && p0[0].length;

    for (var i = 0; i < len; i++) {
      for (var j = 0; j < len2; j++) {
        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);
      }
    }
  }
} // arr0 is source array, arr1 is target array.
// Do some preprocess to avoid error happened when interpolating from arr0 to arr1


function fillArr(arr0, arr1, arrDim) {
  var arr0Len = arr0.length;
  var arr1Len = arr1.length;

  if (arr0Len !== arr1Len) {
    // FIXME Not work for TypedArray
    var isPreviousLarger = arr0Len > arr1Len;

    if (isPreviousLarger) {
      // Cut the previous
      arr0.length = arr1Len;
    } else {
      // Fill the previous
      for (var i = arr0Len; i < arr1Len; i++) {
        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));
      }
    }
  } // Handling NaN value


  var len2 = arr0[0] && arr0[0].length;

  for (var i = 0; i < arr0.length; i++) {
    if (arrDim === 1) {
      if (isNaN(arr0[i])) {
        arr0[i] = arr1[i];
      }
    } else {
      for (var j = 0; j < len2; j++) {
        if (isNaN(arr0[i][j])) {
          arr0[i][j] = arr1[i][j];
        }
      }
    }
  }
}
/**
 * @param  {Array} arr0
 * @param  {Array} arr1
 * @param  {number} arrDim
 * @return {boolean}
 */


function isArraySame(arr0, arr1, arrDim) {
  if (arr0 === arr1) {
    return true;
  }

  var len = arr0.length;

  if (len !== arr1.length) {
    return false;
  }

  if (arrDim === 1) {
    for (var i = 0; i < len; i++) {
      if (arr0[i] !== arr1[i]) {
        return false;
      }
    }
  } else {
    var len2 = arr0[0].length;

    for (var i = 0; i < len; i++) {
      for (var j = 0; j < len2; j++) {
        if (arr0[i][j] !== arr1[i][j]) {
          return false;
        }
      }
    }
  }

  return true;
}
/**
 * Catmull Rom interpolate array
 * @param  {Array} p0
 * @param  {Array} p1
 * @param  {Array} p2
 * @param  {Array} p3
 * @param  {number} t
 * @param  {number} t2
 * @param  {number} t3
 * @param  {Array} out
 * @param  {number} arrDim
 */


function catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {
  var len = p0.length;

  if (arrDim == 1) {
    for (var i = 0; i < len; i++) {
      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);
    }
  } else {
    var len2 = p0[0].length;

    for (var i = 0; i < len; i++) {
      for (var j = 0; j < len2; j++) {
        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);
      }
    }
  }
}
/**
 * Catmull Rom interpolate number
 * @param  {number} p0
 * @param  {number} p1
 * @param  {number} p2
 * @param  {number} p3
 * @param  {number} t
 * @param  {number} t2
 * @param  {number} t3
 * @return {number}
 */


function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {
  var v0 = (p2 - p0) * 0.5;
  var v1 = (p3 - p1) * 0.5;
  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;
}

function cloneValue(value) {
  if (isArrayLike(value)) {
    var len = value.length;

    if (isArrayLike(value[0])) {
      var ret = [];

      for (var i = 0; i < len; i++) {
        ret.push(arraySlice.call(value[i]));
      }

      return ret;
    }

    return arraySlice.call(value);
  }

  return value;
}

function rgba2String(rgba) {
  rgba[0] = Math.floor(rgba[0]);
  rgba[1] = Math.floor(rgba[1]);
  rgba[2] = Math.floor(rgba[2]);
  return 'rgba(' + rgba.join(',') + ')';
}

function getArrayDim(keyframes) {
  var lastValue = keyframes[keyframes.length - 1].value;
  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;
}

function createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {
  var getter = animator._getter;
  var setter = animator._setter;
  var useSpline = easing === 'spline';
  var trackLen = keyframes.length;

  if (!trackLen) {
    return;
  } // Guess data type


  var firstVal = keyframes[0].value;
  var isValueArray = isArrayLike(firstVal);
  var isValueColor = false;
  var isValueString = false; // For vertices morphing

  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;
  var trackMaxTime; // Sort keyframe as ascending

  keyframes.sort(function (a, b) {
    return a.time - b.time;
  });
  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe

  var kfPercents = []; // Value of each keyframe

  var kfValues = [];
  var prevValue = keyframes[0].value;
  var isAllValueEqual = true;

  for (var i = 0; i < trackLen; i++) {
    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string

    var value = keyframes[i].value; // Check if value is equal, deep check if value is array

    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {
      isAllValueEqual = false;
    }

    prevValue = value; // Try converting a string to a color array

    if (typeof value == 'string') {
      var colorArray = color.parse(value);

      if (colorArray) {
        value = colorArray;
        isValueColor = true;
      } else {
        isValueString = true;
      }
    }

    kfValues.push(value);
  }

  if (!forceAnimate && isAllValueEqual) {
    return;
  }

  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value

  for (var i = 0; i < trackLen - 1; i++) {
    if (isValueArray) {
      fillArr(kfValues[i], lastValue, arrDim);
    } else {
      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {
        kfValues[i] = lastValue;
      }
    }
  }

  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when
  // animation playback is sequency

  var lastFrame = 0;
  var lastFramePercent = 0;
  var start;
  var w;
  var p0;
  var p1;
  var p2;
  var p3;

  if (isValueColor) {
    var rgba = [0, 0, 0, 0];
  }

  var onframe = function (target, percent) {
    // Find the range keyframes
    // kf1-----kf2---------current--------kf3
    // find kf2 and kf3 and do interpolation
    var frame; // In the easing function like elasticOut, percent may less than 0

    if (percent < 0) {
      frame = 0;
    } else if (percent < lastFramePercent) {
      // Start from next key
      // PENDING start from lastFrame ?
      start = Math.min(lastFrame + 1, trackLen - 1);

      for (frame = start; frame >= 0; frame--) {
        if (kfPercents[frame] <= percent) {
          break;
        }
      } // PENDING really need to do this ?


      frame = Math.min(frame, trackLen - 2);
    } else {
      for (frame = lastFrame; frame < trackLen; frame++) {
        if (kfPercents[frame] > percent) {
          break;
        }
      }

      frame = Math.min(frame - 1, trackLen - 2);
    }

    lastFrame = frame;
    lastFramePercent = percent;
    var range = kfPercents[frame + 1] - kfPercents[frame];

    if (range === 0) {
      return;
    } else {
      w = (percent - kfPercents[frame]) / range;
    }

    if (useSpline) {
      p1 = kfValues[frame];
      p0 = kfValues[frame === 0 ? frame : frame - 1];
      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];
      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];

      if (isValueArray) {
        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);
      } else {
        var value;

        if (isValueColor) {
          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);
          value = rgba2String(rgba);
        } else if (isValueString) {
          // String is step(0.5)
          return interpolateString(p1, p2, w);
        } else {
          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);
        }

        setter(target, propName, value);
      }
    } else {
      if (isValueArray) {
        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);
      } else {
        var value;

        if (isValueColor) {
          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);
          value = rgba2String(rgba);
        } else if (isValueString) {
          // String is step(0.5)
          return interpolateString(kfValues[frame], kfValues[frame + 1], w);
        } else {
          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);
        }

        setter(target, propName, value);
      }
    }
  };

  var clip = new Clip({
    target: animator._target,
    life: trackMaxTime,
    loop: animator._loop,
    delay: animator._delay,
    onframe: onframe,
    ondestroy: oneTrackDone
  });

  if (easing && easing !== 'spline') {
    clip.easing = easing;
  }

  return clip;
}
/**
 * @alias module:zrender/animation/Animator
 * @constructor
 * @param {Object} target
 * @param {boolean} loop
 * @param {Function} getter
 * @param {Function} setter
 */


var Animator = function (target, loop, getter, setter) {
  this._tracks = {};
  this._target = target;
  this._loop = loop || false;
  this._getter = getter || defaultGetter;
  this._setter = setter || defaultSetter;
  this._clipCount = 0;
  this._delay = 0;
  this._doneList = [];
  this._onframeList = [];
  this._clipList = [];
};

Animator.prototype = {
  /**
   * 设置动画关键帧
   * @param  {number} time 关键帧时间，单位是ms
   * @param  {Object} props 关键帧的属性值，key-value表示
   * @return {module:zrender/animation/Animator}
   */
  when: function (time
  /* ms */
  , props) {
    var tracks = this._tracks;

    for (var propName in props) {
      if (!props.hasOwnProperty(propName)) {
        continue;
      }

      if (!tracks[propName]) {
        tracks[propName] = []; // Invalid value

        var value = this._getter(this._target, propName);

        if (value == null) {
          // zrLog('Invalid property ' + propName);
          continue;
        } // If time is 0
        //  Then props is given initialize value
        // Else
        //  Initialize value from current prop value


        if (time !== 0) {
          tracks[propName].push({
            time: 0,
            value: cloneValue(value)
          });
        }
      }

      tracks[propName].push({
        time: time,
        value: props[propName]
      });
    }

    return this;
  },

  /**
   * 添加动画每一帧的回调函数
   * @param  {Function} callback
   * @return {module:zrender/animation/Animator}
   */
  during: function (callback) {
    this._onframeList.push(callback);

    return this;
  },
  pause: function () {
    for (var i = 0; i < this._clipList.length; i++) {
      this._clipList[i].pause();
    }

    this._paused = true;
  },
  resume: function () {
    for (var i = 0; i < this._clipList.length; i++) {
      this._clipList[i].resume();
    }

    this._paused = false;
  },
  isPaused: function () {
    return !!this._paused;
  },
  _doneCallback: function () {
    // Clear all tracks
    this._tracks = {}; // Clear all clips

    this._clipList.length = 0;
    var doneList = this._doneList;
    var len = doneList.length;

    for (var i = 0; i < len; i++) {
      doneList[i].call(this);
    }
  },

  /**
   * 开始执行动画
   * @param  {string|Function} [easing]
   *         动画缓动函数，详见{@link module:zrender/animation/easing}
   * @param  {boolean} forceAnimate
   * @return {module:zrender/animation/Animator}
   */
  start: function (easing, forceAnimate) {
    var self = this;
    var clipCount = 0;

    var oneTrackDone = function () {
      clipCount--;

      if (!clipCount) {
        self._doneCallback();
      }
    };

    var lastClip;

    for (var propName in this._tracks) {
      if (!this._tracks.hasOwnProperty(propName)) {
        continue;
      }

      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);

      if (clip) {
        this._clipList.push(clip);

        clipCount++; // If start after added to animation

        if (this.animation) {
          this.animation.addClip(clip);
        }

        lastClip = clip;
      }
    } // Add during callback on the last clip


    if (lastClip) {
      var oldOnFrame = lastClip.onframe;

      lastClip.onframe = function (target, percent) {
        oldOnFrame(target, percent);

        for (var i = 0; i < self._onframeList.length; i++) {
          self._onframeList[i](target, percent);
        }
      };
    } // This optimization will help the case that in the upper application
    // the view may be refreshed frequently, where animation will be
    // called repeatly but nothing changed.


    if (!clipCount) {
      this._doneCallback();
    }

    return this;
  },

  /**
   * 停止动画
   * @param {boolean} forwardToLast If move to last frame before stop
   */
  stop: function (forwardToLast) {
    var clipList = this._clipList;
    var animation = this.animation;

    for (var i = 0; i < clipList.length; i++) {
      var clip = clipList[i];

      if (forwardToLast) {
        // Move to last frame before stop
        clip.onframe(this._target, 1);
      }

      animation && animation.removeClip(clip);
    }

    clipList.length = 0;
  },

  /**
   * 设置动画延迟开始的时间
   * @param  {number} time 单位ms
   * @return {module:zrender/animation/Animator}
   */
  delay: function (time) {
    this._delay = time;
    return this;
  },

  /**
   * 添加动画结束的回调
   * @param  {Function} cb
   * @return {module:zrender/animation/Animator}
   */
  done: function (cb) {
    if (cb) {
      this._doneList.push(cb);
    }

    return this;
  },

  /**
   * @return {Array.<module:zrender/animation/Clip>}
   */
  getClips: function () {
    return this._clipList;
  }
};
var _default = Animator;
module.exports = _default;

/***/ }),
/* 174 */
/***/ (function(module, exports) {

// Simple LRU cache use doubly linked list
// @module zrender/core/LRU

/**
 * Simple double linked list. Compared with array, it has O(1) remove operation.
 * @constructor
 */
var LinkedList = function () {
  /**
   * @type {module:zrender/core/LRU~Entry}
   */
  this.head = null;
  /**
   * @type {module:zrender/core/LRU~Entry}
   */

  this.tail = null;
  this._len = 0;
};

var linkedListProto = LinkedList.prototype;
/**
 * Insert a new value at the tail
 * @param  {} val
 * @return {module:zrender/core/LRU~Entry}
 */

linkedListProto.insert = function (val) {
  var entry = new Entry(val);
  this.insertEntry(entry);
  return entry;
};
/**
 * Insert an entry at the tail
 * @param  {module:zrender/core/LRU~Entry} entry
 */


linkedListProto.insertEntry = function (entry) {
  if (!this.head) {
    this.head = this.tail = entry;
  } else {
    this.tail.next = entry;
    entry.prev = this.tail;
    entry.next = null;
    this.tail = entry;
  }

  this._len++;
};
/**
 * Remove entry.
 * @param  {module:zrender/core/LRU~Entry} entry
 */


linkedListProto.remove = function (entry) {
  var prev = entry.prev;
  var next = entry.next;

  if (prev) {
    prev.next = next;
  } else {
    // Is head
    this.head = next;
  }

  if (next) {
    next.prev = prev;
  } else {
    // Is tail
    this.tail = prev;
  }

  entry.next = entry.prev = null;
  this._len--;
};
/**
 * @return {number}
 */


linkedListProto.len = function () {
  return this._len;
};
/**
 * Clear list
 */


linkedListProto.clear = function () {
  this.head = this.tail = null;
  this._len = 0;
};
/**
 * @constructor
 * @param {} val
 */


var Entry = function (val) {
  /**
   * @type {}
   */
  this.value = val;
  /**
   * @type {module:zrender/core/LRU~Entry}
   */

  this.next;
  /**
   * @type {module:zrender/core/LRU~Entry}
   */

  this.prev;
};
/**
 * LRU Cache
 * @constructor
 * @alias module:zrender/core/LRU
 */


var LRU = function (maxSize) {
  this._list = new LinkedList();
  this._map = {};
  this._maxSize = maxSize || 10;
  this._lastRemovedEntry = null;
};

var LRUProto = LRU.prototype;
/**
 * @param  {string} key
 * @param  {} value
 * @return {} Removed value
 */

LRUProto.put = function (key, value) {
  var list = this._list;
  var map = this._map;
  var removed = null;

  if (map[key] == null) {
    var len = list.len(); // Reuse last removed entry

    var entry = this._lastRemovedEntry;

    if (len >= this._maxSize && len > 0) {
      // Remove the least recently used
      var leastUsedEntry = list.head;
      list.remove(leastUsedEntry);
      delete map[leastUsedEntry.key];
      removed = leastUsedEntry.value;
      this._lastRemovedEntry = leastUsedEntry;
    }

    if (entry) {
      entry.value = value;
    } else {
      entry = new Entry(value);
    }

    entry.key = key;
    list.insertEntry(entry);
    map[key] = entry;
  }

  return removed;
};
/**
 * @param  {string} key
 * @return {}
 */


LRUProto.get = function (key) {
  var entry = this._map[key];
  var list = this._list;

  if (entry != null) {
    // Put the latest used entry in the tail
    if (entry !== list.tail) {
      list.remove(entry);
      list.insertEntry(entry);
    }

    return entry.value;
  }
};
/**
 * Clear the cache
 */


LRUProto.clear = function () {
  this._list.clear();

  this._map = {};
};

var _default = LRU;
module.exports = _default;

/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

var _config = __webpack_require__(83);

var debugMode = _config.debugMode;

var log = function () {};

if (debugMode === 1) {
  log = function () {
    for (var k in arguments) {
      throw new Error(arguments[k]);
    }
  };
} else if (debugMode > 1) {
  log = function () {
    for (var k in arguments) {
      console.log(arguments[k]);
    }
  };
}

var _default = log;
module.exports = _default;

/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

var fixShadow = __webpack_require__(177);

var STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);
// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);

var Style = function (opts, host) {
  this.extendFrom(opts, false);
  this.host = host;
};

function createLinearGradient(ctx, obj, rect) {
  var x = obj.x == null ? 0 : obj.x;
  var x2 = obj.x2 == null ? 1 : obj.x2;
  var y = obj.y == null ? 0 : obj.y;
  var y2 = obj.y2 == null ? 0 : obj.y2;

  if (!obj.global) {
    x = x * rect.width + rect.x;
    x2 = x2 * rect.width + rect.x;
    y = y * rect.height + rect.y;
    y2 = y2 * rect.height + rect.y;
  } // Fix NaN when rect is Infinity


  x = isNaN(x) ? 0 : x;
  x2 = isNaN(x2) ? 1 : x2;
  y = isNaN(y) ? 0 : y;
  y2 = isNaN(y2) ? 0 : y2;
  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);
  return canvasGradient;
}

function createRadialGradient(ctx, obj, rect) {
  var width = rect.width;
  var height = rect.height;
  var min = Math.min(width, height);
  var x = obj.x == null ? 0.5 : obj.x;
  var y = obj.y == null ? 0.5 : obj.y;
  var r = obj.r == null ? 0.5 : obj.r;

  if (!obj.global) {
    x = x * width + rect.x;
    y = y * height + rect.y;
    r = r * min;
  }

  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);
  return canvasGradient;
}

Style.prototype = {
  constructor: Style,

  /**
   * @type {module:zrender/graphic/Displayable}
   */
  host: null,

  /**
   * @type {string}
   */
  fill: '#000',

  /**
   * @type {string}
   */
  stroke: null,

  /**
   * @type {number}
   */
  opacity: 1,

  /**
   * @type {Array.<number>}
   */
  lineDash: null,

  /**
   * @type {number}
   */
  lineDashOffset: 0,

  /**
   * @type {number}
   */
  shadowBlur: 0,

  /**
   * @type {number}
   */
  shadowOffsetX: 0,

  /**
   * @type {number}
   */
  shadowOffsetY: 0,

  /**
   * @type {number}
   */
  lineWidth: 1,

  /**
   * If stroke ignore scale
   * @type {Boolean}
   */
  strokeNoScale: false,
  // Bounding rect text configuration
  // Not affected by element transform

  /**
   * @type {string}
   */
  text: null,

  /**
   * If `fontSize` or `fontFamily` exists, `font` will be reset by
   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.
   * So do not visit it directly in upper application (like echarts),
   * but use `contain/text#makeFont` instead.
   * @type {string}
   */
  font: null,

  /**
   * The same as font. Use font please.
   * @deprecated
   * @type {string}
   */
  textFont: null,

  /**
   * It helps merging respectively, rather than parsing an entire font string.
   * @type {string}
   */
  fontStyle: null,

  /**
   * It helps merging respectively, rather than parsing an entire font string.
   * @type {string}
   */
  fontWeight: null,

  /**
   * It helps merging respectively, rather than parsing an entire font string.
   * Should be 12 but not '12px'.
   * @type {number}
   */
  fontSize: null,

  /**
   * It helps merging respectively, rather than parsing an entire font string.
   * @type {string}
   */
  fontFamily: null,

  /**
   * Reserved for special functinality, like 'hr'.
   * @type {string}
   */
  textTag: null,

  /**
   * @type {string}
   */
  textFill: '#000',

  /**
   * @type {string}
   */
  textStroke: null,

  /**
   * @type {number}
   */
  textWidth: null,

  /**
   * Only for textBackground.
   * @type {number}
   */
  textHeight: null,

  /**
   * textStroke may be set as some color as a default
   * value in upper applicaion, where the default value
   * of textStrokeWidth should be 0 to make sure that
   * user can choose to do not use text stroke.
   * @type {number}
   */
  textStrokeWidth: 0,

  /**
   * @type {number}
   */
  textLineHeight: null,

  /**
   * 'inside', 'left', 'right', 'top', 'bottom'
   * [x, y]
   * Based on x, y of rect.
   * @type {string|Array.<number>}
   * @default 'inside'
   */
  textPosition: 'inside',

  /**
   * If not specified, use the boundingRect of a `displayable`.
   * @type {Object}
   */
  textRect: null,

  /**
   * [x, y]
   * @type {Array.<number>}
   */
  textOffset: null,

  /**
   * @type {string}
   */
  textAlign: null,

  /**
   * @type {string}
   */
  textVerticalAlign: null,

  /**
   * @type {number}
   */
  textDistance: 5,

  /**
   * @type {string}
   */
  textShadowColor: 'transparent',

  /**
   * @type {number}
   */
  textShadowBlur: 0,

  /**
   * @type {number}
   */
  textShadowOffsetX: 0,

  /**
   * @type {number}
   */
  textShadowOffsetY: 0,

  /**
   * @type {string}
   */
  textBoxShadowColor: 'transparent',

  /**
   * @type {number}
   */
  textBoxShadowBlur: 0,

  /**
   * @type {number}
   */
  textBoxShadowOffsetX: 0,

  /**
   * @type {number}
   */
  textBoxShadowOffsetY: 0,

  /**
   * Whether transform text.
   * Only useful in Path and Image element
   * @type {boolean}
   */
  transformText: false,

  /**
   * Text rotate around position of Path or Image
   * Only useful in Path and Image element and transformText is false.
   */
  textRotation: 0,

  /**
   * Text origin of text rotation, like [10, 40].
   * Based on x, y of rect.
   * Useful in label rotation of circular symbol.
   * By default, this origin is textPosition.
   * Can be 'center'.
   * @type {string|Array.<number>}
   */
  textOrigin: null,

  /**
   * @type {string}
   */
  textBackgroundColor: null,

  /**
   * @type {string}
   */
  textBorderColor: null,

  /**
   * @type {number}
   */
  textBorderWidth: 0,

  /**
   * @type {number}
   */
  textBorderRadius: 0,

  /**
   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`
   * @type {number|Array.<number>}
   */
  textPadding: null,

  /**
   * Text styles for rich text.
   * @type {Object}
   */
  rich: null,

  /**
   * {outerWidth, outerHeight, ellipsis, placeholder}
   * @type {Object}
   */
  truncate: null,

  /**
   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation
   * @type {string}
   */
  blend: null,

  /**
   * @param {CanvasRenderingContext2D} ctx
   */
  bind: function (ctx, el, prevEl) {
    var style = this;
    var prevStyle = prevEl && prevEl.style;
    var firstDraw = !prevStyle;

    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {
      var prop = STYLE_COMMON_PROPS[i];
      var styleName = prop[0];

      if (firstDraw || style[styleName] !== prevStyle[styleName]) {
        // FIXME Invalid property value will cause style leak from previous element.
        ctx[styleName] = fixShadow(ctx, styleName, style[styleName] || prop[1]);
      }
    }

    if (firstDraw || style.fill !== prevStyle.fill) {
      ctx.fillStyle = style.fill;
    }

    if (firstDraw || style.stroke !== prevStyle.stroke) {
      ctx.strokeStyle = style.stroke;
    }

    if (firstDraw || style.opacity !== prevStyle.opacity) {
      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;
    }

    if (firstDraw || style.blend !== prevStyle.blend) {
      ctx.globalCompositeOperation = style.blend || 'source-over';
    }

    if (this.hasStroke()) {
      var lineWidth = style.lineWidth;
      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);
    }
  },
  hasFill: function () {
    var fill = this.fill;
    return fill != null && fill !== 'none';
  },
  hasStroke: function () {
    var stroke = this.stroke;
    return stroke != null && stroke !== 'none' && this.lineWidth > 0;
  },

  /**
   * Extend from other style
   * @param {zrender/graphic/Style} otherStyle
   * @param {boolean} overwrite true: overwrirte any way.
   *                            false: overwrite only when !target.hasOwnProperty
   *                            others: overwrite when property is not null/undefined.
   */
  extendFrom: function (otherStyle, overwrite) {
    if (otherStyle) {
      for (var name in otherStyle) {
        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {
          this[name] = otherStyle[name];
        }
      }
    }
  },

  /**
   * Batch setting style with a given object
   * @param {Object|string} obj
   * @param {*} [obj]
   */
  set: function (obj, value) {
    if (typeof obj === 'string') {
      this[obj] = value;
    } else {
      this.extendFrom(obj, true);
    }
  },

  /**
   * Clone
   * @return {zrender/graphic/Style} [description]
   */
  clone: function () {
    var newStyle = new this.constructor();
    newStyle.extendFrom(this, true);
    return newStyle;
  },
  getGradient: function (ctx, obj, rect) {
    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;
    var canvasGradient = method(ctx, obj, rect);
    var colorStops = obj.colorStops;

    for (var i = 0; i < colorStops.length; i++) {
      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);
    }

    return canvasGradient;
  }
};
var styleProto = Style.prototype;

for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {
  var prop = STYLE_COMMON_PROPS[i];

  if (!(prop[0] in styleProto)) {
    styleProto[prop[0]] = prop[1];
  }
} // Provide for others


Style.getGradient = styleProto.getGradient;
var _default = Style;
module.exports = _default;

/***/ }),
/* 177 */
/***/ (function(module, exports) {

var SHADOW_PROPS = {
  'shadowBlur': 1,
  'shadowOffsetX': 1,
  'shadowOffsetY': 1,
  'textShadowBlur': 1,
  'textShadowOffsetX': 1,
  'textShadowOffsetY': 1,
  'textBoxShadowBlur': 1,
  'textBoxShadowOffsetX': 1,
  'textBoxShadowOffsetY': 1
};

function _default(ctx, propName, value) {
  if (SHADOW_PROPS.hasOwnProperty(propName)) {
    return value *= ctx.dpr;
  }

  return value;
}

module.exports = _default;

/***/ }),
/* 178 */
/***/ (function(module, exports) {

var Pattern = function (image, repeat) {
  // Should do nothing more in this constructor. Because gradient can be
  // declard by `color: {image: ...}`, where this constructor will not be called.
  this.image = image;
  this.repeat = repeat; // Can be cloned

  this.type = 'pattern';
};

Pattern.prototype.getCanvasPattern = function (ctx) {
  return ctx.createPattern(this.image, this.repeat || 'repeat');
};

var _default = Pattern;
module.exports = _default;

/***/ }),
/* 179 */
/***/ (function(module, exports) {

var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809
window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {
  setTimeout(func, 16);
};

module.exports = _default;

/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

var Displayable = __webpack_require__(84);

var BoundingRect = __webpack_require__(30);

var zrUtil = __webpack_require__(1);

var imageHelper = __webpack_require__(113);

/**
 * @alias zrender/graphic/Image
 * @extends module:zrender/graphic/Displayable
 * @constructor
 * @param {Object} opts
 */
function ZImage(opts) {
  Displayable.call(this, opts);
}

ZImage.prototype = {
  constructor: ZImage,
  type: 'image',
  brush: function (ctx, prevEl) {
    var style = this.style;
    var src = style.image; // Must bind each time

    style.bind(ctx, this, prevEl);
    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);

    if (!image || !imageHelper.isImageReady(image)) {
      return;
    } // 图片已经加载完成
    // if (image.nodeName.toUpperCase() == 'IMG') {
    //     if (!image.complete) {
    //         return;
    //     }
    // }
    // Else is canvas


    var x = style.x || 0;
    var y = style.y || 0;
    var width = style.width;
    var height = style.height;
    var aspect = image.width / image.height;

    if (width == null && height != null) {
      // Keep image/height ratio
      width = height * aspect;
    } else if (height == null && width != null) {
      height = width / aspect;
    } else if (width == null && height == null) {
      width = image.width;
      height = image.height;
    } // 设置transform


    this.setTransform(ctx);

    if (style.sWidth && style.sHeight) {
      var sx = style.sx || 0;
      var sy = style.sy || 0;
      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);
    } else if (style.sx && style.sy) {
      var sx = style.sx;
      var sy = style.sy;
      var sWidth = width - sx;
      var sHeight = height - sy;
      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);
    } else {
      ctx.drawImage(image, x, y, width, height);
    } // Draw rect text


    if (style.text != null) {
      // Only restore transform when needs draw text.
      this.restoreTransform(ctx);
      this.drawRectText(ctx, this.getBoundingRect());
    }
  },
  getBoundingRect: function () {
    var style = this.style;

    if (!this._rect) {
      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);
    }

    return this._rect;
  }
};
zrUtil.inherits(ZImage, Displayable);
var _default = ZImage;
module.exports = _default;

/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

var _util = __webpack_require__(1);

var retrieve2 = _util.retrieve2;
var retrieve3 = _util.retrieve3;
var each = _util.each;
var normalizeCssArray = _util.normalizeCssArray;
var isString = _util.isString;
var isObject = _util.isObject;

var textContain = __webpack_require__(55);

var roundRectHelper = __webpack_require__(182);

var imageHelper = __webpack_require__(113);

var fixShadow = __webpack_require__(177);

// TODO: Have not support 'start', 'end' yet.
var VALID_TEXT_ALIGN = {
  left: 1,
  right: 1,
  center: 1
};
var VALID_TEXT_VERTICAL_ALIGN = {
  top: 1,
  bottom: 1,
  middle: 1
};
/**
 * @param {module:zrender/graphic/Style} style
 * @return {module:zrender/graphic/Style} The input style.
 */

function normalizeTextStyle(style) {
  normalizeStyle(style);
  each(style.rich, normalizeStyle);
  return style;
}

function normalizeStyle(style) {
  if (style) {
    style.font = textContain.makeFont(style);
    var textAlign = style.textAlign;
    textAlign === 'middle' && (textAlign = 'center');
    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.

    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;
    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');
    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';
    var textPadding = style.textPadding;

    if (textPadding) {
      style.textPadding = normalizeCssArray(style.textPadding);
    }
  }
}
/**
 * @param {CanvasRenderingContext2D} ctx
 * @param {string} text
 * @param {module:zrender/graphic/Style} style
 * @param {Object|boolean} [rect] {x, y, width, height}
 *                  If set false, rect text is not used.
 */


function renderText(hostEl, ctx, text, style, rect) {
  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);
}

function renderPlainText(hostEl, ctx, text, style, rect) {
  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);
  var textPadding = style.textPadding;
  var contentBlock = hostEl.__textCotentBlock;

  if (!contentBlock || hostEl.__dirty) {
    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);
  }

  var outerHeight = contentBlock.outerHeight;
  var textLines = contentBlock.lines;
  var lineHeight = contentBlock.lineHeight;
  var boxPos = getBoxPosition(outerHeight, style, rect);
  var baseX = boxPos.baseX;
  var baseY = boxPos.baseY;
  var textAlign = boxPos.textAlign;
  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.

  applyTextRotation(ctx, style, rect, baseX, baseY);
  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);
  var textX = baseX;
  var textY = boxY;
  var needDrawBg = needDrawBackground(style);

  if (needDrawBg || textPadding) {
    // Consider performance, do not call getTextWidth util necessary.
    var textWidth = textContain.getWidth(text, font);
    var outerWidth = textWidth;
    textPadding && (outerWidth += textPadding[1] + textPadding[3]);
    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);
    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);

    if (textPadding) {
      textX = getTextXForPadding(baseX, textAlign, textPadding);
      textY += textPadding[0];
    }
  }

  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be "middle". Otherwise, if using "top", the
  // text will offset downward a little bit in font "Microsoft YaHei".

  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.

  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);
  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');
  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);
  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.

  textY += lineHeight / 2;
  var textStrokeWidth = style.textStrokeWidth;
  var textStroke = getStroke(style.textStroke, textStrokeWidth);
  var textFill = getFill(style.textFill);

  if (textStroke) {
    setCtx(ctx, 'lineWidth', textStrokeWidth);
    setCtx(ctx, 'strokeStyle', textStroke);
  }

  if (textFill) {
    setCtx(ctx, 'fillStyle', textFill);
  }

  for (var i = 0; i < textLines.length; i++) {
    // Fill after stroke so the outline will not cover the main part.
    textStroke && ctx.strokeText(textLines[i], textX, textY);
    textFill && ctx.fillText(textLines[i], textX, textY);
    textY += lineHeight;
  }
}

function renderRichText(hostEl, ctx, text, style, rect) {
  var contentBlock = hostEl.__textCotentBlock;

  if (!contentBlock || hostEl.__dirty) {
    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);
  }

  drawRichText(hostEl, ctx, contentBlock, style, rect);
}

function drawRichText(hostEl, ctx, contentBlock, style, rect) {
  var contentWidth = contentBlock.width;
  var outerWidth = contentBlock.outerWidth;
  var outerHeight = contentBlock.outerHeight;
  var textPadding = style.textPadding;
  var boxPos = getBoxPosition(outerHeight, style, rect);
  var baseX = boxPos.baseX;
  var baseY = boxPos.baseY;
  var textAlign = boxPos.textAlign;
  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.

  applyTextRotation(ctx, style, rect, baseX, baseY);
  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);
  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);
  var xLeft = boxX;
  var lineTop = boxY;

  if (textPadding) {
    xLeft += textPadding[3];
    lineTop += textPadding[0];
  }

  var xRight = xLeft + contentWidth;
  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);

  for (var i = 0; i < contentBlock.lines.length; i++) {
    var line = contentBlock.lines[i];
    var tokens = line.tokens;
    var tokenCount = tokens.length;
    var lineHeight = line.lineHeight;
    var usedWidth = line.width;
    var leftIndex = 0;
    var lineXLeft = xLeft;
    var lineXRight = xRight;
    var rightIndex = tokenCount - 1;
    var token;

    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {
      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');
      usedWidth -= token.width;
      lineXLeft += token.width;
      leftIndex++;
    }

    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {
      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');
      usedWidth -= token.width;
      lineXRight -= token.width;
      rightIndex--;
    } // The other tokens are placed as textAlign 'center' if there is enough space.


    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;

    while (leftIndex <= rightIndex) {
      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.

      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');
      lineXLeft += token.width;
      leftIndex++;
    }

    lineTop += lineHeight;
  }
}

function applyTextRotation(ctx, style, rect, x, y) {
  // textRotation only apply in RectText.
  if (rect && style.textRotation) {
    var origin = style.textOrigin;

    if (origin === 'center') {
      x = rect.width / 2 + rect.x;
      y = rect.height / 2 + rect.y;
    } else if (origin) {
      x = origin[0] + rect.x;
      y = origin[1] + rect.y;
    }

    ctx.translate(x, y); // Positive: anticlockwise

    ctx.rotate(-style.textRotation);
    ctx.translate(-x, -y);
  }
}

function placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {
  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of
  // the bias of "Microsoft YaHei".

  var textVerticalAlign = token.textVerticalAlign;
  var y = lineTop + lineHeight / 2;

  if (textVerticalAlign === 'top') {
    y = lineTop + token.height / 2;
  } else if (textVerticalAlign === 'bottom') {
    y = lineTop + lineHeight - token.height / 2;
  }

  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);
  var textPadding = token.textPadding;

  if (textPadding) {
    x = getTextXForPadding(x, textAlign, textPadding);
    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;
  }

  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));
  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');
  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));
  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));
  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be "middle". Otherwise, if using "top", the
  // text will offset downward a little bit in font "Microsoft YaHei".

  setCtx(ctx, 'textBaseline', 'middle');
  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);
  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);
  var textFill = getFill(tokenStyle.textFill || style.textFill);
  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.

  if (textStroke) {
    setCtx(ctx, 'lineWidth', textStrokeWidth);
    setCtx(ctx, 'strokeStyle', textStroke);
    ctx.strokeText(token.text, x, y);
  }

  if (textFill) {
    setCtx(ctx, 'fillStyle', textFill);
    ctx.fillText(token.text, x, y);
  }
}

function needDrawBackground(style) {
  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;
} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}
// shape: {x, y, width, height}


function drawBackground(hostEl, ctx, style, x, y, width, height) {
  var textBackgroundColor = style.textBackgroundColor;
  var textBorderWidth = style.textBorderWidth;
  var textBorderColor = style.textBorderColor;
  var isPlainBg = isString(textBackgroundColor);
  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);
  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');
  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);
  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);

  if (isPlainBg || textBorderWidth && textBorderColor) {
    ctx.beginPath();
    var textBorderRadius = style.textBorderRadius;

    if (!textBorderRadius) {
      ctx.rect(x, y, width, height);
    } else {
      roundRectHelper.buildPath(ctx, {
        x: x,
        y: y,
        width: width,
        height: height,
        r: textBorderRadius
      });
    }

    ctx.closePath();
  }

  if (isPlainBg) {
    setCtx(ctx, 'fillStyle', textBackgroundColor);
    ctx.fill();
  } else if (isObject(textBackgroundColor)) {
    var image = textBackgroundColor.image;
    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);

    if (image && imageHelper.isImageReady(image)) {
      ctx.drawImage(image, x, y, width, height);
    }
  }

  if (textBorderWidth && textBorderColor) {
    setCtx(ctx, 'lineWidth', textBorderWidth);
    setCtx(ctx, 'strokeStyle', textBorderColor);
    ctx.stroke();
  }
}

function onBgImageLoaded(image, textBackgroundColor) {
  // Replace image, so that `contain/text.js#parseRichText`
  // will get correct result in next tick.
  textBackgroundColor.image = image;
}

function getBoxPosition(blockHeiht, style, rect) {
  var baseX = style.x || 0;
  var baseY = style.y || 0;
  var textAlign = style.textAlign;
  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord

  if (rect) {
    var textPosition = style.textPosition;

    if (textPosition instanceof Array) {
      // Percent
      baseX = rect.x + parsePercent(textPosition[0], rect.width);
      baseY = rect.y + parsePercent(textPosition[1], rect.height);
    } else {
      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);
      baseX = res.x;
      baseY = res.y; // Default align and baseline when has textPosition

      textAlign = textAlign || res.textAlign;
      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;
    } // textOffset is only support in RectText, otherwise
    // we have to adjust boundingRect for textOffset.


    var textOffset = style.textOffset;

    if (textOffset) {
      baseX += textOffset[0];
      baseY += textOffset[1];
    }
  }

  return {
    baseX: baseX,
    baseY: baseY,
    textAlign: textAlign,
    textVerticalAlign: textVerticalAlign
  };
}

function setCtx(ctx, prop, value) {
  ctx[prop] = fixShadow(ctx, prop, value);
  return ctx[prop];
}
/**
 * @param {string} [stroke] If specified, do not check style.textStroke.
 * @param {string} [lineWidth] If specified, do not check style.textStroke.
 * @param {number} style
 */


function getStroke(stroke, lineWidth) {
  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?
  : stroke.image || stroke.colorStops ? '#000' : stroke;
}

function getFill(fill) {
  return fill == null || fill === 'none' ? null // TODO pattern and gradient?
  : fill.image || fill.colorStops ? '#000' : fill;
}

function parsePercent(value, maxValue) {
  if (typeof value === 'string') {
    if (value.lastIndexOf('%') >= 0) {
      return parseFloat(value) / 100 * maxValue;
    }

    return parseFloat(value);
  }

  return value;
}

function getTextXForPadding(x, textAlign, textPadding) {
  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];
}
/**
 * @param {string} text
 * @param {module:zrender/Style} style
 * @return {boolean}
 */


function needDrawText(text, style) {
  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);
}

exports.normalizeTextStyle = normalizeTextStyle;
exports.renderText = renderText;
exports.getStroke = getStroke;
exports.getFill = getFill;
exports.needDrawText = needDrawText;

/***/ }),
/* 182 */
/***/ (function(module, exports) {

function buildPath(ctx, shape) {
  var x = shape.x;
  var y = shape.y;
  var width = shape.width;
  var height = shape.height;
  var r = shape.r;
  var r1;
  var r2;
  var r3;
  var r4; // Convert width and height to positive for better borderRadius

  if (width < 0) {
    x = x + width;
    width = -width;
  }

  if (height < 0) {
    y = y + height;
    height = -height;
  }

  if (typeof r === 'number') {
    r1 = r2 = r3 = r4 = r;
  } else if (r instanceof Array) {
    if (r.length === 1) {
      r1 = r2 = r3 = r4 = r[0];
    } else if (r.length === 2) {
      r1 = r3 = r[0];
      r2 = r4 = r[1];
    } else if (r.length === 3) {
      r1 = r[0];
      r2 = r4 = r[1];
      r3 = r[2];
    } else {
      r1 = r[0];
      r2 = r[1];
      r3 = r[2];
      r4 = r[3];
    }
  } else {
    r1 = r2 = r3 = r4 = 0;
  }

  var total;

  if (r1 + r2 > width) {
    total = r1 + r2;
    r1 *= width / total;
    r2 *= width / total;
  }

  if (r3 + r4 > width) {
    total = r3 + r4;
    r3 *= width / total;
    r4 *= width / total;
  }

  if (r2 + r3 > height) {
    total = r2 + r3;
    r2 *= height / total;
    r3 *= height / total;
  }

  if (r1 + r4 > height) {
    total = r1 + r4;
    r1 *= height / total;
    r4 *= height / total;
  }

  ctx.moveTo(x + r1, y);
  ctx.lineTo(x + width - r2, y);
  r2 !== 0 && ctx.arc(x + width - r2, y + r2, r2, -Math.PI / 2, 0);
  ctx.lineTo(x + width, y + height - r3);
  r3 !== 0 && ctx.arc(x + width - r3, y + height - r3, r3, 0, Math.PI / 2);
  ctx.lineTo(x + r4, y + height);
  r4 !== 0 && ctx.arc(x + r4, y + height - r4, r4, Math.PI / 2, Math.PI);
  ctx.lineTo(x, y + r1);
  r1 !== 0 && ctx.arc(x + r1, y + r1, r1, Math.PI, Math.PI * 1.5);
}

exports.buildPath = buildPath;

/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

var _config = __webpack_require__(16);

var __DEV__ = _config.__DEV__;

var _util = __webpack_require__(1);

var each = _util.each;
var filter = _util.filter;
var map = _util.map;
var isArray = _util.isArray;
var indexOf = _util.indexOf;
var isObject = _util.isObject;
var isString = _util.isString;
var createHashMap = _util.createHashMap;
var assert = _util.assert;
var clone = _util.clone;
var merge = _util.merge;
var extend = _util.extend;
var mixin = _util.mixin;

var modelUtil = __webpack_require__(7);

var Model = __webpack_require__(42);

var ComponentModel = __webpack_require__(43);

var globalDefault = __webpack_require__(476);

var colorPaletteMixin = __webpack_require__(189);

var _sourceHelper = __webpack_require__(87);

var resetSourceDefaulter = _sourceHelper.resetSourceDefaulter;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * ECharts global model
 *
 * @module {echarts/model/Global}
 */

/**
 * Caution: If the mechanism should be changed some day, these cases
 * should be considered:
 *
 * (1) In `merge option` mode, if using the same option to call `setOption`
 * many times, the result should be the same (try our best to ensure that).
 * (2) In `merge option` mode, if a component has no id/name specified, it
 * will be merged by index, and the result sequence of the components is
 * consistent to the original sequence.
 * (3) `reset` feature (in toolbox). Find detailed info in comments about
 * `mergeOption` in module:echarts/model/OptionManager.
 */
var OPTION_INNER_KEY = '\0_ec_inner';
/**
 * @alias module:echarts/model/Global
 *
 * @param {Object} option
 * @param {module:echarts/model/Model} parentModel
 * @param {Object} theme
 */

var GlobalModel = Model.extend({
  init: function (option, parentModel, theme, optionManager) {
    theme = theme || {};
    this.option = null; // Mark as not initialized.

    /**
     * @type {module:echarts/model/Model}
     * @private
     */

    this._theme = new Model(theme);
    /**
     * @type {module:echarts/model/OptionManager}
     */

    this._optionManager = optionManager;
  },
  setOption: function (option, optionPreprocessorFuncs) {
    assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');

    this._optionManager.setOption(option, optionPreprocessorFuncs);

    this.resetOption(null);
  },

  /**
   * @param {string} type null/undefined: reset all.
   *                      'recreate': force recreate all.
   *                      'timeline': only reset timeline option
   *                      'media': only reset media query option
   * @return {boolean} Whether option changed.
   */
  resetOption: function (type) {
    var optionChanged = false;
    var optionManager = this._optionManager;

    if (!type || type === 'recreate') {
      var baseOption = optionManager.mountOption(type === 'recreate');

      if (!this.option || type === 'recreate') {
        initBase.call(this, baseOption);
      } else {
        this.restoreData();
        this.mergeOption(baseOption);
      }

      optionChanged = true;
    }

    if (type === 'timeline' || type === 'media') {
      this.restoreData();
    }

    if (!type || type === 'recreate' || type === 'timeline') {
      var timelineOption = optionManager.getTimelineOption(this);
      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);
    }

    if (!type || type === 'recreate' || type === 'media') {
      var mediaOptions = optionManager.getMediaOption(this, this._api);

      if (mediaOptions.length) {
        each(mediaOptions, function (mediaOption) {
          this.mergeOption(mediaOption, optionChanged = true);
        }, this);
      }
    }

    return optionChanged;
  },

  /**
   * @protected
   */
  mergeOption: function (newOption) {
    var option = this.option;
    var componentsMap = this._componentsMap;
    var newCptTypes = [];
    resetSourceDefaulter(this); // If no component class, merge directly.
    // For example: color, animaiton options, etc.

    each(newOption, function (componentOption, mainType) {
      if (componentOption == null) {
        return;
      }

      if (!ComponentModel.hasClass(mainType)) {
        // globalSettingTask.dirty();
        option[mainType] = option[mainType] == null ? clone(componentOption) : merge(option[mainType], componentOption, true);
      } else if (mainType) {
        newCptTypes.push(mainType);
      }
    });
    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);

    function visitComponent(mainType, dependencies) {
      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);
      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);
      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.

      each(mapResult, function (item, index) {
        var opt = item.option;

        if (isObject(opt)) {
          item.keyInfo.mainType = mainType;
          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);
        }
      });
      var dependentModels = getComponentsByTypes(componentsMap, dependencies);
      option[mainType] = [];
      componentsMap.set(mainType, []);
      each(mapResult, function (resultItem, index) {
        var componentModel = resultItem.exist;
        var newCptOption = resultItem.option;
        assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},
        // see removeEdgeAndAdd in topologicalTravel and
        // ComponentModel.getAllClassMainTypes.

        if (!newCptOption) {
          componentModel.mergeOption({}, this);
          componentModel.optionUpdated({}, false);
        } else {
          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);

          if (componentModel && componentModel instanceof ComponentModelClass) {
            componentModel.name = resultItem.keyInfo.name; // componentModel.settingTask && componentModel.settingTask.dirty();

            componentModel.mergeOption(newCptOption, this);
            componentModel.optionUpdated(newCptOption, false);
          } else {
            // PENDING Global as parent ?
            var extraOpt = extend({
              dependentModels: dependentModels,
              componentIndex: index
            }, resultItem.keyInfo);
            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);
            extend(componentModel, extraOpt);
            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.
            // newCptOption has been used as componentModel.option
            // and may be merged with theme and default, so pass null
            // to avoid confusion.

            componentModel.optionUpdated(null, true);
          }
        }

        componentsMap.get(mainType)[index] = componentModel;
        option[mainType][index] = componentModel.option;
      }, this); // Backup series for filtering.

      if (mainType === 'series') {
        createSeriesIndices(this, componentsMap.get('series'));
      }
    }

    this._seriesIndicesMap = createHashMap(this._seriesIndices = this._seriesIndices || []);
  },

  /**
   * Get option for output (cloned option and inner info removed)
   * @public
   * @return {Object}
   */
  getOption: function () {
    var option = clone(this.option);
    each(option, function (opts, mainType) {
      if (ComponentModel.hasClass(mainType)) {
        var opts = modelUtil.normalizeToArray(opts);

        for (var i = opts.length - 1; i >= 0; i--) {
          // Remove options with inner id.
          if (modelUtil.isIdInner(opts[i])) {
            opts.splice(i, 1);
          }
        }

        option[mainType] = opts;
      }
    });
    delete option[OPTION_INNER_KEY];
    return option;
  },

  /**
   * @return {module:echarts/model/Model}
   */
  getTheme: function () {
    return this._theme;
  },

  /**
   * @param {string} mainType
   * @param {number} [idx=0]
   * @return {module:echarts/model/Component}
   */
  getComponent: function (mainType, idx) {
    var list = this._componentsMap.get(mainType);

    if (list) {
      return list[idx || 0];
    }
  },

  /**
   * If none of index and id and name used, return all components with mainType.
   * @param {Object} condition
   * @param {string} condition.mainType
   * @param {string} [condition.subType] If ignore, only query by mainType
   * @param {number|Array.<number>} [condition.index] Either input index or id or name.
   * @param {string|Array.<string>} [condition.id] Either input index or id or name.
   * @param {string|Array.<string>} [condition.name] Either input index or id or name.
   * @return {Array.<module:echarts/model/Component>}
   */
  queryComponents: function (condition) {
    var mainType = condition.mainType;

    if (!mainType) {
      return [];
    }

    var index = condition.index;
    var id = condition.id;
    var name = condition.name;

    var cpts = this._componentsMap.get(mainType);

    if (!cpts || !cpts.length) {
      return [];
    }

    var result;

    if (index != null) {
      if (!isArray(index)) {
        index = [index];
      }

      result = filter(map(index, function (idx) {
        return cpts[idx];
      }), function (val) {
        return !!val;
      });
    } else if (id != null) {
      var isIdArray = isArray(id);
      result = filter(cpts, function (cpt) {
        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;
      });
    } else if (name != null) {
      var isNameArray = isArray(name);
      result = filter(cpts, function (cpt) {
        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;
      });
    } else {
      // Return all components with mainType
      result = cpts.slice();
    }

    return filterBySubType(result, condition);
  },

  /**
   * The interface is different from queryComponents,
   * which is convenient for inner usage.
   *
   * @usage
   * var result = findComponents(
   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}
   * );
   * var result = findComponents(
   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}
   * );
   * var result = findComponents(
   *     {mainType: 'series'},
   *     function (model, index) {...}
   * );
   * // result like [component0, componnet1, ...]
   *
   * @param {Object} condition
   * @param {string} condition.mainType Mandatory.
   * @param {string} [condition.subType] Optional.
   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},
   *        where xxx is mainType.
   *        If query attribute is null/undefined or has no index/id/name,
   *        do not filtering by query conditions, which is convenient for
   *        no-payload situations or when target of action is global.
   * @param {Function} [condition.filter] parameter: component, return boolean.
   * @return {Array.<module:echarts/model/Component>}
   */
  findComponents: function (condition) {
    var query = condition.query;
    var mainType = condition.mainType;
    var queryCond = getQueryCond(query);
    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);
    return doFilter(filterBySubType(result, condition));

    function getQueryCond(q) {
      var indexAttr = mainType + 'Index';
      var idAttr = mainType + 'Id';
      var nameAttr = mainType + 'Name';
      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {
        mainType: mainType,
        // subType will be filtered finally.
        index: q[indexAttr],
        id: q[idAttr],
        name: q[nameAttr]
      } : null;
    }

    function doFilter(res) {
      return condition.filter ? filter(res, condition.filter) : res;
    }
  },

  /**
   * @usage
   * eachComponent('legend', function (legendModel, index) {
   *     ...
   * });
   * eachComponent(function (componentType, model, index) {
   *     // componentType does not include subType
   *     // (componentType is 'xxx' but not 'xxx.aa')
   * });
   * eachComponent(
   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},
   *     function (model, index) {...}
   * );
   * eachComponent(
   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},
   *     function (model, index) {...}
   * );
   *
   * @param {string|Object=} mainType When mainType is object, the definition
   *                                  is the same as the method 'findComponents'.
   * @param {Function} cb
   * @param {*} context
   */
  eachComponent: function (mainType, cb, context) {
    var componentsMap = this._componentsMap;

    if (typeof mainType === 'function') {
      context = cb;
      cb = mainType;
      componentsMap.each(function (components, componentType) {
        each(components, function (component, index) {
          cb.call(context, componentType, component, index);
        });
      });
    } else if (isString(mainType)) {
      each(componentsMap.get(mainType), cb, context);
    } else if (isObject(mainType)) {
      var queryResult = this.findComponents(mainType);
      each(queryResult, cb, context);
    }
  },

  /**
   * @param {string} name
   * @return {Array.<module:echarts/model/Series>}
   */
  getSeriesByName: function (name) {
    var series = this._componentsMap.get('series');

    return filter(series, function (oneSeries) {
      return oneSeries.name === name;
    });
  },

  /**
   * @param {number} seriesIndex
   * @return {module:echarts/model/Series}
   */
  getSeriesByIndex: function (seriesIndex) {
    return this._componentsMap.get('series')[seriesIndex];
  },

  /**
   * Get series list before filtered by type.
   * FIXME: rename to getRawSeriesByType?
   *
   * @param {string} subType
   * @return {Array.<module:echarts/model/Series>}
   */
  getSeriesByType: function (subType) {
    var series = this._componentsMap.get('series');

    return filter(series, function (oneSeries) {
      return oneSeries.subType === subType;
    });
  },

  /**
   * @return {Array.<module:echarts/model/Series>}
   */
  getSeries: function () {
    return this._componentsMap.get('series').slice();
  },

  /**
   * @return {number}
   */
  getSeriesCount: function () {
    return this._componentsMap.get('series').length;
  },

  /**
   * After filtering, series may be different
   * frome raw series.
   *
   * @param {Function} cb
   * @param {*} context
   */
  eachSeries: function (cb, context) {
    assertSeriesInitialized(this);
    each(this._seriesIndices, function (rawSeriesIndex) {
      var series = this._componentsMap.get('series')[rawSeriesIndex];

      cb.call(context, series, rawSeriesIndex);
    }, this);
  },

  /**
   * Iterate raw series before filtered.
   *
   * @param {Function} cb
   * @param {*} context
   */
  eachRawSeries: function (cb, context) {
    each(this._componentsMap.get('series'), cb, context);
  },

  /**
   * After filtering, series may be different.
   * frome raw series.
   *
   * @parma {string} subType
   * @param {Function} cb
   * @param {*} context
   */
  eachSeriesByType: function (subType, cb, context) {
    assertSeriesInitialized(this);
    each(this._seriesIndices, function (rawSeriesIndex) {
      var series = this._componentsMap.get('series')[rawSeriesIndex];

      if (series.subType === subType) {
        cb.call(context, series, rawSeriesIndex);
      }
    }, this);
  },

  /**
   * Iterate raw series before filtered of given type.
   *
   * @parma {string} subType
   * @param {Function} cb
   * @param {*} context
   */
  eachRawSeriesByType: function (subType, cb, context) {
    return each(this.getSeriesByType(subType), cb, context);
  },

  /**
   * @param {module:echarts/model/Series} seriesModel
   */
  isSeriesFiltered: function (seriesModel) {
    assertSeriesInitialized(this);
    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;
  },

  /**
   * @return {Array.<number>}
   */
  getCurrentSeriesIndices: function () {
    return (this._seriesIndices || []).slice();
  },

  /**
   * @param {Function} cb
   * @param {*} context
   */
  filterSeries: function (cb, context) {
    assertSeriesInitialized(this);
    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);
    createSeriesIndices(this, filteredSeries);
  },
  restoreData: function (payload) {
    var componentsMap = this._componentsMap;
    createSeriesIndices(this, componentsMap.get('series'));
    var componentTypes = [];
    componentsMap.each(function (components, componentType) {
      componentTypes.push(componentType);
    });
    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {
      each(componentsMap.get(componentType), function (component) {
        (componentType !== 'series' || !isNotTargetSeries(component, payload)) && component.restoreData();
      });
    });
  }
});

function isNotTargetSeries(seriesModel, payload) {
  if (payload) {
    var index = payload.seiresIndex;
    var id = payload.seriesId;
    var name = payload.seriesName;
    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name != null && seriesModel.name !== name;
  }
}
/**
 * @inner
 */


function mergeTheme(option, theme) {
  // PENDING
  // NOT use `colorLayer` in theme if option has `color`
  var notMergeColorLayer = option.color && !option.colorLayer;
  each(theme, function (themeItem, name) {
    if (name === 'colorLayer' && notMergeColorLayer) {
      return;
    } // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理


    if (!ComponentModel.hasClass(name)) {
      if (typeof themeItem === 'object') {
        option[name] = !option[name] ? clone(themeItem) : merge(option[name], themeItem, false);
      } else {
        if (option[name] == null) {
          option[name] = themeItem;
        }
      }
    }
  });
}

function initBase(baseOption) {
  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,
  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.

  this.option = {};
  this.option[OPTION_INNER_KEY] = 1;
  /**
   * Init with series: [], in case of calling findSeries method
   * before series initialized.
   * @type {Object.<string, Array.<module:echarts/model/Model>>}
   * @private
   */

  this._componentsMap = createHashMap({
    series: []
  });
  /**
   * Mapping between filtered series list and raw series list.
   * key: filtered series indices, value: raw series indices.
   * @type {Array.<nubmer>}
   * @private
   */

  this._seriesIndices;
  this._seriesIndicesMap;
  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property

  merge(baseOption, globalDefault, false);
  this.mergeOption(baseOption);
}
/**
 * @inner
 * @param {Array.<string>|string} types model types
 * @return {Object} key: {string} type, value: {Array.<Object>} models
 */


function getComponentsByTypes(componentsMap, types) {
  if (!isArray(types)) {
    types = types ? [types] : [];
  }

  var ret = {};
  each(types, function (type) {
    ret[type] = (componentsMap.get(type) || []).slice();
  });
  return ret;
}
/**
 * @inner
 */


function determineSubType(mainType, newCptOption, existComponent) {
  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.
  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType

  return subType;
}
/**
 * @inner
 */


function createSeriesIndices(ecModel, seriesModels) {
  ecModel._seriesIndicesMap = createHashMap(ecModel._seriesIndices = map(seriesModels, function (series) {
    return series.componentIndex;
  }) || []);
}
/**
 * @inner
 */


function filterBySubType(components, condition) {
  // Using hasOwnProperty for restrict. Consider
  // subType is undefined in user payload.
  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {
    return cpt.subType === condition.subType;
  }) : components;
}
/**
 * @inner
 */


function assertSeriesInitialized(ecModel) {}

mixin(GlobalModel, colorPaletteMixin);
var _default = GlobalModel;
module.exports = _default;

/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

var vec2 = __webpack_require__(17);

var curve = __webpack_require__(65);

/**
 * @author Yi Shen(https://github.com/pissang)
 */
var mathMin = Math.min;
var mathMax = Math.max;
var mathSin = Math.sin;
var mathCos = Math.cos;
var PI2 = Math.PI * 2;
var start = vec2.create();
var end = vec2.create();
var extremity = vec2.create();
/**
 * 从顶点数组中计算出最小包围盒，写入`min`和`max`中
 * @module zrender/core/bbox
 * @param {Array<Object>} points 顶点数组
 * @param {number} min
 * @param {number} max
 */

function fromPoints(points, min, max) {
  if (points.length === 0) {
    return;
  }

  var p = points[0];
  var left = p[0];
  var right = p[0];
  var top = p[1];
  var bottom = p[1];
  var i;

  for (i = 1; i < points.length; i++) {
    p = points[i];
    left = mathMin(left, p[0]);
    right = mathMax(right, p[0]);
    top = mathMin(top, p[1]);
    bottom = mathMax(bottom, p[1]);
  }

  min[0] = left;
  min[1] = top;
  max[0] = right;
  max[1] = bottom;
}
/**
 * @memberOf module:zrender/core/bbox
 * @param {number} x0
 * @param {number} y0
 * @param {number} x1
 * @param {number} y1
 * @param {Array.<number>} min
 * @param {Array.<number>} max
 */


function fromLine(x0, y0, x1, y1, min, max) {
  min[0] = mathMin(x0, x1);
  min[1] = mathMin(y0, y1);
  max[0] = mathMax(x0, x1);
  max[1] = mathMax(y0, y1);
}

var xDim = [];
var yDim = [];
/**
 * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中
 * @memberOf module:zrender/core/bbox
 * @param {number} x0
 * @param {number} y0
 * @param {number} x1
 * @param {number} y1
 * @param {number} x2
 * @param {number} y2
 * @param {number} x3
 * @param {number} y3
 * @param {Array.<number>} min
 * @param {Array.<number>} max
 */

function fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {
  var cubicExtrema = curve.cubicExtrema;
  var cubicAt = curve.cubicAt;
  var i;
  var n = cubicExtrema(x0, x1, x2, x3, xDim);
  min[0] = Infinity;
  min[1] = Infinity;
  max[0] = -Infinity;
  max[1] = -Infinity;

  for (i = 0; i < n; i++) {
    var x = cubicAt(x0, x1, x2, x3, xDim[i]);
    min[0] = mathMin(x, min[0]);
    max[0] = mathMax(x, max[0]);
  }

  n = cubicExtrema(y0, y1, y2, y3, yDim);

  for (i = 0; i < n; i++) {
    var y = cubicAt(y0, y1, y2, y3, yDim[i]);
    min[1] = mathMin(y, min[1]);
    max[1] = mathMax(y, max[1]);
  }

  min[0] = mathMin(x0, min[0]);
  max[0] = mathMax(x0, max[0]);
  min[0] = mathMin(x3, min[0]);
  max[0] = mathMax(x3, max[0]);
  min[1] = mathMin(y0, min[1]);
  max[1] = mathMax(y0, max[1]);
  min[1] = mathMin(y3, min[1]);
  max[1] = mathMax(y3, max[1]);
}
/**
 * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中
 * @memberOf module:zrender/core/bbox
 * @param {number} x0
 * @param {number} y0
 * @param {number} x1
 * @param {number} y1
 * @param {number} x2
 * @param {number} y2
 * @param {Array.<number>} min
 * @param {Array.<number>} max
 */


function fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {
  var quadraticExtremum = curve.quadraticExtremum;
  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero

  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);
  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);
  var x = quadraticAt(x0, x1, x2, tx);
  var y = quadraticAt(y0, y1, y2, ty);
  min[0] = mathMin(x0, x2, x);
  min[1] = mathMin(y0, y2, y);
  max[0] = mathMax(x0, x2, x);
  max[1] = mathMax(y0, y2, y);
}
/**
 * 从圆弧中计算出最小包围盒，写入`min`和`max`中
 * @method
 * @memberOf module:zrender/core/bbox
 * @param {number} x
 * @param {number} y
 * @param {number} rx
 * @param {number} ry
 * @param {number} startAngle
 * @param {number} endAngle
 * @param {number} anticlockwise
 * @param {Array.<number>} min
 * @param {Array.<number>} max
 */


function fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {
  var vec2Min = vec2.min;
  var vec2Max = vec2.max;
  var diff = Math.abs(startAngle - endAngle);

  if (diff % PI2 < 1e-4 && diff > 1e-4) {
    // Is a circle
    min[0] = x - rx;
    min[1] = y - ry;
    max[0] = x + rx;
    max[1] = y + ry;
    return;
  }

  start[0] = mathCos(startAngle) * rx + x;
  start[1] = mathSin(startAngle) * ry + y;
  end[0] = mathCos(endAngle) * rx + x;
  end[1] = mathSin(endAngle) * ry + y;
  vec2Min(min, start, end);
  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]

  startAngle = startAngle % PI2;

  if (startAngle < 0) {
    startAngle = startAngle + PI2;
  }

  endAngle = endAngle % PI2;

  if (endAngle < 0) {
    endAngle = endAngle + PI2;
  }

  if (startAngle > endAngle && !anticlockwise) {
    endAngle += PI2;
  } else if (startAngle < endAngle && anticlockwise) {
    startAngle += PI2;
  }

  if (anticlockwise) {
    var tmp = endAngle;
    endAngle = startAngle;
    startAngle = tmp;
  } // var number = 0;
  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;


  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {
    if (angle > startAngle) {
      extremity[0] = mathCos(angle) * rx + x;
      extremity[1] = mathSin(angle) * ry + y;
      vec2Min(min, extremity, min);
      vec2Max(max, extremity, max);
    }
  }
}

exports.fromPoints = fromPoints;
exports.fromLine = fromLine;
exports.fromCubic = fromCubic;
exports.fromQuadratic = fromQuadratic;
exports.fromArc = fromArc;

/***/ }),
/* 185 */
/***/ (function(module, exports) {

var PI2 = Math.PI * 2;

function normalizeRadian(angle) {
  angle %= PI2;

  if (angle < 0) {
    angle += PI2;
  }

  return angle;
}

exports.normalizeRadian = normalizeRadian;

/***/ }),
/* 186 */
/***/ (function(module, exports) {

function windingLine(x0, y0, x1, y1, x, y) {
  if (y > y0 && y > y1 || y < y0 && y < y1) {
    return 0;
  } // Ignore horizontal line


  if (y1 === y0) {
    return 0;
  }

  var dir = y1 < y0 ? 1 : -1;
  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon

  if (t === 1 || t === 0) {
    dir = y1 < y0 ? 0.5 : -0.5;
  }

  var x_ = t * (x1 - x0) + x0; // If (x, y) on the line, considered as "contain".

  return x_ === x ? Infinity : x_ > x ? dir : 0;
}

module.exports = windingLine;

/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

var env = __webpack_require__(20);

// Fix weird bug in some version of IE11 (like 11.0.9600.178**),
// where exception "unexpected call to method or property access"
// might be thrown when calling ctx.fill or ctx.stroke after a path
// whose area size is zero is drawn and ctx.clip() is called and
// shadowBlur is set. See #4572, #3112, #5777.
// (e.g.,
//  ctx.moveTo(10, 10);
//  ctx.lineTo(20, 10);
//  ctx.closePath();
//  ctx.clip();
//  ctx.shadowBlur = 10;
//  ...
//  ctx.fill();
// )
var shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];

function _default(orignalBrush) {
  // version string can be: '11.0'
  return env.browser.ie && env.browser.version >= 11 ? function () {
    var clipPaths = this.__clipPaths;
    var style = this.style;
    var modified;

    if (clipPaths) {
      for (var i = 0; i < clipPaths.length; i++) {
        var clipPath = clipPaths[i];
        var shape = clipPath && clipPath.shape;
        var type = clipPath && clipPath.type;

        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {
          for (var j = 0; j < shadowTemp.length; j++) {
            // It is save to put shadowTemp static, because shadowTemp
            // will be all modified each item brush called.
            shadowTemp[j][2] = style[shadowTemp[j][0]];
            style[shadowTemp[j][0]] = shadowTemp[j][1];
          }

          modified = true;
          break;
        }
      }
    }

    orignalBrush.apply(this, arguments);

    if (modified) {
      for (var j = 0; j < shadowTemp.length; j++) {
        style[shadowTemp[j][0]] = shadowTemp[j][2];
      }
    }
  } : orignalBrush;
}

module.exports = _default;

/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

var smoothSpline = __webpack_require__(463);

var smoothBezier = __webpack_require__(464);

function buildPath(ctx, shape, closePath) {
  var points = shape.points;
  var smooth = shape.smooth;

  if (points && points.length >= 2) {
    if (smooth && smooth !== 'spline') {
      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);
      ctx.moveTo(points[0][0], points[0][1]);
      var len = points.length;

      for (var i = 0; i < (closePath ? len : len - 1); i++) {
        var cp1 = controlPoints[i * 2];
        var cp2 = controlPoints[i * 2 + 1];
        var p = points[(i + 1) % len];
        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);
      }
    } else {
      if (smooth === 'spline') {
        points = smoothSpline(points, closePath);
      }

      ctx.moveTo(points[0][0], points[0][1]);

      for (var i = 1, l = points.length; i < l; i++) {
        ctx.lineTo(points[i][0], points[i][1]);
      }
    }

    closePath && ctx.closePath();
  }
}

exports.buildPath = buildPath;

/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

var _model = __webpack_require__(7);

var makeInner = _model.makeInner;
var normalizeToArray = _model.normalizeToArray;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var inner = makeInner();

function getNearestColorPalette(colors, requestColorNum) {
  var paletteNum = colors.length; // TODO colors must be in order

  for (var i = 0; i < paletteNum; i++) {
    if (colors[i].length > requestColorNum) {
      return colors[i];
    }
  }

  return colors[paletteNum - 1];
}

var _default = {
  clearColorPalette: function () {
    inner(this).colorIdx = 0;
    inner(this).colorNameMap = {};
  },

  /**
   * @param {string} name MUST NOT be null/undefined. Otherwise call this function
   *                 twise with the same parameters will get different result.
   * @param {Object} [scope=this]
   * @param {Object} [requestColorNum]
   * @return {string} color string.
   */
  getColorFromPalette: function (name, scope, requestColorNum) {
    scope = scope || this;
    var scopeFields = inner(scope);
    var colorIdx = scopeFields.colorIdx || 0;
    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.

    if (colorNameMap.hasOwnProperty(name)) {
      return colorNameMap[name];
    }

    var defaultColorPalette = normalizeToArray(this.get('color', true));
    var layeredColorPalette = this.get('colorLayer', true);
    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can't find in layered color palette.

    colorPalette = colorPalette || defaultColorPalette;

    if (!colorPalette || !colorPalette.length) {
      return;
    }

    var color = colorPalette[colorIdx];

    if (name) {
      colorNameMap[name] = color;
    }

    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;
    return color;
  }
};
module.exports = _default;

/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

var _config = __webpack_require__(16);

var __DEV__ = _config.__DEV__;

var _util = __webpack_require__(1);

var createHashMap = _util.createHashMap;
var retrieve = _util.retrieve;
var each = _util.each;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * Helper for model references.
 * There are many manners to refer axis/coordSys.
 */
// TODO
// merge relevant logic to this file?
// check: "modelHelper" of tooltip and "BrushTargetManager".

/**
 * @return {Object} For example:
 * {
 *     coordSysName: 'cartesian2d',
 *     coordSysDims: ['x', 'y', ...],
 *     axisMap: HashMap({
 *         x: xAxisModel,
 *         y: yAxisModel
 *     }),
 *     categoryAxisMap: HashMap({
 *         x: xAxisModel,
 *         y: undefined
 *     }),
 *     // It also indicate that whether there is category axis.
 *     firstCategoryDimIndex: 1,
 *     // To replace user specified encode.
 * }
 */
function getCoordSysDefineBySeries(seriesModel) {
  var coordSysName = seriesModel.get('coordinateSystem');
  var result = {
    coordSysName: coordSysName,
    coordSysDims: [],
    axisMap: createHashMap(),
    categoryAxisMap: createHashMap()
  };
  var fetch = fetchers[coordSysName];

  if (fetch) {
    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);
    return result;
  }
}

var fetchers = {
  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {
    var xAxisModel = seriesModel.getReferringComponents('xAxis')[0];
    var yAxisModel = seriesModel.getReferringComponents('yAxis')[0];
    result.coordSysDims = ['x', 'y'];
    axisMap.set('x', xAxisModel);
    axisMap.set('y', yAxisModel);

    if (isCategory(xAxisModel)) {
      categoryAxisMap.set('x', xAxisModel);
      result.firstCategoryDimIndex = 0;
    }

    if (isCategory(yAxisModel)) {
      categoryAxisMap.set('y', yAxisModel);
      result.firstCategoryDimIndex = 1;
    }
  },
  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {
    var singleAxisModel = seriesModel.getReferringComponents('singleAxis')[0];
    result.coordSysDims = ['single'];
    axisMap.set('single', singleAxisModel);

    if (isCategory(singleAxisModel)) {
      categoryAxisMap.set('single', singleAxisModel);
      result.firstCategoryDimIndex = 0;
    }
  },
  polar: function (seriesModel, result, axisMap, categoryAxisMap) {
    var polarModel = seriesModel.getReferringComponents('polar')[0];
    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');
    var angleAxisModel = polarModel.findAxisModel('angleAxis');
    result.coordSysDims = ['radius', 'angle'];
    axisMap.set('radius', radiusAxisModel);
    axisMap.set('angle', angleAxisModel);

    if (isCategory(radiusAxisModel)) {
      categoryAxisMap.set('radius', radiusAxisModel);
      result.firstCategoryDimIndex = 0;
    }

    if (isCategory(angleAxisModel)) {
      categoryAxisMap.set('angle', angleAxisModel);
      result.firstCategoryDimIndex = 1;
    }
  },
  geo: function (seriesModel, result, axisMap, categoryAxisMap) {
    result.coordSysDims = ['lng', 'lat'];
  },
  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {
    var ecModel = seriesModel.ecModel;
    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));
    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();
    each(parallelModel.parallelAxisIndex, function (axisIndex, index) {
      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);
      var axisDim = coordSysDims[index];
      axisMap.set(axisDim, axisModel);

      if (isCategory(axisModel) && result.firstCategoryDimIndex == null) {
        categoryAxisMap.set(axisDim, axisModel);
        result.firstCategoryDimIndex = index;
      }
    });
  }
};

function isCategory(axisModel) {
  return axisModel.get('type') === 'category';
}

exports.getCoordSysDefineBySeries = getCoordSysDefineBySeries;

/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js

function ExtensionAPI(chartInstance) {
  zrUtil.each(echartsAPIList, function (name) {
    this[name] = zrUtil.bind(chartInstance[name], chartInstance);
  }, this);
}

var _default = ExtensionAPI;
module.exports = _default;

/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

var _config = __webpack_require__(16);

var __DEV__ = _config.__DEV__;

var zrUtil = __webpack_require__(1);

var env = __webpack_require__(20);

var _format = __webpack_require__(33);

var formatTime = _format.formatTime;
var encodeHTML = _format.encodeHTML;
var addCommas = _format.addCommas;
var getTooltipMarker = _format.getTooltipMarker;

var modelUtil = __webpack_require__(7);

var ComponentModel = __webpack_require__(43);

var colorPaletteMixin = __webpack_require__(189);

var dataFormatMixin = __webpack_require__(481);

var _layout = __webpack_require__(49);

var getLayoutParams = _layout.getLayoutParams;
var mergeLayoutParam = _layout.mergeLayoutParam;

var _task = __webpack_require__(117);

var createTask = _task.createTask;

var _sourceHelper = __webpack_require__(87);

var prepareSource = _sourceHelper.prepareSource;
var getSource = _sourceHelper.getSource;

var _dataProvider = __webpack_require__(66);

var retrieveRawValue = _dataProvider.retrieveRawValue;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var inner = modelUtil.makeInner();
var SeriesModel = ComponentModel.extend({
  type: 'series.__base__',

  /**
   * @readOnly
   */
  seriesIndex: 0,
  // coodinateSystem will be injected in the echarts/CoordinateSystem
  coordinateSystem: null,

  /**
   * @type {Object}
   * @protected
   */
  defaultOption: null,

  /**
   * Data provided for legend
   * @type {Function}
   */
  // PENDING
  legendDataProvider: null,

  /**
   * Access path of color for visual
   */
  visualColorAccessPath: 'itemStyle.color',

  /**
   * Support merge layout params.
   * Only support 'box' now (left/right/top/bottom/width/height).
   * @type {string|Object} Object can be {ignoreSize: true}
   * @readOnly
   */
  layoutMode: null,
  init: function (option, parentModel, ecModel, extraOpt) {
    /**
     * @type {number}
     * @readOnly
     */
    this.seriesIndex = this.componentIndex;
    this.dataTask = createTask({
      count: dataTaskCount,
      reset: dataTaskReset
    });
    this.dataTask.context = {
      model: this
    };
    this.mergeDefaultAndTheme(option, ecModel);
    prepareSource(this);
    var data = this.getInitialData(option, ecModel);
    wrapData(data, this);
    this.dataTask.context.data = data;

    /**
     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}
     * @private
     */
    inner(this).dataBeforeProcessed = data; // If we reverse the order (make data firstly, and then make
    // dataBeforeProcessed by cloneShallow), cloneShallow will
    // cause data.graph.data !== data when using
    // module:echarts/data/Graph or module:echarts/data/Tree.
    // See module:echarts/data/helper/linkList
    // Theoretically, it is unreasonable to call `seriesModel.getData()` in the model
    // init or merge stage, because the data can be restored. So we do not `restoreData`
    // and `setData` here, which forbids calling `seriesModel.getData()` in this stage.
    // Call `seriesModel.getRawData()` instead.
    // this.restoreData();

    autoSeriesName(this);
  },

  /**
   * Util for merge default and theme to option
   * @param  {Object} option
   * @param  {module:echarts/model/Global} ecModel
   */
  mergeDefaultAndTheme: function (option, ecModel) {
    var layoutMode = this.layoutMode;
    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.
    // But if name duplicate between series subType
    // (for example: parallel) add component mainType,
    // add suffix 'Series'.

    var themeSubType = this.subType;

    if (ComponentModel.hasClass(themeSubType)) {
      themeSubType += 'Series';
    }

    zrUtil.merge(option, ecModel.getTheme().get(this.subType));
    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`

    modelUtil.defaultEmphasis(option, 'label', ['show']);
    this.fillDataTextStyle(option.data);

    if (layoutMode) {
      mergeLayoutParam(option, inputPositionParams, layoutMode);
    }
  },
  mergeOption: function (newSeriesOption, ecModel) {
    // this.settingTask.dirty();
    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);
    this.fillDataTextStyle(newSeriesOption.data);
    var layoutMode = this.layoutMode;

    if (layoutMode) {
      mergeLayoutParam(this.option, newSeriesOption, layoutMode);
    }

    prepareSource(this);
    var data = this.getInitialData(newSeriesOption, ecModel);
    wrapData(data, this);
    this.dataTask.dirty();
    this.dataTask.context.data = data;
    inner(this).dataBeforeProcessed = data;
    autoSeriesName(this);
  },
  fillDataTextStyle: function (data) {
    // Default data label emphasis `show`
    // FIXME Tree structure data ?
    // FIXME Performance ?
    if (data && !zrUtil.isTypedArray(data)) {
      var props = ['show'];

      for (var i = 0; i < data.length; i++) {
        if (data[i] && data[i].label) {
          modelUtil.defaultEmphasis(data[i], 'label', props);
        }
      }
    }
  },

  /**
   * Init a data structure from data related option in series
   * Must be overwritten
   */
  getInitialData: function () {},

  /**
   * Append data to list
   * @param {Object} params
   * @param {Array|TypedArray} params.data
   */
  appendData: function (params) {
    // FIXME ???
    // (1) If data from dataset, forbidden append.
    // (2) support append data of dataset.
    var data = this.getRawData();
    data.appendData(params.data);
  },

  /**
   * Consider some method like `filter`, `map` need make new data,
   * We should make sure that `seriesModel.getData()` get correct
   * data in the stream procedure. So we fetch data from upstream
   * each time `task.perform` called.
   * @param {string} [dataType]
   * @return {module:echarts/data/List}
   */
  getData: function (dataType) {
    var task = getCurrentTask(this);

    if (task) {
      var data = task.context.data;
      return dataType == null ? data : data.getLinkedData(dataType);
    } else {
      // When series is not alive (that may happen when click toolbox
      // restore or setOption with not merge mode), series data may
      // be still need to judge animation or something when graphic
      // elements want to know whether fade out.
      return inner(this).data;
    }
  },

  /**
   * @param {module:echarts/data/List} data
   */
  setData: function (data) {
    var task = getCurrentTask(this);

    if (task) {
      var context = task.context; // Consider case: filter, data sample.

      if (context.data !== data && task.modifyOutputEnd) {
        task.setOutputEnd(data.count());
      }

      context.outputData = data; // Caution: setData should update context.data,
      // Because getData may be called multiply in a
      // single stage and expect to get the data just
      // set. (For example, AxisProxy, x y both call
      // getData and setDate sequentially).
      // So the context.data should be fetched from
      // upstream each time when a stage starts to be
      // performed.

      if (task !== this.dataTask) {
        context.data = data;
      }
    }

    inner(this).data = data;
  },

  /**
   * @see {module:echarts/data/helper/sourceHelper#getSource}
   * @return {module:echarts/data/Source} source
   */
  getSource: function () {
    return getSource(this);
  },

  /**
   * Get data before processed
   * @return {module:echarts/data/List}
   */
  getRawData: function () {
    return inner(this).dataBeforeProcessed;
  },

  /**
   * Get base axis if has coordinate system and has axis.
   * By default use coordSys.getBaseAxis();
   * Can be overrided for some chart.
   * @return {type} description
   */
  getBaseAxis: function () {
    var coordSys = this.coordinateSystem;
    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();
  },
  // FIXME

  /**
   * Default tooltip formatter
   *
   * @param {number} dataIndex
   * @param {boolean} [multipleSeries=false]
   * @param {number} [dataType]
   */
  formatTooltip: function (dataIndex, multipleSeries, dataType) {
    function formatArrayValue(value) {
      // ??? TODO refactor these logic.
      // check: category-no-encode-has-axis-data in dataset.html
      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {
        var dimItem = data.getDimensionInfo(idx);
        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.displayName != null;
      }, 0);
      var result = [];
      tooltipDims.length ? zrUtil.each(tooltipDims, function (dim) {
        setEachItem(retrieveRawValue(data, dataIndex, dim), dim);
      }) // By default, all dims is used on tooltip.
      : zrUtil.each(value, setEachItem);

      function setEachItem(val, dim) {
        var dimInfo = data.getDimensionInfo(dim); // If `dimInfo.tooltip` is not set, show tooltip.

        if (!dimInfo || dimInfo.otherDims.tooltip === false) {
          return;
        }

        var dimType = dimInfo.type;
        var dimHead = getTooltipMarker({
          color: color,
          type: 'subItem'
        });
        var valStr = (vertially ? dimHead + encodeHTML(dimInfo.displayName || '-') + ': ' : '') + // FIXME should not format time for raw data?
        encodeHTML(dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));
        valStr && result.push(valStr);
      }

      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');
    }

    function formatSingleValue(val) {
      return encodeHTML(addCommas(val));
    }

    var data = this.getData();
    var tooltipDims = data.mapDimension('defaultedTooltip', true);
    var tooltipDimLen = tooltipDims.length;
    var value = this.getRawValue(dataIndex);
    var isValueArr = zrUtil.isArray(value);
    var color = data.getItemVisual(dataIndex, 'color');

    if (zrUtil.isObject(color) && color.colorStops) {
      color = (color.colorStops[0] || {}).color;
    }

    color = color || 'transparent'; // Complicated rule for pretty tooltip.

    var formattedValue = tooltipDimLen > 1 || isValueArr && !tooltipDimLen ? formatArrayValue(value) : tooltipDimLen ? formatSingleValue(retrieveRawValue(data, dataIndex, tooltipDims[0])) : formatSingleValue(isValueArr ? value[0] : value);
    var colorEl = getTooltipMarker(color);
    var name = data.getName(dataIndex);
    var seriesName = this.name;

    if (!modelUtil.isNameSpecified(this)) {
      seriesName = '';
    }

    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';
    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;
  },

  /**
   * @return {boolean}
   */
  isAnimationEnabled: function () {
    if (env.node) {
      return false;
    }

    var animationEnabled = this.getShallow('animation');

    if (animationEnabled) {
      if (this.getData().count() > this.getShallow('animationThreshold')) {
        animationEnabled = false;
      }
    }

    return animationEnabled;
  },
  restoreData: function () {
    this.dataTask.dirty();
  },
  getColorFromPalette: function (name, scope, requestColorNum) {
    var ecModel = this.ecModel; // PENDING

    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope, requestColorNum);

    if (!color) {
      color = ecModel.getColorFromPalette(name, scope, requestColorNum);
    }

    return color;
  },

  /**
   * Use `data.mapDimension(coordDim, true)` instead.
   * @deprecated
   */
  coordDimToDataDim: function (coordDim) {
    return this.getRawData().mapDimension(coordDim, true);
  },

  /**
   * Get progressive rendering count each step
   * @return {number}
   */
  getProgressive: function () {
    return this.get('progressive');
  },

  /**
   * Get progressive rendering count each step
   * @return {number}
   */
  getProgressiveThreshold: function () {
    return this.get('progressiveThreshold');
  },

  /**
   * Get data indices for show tooltip content. See tooltip.
   * @abstract
   * @param {Array.<string>|string} dim
   * @param {Array.<number>} value
   * @param {module:echarts/coord/single/SingleAxis} baseAxis
   * @return {Object} {dataIndices, nestestValue}.
   */
  getAxisTooltipData: null,

  /**
   * See tooltip.
   * @abstract
   * @param {number} dataIndex
   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.
   */
  getTooltipPosition: null,

  /**
   * @see {module:echarts/stream/Scheduler}
   */
  pipeTask: null,

  /**
   * Convinient for override in extended class.
   * @protected
   * @type {Function}
   */
  preventIncremental: null,

  /**
   * @public
   * @readOnly
   * @type {Object}
   */
  pipelineContext: null
});
zrUtil.mixin(SeriesModel, dataFormatMixin);
zrUtil.mixin(SeriesModel, colorPaletteMixin);
/**
 * MUST be called after `prepareSource` called
 * Here we need to make auto series, especially for auto legend. But we
 * do not modify series.name in option to avoid side effects.
 */

function autoSeriesName(seriesModel) {
  // User specified name has higher priority, otherwise it may cause
  // series can not be queried unexpectedly.
  var name = seriesModel.name;

  if (!modelUtil.isNameSpecified(seriesModel)) {
    seriesModel.name = getSeriesAutoName(seriesModel) || name;
  }
}

function getSeriesAutoName(seriesModel) {
  var data = seriesModel.getRawData();
  var dataDims = data.mapDimension('seriesName', true);
  var nameArr = [];
  zrUtil.each(dataDims, function (dataDim) {
    var dimInfo = data.getDimensionInfo(dataDim);
    dimInfo.displayName && nameArr.push(dimInfo.displayName);
  });
  return nameArr.join(' ');
}

function dataTaskCount(context) {
  return context.model.getRawData().count();
}

function dataTaskReset(context) {
  var seriesModel = context.model;
  seriesModel.setData(seriesModel.getRawData().cloneShallow());
  return dataTaskProgress;
}

function dataTaskProgress(param, context) {
  // Avoid repead cloneShallow when data just created in reset.
  if (param.end > context.outputData.count()) {
    context.model.getRawData().cloneShallow(context.outputData);
  }
} // TODO refactor


function wrapData(data, seriesModel) {
  zrUtil.each(data.CHANGABLE_METHODS, function (methodName) {
    data.wrapMethod(methodName, zrUtil.curry(onDataSelfChange, seriesModel));
  });
}

function onDataSelfChange(seriesModel) {
  var task = getCurrentTask(seriesModel);

  if (task) {
    // Consider case: filter, selectRange
    task.setOutputEnd(this.count());
  }
}

function getCurrentTask(seriesModel) {
  var scheduler = (seriesModel.ecModel || {}).scheduler;
  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);

  if (pipeline) {
    // When pipline finished, the currrentTask keep the last
    // task (renderTask).
    var task = pipeline.currentTask;

    if (task) {
      var agentStubMap = task.agentStubMap;

      if (agentStubMap) {
        task = agentStubMap.get(seriesModel.uid);
      }
    }

    return task;
  }
}

var _default = SeriesModel;
module.exports = _default;

/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

var Group = __webpack_require__(82);

var componentUtil = __webpack_require__(86);

var clazzUtil = __webpack_require__(48);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var Component = function () {
  /**
   * @type {module:zrender/container/Group}
   * @readOnly
   */
  this.group = new Group();
  /**
   * @type {string}
   * @readOnly
   */

  this.uid = componentUtil.getUID('viewComponent');
};

Component.prototype = {
  constructor: Component,
  init: function (ecModel, api) {},
  render: function (componentModel, ecModel, api, payload) {},
  dispose: function () {}
};
var componentProto = Component.prototype;

componentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;
}; // Enable Component.extend.


clazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.

clazzUtil.enableClassManagement(Component, {
  registerWhenExtend: true
});
var _default = Component;
module.exports = _default;

/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var List = __webpack_require__(121);

var createDimensions = __webpack_require__(123);

var _sourceType = __webpack_require__(77);

var SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;

var _dimensionHelper = __webpack_require__(122);

var getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;

var _model = __webpack_require__(7);

var getDataItemValue = _model.getDataItemValue;

var CoordinateSystem = __webpack_require__(116);

var _referHelper = __webpack_require__(190);

var getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;

var Source = __webpack_require__(76);

var _dataStackHelper = __webpack_require__(67);

var enableDataStack = _dataStackHelper.enableDataStack;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * @param {module:echarts/data/Source|Array} source Or raw data.
 * @param {module:echarts/model/Series} seriesModel
 * @param {Object} [opt]
 * @param {string} [opt.generateCoord]
 */
function createListFromArray(source, seriesModel, opt) {
  opt = opt || {};

  if (!Source.isInstance(source)) {
    source = Source.seriesDataToSource(source);
  }

  var coordSysName = seriesModel.get('coordinateSystem');
  var registeredCoordSys = CoordinateSystem.get(coordSysName);
  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);
  var coordSysDimDefs;

  if (coordSysDefine) {
    coordSysDimDefs = zrUtil.map(coordSysDefine.coordSysDims, function (dim) {
      var dimInfo = {
        name: dim
      };
      var axisModel = coordSysDefine.axisMap.get(dim);

      if (axisModel) {
        var axisType = axisModel.get('type');
        dimInfo.type = getDimensionTypeByAxis(axisType); // dimInfo.stackable = isStackable(axisType);
      }

      return dimInfo;
    });
  }

  if (!coordSysDimDefs) {
    // Get dimensions from registered coordinate system
    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];
  }

  var dimInfoList = createDimensions(source, {
    coordDimensions: coordSysDimDefs,
    generateCoord: opt.generateCoord
  });
  var firstCategoryDimIndex;
  var hasNameEncode;
  coordSysDefine && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {
    var coordDim = dimInfo.coordDim;
    var categoryAxisModel = coordSysDefine.categoryAxisMap.get(coordDim);

    if (categoryAxisModel) {
      if (firstCategoryDimIndex == null) {
        firstCategoryDimIndex = dimIndex;
      }

      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();
    }

    if (dimInfo.otherDims.itemName != null) {
      hasNameEncode = true;
    }
  });

  if (!hasNameEncode && firstCategoryDimIndex != null) {
    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;
  }

  var stackCalculationInfo = enableDataStack(seriesModel, dimInfoList);
  var list = new List(dimInfoList, seriesModel);
  list.setCalculationInfo(stackCalculationInfo);
  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {
    // Use dataIndex as ordinal value in categoryAxis
    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);
  } : null;
  list.hasItemOption = false;
  list.initData(source, null, dimValueGetter);
  return list;
}

function isNeedCompleteOrdinalData(source) {
  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {
    var sampleItem = firstDataNotNull(source.data || []);
    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));
  }
}

function firstDataNotNull(data) {
  var i = 0;

  while (i < data.length && data[i] == null) {
    i++;
  }

  return data[i];
}

var _default = createListFromArray;
module.exports = _default;

/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

var _util = __webpack_require__(1);

var createHashMap = _util.createHashMap;
var each = _util.each;
var isString = _util.isString;
var defaults = _util.defaults;
var extend = _util.extend;
var isObject = _util.isObject;
var clone = _util.clone;

var _model = __webpack_require__(7);

var normalizeToArray = _model.normalizeToArray;

var _sourceHelper = __webpack_require__(87);

var guessOrdinal = _sourceHelper.guessOrdinal;

var Source = __webpack_require__(76);

var _dimensionHelper = __webpack_require__(122);

var OTHER_DIMENSIONS = _dimensionHelper.OTHER_DIMENSIONS;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * @deprecated
 * Use `echarts/data/helper/createDimensions` instead.
 */

/**
 * @see {module:echarts/test/ut/spec/data/completeDimensions}
 *
 * Complete the dimensions array, by user defined `dimension` and `encode`,
 * and guessing from the data structure.
 * If no 'value' dimension specified, the first no-named dimension will be
 * named as 'value'.
 *
 * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which
 *      provides not only dim template, but also default order.
 *      properties: 'name', 'type', 'displayName'.
 *      `name` of each item provides default coord name.
 *      [{dimsDef: [string|Object, ...]}, ...] dimsDef of sysDim item provides default dim name, and
 *                                    provide dims count that the sysDim required.
 *      [{ordinalMeta}] can be specified.
 * @param {module:echarts/data/Source|Array|Object} source or data (for compatibal with pervious)
 * @param {Object} [opt]
 * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions
 *      For example: ['asdf', {name, type}, ...].
 * @param {Object|HashMap} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}
 * @param {string} [opt.generateCoord] Generate coord dim with the given name.
 *                 If not specified, extra dim names will be:
 *                 'value', 'value0', 'value1', ...
 * @param {number} [opt.generateCoordCount] By default, the generated dim name is `generateCoord`.
 *                 If `generateCoordCount` specified, the generated dim names will be:
 *                 `generateCoord` + 0, `generateCoord` + 1, ...
 *                 can be Infinity, indicate that use all of the remain columns.
 * @param {number} [opt.dimCount] If not specified, guess by the first data item.
 * @param {number} [opt.encodeDefaulter] If not specified, auto find the next available data dim.
 * @return {Array.<Object>} [{
 *      name: string mandatory,
 *      displayName: string, the origin name in dimsDef, see source helper.
 *                 If displayName given, the tooltip will displayed vertically.
 *      coordDim: string mandatory,
 *      coordDimIndex: number mandatory,
 *      type: string optional,
 *      otherDims: { never null/undefined
 *          tooltip: number optional,
 *          label: number optional,
 *          itemName: number optional,
 *          seriesName: number optional,
 *      },
 *      isExtraCoord: boolean true if coord is generated
 *          (not specified in encode and not series specified)
 *      other props ...
 * }]
 */
function completeDimensions(sysDims, source, opt) {
  if (!Source.isInstance(source)) {
    source = Source.seriesDataToSource(source);
  }

  opt = opt || {};
  sysDims = (sysDims || []).slice();
  var dimsDef = (opt.dimsDef || []).slice();
  var encodeDef = createHashMap(opt.encodeDef);
  var dataDimNameMap = createHashMap();
  var coordDimNameMap = createHashMap(); // var valueCandidate;

  var result = [];
  var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimCount); // Apply user defined dims (`name` and `type`) and init result.

  for (var i = 0; i < dimCount; i++) {
    var dimDefItem = dimsDef[i] = extend({}, isObject(dimsDef[i]) ? dimsDef[i] : {
      name: dimsDef[i]
    });
    var userDimName = dimDefItem.name;
    var resultItem = result[i] = {
      otherDims: {}
    }; // Name will be applied later for avoiding duplication.

    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {
      // Only if `series.dimensions` is defined in option
      // displayName, will be set, and dimension will be diplayed vertically in
      // tooltip by default.
      resultItem.name = resultItem.displayName = userDimName;
      dataDimNameMap.set(userDimName, i);
    }

    dimDefItem.type != null && (resultItem.type = dimDefItem.type);
    dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);
  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.


  encodeDef.each(function (dataDims, coordDim) {
    dataDims = normalizeToArray(dataDims).slice();
    var validDataDims = encodeDef.set(coordDim, []);
    each(dataDims, function (resultDimIdx, idx) {
      // The input resultDimIdx can be dim name or index.
      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));

      if (resultDimIdx != null && resultDimIdx < dimCount) {
        validDataDims[idx] = resultDimIdx;
        applyDim(result[resultDimIdx], coordDim, idx);
      }
    });
  }); // Apply templetes and default order from `sysDims`.

  var availDimIdx = 0;
  each(sysDims, function (sysDimItem, sysDimIndex) {
    var coordDim;
    var sysDimItem;
    var sysDimItemDimsDef;
    var sysDimItemOtherDims;

    if (isString(sysDimItem)) {
      coordDim = sysDimItem;
      sysDimItem = {};
    } else {
      coordDim = sysDimItem.name;
      var ordinalMeta = sysDimItem.ordinalMeta;
      sysDimItem.ordinalMeta = null;
      sysDimItem = clone(sysDimItem);
      sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.

      sysDimItemDimsDef = sysDimItem.dimsDef;
      sysDimItemOtherDims = sysDimItem.otherDims;
      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;
    }

    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.

    if (!dataDims.length) {
      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {
        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {
          availDimIdx++;
        }

        availDimIdx < result.length && dataDims.push(availDimIdx++);
      }
    } // Apply templates.


    each(dataDims, function (resultDimIdx, coordDimIndex) {
      var resultItem = result[resultDimIdx];
      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);

      if (resultItem.name == null && sysDimItemDimsDef) {
        var sysDimItemDimsDefItem = sysDimItemDimsDef[coordDimIndex];
        !isObject(sysDimItemDimsDefItem) && (sysDimItemDimsDefItem = {
          name: sysDimItemDimsDefItem
        });
        resultItem.name = resultItem.displayName = sysDimItemDimsDefItem.name;
        resultItem.defaultTooltip = sysDimItemDimsDefItem.defaultTooltip;
      } // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}


      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);
    });
  });

  function applyDim(resultItem, coordDim, coordDimIndex) {
    if (OTHER_DIMENSIONS.get(coordDim) != null) {
      resultItem.otherDims[coordDim] = coordDimIndex;
    } else {
      resultItem.coordDim = coordDim;
      resultItem.coordDimIndex = coordDimIndex;
      coordDimNameMap.set(coordDim, true);
    }
  } // Make sure the first extra dim is 'value'.


  var generateCoord = opt.generateCoord;
  var generateCoordCount = opt.generateCoordCount;
  var fromZero = generateCoordCount != null;
  generateCoordCount = generateCoord ? generateCoordCount || 1 : 0;
  var extra = generateCoord || 'value'; // Set dim `name` and other `coordDim` and other props.

  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {
    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};
    var coordDim = resultItem.coordDim;

    if (coordDim == null) {
      resultItem.coordDim = genName(extra, coordDimNameMap, fromZero);
      resultItem.coordDimIndex = 0;

      if (!generateCoord || generateCoordCount <= 0) {
        resultItem.isExtraCoord = true;
      }

      generateCoordCount--;
    }

    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));

    if (resultItem.type == null && guessOrdinal(source, resultDimIdx, resultItem.name)) {
      resultItem.type = 'ordinal';
    }
  }

  return result;
} // ??? TODO
// Originally detect dimCount by data[0]. Should we
// optimize it to only by sysDims and dimensions and encode.
// So only necessary dims will be initialized.
// But
// (1) custom series should be considered. where other dims
// may be visited.
// (2) sometimes user need to calcualte bubble size or use visualMap
// on other dimensions besides coordSys needed.
// So, dims that is not used by system, should be shared in storage?


function getDimCount(source, sysDims, dimsDef, optDimCount) {
  // Note that the result dimCount should not small than columns count
  // of data, otherwise `dataDimNameMap` checking will be incorrect.
  var dimCount = Math.max(source.dimensionsDetectCount || 1, sysDims.length, dimsDef.length, optDimCount || 0);
  each(sysDims, function (sysDimItem) {
    var sysDimItemDimsDef = sysDimItem.dimsDef;
    sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));
  });
  return dimCount;
}

function genName(name, map, fromZero) {
  if (fromZero || map.get(name) != null) {
    var i = 0;

    while (map.get(name + i) != null) {
      i++;
    }

    name += i;
  }

  map.set(name, true);
  return name;
}

var _default = completeDimensions;
module.exports = _default;

/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

var _util = __webpack_require__(1);

var createHashMap = _util.createHashMap;
var isObject = _util.isObject;
var map = _util.map;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * @constructor
 * @param {Object} [opt]
 * @param {Object} [opt.categories=[]]
 * @param {Object} [opt.needCollect=false]
 * @param {Object} [opt.deduplication=false]
 */
function OrdinalMeta(opt) {
  /**
   * @readOnly
   * @type {Array.<string>}
   */
  this.categories = opt.categories || [];
  /**
   * @private
   * @type {boolean}
   */

  this._needCollect = opt.needCollect;
  /**
   * @private
   * @type {boolean}
   */

  this._deduplication = opt.deduplication;
  /**
   * @private
   * @type {boolean}
   */

  this._map;
}
/**
 * @param {module:echarts/model/Model} axisModel
 * @return {module:echarts/data/OrdinalMeta}
 */


OrdinalMeta.createByAxisModel = function (axisModel) {
  var option = axisModel.option;
  var data = option.data;
  var categories = data && map(data, getName);
  return new OrdinalMeta({
    categories: categories,
    needCollect: !categories,
    // deduplication is default in axis.
    deduplication: option.dedplication !== false
  });
};

var proto = OrdinalMeta.prototype;
/**
 * @param {string} category
 * @return {number} ordinal
 */

proto.getOrdinal = function (category) {
  return getOrCreateMap(this).get(category);
};
/**
 * @param {*} category
 * @return {number} The ordinal. If not found, return NaN.
 */


proto.parseAndCollect = function (category) {
  var index;
  var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.
  // This feature is only supported when !needCollect, because we should
  // consider a common case: a value is 2017, which is a number but is
  // expected to be tread as a category. This case usually happen in dataset,
  // where it happent to be no need of the index feature.

  if (typeof category !== 'string' && !needCollect) {
    return category;
  } // Optimize for the scenario:
  // category is ['2012-01-01', '2012-01-02', ...], where the input
  // data has been ensured not duplicate and is large data.
  // Notice, if a dataset dimension provide categroies, usually echarts
  // should remove duplication except user tell echarts dont do that
  // (set axis.deduplication = false), because echarts do not know whether
  // the values in the category dimension has duplication (consider the
  // parallel-aqi example)


  if (needCollect && !this._deduplication) {
    index = this.categories.length;
    this.categories[index] = category;
    return index;
  }

  var map = getOrCreateMap(this);
  index = map.get(category);

  if (index == null) {
    if (needCollect) {
      index = this.categories.length;
      this.categories[index] = category;
      map.set(category, index);
    } else {
      index = NaN;
    }
  }

  return index;
}; // Consider big data, do not create map until needed.


function getOrCreateMap(ordinalMeta) {
  return ordinalMeta._map || (ordinalMeta._map = createHashMap(ordinalMeta.categories));
}

function getName(obj) {
  if (isObject(obj) && obj.value != null) {
    return obj.value;
  } else {
    return obj + '';
  }
}

var _default = OrdinalMeta;
module.exports = _default;

/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

var numberUtil = __webpack_require__(14);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * For testable.
 */
var roundNumber = numberUtil.round;
/**
 * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.
 *                                Should be extent[0] < extent[1].
 * @param {number} splitNumber splitNumber should be >= 1.
 * @param {number} [minInterval]
 * @param {number} [maxInterval]
 * @return {Object} {interval, intervalPrecision, niceTickExtent}
 */

function intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {
  var result = {};
  var span = extent[1] - extent[0];
  var interval = result.interval = numberUtil.nice(span / splitNumber, true);

  if (minInterval != null && interval < minInterval) {
    interval = result.interval = minInterval;
  }

  if (maxInterval != null && interval > maxInterval) {
    interval = result.interval = maxInterval;
  } // Tow more digital for tick.


  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent

  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];
  fixExtent(niceTickExtent, extent);
  return result;
}
/**
 * @param {number} interval
 * @return {number} interval precision
 */


function getIntervalPrecision(interval) {
  // Tow more digital for tick.
  return numberUtil.getPrecisionSafe(interval) + 2;
}

function clamp(niceTickExtent, idx, extent) {
  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);
} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.


function fixExtent(niceTickExtent, extent) {
  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);
  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);
  clamp(niceTickExtent, 0, extent);
  clamp(niceTickExtent, 1, extent);

  if (niceTickExtent[0] > niceTickExtent[1]) {
    niceTickExtent[0] = niceTickExtent[1];
  }
}

function intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {
  var ticks = []; // If interval is 0, return [];

  if (!interval) {
    return ticks;
  } // Consider this case: using dataZoom toolbox, zoom and zoom.


  var safeLimit = 10000;

  if (extent[0] < niceTickExtent[0]) {
    ticks.push(extent[0]);
  }

  var tick = niceTickExtent[0];

  while (tick <= niceTickExtent[1]) {
    ticks.push(tick); // Avoid rounding error

    tick = roundNumber(tick + interval, intervalPrecision);

    if (tick === ticks[ticks.length - 1]) {
      // Consider out of safe float point, e.g.,
      // -3711126.9907707 + 2e-10 === -3711126.9907707
      break;
    }

    if (ticks.length > safeLimit) {
      return [];
    }
  } // Consider this case: the last item of ticks is smaller
  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].


  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {
    ticks.push(extent[1]);
  }

  return ticks;
}

exports.intervalScaleNiceTicks = intervalScaleNiceTicks;
exports.getIntervalPrecision = getIntervalPrecision;
exports.fixExtent = fixExtent;
exports.intervalScaleGetTicks = intervalScaleGetTicks;

/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var axisHelper = __webpack_require__(68);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var _default = {
  /**
   * @param {boolean} origin
   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN
   */
  getMin: function (origin) {
    var option = this.option;
    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;

    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {
      min = this.axis.scale.parse(min);
    }

    return min;
  },

  /**
   * @param {boolean} origin
   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN
   */
  getMax: function (origin) {
    var option = this.option;
    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;

    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {
      max = this.axis.scale.parse(max);
    }

    return max;
  },

  /**
   * @return {boolean}
   */
  getNeedCrossZero: function () {
    var option = this.option;
    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;
  },

  /**
   * Should be implemented by each axis model if necessary.
   * @return {module:echarts/model/Component} coordinate system model
   */
  getCoordSysModel: zrUtil.noop,

  /**
   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.
   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.
   */
  setRange: function (rangeStart, rangeEnd) {
    this.option.rangeStart = rangeStart;
    this.option.rangeEnd = rangeEnd;
  },

  /**
   * Reset range
   */
  resetRange: function () {
    // rangeStart and rangeEnd is readonly.
    this.option.rangeStart = this.option.rangeEnd = null;
  }
};
module.exports = _default;

/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

var _util = __webpack_require__(1);

var each = _util.each;
var map = _util.map;

var _number = __webpack_require__(14);

var linearMap = _number.linearMap;
var getPixelPrecision = _number.getPixelPrecision;

var _axisTickLabelBuilder = __webpack_require__(500);

var createAxisTicks = _axisTickLabelBuilder.createAxisTicks;
var createAxisLabels = _axisTickLabelBuilder.createAxisLabels;
var calculateCategoryInterval = _axisTickLabelBuilder.calculateCategoryInterval;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var NORMALIZED_EXTENT = [0, 1];
/**
 * Base class of Axis.
 * @constructor
 */

var Axis = function (dim, scale, extent) {
  /**
   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'.
   * @type {string}
   */
  this.dim = dim;
  /**
   * Axis scale
   * @type {module:echarts/coord/scale/*}
   */

  this.scale = scale;
  /**
   * @type {Array.<number>}
   * @private
   */

  this._extent = extent || [0, 0];
  /**
   * @type {boolean}
   */

  this.inverse = false;
  /**
   * Usually true when axis has a ordinal scale
   * @type {boolean}
   */

  this.onBand = false;
};

Axis.prototype = {
  constructor: Axis,

  /**
   * If axis extent contain given coord
   * @param {number} coord
   * @return {boolean}
   */
  contain: function (coord) {
    var extent = this._extent;
    var min = Math.min(extent[0], extent[1]);
    var max = Math.max(extent[0], extent[1]);
    return coord >= min && coord <= max;
  },

  /**
   * If axis extent contain given data
   * @param {number} data
   * @return {boolean}
   */
  containData: function (data) {
    return this.contain(this.dataToCoord(data));
  },

  /**
   * Get coord extent.
   * @return {Array.<number>}
   */
  getExtent: function () {
    return this._extent.slice();
  },

  /**
   * Get precision used for formatting
   * @param {Array.<number>} [dataExtent]
   * @return {number}
   */
  getPixelPrecision: function (dataExtent) {
    return getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);
  },

  /**
   * Set coord extent
   * @param {number} start
   * @param {number} end
   */
  setExtent: function (start, end) {
    var extent = this._extent;
    extent[0] = start;
    extent[1] = end;
  },

  /**
   * Convert data to coord. Data is the rank if it has an ordinal scale
   * @param {number} data
   * @param  {boolean} clamp
   * @return {number}
   */
  dataToCoord: function (data, clamp) {
    var extent = this._extent;
    var scale = this.scale;
    data = scale.normalize(data);

    if (this.onBand && scale.type === 'ordinal') {
      extent = extent.slice();
      fixExtentWithBands(extent, scale.count());
    }

    return linearMap(data, NORMALIZED_EXTENT, extent, clamp);
  },

  /**
   * Convert coord to data. Data is the rank if it has an ordinal scale
   * @param {number} coord
   * @param  {boolean} clamp
   * @return {number}
   */
  coordToData: function (coord, clamp) {
    var extent = this._extent;
    var scale = this.scale;

    if (this.onBand && scale.type === 'ordinal') {
      extent = extent.slice();
      fixExtentWithBands(extent, scale.count());
    }

    var t = linearMap(coord, extent, NORMALIZED_EXTENT, clamp);
    return this.scale.scale(t);
  },

  /**
   * Convert pixel point to data in axis
   * @param {Array.<number>} point
   * @param  {boolean} clamp
   * @return {number} data
   */
  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.
  },

  /**
   * Different from `zrUtil.map(axis.getTicks(), axis.dataToCoord, axis)`,
   * `axis.getTicksCoords` considers `onBand`, which is used by
   * `boundaryGap:true` of category axis and splitLine and splitArea.
   * @param {Object} [opt]
   * @param {number} [opt.tickModel=axis.model.getModel('axisTick')]
   * @param {boolean} [opt.clamp] If `true`, the first and the last
   *        tick must be at the axis end points. Otherwise, clip ticks
   *        that outside the axis extent.
   * @return {Array.<Object>} [{
   *     coord: ...,
   *     tickValue: ...
   * }, ...]
   */
  getTicksCoords: function (opt) {
    opt = opt || {};
    var tickModel = opt.tickModel || this.getTickModel();
    var result = createAxisTicks(this, tickModel);
    var ticks = result.ticks;
    var ticksCoords = map(ticks, function (tickValue) {
      return {
        coord: this.dataToCoord(tickValue),
        tickValue: tickValue
      };
    }, this);
    var alignWithLabel = tickModel.get('alignWithLabel');
    fixOnBandTicksCoords(this, ticksCoords, result.tickCategoryInterval, alignWithLabel, opt.clamp);
    return ticksCoords;
  },

  /**
   * @return {Array.<Object>} [{
   *     formattedLabel: string,
   *     rawLabel: axis.scale.getLabel(tickValue)
   *     tickValue: number
   * }, ...]
   */
  getViewLabels: function () {
    return createAxisLabels(this).labels;
  },

  /**
   * @return {module:echarts/coord/model/Model}
   */
  getLabelModel: function () {
    return this.model.getModel('axisLabel');
  },

  /**
   * Notice here we only get the default tick model. For splitLine
   * or splitArea, we should pass the splitLineModel or splitAreaModel
   * manually when calling `getTicksCoords`.
   * In GL, this method may be overrided to:
   * `axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));`
   * @return {module:echarts/coord/model/Model}
   */
  getTickModel: function () {
    return this.model.getModel('axisTick');
  },

  /**
   * Get width of band
   * @return {number}
   */
  getBandWidth: function () {
    var axisExtent = this._extent;
    var dataExtent = this.scale.getExtent();
    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.

    len === 0 && (len = 1);
    var size = Math.abs(axisExtent[1] - axisExtent[0]);
    return Math.abs(size) / len;
  },

  /**
   * @abstract
   * @return {boolean} Is horizontal
   */
  isHorizontal: null,

  /**
   * @abstract
   * @return {number} Get axis rotate, by degree.
   */
  getRotate: null,

  /**
   * Only be called in category axis.
   * Can be overrided, consider other axes like in 3D.
   * @return {number} Auto interval for cateogry axis tick and label
   */
  calculateCategoryInterval: function () {
    return calculateCategoryInterval(this);
  }
};

function fixExtentWithBands(extent, nTick) {
  var size = extent[1] - extent[0];
  var len = nTick;
  var margin = size / len / 2;
  extent[0] += margin;
  extent[1] -= margin;
} // If axis has labels [1, 2, 3, 4]. Bands on the axis are
// |---1---|---2---|---3---|---4---|.
// So the displayed ticks and splitLine/splitArea should between
// each data item, otherwise cause misleading (e.g., split tow bars
// of a single data item when there are two bar series).
// Also consider if tickCategoryInterval > 0 and onBand, ticks and
// splitLine/spliteArea should layout appropriately corresponding
// to displayed labels. (So we should not use `getBandWidth` in this
// case).


function fixOnBandTicksCoords(axis, ticksCoords, tickCategoryInterval, alignWithLabel, clamp) {
  var ticksLen = ticksCoords.length;

  if (!axis.onBand || alignWithLabel || !ticksLen) {
    return;
  }

  var axisExtent = axis.getExtent();
  var last;

  if (ticksLen === 1) {
    ticksCoords[0].coord = axisExtent[0];
    last = ticksCoords[1] = {
      coord: axisExtent[0]
    };
  } else {
    var shift = ticksCoords[1].coord - ticksCoords[0].coord;
    each(ticksCoords, function (ticksItem) {
      ticksItem.coord -= shift / 2;
      var tickCategoryInterval = tickCategoryInterval || 0; // Avoid split a single data item when odd interval.

      if (tickCategoryInterval % 2 > 0) {
        ticksItem.coord -= shift / ((tickCategoryInterval + 1) * 2);
      }
    });
    last = {
      coord: ticksCoords[ticksLen - 1].coord + shift
    };
    ticksCoords.push(last);
  }

  var inverse = axisExtent[0] > axisExtent[1];

  if (littleThan(ticksCoords[0].coord, axisExtent[0])) {
    clamp ? ticksCoords[0].coord = axisExtent[0] : ticksCoords.shift();
  }

  if (clamp && littleThan(axisExtent[0], ticksCoords[0].coord)) {
    ticksCoords.unshift({
      coord: axisExtent[0]
    });
  }

  if (littleThan(axisExtent[1], last.coord)) {
    clamp ? last.coord = axisExtent[1] : ticksCoords.pop();
  }

  if (clamp && littleThan(last.coord, axisExtent[1])) {
    ticksCoords.push({
      coord: axisExtent[1]
    });
  }

  function littleThan(a, b) {
    return inverse ? a > b : a < b;
  }
}

var _default = Axis;
module.exports = _default;

/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(9) && !__webpack_require__(5)(function () {
  return Object.defineProperty(__webpack_require__(125)('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__(6);


/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(22);
var toIObject = __webpack_require__(19);
var arrayIndexOf = __webpack_require__(91)(false);
var IE_PROTO = __webpack_require__(127)('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(8);
var anObject = __webpack_require__(2);
var getKeys = __webpack_require__(44);

module.exports = __webpack_require__(9) ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__(19);
var gOPN = __webpack_require__(58).f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};


/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var aFunction = __webpack_require__(15);
var isObject = __webpack_require__(4);
var invoke = __webpack_require__(132);
var arraySlice = [].slice;
var factories = {};

var construct = function (F, len, args) {
  if (!(len in factories)) {
    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';
    // eslint-disable-next-line no-new-func
    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
  } return factories[len](F, args);
};

module.exports = Function.bind || function bind(that /* , ...args */) {
  var fn = aFunction(this);
  var partArgs = arraySlice.call(arguments, 1);
  var bound = function (/* args... */) {
    var args = partArgs.concat(arraySlice.call(arguments));
    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
  };
  if (isObject(fn.prototype)) bound.prototype = fn.prototype;
  return bound;
};


/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

var $parseInt = __webpack_require__(3).parseInt;
var $trim = __webpack_require__(70).trim;
var ws = __webpack_require__(133);
var hex = /^[-+]?0[xX]/;

module.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {
  var string = $trim(String(str), 3);
  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
} : $parseInt;


/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

var $parseFloat = __webpack_require__(3).parseFloat;
var $trim = __webpack_require__(70).trim;

module.exports = 1 / $parseFloat(__webpack_require__(133) + '-0') !== -Infinity ? function parseFloat(str) {
  var string = $trim(String(str), 3);
  var result = $parseFloat(string);
  return result === 0 && string.charAt(0) == '-' ? -0 : result;
} : $parseFloat;


/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

var cof = __webpack_require__(34);
module.exports = function (it, msg) {
  if (typeof it != 'number' && cof(it) != 'Number') throw TypeError(msg);
  return +it;
};


/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.3 Number.isInteger(number)
var isObject = __webpack_require__(4);
var floor = Math.floor;
module.exports = function isInteger(it) {
  return !isObject(it) && isFinite(it) && floor(it) === it;
};


/***/ }),
/* 210 */
/***/ (function(module, exports) {

// 20.2.2.20 Math.log1p(x)
module.exports = Math.log1p || function log1p(x) {
  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
};


/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.16 Math.fround(x)
var sign = __webpack_require__(136);
var pow = Math.pow;
var EPSILON = pow(2, -52);
var EPSILON32 = pow(2, -23);
var MAX32 = pow(2, 127) * (2 - EPSILON32);
var MIN32 = pow(2, -126);

var roundTiesToEven = function (n) {
  return n + 1 / EPSILON - 1 / EPSILON;
};

module.exports = Math.fround || function fround(x) {
  var $abs = Math.abs(x);
  var $sign = sign(x);
  var a, result;
  if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
  a = (1 + EPSILON32 / EPSILON) * $abs;
  result = a - (a - $abs);
  // eslint-disable-next-line no-self-compare
  if (result > MAX32 || result != result) return $sign * Infinity;
  return $sign * result;
};


/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

// call something on iterator step with safe closing on error
var anObject = __webpack_require__(2);
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};


/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

var aFunction = __webpack_require__(15);
var toObject = __webpack_require__(12);
var IObject = __webpack_require__(78);
var toLength = __webpack_require__(10);

module.exports = function (that, callbackfn, aLen, memo, isRight) {
  aFunction(callbackfn);
  var O = toObject(that);
  var self = IObject(O);
  var length = toLength(O.length);
  var index = isRight ? length - 1 : 0;
  var i = isRight ? -1 : 1;
  if (aLen < 2) for (;;) {
    if (index in self) {
      memo = self[index];
      index += i;
      break;
    }
    index += i;
    if (isRight ? index < 0 : length <= index) {
      throw TypeError('Reduce of empty array with no initial value');
    }
  }
  for (;isRight ? index >= 0 : length > index; index += i) if (index in self) {
    memo = callbackfn(memo, self[index], index, O);
  }
  return memo;
};


/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)

var toObject = __webpack_require__(12);
var toAbsoluteIndex = __webpack_require__(57);
var toLength = __webpack_require__(10);

module.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {
  var O = toObject(this);
  var len = toLength(O.length);
  var to = toAbsoluteIndex(target, len);
  var from = toAbsoluteIndex(start, len);
  var end = arguments.length > 2 ? arguments[2] : undefined;
  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);
  var inc = 1;
  if (from < to && to < from + count) {
    inc = -1;
    from += count - 1;
    to += count - 1;
  }
  while (count-- > 0) {
    if (from in O) O[to] = O[from];
    else delete O[to];
    to += inc;
    from += inc;
  } return O;
};


/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

// 21.2.5.3 get RegExp.prototype.flags()
if (__webpack_require__(9) && /./g.flags != 'g') __webpack_require__(8).f(RegExp.prototype, 'flags', {
  configurable: true,
  get: __webpack_require__(98)
});


/***/ }),
/* 216 */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return { e: false, v: exec() };
  } catch (e) {
    return { e: true, v: e };
  }
};


/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(2);
var isObject = __webpack_require__(4);
var newPromiseCapability = __webpack_require__(149);

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var strong = __webpack_require__(219);
var validate = __webpack_require__(71);
var MAP = 'Map';

// 23.1 Map Objects
module.exports = __webpack_require__(102)(MAP, function (get) {
  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.1.3.6 Map.prototype.get(key)
  get: function get(key) {
    var entry = strong.getEntry(validate(this, MAP), key);
    return entry && entry.v;
  },
  // 23.1.3.9 Map.prototype.set(key, value)
  set: function set(key, value) {
    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);
  }
}, strong, true);


/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var dP = __webpack_require__(8).f;
var create = __webpack_require__(45);
var redefineAll = __webpack_require__(63);
var ctx = __webpack_require__(31);
var anInstance = __webpack_require__(62);
var forOf = __webpack_require__(54);
var $iterDefine = __webpack_require__(94);
var step = __webpack_require__(146);
var setSpecies = __webpack_require__(61);
var DESCRIPTORS = __webpack_require__(9);
var fastKey = __webpack_require__(51).fastKey;
var validate = __webpack_require__(71);
var SIZE = DESCRIPTORS ? '_s' : 'size';

var getEntry = function (that, key) {
  // fast case
  var index = fastKey(key);
  var entry;
  if (index !== 'F') return that._i[index];
  // frozen object case
  for (entry = that._f; entry; entry = entry.n) {
    if (entry.k == key) return entry;
  }
};

module.exports = {
  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, NAME, '_i');
      that._t = NAME;         // collection type
      that._i = create(null); // index
      that._f = undefined;    // first entry
      that._l = undefined;    // last entry
      that[SIZE] = 0;         // size
      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.1.3.1 Map.prototype.clear()
      // 23.2.3.2 Set.prototype.clear()
      clear: function clear() {
        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {
          entry.r = true;
          if (entry.p) entry.p = entry.p.n = undefined;
          delete data[entry.i];
        }
        that._f = that._l = undefined;
        that[SIZE] = 0;
      },
      // 23.1.3.3 Map.prototype.delete(key)
      // 23.2.3.4 Set.prototype.delete(value)
      'delete': function (key) {
        var that = validate(this, NAME);
        var entry = getEntry(that, key);
        if (entry) {
          var next = entry.n;
          var prev = entry.p;
          delete that._i[entry.i];
          entry.r = true;
          if (prev) prev.n = next;
          if (next) next.p = prev;
          if (that._f == entry) that._f = next;
          if (that._l == entry) that._l = prev;
          that[SIZE]--;
        } return !!entry;
      },
      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
      forEach: function forEach(callbackfn /* , that = undefined */) {
        validate(this, NAME);
        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
        var entry;
        while (entry = entry ? entry.n : this._f) {
          f(entry.v, entry.k, this);
          // revert to the last existing entry
          while (entry && entry.r) entry = entry.p;
        }
      },
      // 23.1.3.7 Map.prototype.has(key)
      // 23.2.3.7 Set.prototype.has(value)
      has: function has(key) {
        return !!getEntry(validate(this, NAME), key);
      }
    });
    if (DESCRIPTORS) dP(C.prototype, 'size', {
      get: function () {
        return validate(this, NAME)[SIZE];
      }
    });
    return C;
  },
  def: function (that, key, value) {
    var entry = getEntry(that, key);
    var prev, index;
    // change existing entry
    if (entry) {
      entry.v = value;
    // create new entry
    } else {
      that._l = entry = {
        i: index = fastKey(key, true), // <- index
        k: key,                        // <- key
        v: value,                      // <- value
        p: prev = that._l,             // <- previous entry
        n: undefined,                  // <- next entry
        r: false                       // <- removed
      };
      if (!that._f) that._f = entry;
      if (prev) prev.n = entry;
      that[SIZE]++;
      // add to index
      if (index !== 'F') that._i[index] = entry;
    } return that;
  },
  getEntry: getEntry,
  setStrong: function (C, NAME, IS_MAP) {
    // add .keys, .values, .entries, [@@iterator]
    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
    $iterDefine(C, NAME, function (iterated, kind) {
      this._t = validate(iterated, NAME); // target
      this._k = kind;                     // kind
      this._l = undefined;                // previous
    }, function () {
      var that = this;
      var kind = that._k;
      var entry = that._l;
      // revert to the last existing entry
      while (entry && entry.r) entry = entry.p;
      // get next entry
      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
        // or finish the iteration
        that._t = undefined;
        return step(1);
      }
      // return step by kind
      if (kind == 'keys') return step(0, entry.k);
      if (kind == 'values') return step(0, entry.v);
      return step(0, [entry.k, entry.v]);
    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

    // add [@@species], 23.1.2.2, 23.2.2.2
    setSpecies(NAME);
  }
};


/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var strong = __webpack_require__(219);
var validate = __webpack_require__(71);
var SET = 'Set';

// 23.2 Set Objects
module.exports = __webpack_require__(102)(SET, function (get) {
  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.2.3.1 Set.prototype.add(value)
  add: function add(value) {
    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);
  }
}, strong);


/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var each = __webpack_require__(41)(0);
var redefine = __webpack_require__(24);
var meta = __webpack_require__(51);
var assign = __webpack_require__(130);
var weak = __webpack_require__(222);
var isObject = __webpack_require__(4);
var fails = __webpack_require__(5);
var validate = __webpack_require__(71);
var WEAK_MAP = 'WeakMap';
var getWeak = meta.getWeak;
var isExtensible = Object.isExtensible;
var uncaughtFrozenStore = weak.ufstore;
var tmp = {};
var InternalMap;

var wrapper = function (get) {
  return function WeakMap() {
    return get(this, arguments.length > 0 ? arguments[0] : undefined);
  };
};

var methods = {
  // 23.3.3.3 WeakMap.prototype.get(key)
  get: function get(key) {
    if (isObject(key)) {
      var data = getWeak(key);
      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);
      return data ? data[this._i] : undefined;
    }
  },
  // 23.3.3.5 WeakMap.prototype.set(key, value)
  set: function set(key, value) {
    return weak.def(validate(this, WEAK_MAP), key, value);
  }
};

// 23.3 WeakMap Objects
var $WeakMap = module.exports = __webpack_require__(102)(WEAK_MAP, wrapper, methods, weak, true, true);

// IE11 WeakMap frozen keys fix
if (fails(function () { return new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7; })) {
  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);
  assign(InternalMap.prototype, methods);
  meta.NEED = true;
  each(['delete', 'has', 'get', 'set'], function (key) {
    var proto = $WeakMap.prototype;
    var method = proto[key];
    redefine(proto, key, function (a, b) {
      // store frozen objects on internal weakmap shim
      if (isObject(a) && !isExtensible(a)) {
        if (!this._f) this._f = new InternalMap();
        var result = this._f[key](a, b);
        return key == 'set' ? this : result;
      // store all the rest on native weakmap
      } return method.call(this, a, b);
    });
  });
}


/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var redefineAll = __webpack_require__(63);
var getWeak = __webpack_require__(51).getWeak;
var anObject = __webpack_require__(2);
var isObject = __webpack_require__(4);
var anInstance = __webpack_require__(62);
var forOf = __webpack_require__(54);
var createArrayMethod = __webpack_require__(41);
var $has = __webpack_require__(22);
var validate = __webpack_require__(71);
var arrayFind = createArrayMethod(5);
var arrayFindIndex = createArrayMethod(6);
var id = 0;

// fallback for uncaught frozen keys
var uncaughtFrozenStore = function (that) {
  return that._l || (that._l = new UncaughtFrozenStore());
};
var UncaughtFrozenStore = function () {
  this.a = [];
};
var findUncaughtFrozen = function (store, key) {
  return arrayFind(store.a, function (it) {
    return it[0] === key;
  });
};
UncaughtFrozenStore.prototype = {
  get: function (key) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) return entry[1];
  },
  has: function (key) {
    return !!findUncaughtFrozen(this, key);
  },
  set: function (key, value) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) entry[1] = value;
    else this.a.push([key, value]);
  },
  'delete': function (key) {
    var index = arrayFindIndex(this.a, function (it) {
      return it[0] === key;
    });
    if (~index) this.a.splice(index, 1);
    return !!~index;
  }
};

module.exports = {
  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, NAME, '_i');
      that._t = NAME;      // collection type
      that._i = id++;      // collection id
      that._l = undefined; // leak store for uncaught frozen objects
      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.3.3.2 WeakMap.prototype.delete(key)
      // 23.4.3.3 WeakSet.prototype.delete(value)
      'delete': function (key) {
        if (!isObject(key)) return false;
        var data = getWeak(key);
        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);
        return data && $has(data, this._i) && delete data[this._i];
      },
      // 23.3.3.4 WeakMap.prototype.has(key)
      // 23.4.3.4 WeakSet.prototype.has(value)
      has: function has(key) {
        if (!isObject(key)) return false;
        var data = getWeak(key);
        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);
        return data && $has(data, this._i);
      }
    });
    return C;
  },
  def: function (that, key, value) {
    var data = getWeak(anObject(key), true);
    if (data === true) uncaughtFrozenStore(that).set(key, value);
    else data[that._i] = value;
    return that;
  },
  ufstore: uncaughtFrozenStore
};


/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

// https://tc39.github.io/ecma262/#sec-toindex
var toInteger = __webpack_require__(39);
var toLength = __webpack_require__(10);
module.exports = function (it) {
  if (it === undefined) return 0;
  var number = toInteger(it);
  var length = toLength(number);
  if (number !== length) throw RangeError('Wrong length!');
  return length;
};


/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray
var isArray = __webpack_require__(93);
var isObject = __webpack_require__(4);
var toLength = __webpack_require__(10);
var ctx = __webpack_require__(31);
var IS_CONCAT_SPREADABLE = __webpack_require__(6)('isConcatSpreadable');

function flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {
  var targetIndex = start;
  var sourceIndex = 0;
  var mapFn = mapper ? ctx(mapper, thisArg, 3) : false;
  var element, spreadable;

  while (sourceIndex < sourceLen) {
    if (sourceIndex in source) {
      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];

      spreadable = false;
      if (isObject(element)) {
        spreadable = element[IS_CONCAT_SPREADABLE];
        spreadable = spreadable !== undefined ? !!spreadable : isArray(element);
      }

      if (spreadable && depth > 0) {
        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;
      } else {
        if (targetIndex >= 0x1fffffffffffff) throw TypeError();
        target[targetIndex] = element;
      }

      targetIndex++;
    }
    sourceIndex++;
  }
  return targetIndex;
}

module.exports = flattenIntoArray;


/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-string-pad-start-end
var toLength = __webpack_require__(10);
var repeat = __webpack_require__(135);
var defined = __webpack_require__(38);

module.exports = function (that, maxLength, fillString, left) {
  var S = String(defined(that));
  var stringLength = S.length;
  var fillStr = fillString === undefined ? ' ' : String(fillString);
  var intMaxLength = toLength(maxLength);
  if (intMaxLength <= stringLength || fillStr == '') return S;
  var fillLen = intMaxLength - stringLength;
  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);
  return left ? stringFiller + S : S + stringFiller;
};


/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

var getKeys = __webpack_require__(44);
var toIObject = __webpack_require__(19);
var isEnum = __webpack_require__(79).f;
module.exports = function (isEntries) {
  return function (it) {
    var O = toIObject(it);
    var keys = getKeys(O);
    var length = keys.length;
    var i = 0;
    var result = [];
    var key;
    while (length > i) if (isEnum.call(O, key = keys[i++])) {
      result.push(isEntries ? [key, O[key]] : O[key]);
    } return result;
  };
};


/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/DavidBruant/Map-Set.prototype.toJSON
var classof = __webpack_require__(59);
var from = __webpack_require__(228);
module.exports = function (NAME) {
  return function toJSON() {
    if (classof(this) != NAME) throw TypeError(NAME + "#toJSON isn't generic");
    return from(this);
  };
};


/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

var forOf = __webpack_require__(54);

module.exports = function (iter, ITERATOR) {
  var result = [];
  forOf(iter, false, result.push, result, ITERATOR);
  return result;
};


/***/ }),
/* 229 */
/***/ (function(module, exports) {

// https://rwaldron.github.io/proposal-math-extensions/
module.exports = Math.scale || function scale(x, inLow, inHigh, outLow, outHigh) {
  if (
    arguments.length === 0
      // eslint-disable-next-line no-self-compare
      || x != x
      // eslint-disable-next-line no-self-compare
      || inLow != inLow
      // eslint-disable-next-line no-self-compare
      || inHigh != inHigh
      // eslint-disable-next-line no-self-compare
      || outLow != outLow
      // eslint-disable-next-line no-self-compare
      || outHigh != outHigh
  ) return NaN;
  if (x === Infinity || x === -Infinity) return x;
  return (x - inLow) * (outHigh - outLow) / (inHigh - inLow) + outLow;
};


/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(59);
var ITERATOR = __webpack_require__(6)('iterator');
var Iterators = __webpack_require__(60);
module.exports = __webpack_require__(18).isIterable = function (it) {
  var O = Object(it);
  return O[ITERATOR] !== undefined
    || '@@iterator' in O
    // eslint-disable-next-line no-prototype-builtins
    || Iterators.hasOwnProperty(classof(O));
};


/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var path = __webpack_require__(232);
var invoke = __webpack_require__(132);
var aFunction = __webpack_require__(15);
module.exports = function (/* ...pargs */) {
  var fn = aFunction(this);
  var length = arguments.length;
  var pargs = new Array(length);
  var i = 0;
  var _ = path._;
  var holder = false;
  while (length > i) if ((pargs[i] = arguments[i++]) === _) holder = true;
  return function (/* ...args */) {
    var that = this;
    var aLen = arguments.length;
    var j = 0;
    var k = 0;
    var args;
    if (!holder && !aLen) return invoke(fn, pargs, that);
    args = pargs.slice();
    if (holder) for (;length > j; j++) if (args[j] === _) args[j] = arguments[k++];
    while (aLen > k) args.push(arguments[k++]);
    return invoke(fn, args, that);
  };
};


/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(3);


/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(8);
var gOPD = __webpack_require__(25);
var ownKeys = __webpack_require__(151);
var toIObject = __webpack_require__(19);

module.exports = function define(target, mixin) {
  var keys = ownKeys(toIObject(mixin));
  var length = keys.length;
  var i = 0;
  var key;
  while (length > i) dP.f(target, key = keys[i++], gOPD.f(mixin, key));
  return target;
};


/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};


/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

var utils = __webpack_require__(32);
var settle = __webpack_require__(717);
var buildURL = __webpack_require__(719);
var parseHeaders = __webpack_require__(720);
var isURLSameOrigin = __webpack_require__(721);
var createError = __webpack_require__(236);
var btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || __webpack_require__(722);

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();
    var loadEvent = 'onreadystatechange';
    var xDomain = false;

    // For IE 8/9 CORS support
    // Only supports POST and GET calls and doesn't returns the response headers.
    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.
    if (process.env.NODE_ENV !== 'test' &&
        typeof window !== 'undefined' &&
        window.XDomainRequest && !('withCredentials' in request) &&
        !isURLSameOrigin(config.url)) {
      request = new window.XDomainRequest();
      loadEvent = 'onload';
      xDomain = true;
      request.onprogress = function handleProgress() {};
      request.ontimeout = function handleTimeout() {};
    }

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password || '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    // Listen for ready state
    request[loadEvent] = function handleLoad() {
      if (!request || (request.readyState !== 4 && !xDomain)) {
        return;
      }

      // The request errored out and we didn't get a response, this will be
      // handled by onerror instead
      // With one exception: request that using file: protocol, most browsers
      // will return status as 0 even though it's a successful request
      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }

      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,
        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)
        status: request.status === 1223 ? 204 : request.status,
        statusText: request.status === 1223 ? 'No Content' : request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      var cookies = __webpack_require__(723);

      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?
          cookies.read(config.xsrfCookieName) :
          undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (config.withCredentials) {
      request.withCredentials = true;
    }

    // Add responseType to request if needed
    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
        if (config.responseType !== 'json') {
          throw e;
        }
      }
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (requestData === undefined) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(28)))

/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var enhanceError = __webpack_require__(718);

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};


/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};


/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;


/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var _symbol = __webpack_require__(89);

var createSymbol = _symbol.createSymbol;

var graphic = __webpack_require__(11);

var _number = __webpack_require__(14);

var parsePercent = _number.parsePercent;

var _labelHelper = __webpack_require__(745);

var getDefaultLabel = _labelHelper.getDefaultLabel;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * @module echarts/chart/helper/Symbol
 */

/**
 * @constructor
 * @alias {module:echarts/chart/helper/Symbol}
 * @param {module:echarts/data/List} data
 * @param {number} idx
 * @extends {module:zrender/graphic/Group}
 */
function SymbolClz(data, idx, seriesScope) {
  graphic.Group.call(this);
  this.updateData(data, idx, seriesScope);
}

var symbolProto = SymbolClz.prototype;
/**
 * @public
 * @static
 * @param {module:echarts/data/List} data
 * @param {number} dataIndex
 * @return {Array.<number>} [width, height]
 */

var getSymbolSize = SymbolClz.getSymbolSize = function (data, idx) {
  var symbolSize = data.getItemVisual(idx, 'symbolSize');
  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];
};

function getScale(symbolSize) {
  return [symbolSize[0] / 2, symbolSize[1] / 2];
}

function driftSymbol(dx, dy) {
  this.parent.drift(dx, dy);
}

symbolProto._createSymbol = function (symbolType, data, idx, symbolSize, keepAspect) {
  // Remove paths created before
  this.removeAll();
  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(
  //     symbolType, -0.5, -0.5, 1, 1, color
  // );
  // If width/height are set too small (e.g., set to 1) on ios10
  // and macOS Sierra, a circle stroke become a rect, no matter what
  // the scale is set. So we set width/height as 2. See #4150.

  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color, keepAspect);
  symbolPath.attr({
    z2: 100,
    culling: true,
    scale: getScale(symbolSize)
  }); // Rewrite drift method

  symbolPath.drift = driftSymbol;
  this._symbolType = symbolType;
  this.add(symbolPath);
};
/**
 * Stop animation
 * @param {boolean} toLastFrame
 */


symbolProto.stopSymbolAnimation = function (toLastFrame) {
  this.childAt(0).stopAnimation(toLastFrame);
};
/**
 * FIXME:
 * Caution: This method breaks the encapsulation of this module,
 * but it indeed brings convenience. So do not use the method
 * unless you detailedly know all the implements of `Symbol`,
 * especially animation.
 *
 * Get symbol path element.
 */


symbolProto.getSymbolPath = function () {
  return this.childAt(0);
};
/**
 * Get scale(aka, current symbol size).
 * Including the change caused by animation
 */


symbolProto.getScale = function () {
  return this.childAt(0).scale;
};
/**
 * Highlight symbol
 */


symbolProto.highlight = function () {
  this.childAt(0).trigger('emphasis');
};
/**
 * Downplay symbol
 */


symbolProto.downplay = function () {
  this.childAt(0).trigger('normal');
};
/**
 * @param {number} zlevel
 * @param {number} z
 */


symbolProto.setZ = function (zlevel, z) {
  var symbolPath = this.childAt(0);
  symbolPath.zlevel = zlevel;
  symbolPath.z = z;
};

symbolProto.setDraggable = function (draggable) {
  var symbolPath = this.childAt(0);
  symbolPath.draggable = draggable;
  symbolPath.cursor = draggable ? 'move' : 'pointer';
};
/**
 * Update symbol properties
 * @param {module:echarts/data/List} data
 * @param {number} idx
 * @param {Object} [seriesScope]
 * @param {Object} [seriesScope.itemStyle]
 * @param {Object} [seriesScope.hoverItemStyle]
 * @param {Object} [seriesScope.symbolRotate]
 * @param {Object} [seriesScope.symbolOffset]
 * @param {module:echarts/model/Model} [seriesScope.labelModel]
 * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]
 * @param {boolean} [seriesScope.hoverAnimation]
 * @param {Object} [seriesScope.cursorStyle]
 * @param {module:echarts/model/Model} [seriesScope.itemModel]
 * @param {string} [seriesScope.symbolInnerColor]
 * @param {Object} [seriesScope.fadeIn=false]
 */


symbolProto.updateData = function (data, idx, seriesScope) {
  this.silent = false;
  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';
  var seriesModel = data.hostModel;
  var symbolSize = getSymbolSize(data, idx);
  var isInit = symbolType !== this._symbolType;

  if (isInit) {
    var keepAspect = data.getItemVisual(idx, 'symbolKeepAspect');

    this._createSymbol(symbolType, data, idx, symbolSize, keepAspect);
  } else {
    var symbolPath = this.childAt(0);
    symbolPath.silent = false;
    graphic.updateProps(symbolPath, {
      scale: getScale(symbolSize)
    }, seriesModel, idx);
  }

  this._updateCommon(data, idx, symbolSize, seriesScope);

  if (isInit) {
    var symbolPath = this.childAt(0);
    var fadeIn = seriesScope && seriesScope.fadeIn;
    var target = {
      scale: symbolPath.scale.slice()
    };
    fadeIn && (target.style = {
      opacity: symbolPath.style.opacity
    });
    symbolPath.scale = [0, 0];
    fadeIn && (symbolPath.style.opacity = 0);
    graphic.initProps(symbolPath, target, seriesModel, idx);
  }

  this._seriesModel = seriesModel;
}; // Update common properties


var normalStyleAccessPath = ['itemStyle'];
var emphasisStyleAccessPath = ['emphasis', 'itemStyle'];
var normalLabelAccessPath = ['label'];
var emphasisLabelAccessPath = ['emphasis', 'label'];
/**
 * @param {module:echarts/data/List} data
 * @param {number} idx
 * @param {Array.<number>} symbolSize
 * @param {Object} [seriesScope]
 */

symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {
  var symbolPath = this.childAt(0);
  var seriesModel = data.hostModel;
  var color = data.getItemVisual(idx, 'color'); // Reset style

  if (symbolPath.type !== 'image') {
    symbolPath.useStyle({
      strokeNoScale: true
    });
  }

  var itemStyle = seriesScope && seriesScope.itemStyle;
  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;
  var symbolRotate = seriesScope && seriesScope.symbolRotate;
  var symbolOffset = seriesScope && seriesScope.symbolOffset;
  var labelModel = seriesScope && seriesScope.labelModel;
  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;
  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;
  var cursorStyle = seriesScope && seriesScope.cursorStyle;

  if (!seriesScope || data.hasItemOption) {
    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.
    // Because symbol provide setColor individually to set fill and stroke

    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);
    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();
    symbolRotate = itemModel.getShallow('symbolRotate');
    symbolOffset = itemModel.getShallow('symbolOffset');
    labelModel = itemModel.getModel(normalLabelAccessPath);
    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);
    hoverAnimation = itemModel.getShallow('hoverAnimation');
    cursorStyle = itemModel.getShallow('cursor');
  } else {
    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);
  }

  var elStyle = symbolPath.style;
  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);

  if (symbolOffset) {
    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);
  }

  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!

  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);
  symbolPath.setStyle(itemStyle);
  var opacity = data.getItemVisual(idx, 'opacity');

  if (opacity != null) {
    elStyle.opacity = opacity;
  }

  var liftZ = data.getItemVisual(idx, 'liftZ');
  var z2Origin = symbolPath.__z2Origin;

  if (liftZ != null) {
    if (z2Origin == null) {
      symbolPath.__z2Origin = symbolPath.z2;
      symbolPath.z2 += liftZ;
    }
  } else if (z2Origin != null) {
    symbolPath.z2 = z2Origin;
    symbolPath.__z2Origin = null;
  }

  var useNameLabel = seriesScope && seriesScope.useNameLabel;
  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {
    labelFetcher: seriesModel,
    labelDataIndex: idx,
    defaultText: getLabelDefaultText,
    isRectText: true,
    autoColor: color
  }); // Do not execute util needed.

  function getLabelDefaultText(idx, opt) {
    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);
  }

  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');
  symbolPath.hoverStyle = hoverItemStyle; // FIXME
  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.

  graphic.setHoverStyle(symbolPath);
  var scale = getScale(symbolSize);

  if (hoverAnimation && seriesModel.isAnimationEnabled()) {
    var onEmphasis = function () {
      // Do not support this hover animation util some scenario required.
      // Animation can only be supported in hover layer when using `el.incremetal`.
      if (this.incremental) {
        return;
      }

      var ratio = scale[1] / scale[0];
      this.animateTo({
        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]
      }, 400, 'elasticOut');
    };

    var onNormal = function () {
      if (this.incremental) {
        return;
      }

      this.animateTo({
        scale: scale
      }, 400, 'elasticOut');
    };

    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);
  }
};
/**
 * @param {Function} cb
 * @param {Object} [opt]
 * @param {Object} [opt.keepLabel=true]
 */


symbolProto.fadeOut = function (cb, opt) {
  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out

  this.silent = symbolPath.silent = true; // Not show text when animating

  !(opt && opt.keepLabel) && (symbolPath.style.text = null);
  graphic.updateProps(symbolPath, {
    style: {
      opacity: 0
    },
    scale: [0, 0]
  }, this._seriesModel, this.dataIndex, cb);
};

zrUtil.inherits(SymbolClz, graphic.Group);
var _default = SymbolClz;
module.exports = _default;

/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

var _dataStackHelper = __webpack_require__(67);

var isDimensionStacked = _dataStackHelper.isDimensionStacked;

var _util = __webpack_require__(1);

var map = _util.map;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * @param {Object} coordSys
 * @param {module:echarts/data/List} data
 * @param {string} valueOrigin lineSeries.option.areaStyle.origin
 */
function prepareDataCoordInfo(coordSys, data, valueOrigin) {
  var baseAxis = coordSys.getBaseAxis();
  var valueAxis = coordSys.getOtherAxis(baseAxis);
  var valueStart = getValueStart(valueAxis, valueOrigin);
  var baseAxisDim = baseAxis.dim;
  var valueAxisDim = valueAxis.dim;
  var valueDim = data.mapDimension(valueAxisDim);
  var baseDim = data.mapDimension(baseAxisDim);
  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;
  var dims = map(coordSys.dimensions, function (coordDim) {
    return data.mapDimension(coordDim);
  });
  var stacked;
  var stackResultDim = data.getCalculationInfo('stackResultDimension');

  if (stacked |= isDimensionStacked(data, dims[0]
  /*, dims[1]*/
  )) {
    // jshint ignore:line
    dims[0] = stackResultDim;
  }

  if (stacked |= isDimensionStacked(data, dims[1]
  /*, dims[0]*/
  )) {
    // jshint ignore:line
    dims[1] = stackResultDim;
  }

  return {
    dataDimsForPoint: dims,
    valueStart: valueStart,
    valueAxisDim: valueAxisDim,
    baseAxisDim: baseAxisDim,
    stacked: !!stacked,
    valueDim: valueDim,
    baseDim: baseDim,
    baseDataOffset: baseDataOffset,
    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')
  };
}

function getValueStart(valueAxis, valueOrigin) {
  var valueStart = 0;
  var extent = valueAxis.scale.getExtent();

  if (valueOrigin === 'start') {
    valueStart = extent[0];
  } else if (valueOrigin === 'end') {
    valueStart = extent[1];
  } // auto
  else {
      // Both positive
      if (extent[0] > 0) {
        valueStart = extent[0];
      } // Both negative
      else if (extent[1] < 0) {
          valueStart = extent[1];
        } // If is one positive, and one negative, onZero shall be true

    }

  return valueStart;
}

function getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {
  var value = NaN;

  if (dataCoordInfo.stacked) {
    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);
  }

  if (isNaN(value)) {
    value = dataCoordInfo.valueStart;
  }

  var baseDataOffset = dataCoordInfo.baseDataOffset;
  var stackedData = [];
  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);
  stackedData[1 - baseDataOffset] = value;
  return coordSys.dataToPoint(stackedData);
}

exports.prepareDataCoordInfo = prepareDataCoordInfo;
exports.getStackedOnPoint = getStackedOnPoint;

/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var ComponentModel = __webpack_require__(43);

var axisModelCreator = __webpack_require__(757);

var axisModelCommonMixin = __webpack_require__(198);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var AxisModel = ComponentModel.extend({
  type: 'cartesian2dAxis',

  /**
   * @type {module:echarts/coord/cartesian/Axis2D}
   */
  axis: null,

  /**
   * @override
   */
  init: function () {
    AxisModel.superApply(this, 'init', arguments);
    this.resetRange();
  },

  /**
   * @override
   */
  mergeOption: function () {
    AxisModel.superApply(this, 'mergeOption', arguments);
    this.resetRange();
  },

  /**
   * @override
   */
  restoreData: function () {
    AxisModel.superApply(this, 'restoreData', arguments);
    this.resetRange();
  },

  /**
   * @override
   * @return {module:echarts/model/Component}
   */
  getCoordSysModel: function () {
    return this.ecModel.queryComponents({
      mainType: 'grid',
      index: this.option.gridIndex,
      id: this.option.gridId
    })[0];
  }
});

function getAxisType(axisDim, option) {
  // Default axis with data is category axis
  return option.type || (option.data ? 'category' : 'value');
}

zrUtil.merge(AxisModel.prototype, axisModelCommonMixin);
var extraOption = {
  // gridIndex: 0,
  // gridId: '',
  // Offset is for multiple axis on the same position
  offset: 0
};
axisModelCreator('x', AxisModel, getAxisType, extraOption);
axisModelCreator('y', AxisModel, getAxisType, extraOption);
var _default = AxisModel;
module.exports = _default;

/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

var _util = __webpack_require__(1);

var retrieve = _util.retrieve;
var defaults = _util.defaults;
var extend = _util.extend;
var each = _util.each;

var formatUtil = __webpack_require__(33);

var graphic = __webpack_require__(11);

var Model = __webpack_require__(42);

var _number = __webpack_require__(14);

var isRadianAroundZero = _number.isRadianAroundZero;
var remRadian = _number.remRadian;

var _symbol = __webpack_require__(89);

var createSymbol = _symbol.createSymbol;

var matrixUtil = __webpack_require__(64);

var _vector = __webpack_require__(17);

var v2ApplyTransform = _vector.applyTransform;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var PI = Math.PI;

function makeAxisEventDataBase(axisModel) {
  var eventData = {
    componentType: axisModel.mainType
  };
  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;
  return eventData;
}
/**
 * A final axis is translated and rotated from a "standard axis".
 * So opt.position and opt.rotation is required.
 *
 * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],
 * for example: (0, 0) ------------> (0, 50)
 *
 * nameDirection or tickDirection or labelDirection is 1 means tick
 * or label is below the standard axis, whereas is -1 means above
 * the standard axis. labelOffset means offset between label and axis,
 * which is useful when 'onZero', where axisLabel is in the grid and
 * label in outside grid.
 *
 * Tips: like always,
 * positive rotation represents anticlockwise, and negative rotation
 * represents clockwise.
 * The direction of position coordinate is the same as the direction
 * of screen coordinate.
 *
 * Do not need to consider axis 'inverse', which is auto processed by
 * axis extent.
 *
 * @param {module:zrender/container/Group} group
 * @param {Object} axisModel
 * @param {Object} opt Standard axis parameters.
 * @param {Array.<number>} opt.position [x, y]
 * @param {number} opt.rotation by radian
 * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.
 * @param {number} [opt.tickDirection=1] 1 or -1
 * @param {number} [opt.labelDirection=1] 1 or -1
 * @param {number} [opt.labelOffset=0] Usefull when onZero.
 * @param {string} [opt.axisLabelShow] default get from axisModel.
 * @param {string} [opt.axisName] default get from axisModel.
 * @param {number} [opt.axisNameAvailableWidth]
 * @param {number} [opt.labelRotate] by degree, default get from axisModel.
 * @param {number} [opt.strokeContainThreshold] Default label interval when label
 * @param {number} [opt.nameTruncateMaxWidth]
 */


var AxisBuilder = function (axisModel, opt) {
  /**
   * @readOnly
   */
  this.opt = opt;
  /**
   * @readOnly
   */

  this.axisModel = axisModel; // Default value

  defaults(opt, {
    labelOffset: 0,
    nameDirection: 1,
    tickDirection: 1,
    labelDirection: 1,
    silent: true
  });
  /**
   * @readOnly
   */

  this.group = new graphic.Group(); // FIXME Not use a seperate text group?

  var dumbGroup = new graphic.Group({
    position: opt.position.slice(),
    rotation: opt.rotation
  }); // this.group.add(dumbGroup);
  // this._dumbGroup = dumbGroup;

  dumbGroup.updateTransform();
  this._transform = dumbGroup.transform;
  this._dumbGroup = dumbGroup;
};

AxisBuilder.prototype = {
  constructor: AxisBuilder,
  hasBuilder: function (name) {
    return !!builders[name];
  },
  add: function (name) {
    builders[name].call(this);
  },
  getGroup: function () {
    return this.group;
  }
};
var builders = {
  /**
   * @private
   */
  axisLine: function () {
    var opt = this.opt;
    var axisModel = this.axisModel;

    if (!axisModel.get('axisLine.show')) {
      return;
    }

    var extent = this.axisModel.axis.getExtent();
    var matrix = this._transform;
    var pt1 = [extent[0], 0];
    var pt2 = [extent[1], 0];

    if (matrix) {
      v2ApplyTransform(pt1, pt1, matrix);
      v2ApplyTransform(pt2, pt2, matrix);
    }

    var lineStyle = extend({
      lineCap: 'round'
    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());
    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({
      // Id for animation
      anid: 'line',
      shape: {
        x1: pt1[0],
        y1: pt1[1],
        x2: pt2[0],
        y2: pt2[1]
      },
      style: lineStyle,
      strokeContainThreshold: opt.strokeContainThreshold || 5,
      silent: true,
      z2: 1
    })));
    var arrows = axisModel.get('axisLine.symbol');
    var arrowSize = axisModel.get('axisLine.symbolSize');
    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;

    if (typeof arrowOffset === 'number') {
      arrowOffset = [arrowOffset, arrowOffset];
    }

    if (arrows != null) {
      if (typeof arrows === 'string') {
        // Use the same arrow for start and end point
        arrows = [arrows, arrows];
      }

      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {
        // Use the same size for width and height
        arrowSize = [arrowSize, arrowSize];
      }

      var symbolWidth = arrowSize[0];
      var symbolHeight = arrowSize[1];
      each([{
        rotate: opt.rotation + Math.PI / 2,
        offset: arrowOffset[0],
        r: 0
      }, {
        rotate: opt.rotation - Math.PI / 2,
        offset: arrowOffset[1],
        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))
      }], function (point, index) {
        if (arrows[index] !== 'none' && arrows[index] != null) {
          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset

          var r = point.r + point.offset;
          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];
          symbol.attr({
            rotation: point.rotate,
            position: pos,
            silent: true
          });
          this.group.add(symbol);
        }
      }, this);
    }
  },

  /**
   * @private
   */
  axisTickLabel: function () {
    var axisModel = this.axisModel;
    var opt = this.opt;
    var tickEls = buildAxisTick(this, axisModel, opt);
    var labelEls = buildAxisLabel(this, axisModel, opt);
    fixMinMaxLabelShow(axisModel, labelEls, tickEls);
  },

  /**
   * @private
   */
  axisName: function () {
    var opt = this.opt;
    var axisModel = this.axisModel;
    var name = retrieve(opt.axisName, axisModel.get('name'));

    if (!name) {
      return;
    }

    var nameLocation = axisModel.get('nameLocation');
    var nameDirection = opt.nameDirection;
    var textStyleModel = axisModel.getModel('nameTextStyle');
    var gap = axisModel.get('nameGap') || 0;
    var extent = this.axisModel.axis.getExtent();
    var gapSignal = extent[0] > extent[1] ? -1 : 1;
    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'
    // Reuse labelOffset.
    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];
    var labelLayout;
    var nameRotation = axisModel.get('nameRotate');

    if (nameRotation != null) {
      nameRotation = nameRotation * PI / 180; // To radian.
    }

    var axisNameAvailableWidth;

    if (isNameLocationCenter(nameLocation)) {
      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.
      nameDirection);
    } else {
      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);
      axisNameAvailableWidth = opt.axisNameAvailableWidth;

      if (axisNameAvailableWidth != null) {
        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));
        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);
      }
    }

    var textFont = textStyleModel.getFont();
    var truncateOpt = axisModel.get('nameTruncate', true) || {};
    var ellipsis = truncateOpt.ellipsis;
    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME
    // truncate rich text? (consider performance)

    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {
      minChar: 2,
      placeholder: truncateOpt.placeholder
    }) : name;
    var tooltipOpt = axisModel.get('tooltip', true);
    var mainType = axisModel.mainType;
    var formatterParams = {
      componentType: mainType,
      name: name,
      $vars: ['name']
    };
    formatterParams[mainType + 'Index'] = axisModel.componentIndex;
    var textEl = new graphic.Text({
      // Id for animation
      anid: 'name',
      __fullText: name,
      __truncatedText: truncatedText,
      position: pos,
      rotation: labelLayout.rotation,
      silent: isSilent(axisModel),
      z2: 1,
      tooltip: tooltipOpt && tooltipOpt.show ? extend({
        content: name,
        formatter: function () {
          return name;
        },
        formatterParams: formatterParams
      }, tooltipOpt) : null
    });
    graphic.setTextStyle(textEl.style, textStyleModel, {
      text: truncatedText,
      textFont: textFont,
      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),
      textAlign: labelLayout.textAlign,
      textVerticalAlign: labelLayout.textVerticalAlign
    });

    if (axisModel.get('triggerEvent')) {
      textEl.eventData = makeAxisEventDataBase(axisModel);
      textEl.eventData.targetType = 'axisName';
      textEl.eventData.name = name;
    } // FIXME


    this._dumbGroup.add(textEl);

    textEl.updateTransform();
    this.group.add(textEl);
    textEl.decomposeTransform();
  }
};
/**
 * @public
 * @static
 * @param {Object} opt
 * @param {number} axisRotation in radian
 * @param {number} textRotation in radian
 * @param {number} direction
 * @return {Object} {
 *  rotation, // according to axis
 *  textAlign,
 *  textVerticalAlign
 * }
 */

var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {
  var rotationDiff = remRadian(textRotation - axisRotation);
  var textAlign;
  var textVerticalAlign;

  if (isRadianAroundZero(rotationDiff)) {
    // Label is parallel with axis line.
    textVerticalAlign = direction > 0 ? 'top' : 'bottom';
    textAlign = 'center';
  } else if (isRadianAroundZero(rotationDiff - PI)) {
    // Label is inverse parallel with axis line.
    textVerticalAlign = direction > 0 ? 'bottom' : 'top';
    textAlign = 'center';
  } else {
    textVerticalAlign = 'middle';

    if (rotationDiff > 0 && rotationDiff < PI) {
      textAlign = direction > 0 ? 'right' : 'left';
    } else {
      textAlign = direction > 0 ? 'left' : 'right';
    }
  }

  return {
    rotation: rotationDiff,
    textAlign: textAlign,
    textVerticalAlign: textVerticalAlign
  };
};

function endTextLayout(opt, textPosition, textRotate, extent) {
  var rotationDiff = remRadian(textRotate - opt.rotation);
  var textAlign;
  var textVerticalAlign;
  var inverse = extent[0] > extent[1];
  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;

  if (isRadianAroundZero(rotationDiff - PI / 2)) {
    textVerticalAlign = onLeft ? 'bottom' : 'top';
    textAlign = 'center';
  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {
    textVerticalAlign = onLeft ? 'top' : 'bottom';
    textAlign = 'center';
  } else {
    textVerticalAlign = 'middle';

    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {
      textAlign = onLeft ? 'left' : 'right';
    } else {
      textAlign = onLeft ? 'right' : 'left';
    }
  }

  return {
    rotation: rotationDiff,
    textAlign: textAlign,
    textVerticalAlign: textVerticalAlign
  };
}

function isSilent(axisModel) {
  var tooltipOpt = axisModel.get('tooltip');
  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.
  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);
}

function fixMinMaxLabelShow(axisModel, labelEls, tickEls) {
  // If min or max are user set, we need to check
  // If the tick on min(max) are overlap on their neighbour tick
  // If they are overlapped, we need to hide the min(max) tick label
  var showMinLabel = axisModel.get('axisLabel.showMinLabel');
  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME
  // Have not consider onBand yet, where tick els is more than label els.

  labelEls = labelEls || [];
  tickEls = tickEls || [];
  var firstLabel = labelEls[0];
  var nextLabel = labelEls[1];
  var lastLabel = labelEls[labelEls.length - 1];
  var prevLabel = labelEls[labelEls.length - 2];
  var firstTick = tickEls[0];
  var nextTick = tickEls[1];
  var lastTick = tickEls[tickEls.length - 1];
  var prevTick = tickEls[tickEls.length - 2];

  if (showMinLabel === false) {
    ignoreEl(firstLabel);
    ignoreEl(firstTick);
  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {
    if (showMinLabel) {
      ignoreEl(nextLabel);
      ignoreEl(nextTick);
    } else {
      ignoreEl(firstLabel);
      ignoreEl(firstTick);
    }
  }

  if (showMaxLabel === false) {
    ignoreEl(lastLabel);
    ignoreEl(lastTick);
  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {
    if (showMaxLabel) {
      ignoreEl(prevLabel);
      ignoreEl(prevTick);
    } else {
      ignoreEl(lastLabel);
      ignoreEl(lastTick);
    }
  }
}

function ignoreEl(el) {
  el && (el.ignore = true);
}

function isTwoLabelOverlapped(current, next, labelLayout) {
  // current and next has the same rotation.
  var firstRect = current && current.getBoundingRect().clone();
  var nextRect = next && next.getBoundingRect().clone();

  if (!firstRect || !nextRect) {
    return;
  } // When checking intersect of two rotated labels, we use mRotationBack
  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.


  var mRotationBack = matrixUtil.identity([]);
  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);
  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));
  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));
  return firstRect.intersect(nextRect);
}

function isNameLocationCenter(nameLocation) {
  return nameLocation === 'middle' || nameLocation === 'center';
}

function buildAxisTick(axisBuilder, axisModel, opt) {
  var axis = axisModel.axis;

  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {
    return;
  }

  var tickModel = axisModel.getModel('axisTick');
  var lineStyleModel = tickModel.getModel('lineStyle');
  var tickLen = tickModel.get('length');
  var ticksCoords = axis.getTicksCoords();
  var pt1 = [];
  var pt2 = [];
  var matrix = axisBuilder._transform;
  var tickEls = [];

  for (var i = 0; i < ticksCoords.length; i++) {
    var tickCoord = ticksCoords[i].coord;
    pt1[0] = tickCoord;
    pt1[1] = 0;
    pt2[0] = tickCoord;
    pt2[1] = opt.tickDirection * tickLen;

    if (matrix) {
      v2ApplyTransform(pt1, pt1, matrix);
      v2ApplyTransform(pt2, pt2, matrix);
    } // Tick line, Not use group transform to have better line draw


    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({
      // Id for animation
      anid: 'tick_' + ticksCoords[i].tickValue,
      shape: {
        x1: pt1[0],
        y1: pt1[1],
        x2: pt2[0],
        y2: pt2[1]
      },
      style: defaults(lineStyleModel.getLineStyle(), {
        stroke: axisModel.get('axisLine.lineStyle.color')
      }),
      z2: 2,
      silent: true
    }));
    axisBuilder.group.add(tickEl);
    tickEls.push(tickEl);
  }

  return tickEls;
}

function buildAxisLabel(axisBuilder, axisModel, opt) {
  var axis = axisModel.axis;
  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));

  if (!show || axis.scale.isBlank()) {
    return;
  }

  var labelModel = axisModel.getModel('axisLabel');
  var labelMargin = labelModel.get('margin');
  var labels = axis.getViewLabels(); // Special label rotate.

  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;
  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);
  var rawCategoryData = axisModel.getCategories(true);
  var labelEls = [];
  var silent = isSilent(axisModel);
  var triggerEvent = axisModel.get('triggerEvent');
  each(labels, function (labelItem, index) {
    var tickValue = labelItem.tickValue;
    var formattedLabel = labelItem.formattedLabel;
    var rawLabel = labelItem.rawLabel;
    var itemLabelModel = labelModel;

    if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {
      itemLabelModel = new Model(rawCategoryData[tickValue].textStyle, labelModel, axisModel.ecModel);
    }

    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');
    var tickCoord = axis.dataToCoord(tickValue);
    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];
    var textEl = new graphic.Text({
      // Id for animation
      anid: 'label_' + tickValue,
      position: pos,
      rotation: labelLayout.rotation,
      silent: silent,
      z2: 10
    });
    graphic.setTextStyle(textEl.style, itemLabelModel, {
      text: formattedLabel,
      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,
      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,
      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original
      // index of axis.data. So tick should not be exposed to user
      // in category axis.
      // (2) Compatible with previous version, which always use formatted label as
      // input. But in interval scale the formatted label is like '223,445', which
      // maked user repalce ','. So we modify it to return original val but remain
      // it as 'string' to avoid error in replacing.
      axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor
    }); // Pack data for mouse event

    if (triggerEvent) {
      textEl.eventData = makeAxisEventDataBase(axisModel);
      textEl.eventData.targetType = 'axisLabel';
      textEl.eventData.value = rawLabel;
    } // FIXME


    axisBuilder._dumbGroup.add(textEl);

    textEl.updateTransform();
    labelEls.push(textEl);
    axisBuilder.group.add(textEl);
    textEl.decomposeTransform();
  });
  return labelEls;
}

var _default = AxisBuilder;
module.exports = _default;

/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

var _config = __webpack_require__(16);

var __DEV__ = _config.__DEV__;

var echarts = __webpack_require__(13);

var axisPointerModelHelper = __webpack_require__(107);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * Base class of AxisView.
 */
var AxisView = echarts.extendComponentView({
  type: 'axis',

  /**
   * @private
   */
  _axisPointer: null,

  /**
   * @protected
   * @type {string}
   */
  axisPointerClass: null,

  /**
   * @override
   */
  render: function (axisModel, ecModel, api, payload) {
    // FIXME
    // This process should proformed after coordinate systems updated
    // (axis scale updated), and should be performed each time update.
    // So put it here temporarily, although it is not appropriate to
    // put a model-writing procedure in `view`.
    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);
    AxisView.superApply(this, 'render', arguments);
    updateAxisPointer(this, axisModel, ecModel, api, payload, true);
  },

  /**
   * Action handler.
   * @public
   * @param {module:echarts/coord/cartesian/AxisModel} axisModel
   * @param {module:echarts/model/Global} ecModel
   * @param {module:echarts/ExtensionAPI} api
   * @param {Object} payload
   */
  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {
    updateAxisPointer(this, axisModel, ecModel, api, payload, false);
  },

  /**
   * @override
   */
  remove: function (ecModel, api) {
    var axisPointer = this._axisPointer;
    axisPointer && axisPointer.remove(api);
    AxisView.superApply(this, 'remove', arguments);
  },

  /**
   * @override
   */
  dispose: function (ecModel, api) {
    disposeAxisPointer(this, api);
    AxisView.superApply(this, 'dispose', arguments);
  }
});

function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {
  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);

  if (!Clazz) {
    return;
  }

  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);
  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);
}

function disposeAxisPointer(axisView, ecModel, api) {
  var axisPointer = axisView._axisPointer;
  axisPointer && axisPointer.dispose(ecModel, api);
  axisView._axisPointer = null;
}

var axisPointerClazz = [];

AxisView.registerAxisPointerClass = function (type, clazz) {
  axisPointerClazz[type] = clazz;
};

AxisView.getAxisPointerClass = function (type) {
  return type && axisPointerClazz[type];
};

var _default = AxisView;
module.exports = _default;

/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * Can only be called after coordinate system creation stage.
 * (Can be called before coordinate system update stage).
 *
 * @param {Object} opt {labelInside}
 * @return {Object} {
 *  position, rotation, labelDirection, labelOffset,
 *  tickDirection, labelRotate, z2
 * }
 */
function layout(gridModel, axisModel, opt) {
  opt = opt || {};
  var grid = gridModel.coordinateSystem;
  var axis = axisModel.axis;
  var layout = {};
  var otherAxisOnZeroOf = axis.getAxesOnZeroOf()[0];
  var rawAxisPosition = axis.position;
  var axisPosition = otherAxisOnZeroOf ? 'onZero' : rawAxisPosition;
  var axisDim = axis.dim;
  var rect = grid.getRect();
  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];
  var idx = {
    left: 0,
    right: 1,
    top: 0,
    bottom: 1,
    onZero: 2
  };
  var axisOffset = axisModel.get('offset') || 0;
  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];

  if (otherAxisOnZeroOf) {
    var onZeroCoord = otherAxisOnZeroOf.toGlobalCoord(otherAxisOnZeroOf.dataToCoord(0));
    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);
  } // Axis position


  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation

  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim

  var dirMap = {
    top: -1,
    bottom: 1,
    left: -1,
    right: 1
  };
  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];
  layout.labelOffset = otherAxisOnZeroOf ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;

  if (axisModel.get('axisTick.inside')) {
    layout.tickDirection = -layout.tickDirection;
  }

  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {
    layout.labelDirection = -layout.labelDirection;
  } // Special label rotation


  var labelRotate = axisModel.get('axisLabel.rotate');
  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // Over splitLine and splitArea

  layout.z2 = 1;
  return layout;
}

exports.layout = layout;

/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var modelUtil = __webpack_require__(7);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}
 * @param {module:echarts/model/Global} ecModel
 * @return {Object} {point: [x, y], el: ...} point Will not be null.
 */
function _default(finder, ecModel) {
  var point = [];
  var seriesIndex = finder.seriesIndex;
  var seriesModel;

  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {
    return {
      point: []
    };
  }

  var data = seriesModel.getData();
  var dataIndex = modelUtil.queryDataIndex(data, finder);

  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {
    return {
      point: []
    };
  }

  var el = data.getItemGraphicEl(dataIndex);
  var coordSys = seriesModel.coordinateSystem;

  if (seriesModel.getTooltipPosition) {
    point = seriesModel.getTooltipPosition(dataIndex) || [];
  } else if (coordSys && coordSys.dataToPoint) {
    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {
      return data.mapDimension(dim);
    }), dataIndex, true)) || [];
  } else if (el) {
    // Use graphic bounding rect
    var rect = el.getBoundingRect().clone();
    rect.applyTransform(el.transform);
    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];
  }

  return {
    point: point,
    el: el
  };
}

module.exports = _default;

/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var env = __webpack_require__(20);

var _model = __webpack_require__(7);

var makeInner = _model.makeInner;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var inner = makeInner();
var each = zrUtil.each;
/**
 * @param {string} key
 * @param {module:echarts/ExtensionAPI} api
 * @param {Function} handler
 *      param: {string} currTrigger
 *      param: {Array.<number>} point
 */

function register(key, api, handler) {
  if (env.node) {
    return;
  }

  var zr = api.getZr();
  inner(zr).records || (inner(zr).records = {});
  initGlobalListeners(zr, api);
  var record = inner(zr).records[key] || (inner(zr).records[key] = {});
  record.handler = handler;
}

function initGlobalListeners(zr, api) {
  if (inner(zr).initialized) {
    return;
  }

  inner(zr).initialized = true;
  useHandler('click', zrUtil.curry(doEnter, 'click'));
  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);

  useHandler('globalout', onLeave);

  function useHandler(eventType, cb) {
    zr.on(eventType, function (e) {
      var dis = makeDispatchAction(api);
      each(inner(zr).records, function (record) {
        record && cb(record, e, dis.dispatchAction);
      });
      dispatchTooltipFinally(dis.pendings, api);
    });
  }
}

function dispatchTooltipFinally(pendings, api) {
  var showLen = pendings.showTip.length;
  var hideLen = pendings.hideTip.length;
  var actuallyPayload;

  if (showLen) {
    actuallyPayload = pendings.showTip[showLen - 1];
  } else if (hideLen) {
    actuallyPayload = pendings.hideTip[hideLen - 1];
  }

  if (actuallyPayload) {
    actuallyPayload.dispatchAction = null;
    api.dispatchAction(actuallyPayload);
  }
}

function onLeave(record, e, dispatchAction) {
  record.handler('leave', null, dispatchAction);
}

function doEnter(currTrigger, record, e, dispatchAction) {
  record.handler(currTrigger, e, dispatchAction);
}

function makeDispatchAction(api) {
  var pendings = {
    showTip: [],
    hideTip: []
  }; // FIXME
  // better approach?
  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,
  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);
  // So we have to add "final stage" to merge those dispatched actions.

  var dispatchAction = function (payload) {
    var pendingList = pendings[payload.type];

    if (pendingList) {
      pendingList.push(payload);
    } else {
      payload.dispatchAction = dispatchAction;
      api.dispatchAction(payload);
    }
  };

  return {
    dispatchAction: dispatchAction,
    pendings: pendings
  };
}
/**
 * @param {string} key
 * @param {module:echarts/ExtensionAPI} api
 */


function unregister(key, api) {
  if (env.node) {
    return;
  }

  var zr = api.getZr();
  var record = (inner(zr).records || {})[key];

  if (record) {
    inner(zr).records[key] = null;
  }
}

exports.register = register;
exports.unregister = unregister;

/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var graphic = __webpack_require__(11);

var textContain = __webpack_require__(55);

var formatUtil = __webpack_require__(33);

var matrix = __webpack_require__(64);

var axisHelper = __webpack_require__(68);

var AxisBuilder = __webpack_require__(242);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * @param {module:echarts/model/Model} axisPointerModel
 */
function buildElStyle(axisPointerModel) {
  var axisPointerType = axisPointerModel.get('type');
  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');
  var style;

  if (axisPointerType === 'line') {
    style = styleModel.getLineStyle();
    style.fill = null;
  } else if (axisPointerType === 'shadow') {
    style = styleModel.getAreaStyle();
    style.stroke = null;
  }

  return style;
}
/**
 * @param {Function} labelPos {align, verticalAlign, position}
 */


function buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {
  var value = axisPointerModel.get('value');
  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {
    precision: axisPointerModel.get('label.precision'),
    formatter: axisPointerModel.get('label.formatter')
  });
  var labelModel = axisPointerModel.getModel('label');
  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);
  var font = labelModel.getFont();
  var textRect = textContain.getBoundingRect(text, font);
  var position = labelPos.position;
  var width = textRect.width + paddings[1] + paddings[3];
  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.

  var align = labelPos.align;
  align === 'right' && (position[0] -= width);
  align === 'center' && (position[0] -= width / 2);
  var verticalAlign = labelPos.verticalAlign;
  verticalAlign === 'bottom' && (position[1] -= height);
  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container

  confineInContainer(position, width, height, api);
  var bgColor = labelModel.get('backgroundColor');

  if (!bgColor || bgColor === 'auto') {
    bgColor = axisModel.get('axisLine.lineStyle.color');
  }

  elOption.label = {
    shape: {
      x: 0,
      y: 0,
      width: width,
      height: height,
      r: labelModel.get('borderRadius')
    },
    position: position.slice(),
    // TODO: rich
    style: {
      text: text,
      textFont: font,
      textFill: labelModel.getTextColor(),
      textPosition: 'inside',
      fill: bgColor,
      stroke: labelModel.get('borderColor') || 'transparent',
      lineWidth: labelModel.get('borderWidth') || 0,
      shadowBlur: labelModel.get('shadowBlur'),
      shadowColor: labelModel.get('shadowColor'),
      shadowOffsetX: labelModel.get('shadowOffsetX'),
      shadowOffsetY: labelModel.get('shadowOffsetY')
    },
    // Lable should be over axisPointer.
    z2: 10
  };
} // Do not overflow ec container


function confineInContainer(position, width, height, api) {
  var viewWidth = api.getWidth();
  var viewHeight = api.getHeight();
  position[0] = Math.min(position[0] + width, viewWidth) - width;
  position[1] = Math.min(position[1] + height, viewHeight) - height;
  position[0] = Math.max(position[0], 0);
  position[1] = Math.max(position[1], 0);
}
/**
 * @param {number} value
 * @param {module:echarts/coord/Axis} axis
 * @param {module:echarts/model/Global} ecModel
 * @param {Object} opt
 * @param {Array.<Object>} seriesDataIndices
 * @param {number|string} opt.precision 'auto' or a number
 * @param {string|Function} opt.formatter label formatter
 */


function getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {
  value = axis.scale.parse(value);
  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which
  // helps to debounce when when moving label.
  value, {
    precision: opt.precision
  });
  var formatter = opt.formatter;

  if (formatter) {
    var params = {
      value: axisHelper.getAxisRawValue(axis, value),
      seriesData: []
    };
    zrUtil.each(seriesDataIndices, function (idxItem) {
      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);
      var dataIndex = idxItem.dataIndexInside;
      var dataParams = series && series.getDataParams(dataIndex);
      dataParams && params.seriesData.push(dataParams);
    });

    if (zrUtil.isString(formatter)) {
      text = formatter.replace('{value}', text);
    } else if (zrUtil.isFunction(formatter)) {
      text = formatter(params);
    }
  }

  return text;
}
/**
 * @param {module:echarts/coord/Axis} axis
 * @param {number} value
 * @param {Object} layoutInfo {
 *  rotation, position, labelOffset, labelDirection, labelMargin
 * }
 */


function getTransformedPosition(axis, value, layoutInfo) {
  var transform = matrix.create();
  matrix.rotate(transform, transform, layoutInfo.rotation);
  matrix.translate(transform, transform, layoutInfo.position);
  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);
}

function buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {
  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);
  layoutInfo.labelMargin = axisPointerModel.get('label.margin');
  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {
    position: getTransformedPosition(axisModel.axis, value, layoutInfo),
    align: textLayout.textAlign,
    verticalAlign: textLayout.textVerticalAlign
  });
}
/**
 * @param {Array.<number>} p1
 * @param {Array.<number>} p2
 * @param {number} [xDimIndex=0] or 1
 */


function makeLineShape(p1, p2, xDimIndex) {
  xDimIndex = xDimIndex || 0;
  return {
    x1: p1[xDimIndex],
    y1: p1[1 - xDimIndex],
    x2: p2[xDimIndex],
    y2: p2[1 - xDimIndex]
  };
}
/**
 * @param {Array.<number>} xy
 * @param {Array.<number>} wh
 * @param {number} [xDimIndex=0] or 1
 */


function makeRectShape(xy, wh, xDimIndex) {
  xDimIndex = xDimIndex || 0;
  return {
    x: xy[xDimIndex],
    y: xy[1 - xDimIndex],
    width: wh[xDimIndex],
    height: wh[1 - xDimIndex]
  };
}

function makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {
  return {
    cx: cx,
    cy: cy,
    r0: r0,
    r: r,
    startAngle: startAngle,
    endAngle: endAngle,
    clockwise: true
  };
}

exports.buildElStyle = buildElStyle;
exports.buildLabelElOption = buildLabelElOption;
exports.getValueLabel = getValueLabel;
exports.getTransformedPosition = getTransformedPosition;
exports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;
exports.makeLineShape = makeLineShape;
exports.makeRectShape = makeRectShape;
exports.makeSectorShape = makeSectorShape;

/***/ }),
/* 248 */,
/* 249 */,
/* 250 */,
/* 251 */,
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__;

/***/ }),
/* 253 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_components_actionsheet_index_vue__ = __webpack_require__(254);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_components_actionsheet_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__src_components_actionsheet_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__src_components_agree_index_vue__ = __webpack_require__(255);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__src_components_agree_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__src_components_agree_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__src_plugins_ajax_index_js__ = __webpack_require__(256);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__src_components_alert_index_vue__ = __webpack_require__(275);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__src_components_alert_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__src_components_alert_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__src_plugins_alert_module__ = __webpack_require__(276);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__src_plugins_alert_index_js__ = __webpack_require__(277);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__src_plugins_app_index_js__ = __webpack_require__(278);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__src_filters_array2String_js__ = __webpack_require__(279);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__src_components_badge_index_vue__ = __webpack_require__(280);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__src_components_badge_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8__src_components_badge_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__src_tools_base64_index_js__ = __webpack_require__(281);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__src_components_blur_index_vue__ = __webpack_require__(282);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__src_components_blur_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10__src_components_blur_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__src_components_box_index_vue__ = __webpack_require__(283);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__src_components_box_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11__src_components_box_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__src_plugins_bus_index_js__ = __webpack_require__(284);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__src_components_button_tab_button_tab_vue__ = __webpack_require__(285);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__src_components_button_tab_button_tab_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_13__src_components_button_tab_button_tab_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__src_components_button_tab_button_tab_item_vue__ = __webpack_require__(286);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__src_components_button_tab_button_tab_item_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_14__src_components_button_tab_button_tab_item_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__src_components_calendar_index_vue__ = __webpack_require__(287);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__src_components_calendar_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_15__src_components_calendar_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__src_components_card_index_vue__ = __webpack_require__(288);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__src_components_card_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_16__src_components_card_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__src_components_cell_index_vue__ = __webpack_require__(289);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__src_components_cell_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_17__src_components_cell_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__src_components_cell_box_index_vue__ = __webpack_require__(290);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__src_components_cell_box_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_18__src_components_cell_box_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__src_components_cell_form_preview_index_vue__ = __webpack_require__(291);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__src_components_cell_form_preview_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_19__src_components_cell_form_preview_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__src_components_checker_checker_vue__ = __webpack_require__(292);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__src_components_checker_checker_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_20__src_components_checker_checker_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__src_components_checker_checker_item_vue__ = __webpack_require__(293);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__src_components_checker_checker_item_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_21__src_components_checker_checker_item_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__src_components_check_icon_index_vue__ = __webpack_require__(294);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__src_components_check_icon_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_22__src_components_check_icon_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__src_components_checklist_index_vue__ = __webpack_require__(295);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__src_components_checklist_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_23__src_components_checklist_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__src_datas_china_address_json__ = __webpack_require__(296);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__src_datas_china_address_json___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_24__src_datas_china_address_json__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__src_datas_china_address_v1_json__ = __webpack_require__(297);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__src_datas_china_address_v1_json___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_25__src_datas_china_address_v1_json__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__src_datas_china_address_v2_json__ = __webpack_require__(298);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__src_datas_china_address_v2_json___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_26__src_datas_china_address_v2_json__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__src_datas_china_address_v3_json__ = __webpack_require__(299);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__src_datas_china_address_v3_json___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_27__src_datas_china_address_v3_json__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__src_datas_china_address_v4_json__ = __webpack_require__(300);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__src_datas_china_address_v4_json___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_28__src_datas_china_address_v4_json__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__src_tools_validator_chinaMobile_js__ = __webpack_require__(301);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__src_directives_click_outside_index_js__ = __webpack_require__(302);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__src_components_clocker_index_vue__ = __webpack_require__(303);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__src_components_clocker_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_31__src_components_clocker_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_32__src_plugins_close_dialogs_index_js__ = __webpack_require__(304);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_33__src_components_color_picker_index_vue__ = __webpack_require__(305);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_33__src_components_color_picker_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_33__src_components_color_picker_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_34__src_plugins_config_index_js__ = __webpack_require__(306);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_35__src_components_confirm_index_vue__ = __webpack_require__(307);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_35__src_components_confirm_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_35__src_components_confirm_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_36__src_plugins_confirm_index_js__ = __webpack_require__(308);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_37__src_tools_cookie_index_js__ = __webpack_require__(160);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_38__src_components_countdown_index_vue__ = __webpack_require__(309);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_38__src_components_countdown_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_38__src_components_countdown_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_39__src_components_countup_index_vue__ = __webpack_require__(310);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_39__src_components_countup_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_39__src_components_countup_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_40__src_tools_date_format_js__ = __webpack_require__(161);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_41__src_tools_date_range_js__ = __webpack_require__(311);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_42__src_components_datetime_index_vue__ = __webpack_require__(162);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_42__src_components_datetime_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_42__src_components_datetime_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_43__src_plugins_datetime_index_js__ = __webpack_require__(312);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_44__src_components_datetime_range_index_vue__ = __webpack_require__(321);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_44__src_components_datetime_range_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_44__src_components_datetime_range_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_45__src_components_datetime_view_index_vue__ = __webpack_require__(322);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_45__src_components_datetime_view_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_45__src_components_datetime_view_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_46__src_tools_debounce_index_js__ = __webpack_require__(323);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_47__src_components_fullpage_DemoBasic_vue__ = __webpack_require__(325);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_47__src_components_fullpage_DemoBasic_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_47__src_components_fullpage_DemoBasic_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_48__src_components_popover_DemoIndex_vue__ = __webpack_require__(326);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_48__src_components_popover_DemoIndex_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_48__src_components_popover_DemoIndex_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_49__src_plugins_device_index_js__ = __webpack_require__(327);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_50__src_components_dev_tip_index_vue__ = __webpack_require__(328);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_50__src_components_dev_tip_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_50__src_components_dev_tip_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_51__src_components_divider_index_vue__ = __webpack_require__(329);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_51__src_components_divider_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_51__src_components_divider_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_52__src_components_drawer_index_vue__ = __webpack_require__(330);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_52__src_components_drawer_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_52__src_components_drawer_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_53__src_components_flexbox_flexbox_vue__ = __webpack_require__(331);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_53__src_components_flexbox_flexbox_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_53__src_components_flexbox_flexbox_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_54__src_components_flexbox_flexbox_item_vue__ = __webpack_require__(332);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_54__src_components_flexbox_flexbox_item_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_54__src_components_flexbox_flexbox_item_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_55__src_components_flow_flow_vue__ = __webpack_require__(333);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_55__src_components_flow_flow_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_55__src_components_flow_flow_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_56__src_components_flow_flow_line_vue__ = __webpack_require__(334);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_56__src_components_flow_flow_line_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_56__src_components_flow_flow_line_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_57__src_components_flow_flow_state_vue__ = __webpack_require__(335);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_57__src_components_flow_flow_state_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_57__src_components_flow_flow_state_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_58__src_filters_format_time_js__ = __webpack_require__(336);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_59__src_components_form_preview_index_vue__ = __webpack_require__(337);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_59__src_components_form_preview_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_59__src_components_form_preview_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_60__src_filters_friendly_time_js__ = __webpack_require__(338);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_61__src_components_fullpage_index_vue__ = __webpack_require__(339);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_61__src_components_fullpage_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_61__src_components_fullpage_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_62__src_components_grid_grid_vue__ = __webpack_require__(340);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_62__src_components_grid_grid_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_62__src_components_grid_grid_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_63__src_components_grid_grid_item_vue__ = __webpack_require__(341);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_63__src_components_grid_grid_item_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_63__src_components_grid_grid_item_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_64__src_components_group_index_vue__ = __webpack_require__(342);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_64__src_components_group_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_64__src_components_group_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_65__src_components_group_title_index_vue__ = __webpack_require__(343);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_65__src_components_group_title_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_65__src_components_group_title_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_66__src_components_icon_index_vue__ = __webpack_require__(344);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_66__src_components_icon_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_66__src_components_icon_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_67__src_components_inline_calendar_index_vue__ = __webpack_require__(345);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_67__src_components_inline_calendar_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_67__src_components_inline_calendar_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_68__src_components_inline_desc_index_vue__ = __webpack_require__(346);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_68__src_components_inline_desc_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_68__src_components_inline_desc_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_69__src_components_inline_loading_index_vue__ = __webpack_require__(347);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_69__src_components_inline_loading_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_69__src_components_inline_loading_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_70__src_components_inline_x_number_index_vue__ = __webpack_require__(348);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_70__src_components_inline_x_number_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_70__src_components_inline_x_number_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_71__src_components_inline_x_switch_index_vue__ = __webpack_require__(349);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_71__src_components_inline_x_switch_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_71__src_components_inline_x_switch_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_72__src_directives_inview_index_js__ = __webpack_require__(350);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_73__src_components_loading_index_vue__ = __webpack_require__(352);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_73__src_components_loading_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_73__src_components_loading_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_74__src_plugins_loading_index_js__ = __webpack_require__(353);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_75__src_components_load_more_index_vue__ = __webpack_require__(354);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_75__src_components_load_more_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_75__src_components_load_more_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_76__src_plugins_locale_index_js__ = __webpack_require__(355);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_77__src_components_marquee_marquee_vue__ = __webpack_require__(356);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_77__src_components_marquee_marquee_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_77__src_components_marquee_marquee_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_78__src_components_marquee_marquee_item_vue__ = __webpack_require__(357);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_78__src_components_marquee_marquee_item_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_78__src_components_marquee_marquee_item_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_79__src_components_masker_index_vue__ = __webpack_require__(358);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_79__src_components_masker_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_79__src_components_masker_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_80__src_tools_md5_index_js__ = __webpack_require__(359);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_81__src_components_msg_index_vue__ = __webpack_require__(361);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_81__src_components_msg_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_81__src_components_msg_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_82__src_filters_name2value_js__ = __webpack_require__(362);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_83__src_tools_number_comma_js__ = __webpack_require__(363);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_84__src_tools_number_pad_js__ = __webpack_require__(166);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_85__src_tools_number_random_js__ = __webpack_require__(364);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_86__src_tools_number_range_js__ = __webpack_require__(365);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_87__src_components_number_roller_index_vue__ = __webpack_require__(366);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_87__src_components_number_roller_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_87__src_components_number_roller_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_88__src_components_panel_index_vue__ = __webpack_require__(367);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_88__src_components_panel_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_88__src_components_panel_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_89__src_components_picker_index_vue__ = __webpack_require__(368);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_89__src_components_picker_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_89__src_components_picker_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_90__src_components_popover_index_vue__ = __webpack_require__(369);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_90__src_components_popover_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_90__src_components_popover_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_91__src_components_popup_index_vue__ = __webpack_require__(370);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_91__src_components_popup_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_91__src_components_popup_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_92__src_components_popup_header_index_vue__ = __webpack_require__(371);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_92__src_components_popup_header_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_92__src_components_popup_header_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_93__src_components_popup_picker_index_vue__ = __webpack_require__(372);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_93__src_components_popup_picker_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_93__src_components_popup_picker_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_94__src_components_popup_radio_index_vue__ = __webpack_require__(373);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_94__src_components_popup_radio_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_94__src_components_popup_radio_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_95__src_components_previewer_index_vue__ = __webpack_require__(374);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_95__src_components_previewer_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_95__src_components_previewer_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_96__src_components_qrcode_index_vue__ = __webpack_require__(375);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_96__src_components_qrcode_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_96__src_components_qrcode_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_97__src_tools_querystring_index_js__ = __webpack_require__(163);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_97__src_tools_querystring_index_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_97__src_tools_querystring_index_js__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_98__src_components_radio_index_vue__ = __webpack_require__(376);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_98__src_components_radio_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_98__src_components_radio_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_99__src_components_range_index_vue__ = __webpack_require__(377);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_99__src_components_range_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_99__src_components_range_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_100__src_components_rater_index_vue__ = __webpack_require__(378);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_100__src_components_rater_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_100__src_components_rater_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_101__src_components_scroller_index_vue__ = __webpack_require__(379);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_101__src_components_scroller_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_101__src_components_scroller_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_102__src_components_search_index_vue__ = __webpack_require__(380);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_102__src_components_search_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_102__src_components_search_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_103__src_components_selector_index_vue__ = __webpack_require__(381);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_103__src_components_selector_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_103__src_components_selector_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_104__src_components_shake_index_vue__ = __webpack_require__(382);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_104__src_components_shake_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_104__src_components_shake_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_105__src_components_spinner_index_vue__ = __webpack_require__(383);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_105__src_components_spinner_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_105__src_components_spinner_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_106__src_components_step_step_vue__ = __webpack_require__(384);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_106__src_components_step_step_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_106__src_components_step_step_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_107__src_components_step_step_item_vue__ = __webpack_require__(385);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_107__src_components_step_step_item_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_107__src_components_step_step_item_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_108__src_components_sticky_index_vue__ = __webpack_require__(386);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_108__src_components_sticky_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_108__src_components_sticky_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_109__src_tools_string_trim_js__ = __webpack_require__(167);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_110__src_components_swipeout_swipeout_vue__ = __webpack_require__(387);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_110__src_components_swipeout_swipeout_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_110__src_components_swipeout_swipeout_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_111__src_components_swipeout_swipeout_button_vue__ = __webpack_require__(388);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_111__src_components_swipeout_swipeout_button_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_111__src_components_swipeout_swipeout_button_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_112__src_components_swipeout_swipeout_item_vue__ = __webpack_require__(389);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_112__src_components_swipeout_swipeout_item_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_112__src_components_swipeout_swipeout_item_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_113__src_components_swiper_swiper_vue__ = __webpack_require__(390);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_113__src_components_swiper_swiper_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_113__src_components_swiper_swiper_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_114__src_components_swiper_swiper_item_vue__ = __webpack_require__(391);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_114__src_components_swiper_swiper_item_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_114__src_components_swiper_swiper_item_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_115__src_components_tab_tab_vue__ = __webpack_require__(392);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_115__src_components_tab_tab_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_115__src_components_tab_tab_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_116__src_components_tabbar_tabbar_vue__ = __webpack_require__(393);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_116__src_components_tabbar_tabbar_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_116__src_components_tabbar_tabbar_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_117__src_components_tabbar_tabbar_item_vue__ = __webpack_require__(394);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_117__src_components_tabbar_tabbar_item_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_117__src_components_tabbar_tabbar_item_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_118__src_components_tab_tab_item_vue__ = __webpack_require__(395);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_118__src_components_tab_tab_item_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_118__src_components_tab_tab_item_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_119__src_tools_throttle_index_js__ = __webpack_require__(396);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_120__src_components_timeline_timeline_vue__ = __webpack_require__(398);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_120__src_components_timeline_timeline_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_120__src_components_timeline_timeline_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_121__src_components_timeline_timeline_item_vue__ = __webpack_require__(399);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_121__src_components_timeline_timeline_item_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_121__src_components_timeline_timeline_item_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_122__src_components_tip_index_vue__ = __webpack_require__(400);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_122__src_components_tip_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_122__src_components_tip_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_123__src_components_toast_index_vue__ = __webpack_require__(401);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_123__src_components_toast_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_123__src_components_toast_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_124__src_plugins_toast_index_js__ = __webpack_require__(402);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_125__src_directives_transfer_dom_index_js__ = __webpack_require__(168);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_126__src_tools_string_trim__ = __webpack_require__(167);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_127__src_filters_value2name_js__ = __webpack_require__(403);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_128__src_components_v_chart_v_area_vue__ = __webpack_require__(404);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_128__src_components_v_chart_v_area_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_128__src_components_v_chart_v_area_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_129__src_components_v_chart_v_axis_vue__ = __webpack_require__(405);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_129__src_components_v_chart_v_axis_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_129__src_components_v_chart_v_axis_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_130__src_components_v_chart_v_bar_vue__ = __webpack_require__(406);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_130__src_components_v_chart_v_bar_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_130__src_components_v_chart_v_bar_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_131__src_components_v_chart_v_chart_vue__ = __webpack_require__(407);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_131__src_components_v_chart_v_chart_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_131__src_components_v_chart_v_chart_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_132__src_components_v_chart_v_guide_vue__ = __webpack_require__(408);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_132__src_components_v_chart_v_guide_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_132__src_components_v_chart_v_guide_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_133__src_components_video_index_vue__ = __webpack_require__(409);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_133__src_components_video_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_133__src_components_video_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_134__src_components_view_box_index_vue__ = __webpack_require__(410);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_134__src_components_view_box_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_134__src_components_view_box_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_135__src_components_v_chart_v_legend_vue__ = __webpack_require__(411);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_135__src_components_v_chart_v_legend_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_135__src_components_v_chart_v_legend_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_136__src_components_v_chart_v_line_vue__ = __webpack_require__(412);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_136__src_components_v_chart_v_line_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_136__src_components_v_chart_v_line_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_137__src_components_v_chart_v_pie_vue__ = __webpack_require__(413);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_137__src_components_v_chart_v_pie_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_137__src_components_v_chart_v_pie_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_138__src_components_v_chart_v_point_vue__ = __webpack_require__(414);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_138__src_components_v_chart_v_point_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_138__src_components_v_chart_v_point_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_139__src_components_v_chart_v_scale_vue__ = __webpack_require__(415);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_139__src_components_v_chart_v_scale_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_139__src_components_v_chart_v_scale_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_140__src_components_v_chart_v_tooltip_vue__ = __webpack_require__(416);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_140__src_components_v_chart_v_tooltip_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_140__src_components_v_chart_v_tooltip_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_141__src_datas_vux_component_list_json__ = __webpack_require__(417);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_141__src_datas_vux_component_list_json___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_141__src_datas_vux_component_list_json__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_142__src_components_wechat_emotion_index_vue__ = __webpack_require__(418);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_142__src_components_wechat_emotion_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_142__src_components_wechat_emotion_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_143__src_plugins_wechat_index_js__ = __webpack_require__(419);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_144__src_components_week_calendar_index_vue__ = __webpack_require__(421);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_144__src_components_week_calendar_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_144__src_components_week_calendar_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_145__src_components_wepay_input_index_vue__ = __webpack_require__(422);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_145__src_components_wepay_input_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_145__src_components_wepay_input_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_146__src_components_x_address_index_vue__ = __webpack_require__(423);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_146__src_components_x_address_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_146__src_components_x_address_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_147__src_components_x_button_index_vue__ = __webpack_require__(424);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_147__src_components_x_button_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_147__src_components_x_button_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_148__src_components_x_circle_index_vue__ = __webpack_require__(425);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_148__src_components_x_circle_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_148__src_components_x_circle_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_149__src_components_x_dialog_index_vue__ = __webpack_require__(426);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_149__src_components_x_dialog_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_149__src_components_x_dialog_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_150__src_components_x_header_index_vue__ = __webpack_require__(427);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_150__src_components_x_header_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_150__src_components_x_header_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_151__src_components_x_hr_index_vue__ = __webpack_require__(428);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_151__src_components_x_hr_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_151__src_components_x_hr_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_152__src_components_x_img_index_vue__ = __webpack_require__(429);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_152__src_components_x_img_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_152__src_components_x_img_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_153__src_components_x_input_index_vue__ = __webpack_require__(430);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_153__src_components_x_input_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_153__src_components_x_input_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_154__src_components_x_number_index_vue__ = __webpack_require__(431);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_154__src_components_x_number_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_154__src_components_x_number_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_155__src_components_x_progress_index_vue__ = __webpack_require__(432);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_155__src_components_x_progress_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_155__src_components_x_progress_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_156__src_components_x_switch_index_vue__ = __webpack_require__(433);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_156__src_components_x_switch_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_156__src_components_x_switch_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_157__src_components_x_table_index_vue__ = __webpack_require__(434);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_157__src_components_x_table_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_157__src_components_x_table_index_vue__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_158__src_components_x_textarea_index_vue__ = __webpack_require__(435);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_158__src_components_x_textarea_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_158__src_components_x_textarea_index_vue__);
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_0__src_components_actionsheet_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Actionsheet", function() { return __WEBPACK_IMPORTED_MODULE_0__src_components_actionsheet_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_1__src_components_agree_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Agree", function() { return __WEBPACK_IMPORTED_MODULE_1__src_components_agree_index_vue__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "AjaxPlugin", function() { return __WEBPACK_IMPORTED_MODULE_2__src_plugins_ajax_index_js__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_3__src_components_alert_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Alert", function() { return __WEBPACK_IMPORTED_MODULE_3__src_components_alert_index_vue__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "AlertModule", function() { return __WEBPACK_IMPORTED_MODULE_4__src_plugins_alert_module__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "AlertPlugin", function() { return __WEBPACK_IMPORTED_MODULE_5__src_plugins_alert_index_js__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "AppPlugin", function() { return __WEBPACK_IMPORTED_MODULE_6__src_plugins_app_index_js__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Array2stringFilter", function() { return __WEBPACK_IMPORTED_MODULE_7__src_filters_array2String_js__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_8__src_components_badge_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Badge", function() { return __WEBPACK_IMPORTED_MODULE_8__src_components_badge_index_vue__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "base64", function() { return __WEBPACK_IMPORTED_MODULE_9__src_tools_base64_index_js__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_10__src_components_blur_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Blur", function() { return __WEBPACK_IMPORTED_MODULE_10__src_components_blur_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_11__src_components_box_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Box", function() { return __WEBPACK_IMPORTED_MODULE_11__src_components_box_index_vue__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "BusPlugin", function() { return __WEBPACK_IMPORTED_MODULE_12__src_plugins_bus_index_js__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_13__src_components_button_tab_button_tab_vue__, "default")) __webpack_require__.d(__webpack_exports__, "ButtonTab", function() { return __WEBPACK_IMPORTED_MODULE_13__src_components_button_tab_button_tab_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_14__src_components_button_tab_button_tab_item_vue__, "default")) __webpack_require__.d(__webpack_exports__, "ButtonTabItem", function() { return __WEBPACK_IMPORTED_MODULE_14__src_components_button_tab_button_tab_item_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_15__src_components_calendar_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Calendar", function() { return __WEBPACK_IMPORTED_MODULE_15__src_components_calendar_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_16__src_components_card_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Card", function() { return __WEBPACK_IMPORTED_MODULE_16__src_components_card_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_17__src_components_cell_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Cell", function() { return __WEBPACK_IMPORTED_MODULE_17__src_components_cell_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_18__src_components_cell_box_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "CellBox", function() { return __WEBPACK_IMPORTED_MODULE_18__src_components_cell_box_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_19__src_components_cell_form_preview_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "CellFormPreview", function() { return __WEBPACK_IMPORTED_MODULE_19__src_components_cell_form_preview_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_20__src_components_checker_checker_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Checker", function() { return __WEBPACK_IMPORTED_MODULE_20__src_components_checker_checker_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_21__src_components_checker_checker_item_vue__, "default")) __webpack_require__.d(__webpack_exports__, "CheckerItem", function() { return __WEBPACK_IMPORTED_MODULE_21__src_components_checker_checker_item_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_22__src_components_check_icon_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "CheckIcon", function() { return __WEBPACK_IMPORTED_MODULE_22__src_components_check_icon_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_23__src_components_checklist_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Checklist", function() { return __WEBPACK_IMPORTED_MODULE_23__src_components_checklist_index_vue__["default"]; });
/* harmony reexport (default from non-hamory) */ __webpack_require__.d(__webpack_exports__, "ChinaAddressData", function() { return __WEBPACK_IMPORTED_MODULE_24__src_datas_china_address_json___default.a; });
/* harmony reexport (default from non-hamory) */ __webpack_require__.d(__webpack_exports__, "ChinaAddressV1Data", function() { return __WEBPACK_IMPORTED_MODULE_25__src_datas_china_address_v1_json___default.a; });
/* harmony reexport (default from non-hamory) */ __webpack_require__.d(__webpack_exports__, "ChinaAddressV2Data", function() { return __WEBPACK_IMPORTED_MODULE_26__src_datas_china_address_v2_json___default.a; });
/* harmony reexport (default from non-hamory) */ __webpack_require__.d(__webpack_exports__, "ChinaAddressV3Data", function() { return __WEBPACK_IMPORTED_MODULE_27__src_datas_china_address_v3_json___default.a; });
/* harmony reexport (default from non-hamory) */ __webpack_require__.d(__webpack_exports__, "ChinaAddressV4Data", function() { return __WEBPACK_IMPORTED_MODULE_28__src_datas_china_address_v4_json___default.a; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "ChinamobileTool", function() { return __WEBPACK_IMPORTED_MODULE_29__src_tools_validator_chinaMobile_js__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "ClickOutsideDirective", function() { return __WEBPACK_IMPORTED_MODULE_30__src_directives_click_outside_index_js__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_31__src_components_clocker_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Clocker", function() { return __WEBPACK_IMPORTED_MODULE_31__src_components_clocker_index_vue__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "CloseDialogsPlugin", function() { return __WEBPACK_IMPORTED_MODULE_32__src_plugins_close_dialogs_index_js__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_33__src_components_color_picker_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "ColorPicker", function() { return __WEBPACK_IMPORTED_MODULE_33__src_components_color_picker_index_vue__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "ConfigPlugin", function() { return __WEBPACK_IMPORTED_MODULE_34__src_plugins_config_index_js__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_35__src_components_confirm_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Confirm", function() { return __WEBPACK_IMPORTED_MODULE_35__src_components_confirm_index_vue__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "ConfirmPlugin", function() { return __WEBPACK_IMPORTED_MODULE_36__src_plugins_confirm_index_js__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "cookie", function() { return __WEBPACK_IMPORTED_MODULE_37__src_tools_cookie_index_js__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_38__src_components_countdown_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Countdown", function() { return __WEBPACK_IMPORTED_MODULE_38__src_components_countdown_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_39__src_components_countup_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Countup", function() { return __WEBPACK_IMPORTED_MODULE_39__src_components_countup_index_vue__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "dateFormat", function() { return __WEBPACK_IMPORTED_MODULE_40__src_tools_date_format_js__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "dateRange", function() { return __WEBPACK_IMPORTED_MODULE_41__src_tools_date_range_js__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_42__src_components_datetime_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Datetime", function() { return __WEBPACK_IMPORTED_MODULE_42__src_components_datetime_index_vue__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "DatetimePlugin", function() { return __WEBPACK_IMPORTED_MODULE_43__src_plugins_datetime_index_js__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_44__src_components_datetime_range_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "DatetimeRange", function() { return __WEBPACK_IMPORTED_MODULE_44__src_components_datetime_range_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_45__src_components_datetime_view_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "DatetimeView", function() { return __WEBPACK_IMPORTED_MODULE_45__src_components_datetime_view_index_vue__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "debounce", function() { return __WEBPACK_IMPORTED_MODULE_46__src_tools_debounce_index_js__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_47__src_components_fullpage_DemoBasic_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Demobasic", function() { return __WEBPACK_IMPORTED_MODULE_47__src_components_fullpage_DemoBasic_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_48__src_components_popover_DemoIndex_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Demoindex", function() { return __WEBPACK_IMPORTED_MODULE_48__src_components_popover_DemoIndex_vue__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "DevicePlugin", function() { return __WEBPACK_IMPORTED_MODULE_49__src_plugins_device_index_js__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_50__src_components_dev_tip_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "DevTip", function() { return __WEBPACK_IMPORTED_MODULE_50__src_components_dev_tip_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_51__src_components_divider_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Divider", function() { return __WEBPACK_IMPORTED_MODULE_51__src_components_divider_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_52__src_components_drawer_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Drawer", function() { return __WEBPACK_IMPORTED_MODULE_52__src_components_drawer_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_53__src_components_flexbox_flexbox_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Flexbox", function() { return __WEBPACK_IMPORTED_MODULE_53__src_components_flexbox_flexbox_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_54__src_components_flexbox_flexbox_item_vue__, "default")) __webpack_require__.d(__webpack_exports__, "FlexboxItem", function() { return __WEBPACK_IMPORTED_MODULE_54__src_components_flexbox_flexbox_item_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_55__src_components_flow_flow_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Flow", function() { return __WEBPACK_IMPORTED_MODULE_55__src_components_flow_flow_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_56__src_components_flow_flow_line_vue__, "default")) __webpack_require__.d(__webpack_exports__, "FlowLine", function() { return __WEBPACK_IMPORTED_MODULE_56__src_components_flow_flow_line_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_57__src_components_flow_flow_state_vue__, "default")) __webpack_require__.d(__webpack_exports__, "FlowState", function() { return __WEBPACK_IMPORTED_MODULE_57__src_components_flow_flow_state_vue__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "FormatTimeFilter", function() { return __WEBPACK_IMPORTED_MODULE_58__src_filters_format_time_js__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_59__src_components_form_preview_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "FormPreview", function() { return __WEBPACK_IMPORTED_MODULE_59__src_components_form_preview_index_vue__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "FriendlyTimeFilter", function() { return __WEBPACK_IMPORTED_MODULE_60__src_filters_friendly_time_js__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_61__src_components_fullpage_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Fullpage", function() { return __WEBPACK_IMPORTED_MODULE_61__src_components_fullpage_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_62__src_components_grid_grid_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Grid", function() { return __WEBPACK_IMPORTED_MODULE_62__src_components_grid_grid_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_63__src_components_grid_grid_item_vue__, "default")) __webpack_require__.d(__webpack_exports__, "GridItem", function() { return __WEBPACK_IMPORTED_MODULE_63__src_components_grid_grid_item_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_64__src_components_group_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Group", function() { return __WEBPACK_IMPORTED_MODULE_64__src_components_group_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_65__src_components_group_title_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "GroupTitle", function() { return __WEBPACK_IMPORTED_MODULE_65__src_components_group_title_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_66__src_components_icon_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Icon", function() { return __WEBPACK_IMPORTED_MODULE_66__src_components_icon_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_67__src_components_inline_calendar_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "InlineCalendar", function() { return __WEBPACK_IMPORTED_MODULE_67__src_components_inline_calendar_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_68__src_components_inline_desc_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "InlineDesc", function() { return __WEBPACK_IMPORTED_MODULE_68__src_components_inline_desc_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_69__src_components_inline_loading_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "InlineLoading", function() { return __WEBPACK_IMPORTED_MODULE_69__src_components_inline_loading_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_70__src_components_inline_x_number_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "InlineXNumber", function() { return __WEBPACK_IMPORTED_MODULE_70__src_components_inline_x_number_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_71__src_components_inline_x_switch_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "InlineXSwitch", function() { return __WEBPACK_IMPORTED_MODULE_71__src_components_inline_x_switch_index_vue__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "InviewDirective", function() { return __WEBPACK_IMPORTED_MODULE_72__src_directives_inview_index_js__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_73__src_components_loading_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Loading", function() { return __WEBPACK_IMPORTED_MODULE_73__src_components_loading_index_vue__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "LoadingPlugin", function() { return __WEBPACK_IMPORTED_MODULE_74__src_plugins_loading_index_js__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_75__src_components_load_more_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "LoadMore", function() { return __WEBPACK_IMPORTED_MODULE_75__src_components_load_more_index_vue__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "LocalePlugin", function() { return __WEBPACK_IMPORTED_MODULE_76__src_plugins_locale_index_js__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_77__src_components_marquee_marquee_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Marquee", function() { return __WEBPACK_IMPORTED_MODULE_77__src_components_marquee_marquee_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_78__src_components_marquee_marquee_item_vue__, "default")) __webpack_require__.d(__webpack_exports__, "MarqueeItem", function() { return __WEBPACK_IMPORTED_MODULE_78__src_components_marquee_marquee_item_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_79__src_components_masker_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Masker", function() { return __WEBPACK_IMPORTED_MODULE_79__src_components_masker_index_vue__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "md5", function() { return __WEBPACK_IMPORTED_MODULE_80__src_tools_md5_index_js__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_81__src_components_msg_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Msg", function() { return __WEBPACK_IMPORTED_MODULE_81__src_components_msg_index_vue__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Name2valueFilter", function() { return __WEBPACK_IMPORTED_MODULE_82__src_filters_name2value_js__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "numberComma", function() { return __WEBPACK_IMPORTED_MODULE_83__src_tools_number_comma_js__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "numberPad", function() { return __WEBPACK_IMPORTED_MODULE_84__src_tools_number_pad_js__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "numberRandom", function() { return __WEBPACK_IMPORTED_MODULE_85__src_tools_number_random_js__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "numberRange", function() { return __WEBPACK_IMPORTED_MODULE_86__src_tools_number_range_js__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_87__src_components_number_roller_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "NumberRoller", function() { return __WEBPACK_IMPORTED_MODULE_87__src_components_number_roller_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_88__src_components_panel_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Panel", function() { return __WEBPACK_IMPORTED_MODULE_88__src_components_panel_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_89__src_components_picker_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Picker", function() { return __WEBPACK_IMPORTED_MODULE_89__src_components_picker_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_90__src_components_popover_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Popover", function() { return __WEBPACK_IMPORTED_MODULE_90__src_components_popover_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_91__src_components_popup_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Popup", function() { return __WEBPACK_IMPORTED_MODULE_91__src_components_popup_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_92__src_components_popup_header_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "PopupHeader", function() { return __WEBPACK_IMPORTED_MODULE_92__src_components_popup_header_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_93__src_components_popup_picker_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "PopupPicker", function() { return __WEBPACK_IMPORTED_MODULE_93__src_components_popup_picker_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_94__src_components_popup_radio_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "PopupRadio", function() { return __WEBPACK_IMPORTED_MODULE_94__src_components_popup_radio_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_95__src_components_previewer_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Previewer", function() { return __WEBPACK_IMPORTED_MODULE_95__src_components_previewer_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_96__src_components_qrcode_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Qrcode", function() { return __WEBPACK_IMPORTED_MODULE_96__src_components_qrcode_index_vue__["default"]; });
/* harmony reexport (default from non-hamory) */ __webpack_require__.d(__webpack_exports__, "querystring", function() { return __WEBPACK_IMPORTED_MODULE_97__src_tools_querystring_index_js___default.a; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_98__src_components_radio_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Radio", function() { return __WEBPACK_IMPORTED_MODULE_98__src_components_radio_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_99__src_components_range_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Range", function() { return __WEBPACK_IMPORTED_MODULE_99__src_components_range_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_100__src_components_rater_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Rater", function() { return __WEBPACK_IMPORTED_MODULE_100__src_components_rater_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_101__src_components_scroller_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Scroller", function() { return __WEBPACK_IMPORTED_MODULE_101__src_components_scroller_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_102__src_components_search_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Search", function() { return __WEBPACK_IMPORTED_MODULE_102__src_components_search_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_103__src_components_selector_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Selector", function() { return __WEBPACK_IMPORTED_MODULE_103__src_components_selector_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_104__src_components_shake_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Shake", function() { return __WEBPACK_IMPORTED_MODULE_104__src_components_shake_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_105__src_components_spinner_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Spinner", function() { return __WEBPACK_IMPORTED_MODULE_105__src_components_spinner_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_106__src_components_step_step_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Step", function() { return __WEBPACK_IMPORTED_MODULE_106__src_components_step_step_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_107__src_components_step_step_item_vue__, "default")) __webpack_require__.d(__webpack_exports__, "StepItem", function() { return __WEBPACK_IMPORTED_MODULE_107__src_components_step_step_item_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_108__src_components_sticky_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Sticky", function() { return __WEBPACK_IMPORTED_MODULE_108__src_components_sticky_index_vue__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "stringTrim", function() { return __WEBPACK_IMPORTED_MODULE_109__src_tools_string_trim_js__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_110__src_components_swipeout_swipeout_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Swipeout", function() { return __WEBPACK_IMPORTED_MODULE_110__src_components_swipeout_swipeout_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_111__src_components_swipeout_swipeout_button_vue__, "default")) __webpack_require__.d(__webpack_exports__, "SwipeoutButton", function() { return __WEBPACK_IMPORTED_MODULE_111__src_components_swipeout_swipeout_button_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_112__src_components_swipeout_swipeout_item_vue__, "default")) __webpack_require__.d(__webpack_exports__, "SwipeoutItem", function() { return __WEBPACK_IMPORTED_MODULE_112__src_components_swipeout_swipeout_item_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_113__src_components_swiper_swiper_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Swiper", function() { return __WEBPACK_IMPORTED_MODULE_113__src_components_swiper_swiper_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_114__src_components_swiper_swiper_item_vue__, "default")) __webpack_require__.d(__webpack_exports__, "SwiperItem", function() { return __WEBPACK_IMPORTED_MODULE_114__src_components_swiper_swiper_item_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_115__src_components_tab_tab_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Tab", function() { return __WEBPACK_IMPORTED_MODULE_115__src_components_tab_tab_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_116__src_components_tabbar_tabbar_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Tabbar", function() { return __WEBPACK_IMPORTED_MODULE_116__src_components_tabbar_tabbar_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_117__src_components_tabbar_tabbar_item_vue__, "default")) __webpack_require__.d(__webpack_exports__, "TabbarItem", function() { return __WEBPACK_IMPORTED_MODULE_117__src_components_tabbar_tabbar_item_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_118__src_components_tab_tab_item_vue__, "default")) __webpack_require__.d(__webpack_exports__, "TabItem", function() { return __WEBPACK_IMPORTED_MODULE_118__src_components_tab_tab_item_vue__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "throttle", function() { return __WEBPACK_IMPORTED_MODULE_119__src_tools_throttle_index_js__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_120__src_components_timeline_timeline_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Timeline", function() { return __WEBPACK_IMPORTED_MODULE_120__src_components_timeline_timeline_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_121__src_components_timeline_timeline_item_vue__, "default")) __webpack_require__.d(__webpack_exports__, "TimelineItem", function() { return __WEBPACK_IMPORTED_MODULE_121__src_components_timeline_timeline_item_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_122__src_components_tip_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Tip", function() { return __WEBPACK_IMPORTED_MODULE_122__src_components_tip_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_123__src_components_toast_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Toast", function() { return __WEBPACK_IMPORTED_MODULE_123__src_components_toast_index_vue__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "ToastPlugin", function() { return __WEBPACK_IMPORTED_MODULE_124__src_plugins_toast_index_js__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "TransferDom", function() { return __WEBPACK_IMPORTED_MODULE_125__src_directives_transfer_dom_index_js__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "TransferDomDirective", function() { return __WEBPACK_IMPORTED_MODULE_125__src_directives_transfer_dom_index_js__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "trim", function() { return __WEBPACK_IMPORTED_MODULE_126__src_tools_string_trim__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Value2nameFilter", function() { return __WEBPACK_IMPORTED_MODULE_127__src_filters_value2name_js__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_128__src_components_v_chart_v_area_vue__, "default")) __webpack_require__.d(__webpack_exports__, "VArea", function() { return __WEBPACK_IMPORTED_MODULE_128__src_components_v_chart_v_area_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_129__src_components_v_chart_v_axis_vue__, "default")) __webpack_require__.d(__webpack_exports__, "VAxis", function() { return __WEBPACK_IMPORTED_MODULE_129__src_components_v_chart_v_axis_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_130__src_components_v_chart_v_bar_vue__, "default")) __webpack_require__.d(__webpack_exports__, "VBar", function() { return __WEBPACK_IMPORTED_MODULE_130__src_components_v_chart_v_bar_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_131__src_components_v_chart_v_chart_vue__, "default")) __webpack_require__.d(__webpack_exports__, "VChart", function() { return __WEBPACK_IMPORTED_MODULE_131__src_components_v_chart_v_chart_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_132__src_components_v_chart_v_guide_vue__, "default")) __webpack_require__.d(__webpack_exports__, "VGuide", function() { return __WEBPACK_IMPORTED_MODULE_132__src_components_v_chart_v_guide_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_133__src_components_video_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "Video", function() { return __WEBPACK_IMPORTED_MODULE_133__src_components_video_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_134__src_components_view_box_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "ViewBox", function() { return __WEBPACK_IMPORTED_MODULE_134__src_components_view_box_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_135__src_components_v_chart_v_legend_vue__, "default")) __webpack_require__.d(__webpack_exports__, "VLegend", function() { return __WEBPACK_IMPORTED_MODULE_135__src_components_v_chart_v_legend_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_136__src_components_v_chart_v_line_vue__, "default")) __webpack_require__.d(__webpack_exports__, "VLine", function() { return __WEBPACK_IMPORTED_MODULE_136__src_components_v_chart_v_line_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_137__src_components_v_chart_v_pie_vue__, "default")) __webpack_require__.d(__webpack_exports__, "VPie", function() { return __WEBPACK_IMPORTED_MODULE_137__src_components_v_chart_v_pie_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_138__src_components_v_chart_v_point_vue__, "default")) __webpack_require__.d(__webpack_exports__, "VPoint", function() { return __WEBPACK_IMPORTED_MODULE_138__src_components_v_chart_v_point_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_139__src_components_v_chart_v_scale_vue__, "default")) __webpack_require__.d(__webpack_exports__, "VScale", function() { return __WEBPACK_IMPORTED_MODULE_139__src_components_v_chart_v_scale_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_140__src_components_v_chart_v_tooltip_vue__, "default")) __webpack_require__.d(__webpack_exports__, "VTooltip", function() { return __WEBPACK_IMPORTED_MODULE_140__src_components_v_chart_v_tooltip_vue__["default"]; });
/* harmony reexport (default from non-hamory) */ __webpack_require__.d(__webpack_exports__, "VuxComponentListData", function() { return __WEBPACK_IMPORTED_MODULE_141__src_datas_vux_component_list_json___default.a; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_142__src_components_wechat_emotion_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "WechatEmotion", function() { return __WEBPACK_IMPORTED_MODULE_142__src_components_wechat_emotion_index_vue__["default"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "WechatPlugin", function() { return __WEBPACK_IMPORTED_MODULE_143__src_plugins_wechat_index_js__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_144__src_components_week_calendar_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "WeekCalendar", function() { return __WEBPACK_IMPORTED_MODULE_144__src_components_week_calendar_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_145__src_components_wepay_input_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "WepayInput", function() { return __WEBPACK_IMPORTED_MODULE_145__src_components_wepay_input_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_146__src_components_x_address_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "XAddress", function() { return __WEBPACK_IMPORTED_MODULE_146__src_components_x_address_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_147__src_components_x_button_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "XButton", function() { return __WEBPACK_IMPORTED_MODULE_147__src_components_x_button_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_148__src_components_x_circle_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "XCircle", function() { return __WEBPACK_IMPORTED_MODULE_148__src_components_x_circle_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_149__src_components_x_dialog_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "XDialog", function() { return __WEBPACK_IMPORTED_MODULE_149__src_components_x_dialog_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_150__src_components_x_header_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "XHeader", function() { return __WEBPACK_IMPORTED_MODULE_150__src_components_x_header_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_151__src_components_x_hr_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "XHr", function() { return __WEBPACK_IMPORTED_MODULE_151__src_components_x_hr_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_152__src_components_x_img_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "XImg", function() { return __WEBPACK_IMPORTED_MODULE_152__src_components_x_img_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_153__src_components_x_input_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "XInput", function() { return __WEBPACK_IMPORTED_MODULE_153__src_components_x_input_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_154__src_components_x_number_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "XNumber", function() { return __WEBPACK_IMPORTED_MODULE_154__src_components_x_number_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_155__src_components_x_progress_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "XProgress", function() { return __WEBPACK_IMPORTED_MODULE_155__src_components_x_progress_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_156__src_components_x_switch_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "XSwitch", function() { return __WEBPACK_IMPORTED_MODULE_156__src_components_x_switch_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_157__src_components_x_table_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "XTable", function() { return __WEBPACK_IMPORTED_MODULE_157__src_components_x_table_index_vue__["default"]; });
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_158__src_components_x_textarea_index_vue__, "default")) __webpack_require__.d(__webpack_exports__, "XTextarea", function() { return __WEBPACK_IMPORTED_MODULE_158__src_components_x_textarea_index_vue__["default"]; });
// THIS FILE IS ONLY FOR IDE ENTRY CHECKING NOT FOR REAL USAGE

console.warn('VUX: 如果你看到这一行，说明 vux-loader 配置有问题或者代码书写规范的原因导致无法解析成按需引入组件，会导致打包体积过大。请升级到最新版本 vux-loader，建议开启 eslint(standard)。')




































































































































































/***/ }),
/* 254 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-actionsheet\">\n| ");

/***/ }),
/* 255 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <label :for=\"`vux-agree-${uuid}`\" class=\"weui-agree\">\n|     <input :id=\"`vux-agree-${uuid}`\" type=\"checkbox\" v-model=\"currentValue\" class=\"weui-agree__checkbox\">");

/***/ }),
/* 256 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios__ = __webpack_require__(257);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_axios__);


/* harmony default export */ __webpack_exports__["default"] = ({
  install (Vue) {
    Vue.prototype.$http = __WEBPACK_IMPORTED_MODULE_0_axios___default.a
    Vue.http = __WEBPACK_IMPORTED_MODULE_0_axios___default.a
  },
  $http: __WEBPACK_IMPORTED_MODULE_0_axios___default.a
});

const $http = __WEBPACK_IMPORTED_MODULE_0_axios___default.a
/* harmony export (immutable) */ __webpack_exports__["$http"] = $http;



/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(258);

/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(29);
var bind = __webpack_require__(154);
var Axios = __webpack_require__(259);
var defaults = __webpack_require__(111);

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(utils.merge(defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = __webpack_require__(158);
axios.CancelToken = __webpack_require__(273);
axios.isCancel = __webpack_require__(157);

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = __webpack_require__(274);

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;


/***/ }),
/* 259 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(111);
var utils = __webpack_require__(29);
var InterceptorManager = __webpack_require__(268);
var dispatchRequest = __webpack_require__(269);
var isAbsoluteURL = __webpack_require__(271);
var combineURLs = __webpack_require__(272);

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = utils.merge({
      url: arguments[0]
    }, arguments[1]);
  }

  config = utils.merge(defaults, this.defaults, { method: 'get' }, config);

  // Support baseURL config
  if (config.baseURL && !isAbsoluteURL(config.url)) {
    config.url = combineURLs(config.baseURL, config.url);
  }

  // Hook up interceptors middleware
  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);

  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;


/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(29);

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};


/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var createError = __webpack_require__(156);

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  // Note: status is not exposed by XDomainRequest
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response
    ));
  }
};


/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 @ @param {Object} [response] The response.
 * @returns {Error} The error.
 */
module.exports = function enhanceError(error, config, code, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }
  error.response = response;
  return error;
};


/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(29);

function encode(val) {
  return encodeURIComponent(val).
    replace(/%40/gi, '@').
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      }

      if (!utils.isArray(val)) {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};


/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(29);

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
    }
  });

  return parsed;
};


/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(29);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
  (function standardBrowserEnv() {
    var msie = /(msie|trident)/i.test(navigator.userAgent);
    var urlParsingNode = document.createElement('a');
    var originURL;

    /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
    function resolveURL(url) {
      var href = url;

      if (msie) {
        // IE needs attribute set twice to normalize properties
        urlParsingNode.setAttribute('href', href);
        href = urlParsingNode.href;
      }

      urlParsingNode.setAttribute('href', href);

      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
      return {
        href: urlParsingNode.href,
        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
        host: urlParsingNode.host,
        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
        hostname: urlParsingNode.hostname,
        port: urlParsingNode.port,
        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
                  urlParsingNode.pathname :
                  '/' + urlParsingNode.pathname
      };
    }

    originURL = resolveURL(window.location.href);

    /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
    return function isURLSameOrigin(requestURL) {
      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
      return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
    };
  })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
  (function nonStandardBrowserEnv() {
    return function isURLSameOrigin() {
      return true;
    };
  })()
);


/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js

var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

function E() {
  this.message = 'String contains an invalid character';
}
E.prototype = new Error;
E.prototype.code = 5;
E.prototype.name = 'InvalidCharacterError';

function btoa(input) {
  var str = String(input);
  var output = '';
  for (
    // initialize result and counter
    var block, charCode, idx = 0, map = chars;
    // if the next str index does not exist:
    //   change the mapping table to "="
    //   check if d has no fractional digits
    str.charAt(idx | 0) || (map = '=', idx % 1);
    // "8 - idx % 1 * 8" generates the sequence 2, 4, 6, 8
    output += map.charAt(63 & block >> 8 - idx % 1 * 8)
  ) {
    charCode = str.charCodeAt(idx += 3 / 4);
    if (charCode > 0xFF) {
      throw new E();
    }
    block = block << 8 | charCode;
  }
  return output;
}

module.exports = btoa;


/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(29);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
  (function standardBrowserEnv() {
    return {
      write: function write(name, value, expires, path, domain, secure) {
        var cookie = [];
        cookie.push(name + '=' + encodeURIComponent(value));

        if (utils.isNumber(expires)) {
          cookie.push('expires=' + new Date(expires).toGMTString());
        }

        if (utils.isString(path)) {
          cookie.push('path=' + path);
        }

        if (utils.isString(domain)) {
          cookie.push('domain=' + domain);
        }

        if (secure === true) {
          cookie.push('secure');
        }

        document.cookie = cookie.join('; ');
      },

      read: function read(name) {
        var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
        return (match ? decodeURIComponent(match[3]) : null);
      },

      remove: function remove(name) {
        this.write(name, '', Date.now() - 86400000);
      }
    };
  })() :

  // Non standard browser env (web workers, react-native) lack needed support.
  (function nonStandardBrowserEnv() {
    return {
      write: function write() {},
      read: function read() { return null; },
      remove: function remove() {}
    };
  })()
);


/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(29);

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;


/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(29);
var transformData = __webpack_require__(270);
var isCancel = __webpack_require__(157);
var defaults = __webpack_require__(111);

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData(
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers || {}
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData(
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData(
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};


/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(29);

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });

  return data;
};


/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};


/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '');
};


/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Cancel = __webpack_require__(158);

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;


/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};


/***/ }),
/* 275 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-alert\">\n|     <x-dialog");

/***/ }),
/* 276 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(108);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util__ = __webpack_require__(159);



let $vm

if (!$vm) {
  $vm = Object(__WEBPACK_IMPORTED_MODULE_1__util__["createVM"])(__WEBPACK_IMPORTED_MODULE_0_vue__["default"])
}

const manager = {}

/* harmony default export */ __webpack_exports__["default"] = ({
  show (options) {
    return __WEBPACK_IMPORTED_MODULE_1__util__["show"].call(manager, $vm, options)
  },
  hide () {
    return __WEBPACK_IMPORTED_MODULE_1__util__["hide"].call(manager, $vm)
  }
});


/***/ }),
/* 277 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(159);


let $vm

const plugin = {
  install (Vue) {
    if (!$vm) {
      $vm = Object(__WEBPACK_IMPORTED_MODULE_0__util__["createVM"])(Vue)
    }

    const alert = {
      show (options = {}) {
        return __WEBPACK_IMPORTED_MODULE_0__util__["show"].call(this, $vm, options)
      },
      hide () {
        return __WEBPACK_IMPORTED_MODULE_0__util__["hide"].call(this, $vm)
      },
      isVisible () {
        return $vm.showValue
      }
    }

    if (!Vue.$vux) {
      Vue.$vux = {
        alert
      }
    } else {
      Vue.$vux.alert = alert
    }

    Vue.mixin({
      created: function () {
        this.$vux = Vue.$vux
      }
    })
  }
}

/* harmony default export */ __webpack_exports__["default"] = (plugin);
const install = plugin.install
/* harmony export (immutable) */ __webpack_exports__["install"] = install;




/***/ }),
/* 278 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony default export */ __webpack_exports__["default"] = ({
  install (Vue, store) {
    store.registerModule('app', {
      state: {
        deviceready: false
      },
      mutations: {
        updateDiviceReadyStatus (state, payload) {
          state.deviceready = payload.isReady
        }
      }
    })

    const fns = []
    Vue.prototype.$api = {}
    window.apiready = function () {
      store.commit('updateDiviceReadyStatus', {
        isReady: true
      })
      Vue.prototype.$api = window.api
      while (fns.length) {
        let fn = fns.shift()
        fn()
      }
    }

    Vue.prototype.$deviceready = function (fn) {
      if (!fn || typeof fn !== 'function') {
        return
      }
      if (!store.state.app.deviceready) {
        fns.push(fn)
      } else {
        fn()
      }
    }

    /** for reloading page **/
    let count = 0
    document.addEventListener('click', () => {
      count++
      if (count === 3) {
        document.location.reload()
      }
      setTimeout(() => {
        count = 0
      }, 500)
    })
  }
});


/***/ }),
/* 279 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony default export */ __webpack_exports__["default"] = (function (array) {
  return array.length === 1 ? array[0] : array.join(' ')
});


/***/ }),
/* 280 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <span v-text=\"text\" :class=\"['vux-badge', {'vux-badge-dot': typeof text === 'undefined', 'vux-badge-single': typeof text !== 'undefined' && text.toString().length === 1}]\"></span>\n| </template>");

/***/ }),
/* 281 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
var base64encodechars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
base64decodechars = new Array( - 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1),
base64encode = function(str) {
  var out, i, len, c1, c2, c3;
  len = str.length,
  i = 0,
  out = "";
  while (i < len) {
    c1 = str.charCodeAt(i++) & 255;
    if (i == len) {
      out += base64encodechars.charAt(c1 >> 2),
      out += base64encodechars.charAt((c1 & 3) << 4),
      out += "==";
      break;
    }
    c2 = str.charCodeAt(i++);
    if (i == len) {
      out += base64encodechars.charAt(c1 >> 2),
      out += base64encodechars.charAt((c1 & 3) << 4 | (c2 & 240) >> 4),
      out += base64encodechars.charAt((c2 & 15) << 2),
      out += "=";
      break;
    }
    c3 = str.charCodeAt(i++),
    out += base64encodechars.charAt(c1 >> 2),
    out += base64encodechars.charAt((c1 & 3) << 4 | (c2 & 240) >> 4),
    out += base64encodechars.charAt((c2 & 15) << 2 | (c3 & 192) >> 6),
    out += base64encodechars.charAt(c3 & 63);
  }
  return out;
},
base64decode = function(e) {
  var t, n, r, i, s, o, u;
  o = e.length,
  s = 0,
  u = "";
  while (s < o) {
    do t = base64decodechars[e.charCodeAt(s++) & 255];
    while (s < o && t == -1);
    if (t == -1) break;
    do n = base64decodechars[e.charCodeAt(s++) & 255];
    while (s < o && n == -1);
    if (n == -1) break;
    u += String.fromCharCode(t << 2 | (n & 48) >> 4);
    do {
      r = e.charCodeAt(s++) & 255;
      if (r == 61) return u;
      r = base64decodechars[r];
    } while ( s < o && r == - 1 );
    if (r == -1) break;
    u += String.fromCharCode((n & 15) << 4 | (r & 60) >> 2);
    do {
      i = e.charCodeAt(s++) & 255;
      if (i == 61) return u;
      i = base64decodechars[i];
    } while ( s < o && i == - 1 );
    if (i == -1) break;
    u += String.fromCharCode((r & 3) << 6 | i);
  }
  return u;
},
utf16to8 = function(e) {
  var t, n, r, i;
  t = "",
  r = e.length;
  for (n = 0; n < r; n++) i = e.charCodeAt(n),
  i >= 1 && i <= 127 ? t += e.charAt(n) : i > 2047 ? (t += String.fromCharCode(224 | i >> 12 & 15), t += String.fromCharCode(128 | i >> 6 & 63), t += String.fromCharCode(128 | i >> 0 & 63)) : (t += String.fromCharCode(192 | i >> 6 & 31), t += String.fromCharCode(128 | i >> 0 & 63));
  return t;
},
utf8to16 = function(e) {
  var t, n, r, i, s, o;
  t = "",
  r = e.length,
  n = 0;
  while (n < r) {
    i = e.charCodeAt(n++);
    switch (i >> 4) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      t += e.charAt(n - 1);
      break;
    case 12:
    case 13:
      s = e.charCodeAt(n++),
      t += String.fromCharCode((i & 31) << 6 | s & 63);
      break;
    case 14:
      s = e.charCodeAt(n++),
      o = e.charCodeAt(n++),
      t += String.fromCharCode((i & 15) << 12 | (s & 63) << 6 | (o & 63) << 0);
    }
  }
  return t;
};

/* harmony default export */ __webpack_exports__["default"] = ({
  "encode": function(data) {
    return base64encode(utf16to8(data));
  },
  "decode": function(data) {
    return utf8to16(base64decode(data));
  }
});


/***/ }),
/* 282 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div :style=\"{height: height + 'px',position: 'relative', overflow: 'hidden'}\">\n|     <slot></slot>");

/***/ }),
/* 283 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div :style=\"{margin:gap}\"><slot></slot></div>\n| </template>");

/***/ }),
/* 284 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony default export */ __webpack_exports__["default"] = ({
  install (Vue) {
    const bus = new Vue({})
    if (!Vue.$vux) {
      Vue.$vux = {
        bus
      }
    } else {
      Vue.$vux.bus = bus
    }

    Vue.mixin({
      created: function () {
        if (this.$vux) {
          this.$vux.bus = bus
        } else {
          this.$vux = {
            bus
          }
        }
      }
    })
  }
});


/***/ }),
/* 285 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-button-group\">\n|     <slot></slot>");

/***/ }),
/* 286 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <a class=\"vux-button-tab-item\" :class=\"classes\" href=\"javascript:\" :style=\"style\" @click=\"onItemClick\">\n|     <slot></slot>");

/***/ }),
/* 287 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-calendar\">\n|     <cell");

/***/ }),
/* 288 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n| \t<div class=\"weui-panel weui-panel_access\">\n|     <div class=\"weui-panel__hd\" v-if=\"header && header.title\" v-html=\"header.title\" @click=\"$emit('on-click-header')\"></div>");

/***/ }),
/* 289 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div\n|     class=\"weui-cell\"");

/***/ }),
/* 290 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div\n|   class=\"vux-cell-box weui-cell\"");

/***/ }),
/* 291 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"weui-cell vux-cell-form-preview\" :class=\"{'vux-cell-no-border-intent': !borderIntent}\">\n|     <div class=\"weui-form-preview__bd\">");

/***/ }),
/* 292 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-checker-box\">\n|     <slot></slot>");

/***/ }),
/* 293 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-checker-item\" :class=\"classNames\" @click=\"select\">\n|     <slot></slot>");

/***/ }),
/* 294 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-check-icon\" @click=\"updateValue\">\n|     <icon type=\"success\" v-show=\"type === 'default' && value\"></icon>");

/***/ }),
/* 295 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div :class=\"disabled ? 'vux-checklist-disabled' : ''\">\n|     <div");

/***/ }),
/* 296 */
/***/ (function(module, exports) {

module.exports = [{"name":"北京市","value":"110000"},{"name":"天津市","value":"120000"},{"name":"河北省","value":"130000"},{"name":"山西省","value":"140000"},{"name":"内蒙古自治区","value":"150000"},{"name":"辽宁省","value":"210000"},{"name":"吉林省","value":"220000"},{"name":"黑龙江省","value":"230000"},{"name":"上海市","value":"310000"},{"name":"江苏省","value":"320000"},{"name":"浙江省","value":"330000"},{"name":"安徽省","value":"340000"},{"name":"福建省","value":"350000"},{"name":"江西省","value":"360000"},{"name":"山东省","value":"370000"},{"name":"河南省","value":"410000"},{"name":"湖北省","value":"420000"},{"name":"湖南省","value":"430000"},{"name":"广东省","value":"440000"},{"name":"广西壮族自治区","value":"450000"},{"name":"海南省","value":"460000"},{"name":"重庆市","value":"500000"},{"name":"四川省","value":"510000"},{"name":"贵州省","value":"520000"},{"name":"云南省","value":"530000"},{"name":"西藏自治区","value":"540000"},{"name":"陕西省","value":"610000"},{"name":"甘肃省","value":"620000"},{"name":"青海省","value":"630000"},{"name":"宁夏回族自治区","value":"640000"},{"name":"新疆维吾尔自治区","value":"650000"},{"name":"市辖区","value":"110100","parent":"110000"},{"name":"东城区","value":"110101","parent":"110100"},{"name":"西城区","value":"110102","parent":"110100"},{"name":"朝阳区","value":"110105","parent":"110100"},{"name":"丰台区","value":"110106","parent":"110100"},{"name":"石景山区","value":"110107","parent":"110100"},{"name":"海淀区","value":"110108","parent":"110100"},{"name":"门头沟区","value":"110109","parent":"110100"},{"name":"房山区","value":"110111","parent":"110100"},{"name":"通州区","value":"110112","parent":"110100"},{"name":"顺义区","value":"110113","parent":"110100"},{"name":"昌平区","value":"110114","parent":"110100"},{"name":"大兴区","value":"110115","parent":"110100"},{"name":"怀柔区","value":"110116","parent":"110100"},{"name":"平谷区","value":"110117","parent":"110100"},{"name":"密云县","value":"110228","parent":"110100"},{"name":"延庆县","value":"110229","parent":"110100"},{"name":"市辖区","value":"120100","parent":"120000"},{"name":"和平区","value":"120101","parent":"120100"},{"name":"河东区","value":"120102","parent":"120100"},{"name":"河西区","value":"120103","parent":"120100"},{"name":"南开区","value":"120104","parent":"120100"},{"name":"河北区","value":"120105","parent":"120100"},{"name":"红桥区","value":"120106","parent":"120100"},{"name":"东丽区","value":"120110","parent":"120100"},{"name":"西青区","value":"120111","parent":"120100"},{"name":"津南区","value":"120112","parent":"120100"},{"name":"北辰区","value":"120113","parent":"120100"},{"name":"武清区","value":"120114","parent":"120100"},{"name":"宝坻区","value":"120115","parent":"120100"},{"name":"滨海新区","value":"120116","parent":"120100"},{"name":"宁河区","value":"120117","parent":"120100"},{"name":"静海区","value":"120118","parent":"120100"},{"name":"蓟县","value":"120225","parent":"120100"},{"name":"石家庄市","value":"130100","parent":"130000"},{"name":"唐山市","value":"130200","parent":"130000"},{"name":"秦皇岛市","value":"130300","parent":"130000"},{"name":"邯郸市","value":"130400","parent":"130000"},{"name":"邢台市","value":"130500","parent":"130000"},{"name":"保定市","value":"130600","parent":"130000"},{"name":"张家口市","value":"130700","parent":"130000"},{"name":"承德市","value":"130800","parent":"130000"},{"name":"沧州市","value":"130900","parent":"130000"},{"name":"廊坊市","value":"131000","parent":"130000"},{"name":"衡水市","value":"131100","parent":"130000"},{"name":"定州市","value":"139001","parent":"130000"},{"name":"辛集市","value":"139002","parent":"130000"},{"name":"长安区","value":"130102","parent":"130100"},{"name":"桥西区","value":"130104","parent":"130100"},{"name":"新华区","value":"130105","parent":"130100"},{"name":"井陉矿区","value":"130107","parent":"130100"},{"name":"裕华区","value":"130108","parent":"130100"},{"name":"藁城区","value":"130109","parent":"130100"},{"name":"鹿泉区","value":"130110","parent":"130100"},{"name":"栾城区","value":"130111","parent":"130100"},{"name":"井陉县","value":"130121","parent":"130100"},{"name":"正定县","value":"130123","parent":"130100"},{"name":"行唐县","value":"130125","parent":"130100"},{"name":"灵寿县","value":"130126","parent":"130100"},{"name":"高邑县","value":"130127","parent":"130100"},{"name":"深泽县","value":"130128","parent":"130100"},{"name":"赞皇县","value":"130129","parent":"130100"},{"name":"无极县","value":"130130","parent":"130100"},{"name":"平山县","value":"130131","parent":"130100"},{"name":"元氏县","value":"130132","parent":"130100"},{"name":"赵县","value":"130133","parent":"130100"},{"name":"晋州市","value":"130183","parent":"130100"},{"name":"新乐市","value":"130184","parent":"130100"},{"name":"路南区","value":"130202","parent":"130200"},{"name":"路北区","value":"130203","parent":"130200"},{"name":"古冶区","value":"130204","parent":"130200"},{"name":"开平区","value":"130205","parent":"130200"},{"name":"丰南区","value":"130207","parent":"130200"},{"name":"丰润区","value":"130208","parent":"130200"},{"name":"曹妃甸区","value":"130209","parent":"130200"},{"name":"滦县","value":"130223","parent":"130200"},{"name":"滦南县","value":"130224","parent":"130200"},{"name":"乐亭县","value":"130225","parent":"130200"},{"name":"迁西县","value":"130227","parent":"130200"},{"name":"玉田县","value":"130229","parent":"130200"},{"name":"遵化市","value":"130281","parent":"130200"},{"name":"迁安市","value":"130283","parent":"130200"},{"name":"海港区","value":"130302","parent":"130300"},{"name":"山海关区","value":"130303","parent":"130300"},{"name":"北戴河区","value":"130304","parent":"130300"},{"name":"抚宁区","value":"130306","parent":"130300"},{"name":"青龙满族自治县","value":"130321","parent":"130300"},{"name":"昌黎县","value":"130322","parent":"130300"},{"name":"卢龙县","value":"130324","parent":"130300"},{"name":"邯山区","value":"130402","parent":"130400"},{"name":"丛台区","value":"130403","parent":"130400"},{"name":"复兴区","value":"130404","parent":"130400"},{"name":"峰峰矿区","value":"130406","parent":"130400"},{"name":"邯郸县","value":"130421","parent":"130400"},{"name":"临漳县","value":"130423","parent":"130400"},{"name":"成安县","value":"130424","parent":"130400"},{"name":"大名县","value":"130425","parent":"130400"},{"name":"涉县","value":"130426","parent":"130400"},{"name":"磁县","value":"130427","parent":"130400"},{"name":"肥乡县","value":"130428","parent":"130400"},{"name":"永年县","value":"130429","parent":"130400"},{"name":"邱县","value":"130430","parent":"130400"},{"name":"鸡泽县","value":"130431","parent":"130400"},{"name":"广平县","value":"130432","parent":"130400"},{"name":"馆陶县","value":"130433","parent":"130400"},{"name":"魏县","value":"130434","parent":"130400"},{"name":"曲周县","value":"130435","parent":"130400"},{"name":"武安市","value":"130481","parent":"130400"},{"name":"桥东区","value":"130502","parent":"130500"},{"name":"桥西区","value":"130503","parent":"130500"},{"name":"邢台县","value":"130521","parent":"130500"},{"name":"临城县","value":"130522","parent":"130500"},{"name":"内丘县","value":"130523","parent":"130500"},{"name":"柏乡县","value":"130524","parent":"130500"},{"name":"隆尧县","value":"130525","parent":"130500"},{"name":"任县","value":"130526","parent":"130500"},{"name":"南和县","value":"130527","parent":"130500"},{"name":"宁晋县","value":"130528","parent":"130500"},{"name":"巨鹿县","value":"130529","parent":"130500"},{"name":"新河县","value":"130530","parent":"130500"},{"name":"广宗县","value":"130531","parent":"130500"},{"name":"平乡县","value":"130532","parent":"130500"},{"name":"威县","value":"130533","parent":"130500"},{"name":"清河县","value":"130534","parent":"130500"},{"name":"临西县","value":"130535","parent":"130500"},{"name":"南宫市","value":"130581","parent":"130500"},{"name":"沙河市","value":"130582","parent":"130500"},{"name":"竞秀区","value":"130602","parent":"130600"},{"name":"莲池区","value":"130606","parent":"130600"},{"name":"满城区","value":"130607","parent":"130600"},{"name":"清苑区","value":"130608","parent":"130600"},{"name":"徐水区","value":"130609","parent":"130600"},{"name":"涞水县","value":"130623","parent":"130600"},{"name":"阜平县","value":"130624","parent":"130600"},{"name":"定兴县","value":"130626","parent":"130600"},{"name":"唐县","value":"130627","parent":"130600"},{"name":"高阳县","value":"130628","parent":"130600"},{"name":"容城县","value":"130629","parent":"130600"},{"name":"涞源县","value":"130630","parent":"130600"},{"name":"望都县","value":"130631","parent":"130600"},{"name":"安新县","value":"130632","parent":"130600"},{"name":"易县","value":"130633","parent":"130600"},{"name":"曲阳县","value":"130634","parent":"130600"},{"name":"蠡县","value":"130635","parent":"130600"},{"name":"顺平县","value":"130636","parent":"130600"},{"name":"博野县","value":"130637","parent":"130600"},{"name":"雄县","value":"130638","parent":"130600"},{"name":"涿州市","value":"130681","parent":"130600"},{"name":"安国市","value":"130683","parent":"130600"},{"name":"高碑店市","value":"130684","parent":"130600"},{"name":"桥东区","value":"130702","parent":"130700"},{"name":"桥西区","value":"130703","parent":"130700"},{"name":"宣化区","value":"130705","parent":"130700"},{"name":"下花园区","value":"130706","parent":"130700"},{"name":"宣化县","value":"130721","parent":"130700"},{"name":"张北县","value":"130722","parent":"130700"},{"name":"康保县","value":"130723","parent":"130700"},{"name":"沽源县","value":"130724","parent":"130700"},{"name":"尚义县","value":"130725","parent":"130700"},{"name":"蔚县","value":"130726","parent":"130700"},{"name":"阳原县","value":"130727","parent":"130700"},{"name":"怀安县","value":"130728","parent":"130700"},{"name":"万全县","value":"130729","parent":"130700"},{"name":"怀来县","value":"130730","parent":"130700"},{"name":"涿鹿县","value":"130731","parent":"130700"},{"name":"赤城县","value":"130732","parent":"130700"},{"name":"崇礼县","value":"130733","parent":"130700"},{"name":"双桥区","value":"130802","parent":"130800"},{"name":"双滦区","value":"130803","parent":"130800"},{"name":"鹰手营子矿区","value":"130804","parent":"130800"},{"name":"承德县","value":"130821","parent":"130800"},{"name":"兴隆县","value":"130822","parent":"130800"},{"name":"平泉县","value":"130823","parent":"130800"},{"name":"滦平县","value":"130824","parent":"130800"},{"name":"隆化县","value":"130825","parent":"130800"},{"name":"丰宁满族自治县","value":"130826","parent":"130800"},{"name":"宽城满族自治县","value":"130827","parent":"130800"},{"name":"围场满族蒙古族自治县","value":"130828","parent":"130800"},{"name":"新华区","value":"130902","parent":"130900"},{"name":"运河区","value":"130903","parent":"130900"},{"name":"沧县","value":"130921","parent":"130900"},{"name":"青县","value":"130922","parent":"130900"},{"name":"东光县","value":"130923","parent":"130900"},{"name":"海兴县","value":"130924","parent":"130900"},{"name":"盐山县","value":"130925","parent":"130900"},{"name":"肃宁县","value":"130926","parent":"130900"},{"name":"南皮县","value":"130927","parent":"130900"},{"name":"吴桥县","value":"130928","parent":"130900"},{"name":"献县","value":"130929","parent":"130900"},{"name":"孟村回族自治县","value":"130930","parent":"130900"},{"name":"泊头市","value":"130981","parent":"130900"},{"name":"任丘市","value":"130982","parent":"130900"},{"name":"黄骅市","value":"130983","parent":"130900"},{"name":"河间市","value":"130984","parent":"130900"},{"name":"安次区","value":"131002","parent":"131000"},{"name":"广阳区","value":"131003","parent":"131000"},{"name":"固安县","value":"131022","parent":"131000"},{"name":"永清县","value":"131023","parent":"131000"},{"name":"香河县","value":"131024","parent":"131000"},{"name":"大城县","value":"131025","parent":"131000"},{"name":"文安县","value":"131026","parent":"131000"},{"name":"大厂回族自治县","value":"131028","parent":"131000"},{"name":"霸州市","value":"131081","parent":"131000"},{"name":"三河市","value":"131082","parent":"131000"},{"name":"桃城区","value":"131102","parent":"131100"},{"name":"枣强县","value":"131121","parent":"131100"},{"name":"武邑县","value":"131122","parent":"131100"},{"name":"武强县","value":"131123","parent":"131100"},{"name":"饶阳县","value":"131124","parent":"131100"},{"name":"安平县","value":"131125","parent":"131100"},{"name":"故城县","value":"131126","parent":"131100"},{"name":"景县","value":"131127","parent":"131100"},{"name":"阜城县","value":"131128","parent":"131100"},{"name":"冀州市","value":"131181","parent":"131100"},{"name":"深州市","value":"131182","parent":"131100"},{"name":"太原市","value":"140100","parent":"140000"},{"name":"大同市","value":"140200","parent":"140000"},{"name":"阳泉市","value":"140300","parent":"140000"},{"name":"长治市","value":"140400","parent":"140000"},{"name":"晋城市","value":"140500","parent":"140000"},{"name":"朔州市","value":"140600","parent":"140000"},{"name":"晋中市","value":"140700","parent":"140000"},{"name":"运城市","value":"140800","parent":"140000"},{"name":"忻州市","value":"140900","parent":"140000"},{"name":"临汾市","value":"141000","parent":"140000"},{"name":"吕梁市","value":"141100","parent":"140000"},{"name":"小店区","value":"140105","parent":"140100"},{"name":"迎泽区","value":"140106","parent":"140100"},{"name":"杏花岭区","value":"140107","parent":"140100"},{"name":"尖草坪区","value":"140108","parent":"140100"},{"name":"万柏林区","value":"140109","parent":"140100"},{"name":"晋源区","value":"140110","parent":"140100"},{"name":"清徐县","value":"140121","parent":"140100"},{"name":"阳曲县","value":"140122","parent":"140100"},{"name":"娄烦县","value":"140123","parent":"140100"},{"name":"古交市","value":"140181","parent":"140100"},{"name":"城区","value":"140202","parent":"140200"},{"name":"矿区","value":"140203","parent":"140200"},{"name":"南郊区","value":"140211","parent":"140200"},{"name":"新荣区","value":"140212","parent":"140200"},{"name":"阳高县","value":"140221","parent":"140200"},{"name":"天镇县","value":"140222","parent":"140200"},{"name":"广灵县","value":"140223","parent":"140200"},{"name":"灵丘县","value":"140224","parent":"140200"},{"name":"浑源县","value":"140225","parent":"140200"},{"name":"左云县","value":"140226","parent":"140200"},{"name":"大同县","value":"140227","parent":"140200"},{"name":"城区","value":"140302","parent":"140300"},{"name":"矿区","value":"140303","parent":"140300"},{"name":"郊区","value":"140311","parent":"140300"},{"name":"平定县","value":"140321","parent":"140300"},{"name":"盂县","value":"140322","parent":"140300"},{"name":"城区","value":"140402","parent":"140400"},{"name":"郊区","value":"140411","parent":"140400"},{"name":"长治县","value":"140421","parent":"140400"},{"name":"襄垣县","value":"140423","parent":"140400"},{"name":"屯留县","value":"140424","parent":"140400"},{"name":"平顺县","value":"140425","parent":"140400"},{"name":"黎城县","value":"140426","parent":"140400"},{"name":"壶关县","value":"140427","parent":"140400"},{"name":"长子县","value":"140428","parent":"140400"},{"name":"武乡县","value":"140429","parent":"140400"},{"name":"沁县","value":"140430","parent":"140400"},{"name":"沁源县","value":"140431","parent":"140400"},{"name":"潞城市","value":"140481","parent":"140400"},{"name":"城区","value":"140502","parent":"140500"},{"name":"沁水县","value":"140521","parent":"140500"},{"name":"阳城县","value":"140522","parent":"140500"},{"name":"陵川县","value":"140524","parent":"140500"},{"name":"泽州县","value":"140525","parent":"140500"},{"name":"高平市","value":"140581","parent":"140500"},{"name":"朔城区","value":"140602","parent":"140600"},{"name":"平鲁区","value":"140603","parent":"140600"},{"name":"山阴县","value":"140621","parent":"140600"},{"name":"应县","value":"140622","parent":"140600"},{"name":"右玉县","value":"140623","parent":"140600"},{"name":"怀仁县","value":"140624","parent":"140600"},{"name":"榆次区","value":"140702","parent":"140700"},{"name":"榆社县","value":"140721","parent":"140700"},{"name":"左权县","value":"140722","parent":"140700"},{"name":"和顺县","value":"140723","parent":"140700"},{"name":"昔阳县","value":"140724","parent":"140700"},{"name":"寿阳县","value":"140725","parent":"140700"},{"name":"太谷县","value":"140726","parent":"140700"},{"name":"祁县","value":"140727","parent":"140700"},{"name":"平遥县","value":"140728","parent":"140700"},{"name":"灵石县","value":"140729","parent":"140700"},{"name":"介休市","value":"140781","parent":"140700"},{"name":"盐湖区","value":"140802","parent":"140800"},{"name":"临猗县","value":"140821","parent":"140800"},{"name":"万荣县","value":"140822","parent":"140800"},{"name":"闻喜县","value":"140823","parent":"140800"},{"name":"稷山县","value":"140824","parent":"140800"},{"name":"新绛县","value":"140825","parent":"140800"},{"name":"绛县","value":"140826","parent":"140800"},{"name":"垣曲县","value":"140827","parent":"140800"},{"name":"夏县","value":"140828","parent":"140800"},{"name":"平陆县","value":"140829","parent":"140800"},{"name":"芮城县","value":"140830","parent":"140800"},{"name":"永济市","value":"140881","parent":"140800"},{"name":"河津市","value":"140882","parent":"140800"},{"name":"忻府区","value":"140902","parent":"140900"},{"name":"定襄县","value":"140921","parent":"140900"},{"name":"五台县","value":"140922","parent":"140900"},{"name":"代县","value":"140923","parent":"140900"},{"name":"繁峙县","value":"140924","parent":"140900"},{"name":"宁武县","value":"140925","parent":"140900"},{"name":"静乐县","value":"140926","parent":"140900"},{"name":"神池县","value":"140927","parent":"140900"},{"name":"五寨县","value":"140928","parent":"140900"},{"name":"岢岚县","value":"140929","parent":"140900"},{"name":"河曲县","value":"140930","parent":"140900"},{"name":"保德县","value":"140931","parent":"140900"},{"name":"偏关县","value":"140932","parent":"140900"},{"name":"原平市","value":"140981","parent":"140900"},{"name":"尧都区","value":"141002","parent":"141000"},{"name":"曲沃县","value":"141021","parent":"141000"},{"name":"翼城县","value":"141022","parent":"141000"},{"name":"襄汾县","value":"141023","parent":"141000"},{"name":"洪洞县","value":"141024","parent":"141000"},{"name":"古县","value":"141025","parent":"141000"},{"name":"安泽县","value":"141026","parent":"141000"},{"name":"浮山县","value":"141027","parent":"141000"},{"name":"吉县","value":"141028","parent":"141000"},{"name":"乡宁县","value":"141029","parent":"141000"},{"name":"大宁县","value":"141030","parent":"141000"},{"name":"隰县","value":"141031","parent":"141000"},{"name":"永和县","value":"141032","parent":"141000"},{"name":"蒲县","value":"141033","parent":"141000"},{"name":"汾西县","value":"141034","parent":"141000"},{"name":"侯马市","value":"141081","parent":"141000"},{"name":"霍州市","value":"141082","parent":"141000"},{"name":"离石区","value":"141102","parent":"141100"},{"name":"文水县","value":"141121","parent":"141100"},{"name":"交城县","value":"141122","parent":"141100"},{"name":"兴县","value":"141123","parent":"141100"},{"name":"临县","value":"141124","parent":"141100"},{"name":"柳林县","value":"141125","parent":"141100"},{"name":"石楼县","value":"141126","parent":"141100"},{"name":"岚县","value":"141127","parent":"141100"},{"name":"方山县","value":"141128","parent":"141100"},{"name":"中阳县","value":"141129","parent":"141100"},{"name":"交口县","value":"141130","parent":"141100"},{"name":"孝义市","value":"141181","parent":"141100"},{"name":"汾阳市","value":"141182","parent":"141100"},{"name":"呼和浩特市","value":"150100","parent":"150000"},{"name":"包头市","value":"150200","parent":"150000"},{"name":"乌海市","value":"150300","parent":"150000"},{"name":"赤峰市","value":"150400","parent":"150000"},{"name":"通辽市","value":"150500","parent":"150000"},{"name":"鄂尔多斯市","value":"150600","parent":"150000"},{"name":"呼伦贝尔市","value":"150700","parent":"150000"},{"name":"巴彦淖尔市","value":"150800","parent":"150000"},{"name":"乌兰察布市","value":"150900","parent":"150000"},{"name":"兴安盟","value":"152200","parent":"150000"},{"name":"锡林郭勒盟","value":"152500","parent":"150000"},{"name":"阿拉善盟","value":"152900","parent":"150000"},{"name":"新城区","value":"150102","parent":"150100"},{"name":"回民区","value":"150103","parent":"150100"},{"name":"玉泉区","value":"150104","parent":"150100"},{"name":"赛罕区","value":"150105","parent":"150100"},{"name":"土默特左旗","value":"150121","parent":"150100"},{"name":"托克托县","value":"150122","parent":"150100"},{"name":"和林格尔县","value":"150123","parent":"150100"},{"name":"清水河县","value":"150124","parent":"150100"},{"name":"武川县","value":"150125","parent":"150100"},{"name":"东河区","value":"150202","parent":"150200"},{"name":"昆都仑区","value":"150203","parent":"150200"},{"name":"青山区","value":"150204","parent":"150200"},{"name":"石拐区","value":"150205","parent":"150200"},{"name":"白云鄂博矿区","value":"150206","parent":"150200"},{"name":"九原区","value":"150207","parent":"150200"},{"name":"土默特右旗","value":"150221","parent":"150200"},{"name":"固阳县","value":"150222","parent":"150200"},{"name":"达尔罕茂明安联合旗","value":"150223","parent":"150200"},{"name":"海勃湾区","value":"150302","parent":"150300"},{"name":"海南区","value":"150303","parent":"150300"},{"name":"乌达区","value":"150304","parent":"150300"},{"name":"红山区","value":"150402","parent":"150400"},{"name":"元宝山区","value":"150403","parent":"150400"},{"name":"松山区","value":"150404","parent":"150400"},{"name":"阿鲁科尔沁旗","value":"150421","parent":"150400"},{"name":"巴林左旗","value":"150422","parent":"150400"},{"name":"巴林右旗","value":"150423","parent":"150400"},{"name":"林西县","value":"150424","parent":"150400"},{"name":"克什克腾旗","value":"150425","parent":"150400"},{"name":"翁牛特旗","value":"150426","parent":"150400"},{"name":"喀喇沁旗","value":"150428","parent":"150400"},{"name":"宁城县","value":"150429","parent":"150400"},{"name":"敖汉旗","value":"150430","parent":"150400"},{"name":"科尔沁区","value":"150502","parent":"150500"},{"name":"科尔沁左翼中旗","value":"150521","parent":"150500"},{"name":"科尔沁左翼后旗","value":"150522","parent":"150500"},{"name":"开鲁县","value":"150523","parent":"150500"},{"name":"库伦旗","value":"150524","parent":"150500"},{"name":"奈曼旗","value":"150525","parent":"150500"},{"name":"扎鲁特旗","value":"150526","parent":"150500"},{"name":"霍林郭勒市","value":"150581","parent":"150500"},{"name":"东胜区","value":"150602","parent":"150600"},{"name":"达拉特旗","value":"150621","parent":"150600"},{"name":"准格尔旗","value":"150622","parent":"150600"},{"name":"鄂托克前旗","value":"150623","parent":"150600"},{"name":"鄂托克旗","value":"150624","parent":"150600"},{"name":"杭锦旗","value":"150625","parent":"150600"},{"name":"乌审旗","value":"150626","parent":"150600"},{"name":"伊金霍洛旗","value":"150627","parent":"150600"},{"name":"海拉尔区","value":"150702","parent":"150700"},{"name":"扎赉诺尔区","value":"150703","parent":"150700"},{"name":"阿荣旗","value":"150721","parent":"150700"},{"name":"莫力达瓦达斡尔族自治旗","value":"150722","parent":"150700"},{"name":"鄂伦春自治旗","value":"150723","parent":"150700"},{"name":"鄂温克族自治旗","value":"150724","parent":"150700"},{"name":"陈巴尔虎旗","value":"150725","parent":"150700"},{"name":"新巴尔虎左旗","value":"150726","parent":"150700"},{"name":"新巴尔虎右旗","value":"150727","parent":"150700"},{"name":"满洲里市","value":"150781","parent":"150700"},{"name":"牙克石市","value":"150782","parent":"150700"},{"name":"扎兰屯市","value":"150783","parent":"150700"},{"name":"额尔古纳市","value":"150784","parent":"150700"},{"name":"根河市","value":"150785","parent":"150700"},{"name":"临河区","value":"150802","parent":"150800"},{"name":"五原县","value":"150821","parent":"150800"},{"name":"磴口县","value":"150822","parent":"150800"},{"name":"乌拉特前旗","value":"150823","parent":"150800"},{"name":"乌拉特中旗","value":"150824","parent":"150800"},{"name":"乌拉特后旗","value":"150825","parent":"150800"},{"name":"杭锦后旗","value":"150826","parent":"150800"},{"name":"集宁区","value":"150902","parent":"150900"},{"name":"卓资县","value":"150921","parent":"150900"},{"name":"化德县","value":"150922","parent":"150900"},{"name":"商都县","value":"150923","parent":"150900"},{"name":"兴和县","value":"150924","parent":"150900"},{"name":"凉城县","value":"150925","parent":"150900"},{"name":"察哈尔右翼前旗","value":"150926","parent":"150900"},{"name":"察哈尔右翼中旗","value":"150927","parent":"150900"},{"name":"察哈尔右翼后旗","value":"150928","parent":"150900"},{"name":"四子王旗","value":"150929","parent":"150900"},{"name":"丰镇市","value":"150981","parent":"150900"},{"name":"乌兰浩特市","value":"152201","parent":"152200"},{"name":"阿尔山市","value":"152202","parent":"152200"},{"name":"科尔沁右翼前旗","value":"152221","parent":"152200"},{"name":"科尔沁右翼中旗","value":"152222","parent":"152200"},{"name":"扎赉特旗","value":"152223","parent":"152200"},{"name":"突泉县","value":"152224","parent":"152200"},{"name":"二连浩特市","value":"152501","parent":"152500"},{"name":"锡林浩特市","value":"152502","parent":"152500"},{"name":"阿巴嘎旗","value":"152522","parent":"152500"},{"name":"苏尼特左旗","value":"152523","parent":"152500"},{"name":"苏尼特右旗","value":"152524","parent":"152500"},{"name":"东乌珠穆沁旗","value":"152525","parent":"152500"},{"name":"西乌珠穆沁旗","value":"152526","parent":"152500"},{"name":"太仆寺旗","value":"152527","parent":"152500"},{"name":"镶黄旗","value":"152528","parent":"152500"},{"name":"正镶白旗","value":"152529","parent":"152500"},{"name":"正蓝旗","value":"152530","parent":"152500"},{"name":"多伦县","value":"152531","parent":"152500"},{"name":"阿拉善左旗","value":"152921","parent":"152900"},{"name":"阿拉善右旗","value":"152922","parent":"152900"},{"name":"额济纳旗","value":"152923","parent":"152900"},{"name":"沈阳市","value":"210100","parent":"210000"},{"name":"大连市","value":"210200","parent":"210000"},{"name":"鞍山市","value":"210300","parent":"210000"},{"name":"抚顺市","value":"210400","parent":"210000"},{"name":"本溪市","value":"210500","parent":"210000"},{"name":"丹东市","value":"210600","parent":"210000"},{"name":"锦州市","value":"210700","parent":"210000"},{"name":"营口市","value":"210800","parent":"210000"},{"name":"阜新市","value":"210900","parent":"210000"},{"name":"辽阳市","value":"211000","parent":"210000"},{"name":"盘锦市","value":"211100","parent":"210000"},{"name":"铁岭市","value":"211200","parent":"210000"},{"name":"朝阳市","value":"211300","parent":"210000"},{"name":"葫芦岛市","value":"211400","parent":"210000"},{"name":"和平区","value":"210102","parent":"210100"},{"name":"沈河区","value":"210103","parent":"210100"},{"name":"大东区","value":"210104","parent":"210100"},{"name":"皇姑区","value":"210105","parent":"210100"},{"name":"铁西区","value":"210106","parent":"210100"},{"name":"苏家屯区","value":"210111","parent":"210100"},{"name":"浑南区","value":"210112","parent":"210100"},{"name":"沈北新区","value":"210113","parent":"210100"},{"name":"于洪区","value":"210114","parent":"210100"},{"name":"辽中县","value":"210122","parent":"210100"},{"name":"康平县","value":"210123","parent":"210100"},{"name":"法库县","value":"210124","parent":"210100"},{"name":"新民市","value":"210181","parent":"210100"},{"name":"中山区","value":"210202","parent":"210200"},{"name":"西岗区","value":"210203","parent":"210200"},{"name":"沙河口区","value":"210204","parent":"210200"},{"name":"甘井子区","value":"210211","parent":"210200"},{"name":"旅顺口区","value":"210212","parent":"210200"},{"name":"金州区","value":"210213","parent":"210200"},{"name":"长海县","value":"210224","parent":"210200"},{"name":"瓦房店市","value":"210281","parent":"210200"},{"name":"普兰店市","value":"210282","parent":"210200"},{"name":"庄河市","value":"210283","parent":"210200"},{"name":"铁东区","value":"210302","parent":"210300"},{"name":"铁西区","value":"210303","parent":"210300"},{"name":"立山区","value":"210304","parent":"210300"},{"name":"千山区","value":"210311","parent":"210300"},{"name":"台安县","value":"210321","parent":"210300"},{"name":"岫岩满族自治县","value":"210323","parent":"210300"},{"name":"海城市","value":"210381","parent":"210300"},{"name":"新抚区","value":"210402","parent":"210400"},{"name":"东洲区","value":"210403","parent":"210400"},{"name":"望花区","value":"210404","parent":"210400"},{"name":"顺城区","value":"210411","parent":"210400"},{"name":"抚顺县","value":"210421","parent":"210400"},{"name":"新宾满族自治县","value":"210422","parent":"210400"},{"name":"清原满族自治县","value":"210423","parent":"210400"},{"name":"平山区","value":"210502","parent":"210500"},{"name":"溪湖区","value":"210503","parent":"210500"},{"name":"明山区","value":"210504","parent":"210500"},{"name":"南芬区","value":"210505","parent":"210500"},{"name":"本溪满族自治县","value":"210521","parent":"210500"},{"name":"桓仁满族自治县","value":"210522","parent":"210500"},{"name":"元宝区","value":"210602","parent":"210600"},{"name":"振兴区","value":"210603","parent":"210600"},{"name":"振安区","value":"210604","parent":"210600"},{"name":"宽甸满族自治县","value":"210624","parent":"210600"},{"name":"东港市","value":"210681","parent":"210600"},{"name":"凤城市","value":"210682","parent":"210600"},{"name":"古塔区","value":"210702","parent":"210700"},{"name":"凌河区","value":"210703","parent":"210700"},{"name":"太和区","value":"210711","parent":"210700"},{"name":"黑山县","value":"210726","parent":"210700"},{"name":"义县","value":"210727","parent":"210700"},{"name":"凌海市","value":"210781","parent":"210700"},{"name":"北镇市","value":"210782","parent":"210700"},{"name":"站前区","value":"210802","parent":"210800"},{"name":"西市区","value":"210803","parent":"210800"},{"name":"鲅鱼圈区","value":"210804","parent":"210800"},{"name":"老边区","value":"210811","parent":"210800"},{"name":"盖州市","value":"210881","parent":"210800"},{"name":"大石桥市","value":"210882","parent":"210800"},{"name":"海州区","value":"210902","parent":"210900"},{"name":"新邱区","value":"210903","parent":"210900"},{"name":"太平区","value":"210904","parent":"210900"},{"name":"清河门区","value":"210905","parent":"210900"},{"name":"细河区","value":"210911","parent":"210900"},{"name":"阜新蒙古族自治县","value":"210921","parent":"210900"},{"name":"彰武县","value":"210922","parent":"210900"},{"name":"白塔区","value":"211002","parent":"211000"},{"name":"文圣区","value":"211003","parent":"211000"},{"name":"宏伟区","value":"211004","parent":"211000"},{"name":"弓长岭区","value":"211005","parent":"211000"},{"name":"太子河区","value":"211011","parent":"211000"},{"name":"辽阳县","value":"211021","parent":"211000"},{"name":"灯塔市","value":"211081","parent":"211000"},{"name":"双台子区","value":"211102","parent":"211100"},{"name":"兴隆台区","value":"211103","parent":"211100"},{"name":"大洼县","value":"211121","parent":"211100"},{"name":"盘山县","value":"211122","parent":"211100"},{"name":"银州区","value":"211202","parent":"211200"},{"name":"清河区","value":"211204","parent":"211200"},{"name":"铁岭县","value":"211221","parent":"211200"},{"name":"西丰县","value":"211223","parent":"211200"},{"name":"昌图县","value":"211224","parent":"211200"},{"name":"调兵山市","value":"211281","parent":"211200"},{"name":"开原市","value":"211282","parent":"211200"},{"name":"双塔区","value":"211302","parent":"211300"},{"name":"龙城区","value":"211303","parent":"211300"},{"name":"朝阳县","value":"211321","parent":"211300"},{"name":"建平县","value":"211322","parent":"211300"},{"name":"喀喇沁左翼蒙古族自治县","value":"211324","parent":"211300"},{"name":"北票市","value":"211381","parent":"211300"},{"name":"凌源市","value":"211382","parent":"211300"},{"name":"连山区","value":"211402","parent":"211400"},{"name":"龙港区","value":"211403","parent":"211400"},{"name":"南票区","value":"211404","parent":"211400"},{"name":"绥中县","value":"211421","parent":"211400"},{"name":"建昌县","value":"211422","parent":"211400"},{"name":"兴城市","value":"211481","parent":"211400"},{"name":"长春市","value":"220100","parent":"220000"},{"name":"吉林市","value":"220200","parent":"220000"},{"name":"四平市","value":"220300","parent":"220000"},{"name":"辽源市","value":"220400","parent":"220000"},{"name":"通化市","value":"220500","parent":"220000"},{"name":"白山市","value":"220600","parent":"220000"},{"name":"松原市","value":"220700","parent":"220000"},{"name":"白城市","value":"220800","parent":"220000"},{"name":"延边朝鲜族自治州","value":"222400","parent":"220000"},{"name":"南关区","value":"220102","parent":"220100"},{"name":"宽城区","value":"220103","parent":"220100"},{"name":"朝阳区","value":"220104","parent":"220100"},{"name":"二道区","value":"220105","parent":"220100"},{"name":"绿园区","value":"220106","parent":"220100"},{"name":"双阳区","value":"220112","parent":"220100"},{"name":"九台区","value":"220113","parent":"220100"},{"name":"农安县","value":"220122","parent":"220100"},{"name":"榆树市","value":"220182","parent":"220100"},{"name":"德惠市","value":"220183","parent":"220100"},{"name":"昌邑区","value":"220202","parent":"220200"},{"name":"龙潭区","value":"220203","parent":"220200"},{"name":"船营区","value":"220204","parent":"220200"},{"name":"丰满区","value":"220211","parent":"220200"},{"name":"永吉县","value":"220221","parent":"220200"},{"name":"蛟河市","value":"220281","parent":"220200"},{"name":"桦甸市","value":"220282","parent":"220200"},{"name":"舒兰市","value":"220283","parent":"220200"},{"name":"磐石市","value":"220284","parent":"220200"},{"name":"铁西区","value":"220302","parent":"220300"},{"name":"铁东区","value":"220303","parent":"220300"},{"name":"梨树县","value":"220322","parent":"220300"},{"name":"伊通满族自治县","value":"220323","parent":"220300"},{"name":"公主岭市","value":"220381","parent":"220300"},{"name":"双辽市","value":"220382","parent":"220300"},{"name":"龙山区","value":"220402","parent":"220400"},{"name":"西安区","value":"220403","parent":"220400"},{"name":"东丰县","value":"220421","parent":"220400"},{"name":"东辽县","value":"220422","parent":"220400"},{"name":"东昌区","value":"220502","parent":"220500"},{"name":"二道江区","value":"220503","parent":"220500"},{"name":"通化县","value":"220521","parent":"220500"},{"name":"辉南县","value":"220523","parent":"220500"},{"name":"柳河县","value":"220524","parent":"220500"},{"name":"梅河口市","value":"220581","parent":"220500"},{"name":"集安市","value":"220582","parent":"220500"},{"name":"浑江区","value":"220602","parent":"220600"},{"name":"江源区","value":"220605","parent":"220600"},{"name":"抚松县","value":"220621","parent":"220600"},{"name":"靖宇县","value":"220622","parent":"220600"},{"name":"长白朝鲜族自治县","value":"220623","parent":"220600"},{"name":"临江市","value":"220681","parent":"220600"},{"name":"宁江区","value":"220702","parent":"220700"},{"name":"前郭尔罗斯蒙古族自治县","value":"220721","parent":"220700"},{"name":"长岭县","value":"220722","parent":"220700"},{"name":"乾安县","value":"220723","parent":"220700"},{"name":"扶余市","value":"220781","parent":"220700"},{"name":"洮北区","value":"220802","parent":"220800"},{"name":"镇赉县","value":"220821","parent":"220800"},{"name":"通榆县","value":"220822","parent":"220800"},{"name":"洮南市","value":"220881","parent":"220800"},{"name":"大安市","value":"220882","parent":"220800"},{"name":"延吉市","value":"222401","parent":"222400"},{"name":"图们市","value":"222402","parent":"222400"},{"name":"敦化市","value":"222403","parent":"222400"},{"name":"珲春市","value":"222404","parent":"222400"},{"name":"龙井市","value":"222405","parent":"222400"},{"name":"和龙市","value":"222406","parent":"222400"},{"name":"汪清县","value":"222424","parent":"222400"},{"name":"安图县","value":"222426","parent":"222400"},{"name":"哈尔滨市","value":"230100","parent":"230000"},{"name":"齐齐哈尔市","value":"230200","parent":"230000"},{"name":"鸡西市","value":"230300","parent":"230000"},{"name":"鹤岗市","value":"230400","parent":"230000"},{"name":"双鸭山市","value":"230500","parent":"230000"},{"name":"大庆市","value":"230600","parent":"230000"},{"name":"伊春市","value":"230700","parent":"230000"},{"name":"佳木斯市","value":"230800","parent":"230000"},{"name":"七台河市","value":"230900","parent":"230000"},{"name":"牡丹江市","value":"231000","parent":"230000"},{"name":"黑河市","value":"231100","parent":"230000"},{"name":"绥化市","value":"231200","parent":"230000"},{"name":"大兴安岭地区","value":"232700","parent":"230000"},{"name":"道里区","value":"230102","parent":"230100"},{"name":"南岗区","value":"230103","parent":"230100"},{"name":"道外区","value":"230104","parent":"230100"},{"name":"平房区","value":"230108","parent":"230100"},{"name":"松北区","value":"230109","parent":"230100"},{"name":"香坊区","value":"230110","parent":"230100"},{"name":"呼兰区","value":"230111","parent":"230100"},{"name":"阿城区","value":"230112","parent":"230100"},{"name":"双城区","value":"230113","parent":"230100"},{"name":"依兰县","value":"230123","parent":"230100"},{"name":"方正县","value":"230124","parent":"230100"},{"name":"宾县","value":"230125","parent":"230100"},{"name":"巴彦县","value":"230126","parent":"230100"},{"name":"木兰县","value":"230127","parent":"230100"},{"name":"通河县","value":"230128","parent":"230100"},{"name":"延寿县","value":"230129","parent":"230100"},{"name":"尚志市","value":"230183","parent":"230100"},{"name":"五常市","value":"230184","parent":"230100"},{"name":"龙沙区","value":"230202","parent":"230200"},{"name":"建华区","value":"230203","parent":"230200"},{"name":"铁锋区","value":"230204","parent":"230200"},{"name":"昂昂溪区","value":"230205","parent":"230200"},{"name":"富拉尔基区","value":"230206","parent":"230200"},{"name":"碾子山区","value":"230207","parent":"230200"},{"name":"梅里斯达斡尔族区","value":"230208","parent":"230200"},{"name":"龙江县","value":"230221","parent":"230200"},{"name":"依安县","value":"230223","parent":"230200"},{"name":"泰来县","value":"230224","parent":"230200"},{"name":"甘南县","value":"230225","parent":"230200"},{"name":"富裕县","value":"230227","parent":"230200"},{"name":"克山县","value":"230229","parent":"230200"},{"name":"克东县","value":"230230","parent":"230200"},{"name":"拜泉县","value":"230231","parent":"230200"},{"name":"讷河市","value":"230281","parent":"230200"},{"name":"鸡冠区","value":"230302","parent":"230300"},{"name":"恒山区","value":"230303","parent":"230300"},{"name":"滴道区","value":"230304","parent":"230300"},{"name":"梨树区","value":"230305","parent":"230300"},{"name":"城子河区","value":"230306","parent":"230300"},{"name":"麻山区","value":"230307","parent":"230300"},{"name":"鸡东县","value":"230321","parent":"230300"},{"name":"虎林市","value":"230381","parent":"230300"},{"name":"密山市","value":"230382","parent":"230300"},{"name":"向阳区","value":"230402","parent":"230400"},{"name":"工农区","value":"230403","parent":"230400"},{"name":"南山区","value":"230404","parent":"230400"},{"name":"兴安区","value":"230405","parent":"230400"},{"name":"东山区","value":"230406","parent":"230400"},{"name":"兴山区","value":"230407","parent":"230400"},{"name":"萝北县","value":"230421","parent":"230400"},{"name":"绥滨县","value":"230422","parent":"230400"},{"name":"尖山区","value":"230502","parent":"230500"},{"name":"岭东区","value":"230503","parent":"230500"},{"name":"四方台区","value":"230505","parent":"230500"},{"name":"宝山区","value":"230506","parent":"230500"},{"name":"集贤县","value":"230521","parent":"230500"},{"name":"友谊县","value":"230522","parent":"230500"},{"name":"宝清县","value":"230523","parent":"230500"},{"name":"饶河县","value":"230524","parent":"230500"},{"name":"萨尔图区","value":"230602","parent":"230600"},{"name":"龙凤区","value":"230603","parent":"230600"},{"name":"让胡路区","value":"230604","parent":"230600"},{"name":"红岗区","value":"230605","parent":"230600"},{"name":"大同区","value":"230606","parent":"230600"},{"name":"肇州县","value":"230621","parent":"230600"},{"name":"肇源县","value":"230622","parent":"230600"},{"name":"林甸县","value":"230623","parent":"230600"},{"name":"杜尔伯特蒙古族自治县","value":"230624","parent":"230600"},{"name":"伊春区","value":"230702","parent":"230700"},{"name":"南岔区","value":"230703","parent":"230700"},{"name":"友好区","value":"230704","parent":"230700"},{"name":"西林区","value":"230705","parent":"230700"},{"name":"翠峦区","value":"230706","parent":"230700"},{"name":"新青区","value":"230707","parent":"230700"},{"name":"美溪区","value":"230708","parent":"230700"},{"name":"金山屯区","value":"230709","parent":"230700"},{"name":"五营区","value":"230710","parent":"230700"},{"name":"乌马河区","value":"230711","parent":"230700"},{"name":"汤旺河区","value":"230712","parent":"230700"},{"name":"带岭区","value":"230713","parent":"230700"},{"name":"乌伊岭区","value":"230714","parent":"230700"},{"name":"红星区","value":"230715","parent":"230700"},{"name":"上甘岭区","value":"230716","parent":"230700"},{"name":"嘉荫县","value":"230722","parent":"230700"},{"name":"铁力市","value":"230781","parent":"230700"},{"name":"向阳区","value":"230803","parent":"230800"},{"name":"前进区","value":"230804","parent":"230800"},{"name":"东风区","value":"230805","parent":"230800"},{"name":"郊区","value":"230811","parent":"230800"},{"name":"桦南县","value":"230822","parent":"230800"},{"name":"桦川县","value":"230826","parent":"230800"},{"name":"汤原县","value":"230828","parent":"230800"},{"name":"抚远县","value":"230833","parent":"230800"},{"name":"同江市","value":"230881","parent":"230800"},{"name":"富锦市","value":"230882","parent":"230800"},{"name":"新兴区","value":"230902","parent":"230900"},{"name":"桃山区","value":"230903","parent":"230900"},{"name":"茄子河区","value":"230904","parent":"230900"},{"name":"勃利县","value":"230921","parent":"230900"},{"name":"东安区","value":"231002","parent":"231000"},{"name":"阳明区","value":"231003","parent":"231000"},{"name":"爱民区","value":"231004","parent":"231000"},{"name":"西安区","value":"231005","parent":"231000"},{"name":"东宁县","value":"231024","parent":"231000"},{"name":"林口县","value":"231025","parent":"231000"},{"name":"绥芬河市","value":"231081","parent":"231000"},{"name":"海林市","value":"231083","parent":"231000"},{"name":"宁安市","value":"231084","parent":"231000"},{"name":"穆棱市","value":"231085","parent":"231000"},{"name":"爱辉区","value":"231102","parent":"231100"},{"name":"嫩江县","value":"231121","parent":"231100"},{"name":"逊克县","value":"231123","parent":"231100"},{"name":"孙吴县","value":"231124","parent":"231100"},{"name":"北安市","value":"231181","parent":"231100"},{"name":"五大连池市","value":"231182","parent":"231100"},{"name":"北林区","value":"231202","parent":"231200"},{"name":"望奎县","value":"231221","parent":"231200"},{"name":"兰西县","value":"231222","parent":"231200"},{"name":"青冈县","value":"231223","parent":"231200"},{"name":"庆安县","value":"231224","parent":"231200"},{"name":"明水县","value":"231225","parent":"231200"},{"name":"绥棱县","value":"231226","parent":"231200"},{"name":"安达市","value":"231281","parent":"231200"},{"name":"肇东市","value":"231282","parent":"231200"},{"name":"海伦市","value":"231283","parent":"231200"},{"name":"呼玛县","value":"232721","parent":"232700"},{"name":"塔河县","value":"232722","parent":"232700"},{"name":"漠河县","value":"232723","parent":"232700"},{"name":"市辖区","value":"310100","parent":"310000"},{"name":"黄浦区","value":"310101","parent":"310100"},{"name":"徐汇区","value":"310104","parent":"310100"},{"name":"长宁区","value":"310105","parent":"310100"},{"name":"静安区","value":"310106","parent":"310100"},{"name":"普陀区","value":"310107","parent":"310100"},{"name":"闸北区","value":"310108","parent":"310100"},{"name":"虹口区","value":"310109","parent":"310100"},{"name":"杨浦区","value":"310110","parent":"310100"},{"name":"闵行区","value":"310112","parent":"310100"},{"name":"宝山区","value":"310113","parent":"310100"},{"name":"嘉定区","value":"310114","parent":"310100"},{"name":"浦东新区","value":"310115","parent":"310100"},{"name":"金山区","value":"310116","parent":"310100"},{"name":"松江区","value":"310117","parent":"310100"},{"name":"青浦区","value":"310118","parent":"310100"},{"name":"奉贤区","value":"310120","parent":"310100"},{"name":"崇明县","value":"310230","parent":"310100"},{"name":"南京市","value":"320100","parent":"320000"},{"name":"无锡市","value":"320200","parent":"320000"},{"name":"徐州市","value":"320300","parent":"320000"},{"name":"常州市","value":"320400","parent":"320000"},{"name":"苏州市","value":"320500","parent":"320000"},{"name":"南通市","value":"320600","parent":"320000"},{"name":"连云港市","value":"320700","parent":"320000"},{"name":"淮安市","value":"320800","parent":"320000"},{"name":"盐城市","value":"320900","parent":"320000"},{"name":"扬州市","value":"321000","parent":"320000"},{"name":"镇江市","value":"321100","parent":"320000"},{"name":"泰州市","value":"321200","parent":"320000"},{"name":"宿迁市","value":"321300","parent":"320000"},{"name":"玄武区","value":"320102","parent":"320100"},{"name":"秦淮区","value":"320104","parent":"320100"},{"name":"建邺区","value":"320105","parent":"320100"},{"name":"鼓楼区","value":"320106","parent":"320100"},{"name":"浦口区","value":"320111","parent":"320100"},{"name":"栖霞区","value":"320113","parent":"320100"},{"name":"雨花台区","value":"320114","parent":"320100"},{"name":"江宁区","value":"320115","parent":"320100"},{"name":"六合区","value":"320116","parent":"320100"},{"name":"溧水区","value":"320117","parent":"320100"},{"name":"高淳区","value":"320118","parent":"320100"},{"name":"崇安区","value":"320202","parent":"320200"},{"name":"南长区","value":"320203","parent":"320200"},{"name":"北塘区","value":"320204","parent":"320200"},{"name":"锡山区","value":"320205","parent":"320200"},{"name":"惠山区","value":"320206","parent":"320200"},{"name":"滨湖区","value":"320211","parent":"320200"},{"name":"江阴市","value":"320281","parent":"320200"},{"name":"宜兴市","value":"320282","parent":"320200"},{"name":"鼓楼区","value":"320302","parent":"320300"},{"name":"云龙区","value":"320303","parent":"320300"},{"name":"贾汪区","value":"320305","parent":"320300"},{"name":"泉山区","value":"320311","parent":"320300"},{"name":"铜山区","value":"320312","parent":"320300"},{"name":"丰县","value":"320321","parent":"320300"},{"name":"沛县","value":"320322","parent":"320300"},{"name":"睢宁县","value":"320324","parent":"320300"},{"name":"新沂市","value":"320381","parent":"320300"},{"name":"邳州市","value":"320382","parent":"320300"},{"name":"天宁区","value":"320402","parent":"320400"},{"name":"钟楼区","value":"320404","parent":"320400"},{"name":"新北区","value":"320411","parent":"320400"},{"name":"武进区","value":"320412","parent":"320400"},{"name":"金坛区","value":"320413","parent":"320400"},{"name":"溧阳市","value":"320481","parent":"320400"},{"name":"虎丘区","value":"320505","parent":"320500"},{"name":"吴中区","value":"320506","parent":"320500"},{"name":"相城区","value":"320507","parent":"320500"},{"name":"姑苏区","value":"320508","parent":"320500"},{"name":"吴江区","value":"320509","parent":"320500"},{"name":"常熟市","value":"320581","parent":"320500"},{"name":"张家港市","value":"320582","parent":"320500"},{"name":"昆山市","value":"320583","parent":"320500"},{"name":"太仓市","value":"320585","parent":"320500"},{"name":"崇川区","value":"320602","parent":"320600"},{"name":"港闸区","value":"320611","parent":"320600"},{"name":"通州区","value":"320612","parent":"320600"},{"name":"海安县","value":"320621","parent":"320600"},{"name":"如东县","value":"320623","parent":"320600"},{"name":"启东市","value":"320681","parent":"320600"},{"name":"如皋市","value":"320682","parent":"320600"},{"name":"海门市","value":"320684","parent":"320600"},{"name":"连云区","value":"320703","parent":"320700"},{"name":"海州区","value":"320706","parent":"320700"},{"name":"赣榆区","value":"320707","parent":"320700"},{"name":"东海县","value":"320722","parent":"320700"},{"name":"灌云县","value":"320723","parent":"320700"},{"name":"灌南县","value":"320724","parent":"320700"},{"name":"清河区","value":"320802","parent":"320800"},{"name":"淮安区","value":"320803","parent":"320800"},{"name":"淮阴区","value":"320804","parent":"320800"},{"name":"清浦区","value":"320811","parent":"320800"},{"name":"涟水县","value":"320826","parent":"320800"},{"name":"洪泽县","value":"320829","parent":"320800"},{"name":"盱眙县","value":"320830","parent":"320800"},{"name":"金湖县","value":"320831","parent":"320800"},{"name":"亭湖区","value":"320902","parent":"320900"},{"name":"盐都区","value":"320903","parent":"320900"},{"name":"大丰区","value":"320904","parent":"320900"},{"name":"响水县","value":"320921","parent":"320900"},{"name":"滨海县","value":"320922","parent":"320900"},{"name":"阜宁县","value":"320923","parent":"320900"},{"name":"射阳县","value":"320924","parent":"320900"},{"name":"建湖县","value":"320925","parent":"320900"},{"name":"东台市","value":"320981","parent":"320900"},{"name":"广陵区","value":"321002","parent":"321000"},{"name":"邗江区","value":"321003","parent":"321000"},{"name":"江都区","value":"321012","parent":"321000"},{"name":"宝应县","value":"321023","parent":"321000"},{"name":"仪征市","value":"321081","parent":"321000"},{"name":"高邮市","value":"321084","parent":"321000"},{"name":"京口区","value":"321102","parent":"321100"},{"name":"润州区","value":"321111","parent":"321100"},{"name":"丹徒区","value":"321112","parent":"321100"},{"name":"丹阳市","value":"321181","parent":"321100"},{"name":"扬中市","value":"321182","parent":"321100"},{"name":"句容市","value":"321183","parent":"321100"},{"name":"海陵区","value":"321202","parent":"321200"},{"name":"高港区","value":"321203","parent":"321200"},{"name":"姜堰区","value":"321204","parent":"321200"},{"name":"兴化市","value":"321281","parent":"321200"},{"name":"靖江市","value":"321282","parent":"321200"},{"name":"泰兴市","value":"321283","parent":"321200"},{"name":"宿城区","value":"321302","parent":"321300"},{"name":"宿豫区","value":"321311","parent":"321300"},{"name":"沭阳县","value":"321322","parent":"321300"},{"name":"泗阳县","value":"321323","parent":"321300"},{"name":"泗洪县","value":"321324","parent":"321300"},{"name":"杭州市","value":"330100","parent":"330000"},{"name":"宁波市","value":"330200","parent":"330000"},{"name":"温州市","value":"330300","parent":"330000"},{"name":"嘉兴市","value":"330400","parent":"330000"},{"name":"湖州市","value":"330500","parent":"330000"},{"name":"绍兴市","value":"330600","parent":"330000"},{"name":"金华市","value":"330700","parent":"330000"},{"name":"衢州市","value":"330800","parent":"330000"},{"name":"舟山市","value":"330900","parent":"330000"},{"name":"台州市","value":"331000","parent":"330000"},{"name":"丽水市","value":"331100","parent":"330000"},{"name":"上城区","value":"330102","parent":"330100"},{"name":"下城区","value":"330103","parent":"330100"},{"name":"江干区","value":"330104","parent":"330100"},{"name":"拱墅区","value":"330105","parent":"330100"},{"name":"西湖区","value":"330106","parent":"330100"},{"name":"滨江区","value":"330108","parent":"330100"},{"name":"萧山区","value":"330109","parent":"330100"},{"name":"余杭区","value":"330110","parent":"330100"},{"name":"富阳区","value":"330111","parent":"330100"},{"name":"桐庐县","value":"330122","parent":"330100"},{"name":"淳安县","value":"330127","parent":"330100"},{"name":"建德市","value":"330182","parent":"330100"},{"name":"临安市","value":"330185","parent":"330100"},{"name":"海曙区","value":"330203","parent":"330200"},{"name":"江东区","value":"330204","parent":"330200"},{"name":"江北区","value":"330205","parent":"330200"},{"name":"北仑区","value":"330206","parent":"330200"},{"name":"镇海区","value":"330211","parent":"330200"},{"name":"鄞州区","value":"330212","parent":"330200"},{"name":"象山县","value":"330225","parent":"330200"},{"name":"宁海县","value":"330226","parent":"330200"},{"name":"余姚市","value":"330281","parent":"330200"},{"name":"慈溪市","value":"330282","parent":"330200"},{"name":"奉化市","value":"330283","parent":"330200"},{"name":"鹿城区","value":"330302","parent":"330300"},{"name":"龙湾区","value":"330303","parent":"330300"},{"name":"瓯海区","value":"330304","parent":"330300"},{"name":"洞头区","value":"330305","parent":"330300"},{"name":"永嘉县","value":"330324","parent":"330300"},{"name":"平阳县","value":"330326","parent":"330300"},{"name":"苍南县","value":"330327","parent":"330300"},{"name":"文成县","value":"330328","parent":"330300"},{"name":"泰顺县","value":"330329","parent":"330300"},{"name":"瑞安市","value":"330381","parent":"330300"},{"name":"乐清市","value":"330382","parent":"330300"},{"name":"南湖区","value":"330402","parent":"330400"},{"name":"秀洲区","value":"330411","parent":"330400"},{"name":"嘉善县","value":"330421","parent":"330400"},{"name":"海盐县","value":"330424","parent":"330400"},{"name":"海宁市","value":"330481","parent":"330400"},{"name":"平湖市","value":"330482","parent":"330400"},{"name":"桐乡市","value":"330483","parent":"330400"},{"name":"吴兴区","value":"330502","parent":"330500"},{"name":"南浔区","value":"330503","parent":"330500"},{"name":"德清县","value":"330521","parent":"330500"},{"name":"长兴县","value":"330522","parent":"330500"},{"name":"安吉县","value":"330523","parent":"330500"},{"name":"越城区","value":"330602","parent":"330600"},{"name":"柯桥区","value":"330603","parent":"330600"},{"name":"上虞区","value":"330604","parent":"330600"},{"name":"新昌县","value":"330624","parent":"330600"},{"name":"诸暨市","value":"330681","parent":"330600"},{"name":"嵊州市","value":"330683","parent":"330600"},{"name":"婺城区","value":"330702","parent":"330700"},{"name":"金东区","value":"330703","parent":"330700"},{"name":"武义县","value":"330723","parent":"330700"},{"name":"浦江县","value":"330726","parent":"330700"},{"name":"磐安县","value":"330727","parent":"330700"},{"name":"兰溪市","value":"330781","parent":"330700"},{"name":"义乌市","value":"330782","parent":"330700"},{"name":"东阳市","value":"330783","parent":"330700"},{"name":"永康市","value":"330784","parent":"330700"},{"name":"柯城区","value":"330802","parent":"330800"},{"name":"衢江区","value":"330803","parent":"330800"},{"name":"常山县","value":"330822","parent":"330800"},{"name":"开化县","value":"330824","parent":"330800"},{"name":"龙游县","value":"330825","parent":"330800"},{"name":"江山市","value":"330881","parent":"330800"},{"name":"定海区","value":"330902","parent":"330900"},{"name":"普陀区","value":"330903","parent":"330900"},{"name":"岱山县","value":"330921","parent":"330900"},{"name":"嵊泗县","value":"330922","parent":"330900"},{"name":"椒江区","value":"331002","parent":"331000"},{"name":"黄岩区","value":"331003","parent":"331000"},{"name":"路桥区","value":"331004","parent":"331000"},{"name":"玉环县","value":"331021","parent":"331000"},{"name":"三门县","value":"331022","parent":"331000"},{"name":"天台县","value":"331023","parent":"331000"},{"name":"仙居县","value":"331024","parent":"331000"},{"name":"温岭市","value":"331081","parent":"331000"},{"name":"临海市","value":"331082","parent":"331000"},{"name":"莲都区","value":"331102","parent":"331100"},{"name":"青田县","value":"331121","parent":"331100"},{"name":"缙云县","value":"331122","parent":"331100"},{"name":"遂昌县","value":"331123","parent":"331100"},{"name":"松阳县","value":"331124","parent":"331100"},{"name":"云和县","value":"331125","parent":"331100"},{"name":"庆元县","value":"331126","parent":"331100"},{"name":"景宁畲族自治县","value":"331127","parent":"331100"},{"name":"龙泉市","value":"331181","parent":"331100"},{"name":"合肥市","value":"340100","parent":"340000"},{"name":"芜湖市","value":"340200","parent":"340000"},{"name":"蚌埠市","value":"340300","parent":"340000"},{"name":"淮南市","value":"340400","parent":"340000"},{"name":"马鞍山市","value":"340500","parent":"340000"},{"name":"淮北市","value":"340600","parent":"340000"},{"name":"铜陵市","value":"340700","parent":"340000"},{"name":"安庆市","value":"340800","parent":"340000"},{"name":"黄山市","value":"341000","parent":"340000"},{"name":"滁州市","value":"341100","parent":"340000"},{"name":"阜阳市","value":"341200","parent":"340000"},{"name":"宿州市","value":"341300","parent":"340000"},{"name":"六安市","value":"341500","parent":"340000"},{"name":"亳州市","value":"341600","parent":"340000"},{"name":"池州市","value":"341700","parent":"340000"},{"name":"宣城市","value":"341800","parent":"340000"},{"name":"瑶海区","value":"340102","parent":"340100"},{"name":"庐阳区","value":"340103","parent":"340100"},{"name":"蜀山区","value":"340104","parent":"340100"},{"name":"包河区","value":"340111","parent":"340100"},{"name":"长丰县","value":"340121","parent":"340100"},{"name":"肥东县","value":"340122","parent":"340100"},{"name":"肥西县","value":"340123","parent":"340100"},{"name":"庐江县","value":"340124","parent":"340100"},{"name":"巢湖市","value":"340181","parent":"340100"},{"name":"镜湖区","value":"340202","parent":"340200"},{"name":"弋江区","value":"340203","parent":"340200"},{"name":"鸠江区","value":"340207","parent":"340200"},{"name":"三山区","value":"340208","parent":"340200"},{"name":"芜湖县","value":"340221","parent":"340200"},{"name":"繁昌县","value":"340222","parent":"340200"},{"name":"南陵县","value":"340223","parent":"340200"},{"name":"无为县","value":"340225","parent":"340200"},{"name":"龙子湖区","value":"340302","parent":"340300"},{"name":"蚌山区","value":"340303","parent":"340300"},{"name":"禹会区","value":"340304","parent":"340300"},{"name":"淮上区","value":"340311","parent":"340300"},{"name":"怀远县","value":"340321","parent":"340300"},{"name":"五河县","value":"340322","parent":"340300"},{"name":"固镇县","value":"340323","parent":"340300"},{"name":"大通区","value":"340402","parent":"340400"},{"name":"田家庵区","value":"340403","parent":"340400"},{"name":"谢家集区","value":"340404","parent":"340400"},{"name":"八公山区","value":"340405","parent":"340400"},{"name":"潘集区","value":"340406","parent":"340400"},{"name":"凤台县","value":"340421","parent":"340400"},{"name":"花山区","value":"340503","parent":"340500"},{"name":"雨山区","value":"340504","parent":"340500"},{"name":"博望区","value":"340506","parent":"340500"},{"name":"当涂县","value":"340521","parent":"340500"},{"name":"含山县","value":"340522","parent":"340500"},{"name":"和县","value":"340523","parent":"340500"},{"name":"杜集区","value":"340602","parent":"340600"},{"name":"相山区","value":"340603","parent":"340600"},{"name":"烈山区","value":"340604","parent":"340600"},{"name":"濉溪县","value":"340621","parent":"340600"},{"name":"铜官山区","value":"340702","parent":"340700"},{"name":"狮子山区","value":"340703","parent":"340700"},{"name":"郊区","value":"340711","parent":"340700"},{"name":"铜陵县","value":"340721","parent":"340700"},{"name":"迎江区","value":"340802","parent":"340800"},{"name":"大观区","value":"340803","parent":"340800"},{"name":"宜秀区","value":"340811","parent":"340800"},{"name":"怀宁县","value":"340822","parent":"340800"},{"name":"枞阳县","value":"340823","parent":"340800"},{"name":"潜山县","value":"340824","parent":"340800"},{"name":"太湖县","value":"340825","parent":"340800"},{"name":"宿松县","value":"340826","parent":"340800"},{"name":"望江县","value":"340827","parent":"340800"},{"name":"岳西县","value":"340828","parent":"340800"},{"name":"桐城市","value":"340881","parent":"340800"},{"name":"屯溪区","value":"341002","parent":"341000"},{"name":"黄山区","value":"341003","parent":"341000"},{"name":"徽州区","value":"341004","parent":"341000"},{"name":"歙县","value":"341021","parent":"341000"},{"name":"休宁县","value":"341022","parent":"341000"},{"name":"黟县","value":"341023","parent":"341000"},{"name":"祁门县","value":"341024","parent":"341000"},{"name":"琅琊区","value":"341102","parent":"341100"},{"name":"南谯区","value":"341103","parent":"341100"},{"name":"来安县","value":"341122","parent":"341100"},{"name":"全椒县","value":"341124","parent":"341100"},{"name":"定远县","value":"341125","parent":"341100"},{"name":"凤阳县","value":"341126","parent":"341100"},{"name":"天长市","value":"341181","parent":"341100"},{"name":"明光市","value":"341182","parent":"341100"},{"name":"颍州区","value":"341202","parent":"341200"},{"name":"颍东区","value":"341203","parent":"341200"},{"name":"颍泉区","value":"341204","parent":"341200"},{"name":"临泉县","value":"341221","parent":"341200"},{"name":"太和县","value":"341222","parent":"341200"},{"name":"阜南县","value":"341225","parent":"341200"},{"name":"颍上县","value":"341226","parent":"341200"},{"name":"界首市","value":"341282","parent":"341200"},{"name":"埇桥区","value":"341302","parent":"341300"},{"name":"砀山县","value":"341321","parent":"341300"},{"name":"萧县","value":"341322","parent":"341300"},{"name":"灵璧县","value":"341323","parent":"341300"},{"name":"泗县","value":"341324","parent":"341300"},{"name":"金安区","value":"341502","parent":"341500"},{"name":"裕安区","value":"341503","parent":"341500"},{"name":"寿县","value":"341521","parent":"341500"},{"name":"霍邱县","value":"341522","parent":"341500"},{"name":"舒城县","value":"341523","parent":"341500"},{"name":"金寨县","value":"341524","parent":"341500"},{"name":"霍山县","value":"341525","parent":"341500"},{"name":"谯城区","value":"341602","parent":"341600"},{"name":"涡阳县","value":"341621","parent":"341600"},{"name":"蒙城县","value":"341622","parent":"341600"},{"name":"利辛县","value":"341623","parent":"341600"},{"name":"贵池区","value":"341702","parent":"341700"},{"name":"东至县","value":"341721","parent":"341700"},{"name":"石台县","value":"341722","parent":"341700"},{"name":"青阳县","value":"341723","parent":"341700"},{"name":"宣州区","value":"341802","parent":"341800"},{"name":"郎溪县","value":"341821","parent":"341800"},{"name":"广德县","value":"341822","parent":"341800"},{"name":"泾县","value":"341823","parent":"341800"},{"name":"绩溪县","value":"341824","parent":"341800"},{"name":"旌德县","value":"341825","parent":"341800"},{"name":"宁国市","value":"341881","parent":"341800"},{"name":"福州市","value":"350100","parent":"350000"},{"name":"厦门市","value":"350200","parent":"350000"},{"name":"莆田市","value":"350300","parent":"350000"},{"name":"三明市","value":"350400","parent":"350000"},{"name":"泉州市","value":"350500","parent":"350000"},{"name":"漳州市","value":"350600","parent":"350000"},{"name":"南平市","value":"350700","parent":"350000"},{"name":"龙岩市","value":"350800","parent":"350000"},{"name":"宁德市","value":"350900","parent":"350000"},{"name":"鼓楼区","value":"350102","parent":"350100"},{"name":"台江区","value":"350103","parent":"350100"},{"name":"仓山区","value":"350104","parent":"350100"},{"name":"马尾区","value":"350105","parent":"350100"},{"name":"晋安区","value":"350111","parent":"350100"},{"name":"闽侯县","value":"350121","parent":"350100"},{"name":"连江县","value":"350122","parent":"350100"},{"name":"罗源县","value":"350123","parent":"350100"},{"name":"闽清县","value":"350124","parent":"350100"},{"name":"永泰县","value":"350125","parent":"350100"},{"name":"平潭县","value":"350128","parent":"350100"},{"name":"福清市","value":"350181","parent":"350100"},{"name":"长乐市","value":"350182","parent":"350100"},{"name":"思明区","value":"350203","parent":"350200"},{"name":"海沧区","value":"350205","parent":"350200"},{"name":"湖里区","value":"350206","parent":"350200"},{"name":"集美区","value":"350211","parent":"350200"},{"name":"同安区","value":"350212","parent":"350200"},{"name":"翔安区","value":"350213","parent":"350200"},{"name":"城厢区","value":"350302","parent":"350300"},{"name":"涵江区","value":"350303","parent":"350300"},{"name":"荔城区","value":"350304","parent":"350300"},{"name":"秀屿区","value":"350305","parent":"350300"},{"name":"仙游县","value":"350322","parent":"350300"},{"name":"梅列区","value":"350402","parent":"350400"},{"name":"三元区","value":"350403","parent":"350400"},{"name":"明溪县","value":"350421","parent":"350400"},{"name":"清流县","value":"350423","parent":"350400"},{"name":"宁化县","value":"350424","parent":"350400"},{"name":"大田县","value":"350425","parent":"350400"},{"name":"尤溪县","value":"350426","parent":"350400"},{"name":"沙县","value":"350427","parent":"350400"},{"name":"将乐县","value":"350428","parent":"350400"},{"name":"泰宁县","value":"350429","parent":"350400"},{"name":"建宁县","value":"350430","parent":"350400"},{"name":"永安市","value":"350481","parent":"350400"},{"name":"鲤城区","value":"350502","parent":"350500"},{"name":"丰泽区","value":"350503","parent":"350500"},{"name":"洛江区","value":"350504","parent":"350500"},{"name":"泉港区","value":"350505","parent":"350500"},{"name":"惠安县","value":"350521","parent":"350500"},{"name":"安溪县","value":"350524","parent":"350500"},{"name":"永春县","value":"350525","parent":"350500"},{"name":"德化县","value":"350526","parent":"350500"},{"name":"金门县","value":"350527","parent":"350500"},{"name":"石狮市","value":"350581","parent":"350500"},{"name":"晋江市","value":"350582","parent":"350500"},{"name":"南安市","value":"350583","parent":"350500"},{"name":"芗城区","value":"350602","parent":"350600"},{"name":"龙文区","value":"350603","parent":"350600"},{"name":"云霄县","value":"350622","parent":"350600"},{"name":"漳浦县","value":"350623","parent":"350600"},{"name":"诏安县","value":"350624","parent":"350600"},{"name":"长泰县","value":"350625","parent":"350600"},{"name":"东山县","value":"350626","parent":"350600"},{"name":"南靖县","value":"350627","parent":"350600"},{"name":"平和县","value":"350628","parent":"350600"},{"name":"华安县","value":"350629","parent":"350600"},{"name":"龙海市","value":"350681","parent":"350600"},{"name":"延平区","value":"350702","parent":"350700"},{"name":"建阳区","value":"350703","parent":"350700"},{"name":"顺昌县","value":"350721","parent":"350700"},{"name":"浦城县","value":"350722","parent":"350700"},{"name":"光泽县","value":"350723","parent":"350700"},{"name":"松溪县","value":"350724","parent":"350700"},{"name":"政和县","value":"350725","parent":"350700"},{"name":"邵武市","value":"350781","parent":"350700"},{"name":"武夷山市","value":"350782","parent":"350700"},{"name":"建瓯市","value":"350783","parent":"350700"},{"name":"新罗区","value":"350802","parent":"350800"},{"name":"永定区","value":"350803","parent":"350800"},{"name":"长汀县","value":"350821","parent":"350800"},{"name":"上杭县","value":"350823","parent":"350800"},{"name":"武平县","value":"350824","parent":"350800"},{"name":"连城县","value":"350825","parent":"350800"},{"name":"漳平市","value":"350881","parent":"350800"},{"name":"蕉城区","value":"350902","parent":"350900"},{"name":"霞浦县","value":"350921","parent":"350900"},{"name":"古田县","value":"350922","parent":"350900"},{"name":"屏南县","value":"350923","parent":"350900"},{"name":"寿宁县","value":"350924","parent":"350900"},{"name":"周宁县","value":"350925","parent":"350900"},{"name":"柘荣县","value":"350926","parent":"350900"},{"name":"福安市","value":"350981","parent":"350900"},{"name":"福鼎市","value":"350982","parent":"350900"},{"name":"南昌市","value":"360100","parent":"360000"},{"name":"景德镇市","value":"360200","parent":"360000"},{"name":"萍乡市","value":"360300","parent":"360000"},{"name":"九江市","value":"360400","parent":"360000"},{"name":"新余市","value":"360500","parent":"360000"},{"name":"鹰潭市","value":"360600","parent":"360000"},{"name":"赣州市","value":"360700","parent":"360000"},{"name":"吉安市","value":"360800","parent":"360000"},{"name":"宜春市","value":"360900","parent":"360000"},{"name":"抚州市","value":"361000","parent":"360000"},{"name":"上饶市","value":"361100","parent":"360000"},{"name":"东湖区","value":"360102","parent":"360100"},{"name":"西湖区","value":"360103","parent":"360100"},{"name":"青云谱区","value":"360104","parent":"360100"},{"name":"湾里区","value":"360105","parent":"360100"},{"name":"青山湖区","value":"360111","parent":"360100"},{"name":"新建区","value":"360112","parent":"360100"},{"name":"南昌县","value":"360121","parent":"360100"},{"name":"安义县","value":"360123","parent":"360100"},{"name":"进贤县","value":"360124","parent":"360100"},{"name":"昌江区","value":"360202","parent":"360200"},{"name":"珠山区","value":"360203","parent":"360200"},{"name":"浮梁县","value":"360222","parent":"360200"},{"name":"乐平市","value":"360281","parent":"360200"},{"name":"安源区","value":"360302","parent":"360300"},{"name":"湘东区","value":"360313","parent":"360300"},{"name":"莲花县","value":"360321","parent":"360300"},{"name":"上栗县","value":"360322","parent":"360300"},{"name":"芦溪县","value":"360323","parent":"360300"},{"name":"庐山区","value":"360402","parent":"360400"},{"name":"浔阳区","value":"360403","parent":"360400"},{"name":"九江县","value":"360421","parent":"360400"},{"name":"武宁县","value":"360423","parent":"360400"},{"name":"修水县","value":"360424","parent":"360400"},{"name":"永修县","value":"360425","parent":"360400"},{"name":"德安县","value":"360426","parent":"360400"},{"name":"星子县","value":"360427","parent":"360400"},{"name":"都昌县","value":"360428","parent":"360400"},{"name":"湖口县","value":"360429","parent":"360400"},{"name":"彭泽县","value":"360430","parent":"360400"},{"name":"瑞昌市","value":"360481","parent":"360400"},{"name":"共青城市","value":"360482","parent":"360400"},{"name":"渝水区","value":"360502","parent":"360500"},{"name":"分宜县","value":"360521","parent":"360500"},{"name":"月湖区","value":"360602","parent":"360600"},{"name":"余江县","value":"360622","parent":"360600"},{"name":"贵溪市","value":"360681","parent":"360600"},{"name":"章贡区","value":"360702","parent":"360700"},{"name":"南康区","value":"360703","parent":"360700"},{"name":"赣县","value":"360721","parent":"360700"},{"name":"信丰县","value":"360722","parent":"360700"},{"name":"大余县","value":"360723","parent":"360700"},{"name":"上犹县","value":"360724","parent":"360700"},{"name":"崇义县","value":"360725","parent":"360700"},{"name":"安远县","value":"360726","parent":"360700"},{"name":"龙南县","value":"360727","parent":"360700"},{"name":"定南县","value":"360728","parent":"360700"},{"name":"全南县","value":"360729","parent":"360700"},{"name":"宁都县","value":"360730","parent":"360700"},{"name":"于都县","value":"360731","parent":"360700"},{"name":"兴国县","value":"360732","parent":"360700"},{"name":"会昌县","value":"360733","parent":"360700"},{"name":"寻乌县","value":"360734","parent":"360700"},{"name":"石城县","value":"360735","parent":"360700"},{"name":"瑞金市","value":"360781","parent":"360700"},{"name":"吉州区","value":"360802","parent":"360800"},{"name":"青原区","value":"360803","parent":"360800"},{"name":"吉安县","value":"360821","parent":"360800"},{"name":"吉水县","value":"360822","parent":"360800"},{"name":"峡江县","value":"360823","parent":"360800"},{"name":"新干县","value":"360824","parent":"360800"},{"name":"永丰县","value":"360825","parent":"360800"},{"name":"泰和县","value":"360826","parent":"360800"},{"name":"遂川县","value":"360827","parent":"360800"},{"name":"万安县","value":"360828","parent":"360800"},{"name":"安福县","value":"360829","parent":"360800"},{"name":"永新县","value":"360830","parent":"360800"},{"name":"井冈山市","value":"360881","parent":"360800"},{"name":"袁州区","value":"360902","parent":"360900"},{"name":"奉新县","value":"360921","parent":"360900"},{"name":"万载县","value":"360922","parent":"360900"},{"name":"上高县","value":"360923","parent":"360900"},{"name":"宜丰县","value":"360924","parent":"360900"},{"name":"靖安县","value":"360925","parent":"360900"},{"name":"铜鼓县","value":"360926","parent":"360900"},{"name":"丰城市","value":"360981","parent":"360900"},{"name":"樟树市","value":"360982","parent":"360900"},{"name":"高安市","value":"360983","parent":"360900"},{"name":"临川区","value":"361002","parent":"361000"},{"name":"南城县","value":"361021","parent":"361000"},{"name":"黎川县","value":"361022","parent":"361000"},{"name":"南丰县","value":"361023","parent":"361000"},{"name":"崇仁县","value":"361024","parent":"361000"},{"name":"乐安县","value":"361025","parent":"361000"},{"name":"宜黄县","value":"361026","parent":"361000"},{"name":"金溪县","value":"361027","parent":"361000"},{"name":"资溪县","value":"361028","parent":"361000"},{"name":"东乡县","value":"361029","parent":"361000"},{"name":"广昌县","value":"361030","parent":"361000"},{"name":"信州区","value":"361102","parent":"361100"},{"name":"广丰区","value":"361103","parent":"361100"},{"name":"上饶县","value":"361121","parent":"361100"},{"name":"玉山县","value":"361123","parent":"361100"},{"name":"铅山县","value":"361124","parent":"361100"},{"name":"横峰县","value":"361125","parent":"361100"},{"name":"弋阳县","value":"361126","parent":"361100"},{"name":"余干县","value":"361127","parent":"361100"},{"name":"鄱阳县","value":"361128","parent":"361100"},{"name":"万年县","value":"361129","parent":"361100"},{"name":"婺源县","value":"361130","parent":"361100"},{"name":"德兴市","value":"361181","parent":"361100"},{"name":"济南市","value":"370100","parent":"370000"},{"name":"青岛市","value":"370200","parent":"370000"},{"name":"淄博市","value":"370300","parent":"370000"},{"name":"枣庄市","value":"370400","parent":"370000"},{"name":"东营市","value":"370500","parent":"370000"},{"name":"烟台市","value":"370600","parent":"370000"},{"name":"潍坊市","value":"370700","parent":"370000"},{"name":"济宁市","value":"370800","parent":"370000"},{"name":"泰安市","value":"370900","parent":"370000"},{"name":"威海市","value":"371000","parent":"370000"},{"name":"日照市","value":"371100","parent":"370000"},{"name":"莱芜市","value":"371200","parent":"370000"},{"name":"临沂市","value":"371300","parent":"370000"},{"name":"德州市","value":"371400","parent":"370000"},{"name":"聊城市","value":"371500","parent":"370000"},{"name":"滨州市","value":"371600","parent":"370000"},{"name":"菏泽市","value":"371700","parent":"370000"},{"name":"历下区","value":"370102","parent":"370100"},{"name":"市中区","value":"370103","parent":"370100"},{"name":"槐荫区","value":"370104","parent":"370100"},{"name":"天桥区","value":"370105","parent":"370100"},{"name":"历城区","value":"370112","parent":"370100"},{"name":"长清区","value":"370113","parent":"370100"},{"name":"平阴县","value":"370124","parent":"370100"},{"name":"济阳县","value":"370125","parent":"370100"},{"name":"商河县","value":"370126","parent":"370100"},{"name":"章丘市","value":"370181","parent":"370100"},{"name":"市南区","value":"370202","parent":"370200"},{"name":"市北区","value":"370203","parent":"370200"},{"name":"黄岛区","value":"370211","parent":"370200"},{"name":"崂山区","value":"370212","parent":"370200"},{"name":"李沧区","value":"370213","parent":"370200"},{"name":"城阳区","value":"370214","parent":"370200"},{"name":"胶州市","value":"370281","parent":"370200"},{"name":"即墨市","value":"370282","parent":"370200"},{"name":"平度市","value":"370283","parent":"370200"},{"name":"莱西市","value":"370285","parent":"370200"},{"name":"淄川区","value":"370302","parent":"370300"},{"name":"张店区","value":"370303","parent":"370300"},{"name":"博山区","value":"370304","parent":"370300"},{"name":"临淄区","value":"370305","parent":"370300"},{"name":"周村区","value":"370306","parent":"370300"},{"name":"桓台县","value":"370321","parent":"370300"},{"name":"高青县","value":"370322","parent":"370300"},{"name":"沂源县","value":"370323","parent":"370300"},{"name":"市中区","value":"370402","parent":"370400"},{"name":"薛城区","value":"370403","parent":"370400"},{"name":"峄城区","value":"370404","parent":"370400"},{"name":"台儿庄区","value":"370405","parent":"370400"},{"name":"山亭区","value":"370406","parent":"370400"},{"name":"滕州市","value":"370481","parent":"370400"},{"name":"东营区","value":"370502","parent":"370500"},{"name":"河口区","value":"370503","parent":"370500"},{"name":"垦利县","value":"370521","parent":"370500"},{"name":"利津县","value":"370522","parent":"370500"},{"name":"广饶县","value":"370523","parent":"370500"},{"name":"芝罘区","value":"370602","parent":"370600"},{"name":"福山区","value":"370611","parent":"370600"},{"name":"牟平区","value":"370612","parent":"370600"},{"name":"莱山区","value":"370613","parent":"370600"},{"name":"长岛县","value":"370634","parent":"370600"},{"name":"龙口市","value":"370681","parent":"370600"},{"name":"莱阳市","value":"370682","parent":"370600"},{"name":"莱州市","value":"370683","parent":"370600"},{"name":"蓬莱市","value":"370684","parent":"370600"},{"name":"招远市","value":"370685","parent":"370600"},{"name":"栖霞市","value":"370686","parent":"370600"},{"name":"海阳市","value":"370687","parent":"370600"},{"name":"潍城区","value":"370702","parent":"370700"},{"name":"寒亭区","value":"370703","parent":"370700"},{"name":"坊子区","value":"370704","parent":"370700"},{"name":"奎文区","value":"370705","parent":"370700"},{"name":"临朐县","value":"370724","parent":"370700"},{"name":"昌乐县","value":"370725","parent":"370700"},{"name":"青州市","value":"370781","parent":"370700"},{"name":"诸城市","value":"370782","parent":"370700"},{"name":"寿光市","value":"370783","parent":"370700"},{"name":"安丘市","value":"370784","parent":"370700"},{"name":"高密市","value":"370785","parent":"370700"},{"name":"昌邑市","value":"370786","parent":"370700"},{"name":"任城区","value":"370811","parent":"370800"},{"name":"兖州区","value":"370812","parent":"370800"},{"name":"微山县","value":"370826","parent":"370800"},{"name":"鱼台县","value":"370827","parent":"370800"},{"name":"金乡县","value":"370828","parent":"370800"},{"name":"嘉祥县","value":"370829","parent":"370800"},{"name":"汶上县","value":"370830","parent":"370800"},{"name":"泗水县","value":"370831","parent":"370800"},{"name":"梁山县","value":"370832","parent":"370800"},{"name":"曲阜市","value":"370881","parent":"370800"},{"name":"邹城市","value":"370883","parent":"370800"},{"name":"泰山区","value":"370902","parent":"370900"},{"name":"岱岳区","value":"370911","parent":"370900"},{"name":"宁阳县","value":"370921","parent":"370900"},{"name":"东平县","value":"370923","parent":"370900"},{"name":"新泰市","value":"370982","parent":"370900"},{"name":"肥城市","value":"370983","parent":"370900"},{"name":"环翠区","value":"371002","parent":"371000"},{"name":"文登区","value":"371003","parent":"371000"},{"name":"荣成市","value":"371082","parent":"371000"},{"name":"乳山市","value":"371083","parent":"371000"},{"name":"东港区","value":"371102","parent":"371100"},{"name":"岚山区","value":"371103","parent":"371100"},{"name":"五莲县","value":"371121","parent":"371100"},{"name":"莒县","value":"371122","parent":"371100"},{"name":"莱城区","value":"371202","parent":"371200"},{"name":"钢城区","value":"371203","parent":"371200"},{"name":"兰山区","value":"371302","parent":"371300"},{"name":"罗庄区","value":"371311","parent":"371300"},{"name":"河东区","value":"371312","parent":"371300"},{"name":"沂南县","value":"371321","parent":"371300"},{"name":"郯城县","value":"371322","parent":"371300"},{"name":"沂水县","value":"371323","parent":"371300"},{"name":"兰陵县","value":"371324","parent":"371300"},{"name":"费县","value":"371325","parent":"371300"},{"name":"平邑县","value":"371326","parent":"371300"},{"name":"莒南县","value":"371327","parent":"371300"},{"name":"蒙阴县","value":"371328","parent":"371300"},{"name":"临沭县","value":"371329","parent":"371300"},{"name":"德城区","value":"371402","parent":"371400"},{"name":"陵城区","value":"371403","parent":"371400"},{"name":"宁津县","value":"371422","parent":"371400"},{"name":"庆云县","value":"371423","parent":"371400"},{"name":"临邑县","value":"371424","parent":"371400"},{"name":"齐河县","value":"371425","parent":"371400"},{"name":"平原县","value":"371426","parent":"371400"},{"name":"夏津县","value":"371427","parent":"371400"},{"name":"武城县","value":"371428","parent":"371400"},{"name":"乐陵市","value":"371481","parent":"371400"},{"name":"禹城市","value":"371482","parent":"371400"},{"name":"东昌府区","value":"371502","parent":"371500"},{"name":"阳谷县","value":"371521","parent":"371500"},{"name":"莘县","value":"371522","parent":"371500"},{"name":"茌平县","value":"371523","parent":"371500"},{"name":"东阿县","value":"371524","parent":"371500"},{"name":"冠县","value":"371525","parent":"371500"},{"name":"高唐县","value":"371526","parent":"371500"},{"name":"临清市","value":"371581","parent":"371500"},{"name":"滨城区","value":"371602","parent":"371600"},{"name":"沾化区","value":"371603","parent":"371600"},{"name":"惠民县","value":"371621","parent":"371600"},{"name":"阳信县","value":"371622","parent":"371600"},{"name":"无棣县","value":"371623","parent":"371600"},{"name":"博兴县","value":"371625","parent":"371600"},{"name":"邹平县","value":"371626","parent":"371600"},{"name":"牡丹区","value":"371702","parent":"371700"},{"name":"曹县","value":"371721","parent":"371700"},{"name":"单县","value":"371722","parent":"371700"},{"name":"成武县","value":"371723","parent":"371700"},{"name":"巨野县","value":"371724","parent":"371700"},{"name":"郓城县","value":"371725","parent":"371700"},{"name":"鄄城县","value":"371726","parent":"371700"},{"name":"定陶县","value":"371727","parent":"371700"},{"name":"东明县","value":"371728","parent":"371700"},{"name":"郑州市","value":"410100","parent":"410000"},{"name":"开封市","value":"410200","parent":"410000"},{"name":"洛阳市","value":"410300","parent":"410000"},{"name":"平顶山市","value":"410400","parent":"410000"},{"name":"安阳市","value":"410500","parent":"410000"},{"name":"鹤壁市","value":"410600","parent":"410000"},{"name":"新乡市","value":"410700","parent":"410000"},{"name":"焦作市","value":"410800","parent":"410000"},{"name":"濮阳市","value":"410900","parent":"410000"},{"name":"许昌市","value":"411000","parent":"410000"},{"name":"漯河市","value":"411100","parent":"410000"},{"name":"三门峡市","value":"411200","parent":"410000"},{"name":"南阳市","value":"411300","parent":"410000"},{"name":"商丘市","value":"411400","parent":"410000"},{"name":"信阳市","value":"411500","parent":"410000"},{"name":"周口市","value":"411600","parent":"410000"},{"name":"驻马店市","value":"411700","parent":"410000"},{"name":"济源市","value":"419001","parent":"410000"},{"name":"中原区","value":"410102","parent":"410100"},{"name":"二七区","value":"410103","parent":"410100"},{"name":"管城回族区","value":"410104","parent":"410100"},{"name":"金水区","value":"410105","parent":"410100"},{"name":"上街区","value":"410106","parent":"410100"},{"name":"惠济区","value":"410108","parent":"410100"},{"name":"中牟县","value":"410122","parent":"410100"},{"name":"巩义市","value":"410181","parent":"410100"},{"name":"荥阳市","value":"410182","parent":"410100"},{"name":"新密市","value":"410183","parent":"410100"},{"name":"新郑市","value":"410184","parent":"410100"},{"name":"登封市","value":"410185","parent":"410100"},{"name":"龙亭区","value":"410202","parent":"410200"},{"name":"顺河回族区","value":"410203","parent":"410200"},{"name":"鼓楼区","value":"410204","parent":"410200"},{"name":"禹王台区","value":"410205","parent":"410200"},{"name":"金明区","value":"410211","parent":"410200"},{"name":"祥符区","value":"410212","parent":"410200"},{"name":"杞县","value":"410221","parent":"410200"},{"name":"通许县","value":"410222","parent":"410200"},{"name":"尉氏县","value":"410223","parent":"410200"},{"name":"兰考县","value":"410225","parent":"410200"},{"name":"老城区","value":"410302","parent":"410300"},{"name":"西工区","value":"410303","parent":"410300"},{"name":"瀍河回族区","value":"410304","parent":"410300"},{"name":"涧西区","value":"410305","parent":"410300"},{"name":"吉利区","value":"410306","parent":"410300"},{"name":"洛龙区","value":"410311","parent":"410300"},{"name":"孟津县","value":"410322","parent":"410300"},{"name":"新安县","value":"410323","parent":"410300"},{"name":"栾川县","value":"410324","parent":"410300"},{"name":"嵩县","value":"410325","parent":"410300"},{"name":"汝阳县","value":"410326","parent":"410300"},{"name":"宜阳县","value":"410327","parent":"410300"},{"name":"洛宁县","value":"410328","parent":"410300"},{"name":"伊川县","value":"410329","parent":"410300"},{"name":"偃师市","value":"410381","parent":"410300"},{"name":"新华区","value":"410402","parent":"410400"},{"name":"卫东区","value":"410403","parent":"410400"},{"name":"石龙区","value":"410404","parent":"410400"},{"name":"湛河区","value":"410411","parent":"410400"},{"name":"宝丰县","value":"410421","parent":"410400"},{"name":"叶县","value":"410422","parent":"410400"},{"name":"鲁山县","value":"410423","parent":"410400"},{"name":"郏县","value":"410425","parent":"410400"},{"name":"舞钢市","value":"410481","parent":"410400"},{"name":"汝州市","value":"410482","parent":"410400"},{"name":"文峰区","value":"410502","parent":"410500"},{"name":"北关区","value":"410503","parent":"410500"},{"name":"殷都区","value":"410505","parent":"410500"},{"name":"龙安区","value":"410506","parent":"410500"},{"name":"安阳县","value":"410522","parent":"410500"},{"name":"汤阴县","value":"410523","parent":"410500"},{"name":"滑县","value":"410526","parent":"410500"},{"name":"内黄县","value":"410527","parent":"410500"},{"name":"林州市","value":"410581","parent":"410500"},{"name":"鹤山区","value":"410602","parent":"410600"},{"name":"山城区","value":"410603","parent":"410600"},{"name":"淇滨区","value":"410611","parent":"410600"},{"name":"浚县","value":"410621","parent":"410600"},{"name":"淇县","value":"410622","parent":"410600"},{"name":"红旗区","value":"410702","parent":"410700"},{"name":"卫滨区","value":"410703","parent":"410700"},{"name":"凤泉区","value":"410704","parent":"410700"},{"name":"牧野区","value":"410711","parent":"410700"},{"name":"新乡县","value":"410721","parent":"410700"},{"name":"获嘉县","value":"410724","parent":"410700"},{"name":"原阳县","value":"410725","parent":"410700"},{"name":"延津县","value":"410726","parent":"410700"},{"name":"封丘县","value":"410727","parent":"410700"},{"name":"长垣县","value":"410728","parent":"410700"},{"name":"卫辉市","value":"410781","parent":"410700"},{"name":"辉县市","value":"410782","parent":"410700"},{"name":"解放区","value":"410802","parent":"410800"},{"name":"中站区","value":"410803","parent":"410800"},{"name":"马村区","value":"410804","parent":"410800"},{"name":"山阳区","value":"410811","parent":"410800"},{"name":"修武县","value":"410821","parent":"410800"},{"name":"博爱县","value":"410822","parent":"410800"},{"name":"武陟县","value":"410823","parent":"410800"},{"name":"温县","value":"410825","parent":"410800"},{"name":"沁阳市","value":"410882","parent":"410800"},{"name":"孟州市","value":"410883","parent":"410800"},{"name":"华龙区","value":"410902","parent":"410900"},{"name":"清丰县","value":"410922","parent":"410900"},{"name":"南乐县","value":"410923","parent":"410900"},{"name":"范县","value":"410926","parent":"410900"},{"name":"台前县","value":"410927","parent":"410900"},{"name":"濮阳县","value":"410928","parent":"410900"},{"name":"魏都区","value":"411002","parent":"411000"},{"name":"许昌县","value":"411023","parent":"411000"},{"name":"鄢陵县","value":"411024","parent":"411000"},{"name":"襄城县","value":"411025","parent":"411000"},{"name":"禹州市","value":"411081","parent":"411000"},{"name":"长葛市","value":"411082","parent":"411000"},{"name":"源汇区","value":"411102","parent":"411100"},{"name":"郾城区","value":"411103","parent":"411100"},{"name":"召陵区","value":"411104","parent":"411100"},{"name":"舞阳县","value":"411121","parent":"411100"},{"name":"临颍县","value":"411122","parent":"411100"},{"name":"湖滨区","value":"411202","parent":"411200"},{"name":"渑池县","value":"411221","parent":"411200"},{"name":"陕县","value":"411222","parent":"411200"},{"name":"卢氏县","value":"411224","parent":"411200"},{"name":"义马市","value":"411281","parent":"411200"},{"name":"灵宝市","value":"411282","parent":"411200"},{"name":"宛城区","value":"411302","parent":"411300"},{"name":"卧龙区","value":"411303","parent":"411300"},{"name":"南召县","value":"411321","parent":"411300"},{"name":"方城县","value":"411322","parent":"411300"},{"name":"西峡县","value":"411323","parent":"411300"},{"name":"镇平县","value":"411324","parent":"411300"},{"name":"内乡县","value":"411325","parent":"411300"},{"name":"淅川县","value":"411326","parent":"411300"},{"name":"社旗县","value":"411327","parent":"411300"},{"name":"唐河县","value":"411328","parent":"411300"},{"name":"新野县","value":"411329","parent":"411300"},{"name":"桐柏县","value":"411330","parent":"411300"},{"name":"邓州市","value":"411381","parent":"411300"},{"name":"梁园区","value":"411402","parent":"411400"},{"name":"睢阳区","value":"411403","parent":"411400"},{"name":"民权县","value":"411421","parent":"411400"},{"name":"睢县","value":"411422","parent":"411400"},{"name":"宁陵县","value":"411423","parent":"411400"},{"name":"柘城县","value":"411424","parent":"411400"},{"name":"虞城县","value":"411425","parent":"411400"},{"name":"夏邑县","value":"411426","parent":"411400"},{"name":"永城市","value":"411481","parent":"411400"},{"name":"浉河区","value":"411502","parent":"411500"},{"name":"平桥区","value":"411503","parent":"411500"},{"name":"罗山县","value":"411521","parent":"411500"},{"name":"光山县","value":"411522","parent":"411500"},{"name":"新县","value":"411523","parent":"411500"},{"name":"商城县","value":"411524","parent":"411500"},{"name":"固始县","value":"411525","parent":"411500"},{"name":"潢川县","value":"411526","parent":"411500"},{"name":"淮滨县","value":"411527","parent":"411500"},{"name":"息县","value":"411528","parent":"411500"},{"name":"川汇区","value":"411602","parent":"411600"},{"name":"扶沟县","value":"411621","parent":"411600"},{"name":"西华县","value":"411622","parent":"411600"},{"name":"商水县","value":"411623","parent":"411600"},{"name":"沈丘县","value":"411624","parent":"411600"},{"name":"郸城县","value":"411625","parent":"411600"},{"name":"淮阳县","value":"411626","parent":"411600"},{"name":"太康县","value":"411627","parent":"411600"},{"name":"鹿邑县","value":"411628","parent":"411600"},{"name":"项城市","value":"411681","parent":"411600"},{"name":"驿城区","value":"411702","parent":"411700"},{"name":"西平县","value":"411721","parent":"411700"},{"name":"上蔡县","value":"411722","parent":"411700"},{"name":"平舆县","value":"411723","parent":"411700"},{"name":"正阳县","value":"411724","parent":"411700"},{"name":"确山县","value":"411725","parent":"411700"},{"name":"泌阳县","value":"411726","parent":"411700"},{"name":"汝南县","value":"411727","parent":"411700"},{"name":"遂平县","value":"411728","parent":"411700"},{"name":"新蔡县","value":"411729","parent":"411700"},{"name":"武汉市","value":"420100","parent":"420000"},{"name":"黄石市","value":"420200","parent":"420000"},{"name":"十堰市","value":"420300","parent":"420000"},{"name":"宜昌市","value":"420500","parent":"420000"},{"name":"襄阳市","value":"420600","parent":"420000"},{"name":"鄂州市","value":"420700","parent":"420000"},{"name":"荆门市","value":"420800","parent":"420000"},{"name":"孝感市","value":"420900","parent":"420000"},{"name":"荆州市","value":"421000","parent":"420000"},{"name":"黄冈市","value":"421100","parent":"420000"},{"name":"咸宁市","value":"421200","parent":"420000"},{"name":"随州市","value":"421300","parent":"420000"},{"name":"恩施土家族苗族自治州","value":"422800","parent":"420000"},{"name":"仙桃市","value":"429004","parent":"420000"},{"name":"潜江市","value":"429005","parent":"420000"},{"name":"天门市","value":"429006","parent":"420000"},{"name":"神农架林区","value":"429021","parent":"420000"},{"name":"江岸区","value":"420102","parent":"420100"},{"name":"江汉区","value":"420103","parent":"420100"},{"name":"硚口区","value":"420104","parent":"420100"},{"name":"汉阳区","value":"420105","parent":"420100"},{"name":"武昌区","value":"420106","parent":"420100"},{"name":"青山区","value":"420107","parent":"420100"},{"name":"洪山区","value":"420111","parent":"420100"},{"name":"东西湖区","value":"420112","parent":"420100"},{"name":"汉南区","value":"420113","parent":"420100"},{"name":"蔡甸区","value":"420114","parent":"420100"},{"name":"江夏区","value":"420115","parent":"420100"},{"name":"黄陂区","value":"420116","parent":"420100"},{"name":"新洲区","value":"420117","parent":"420100"},{"name":"黄石港区","value":"420202","parent":"420200"},{"name":"西塞山区","value":"420203","parent":"420200"},{"name":"下陆区","value":"420204","parent":"420200"},{"name":"铁山区","value":"420205","parent":"420200"},{"name":"阳新县","value":"420222","parent":"420200"},{"name":"大冶市","value":"420281","parent":"420200"},{"name":"茅箭区","value":"420302","parent":"420300"},{"name":"张湾区","value":"420303","parent":"420300"},{"name":"郧阳区","value":"420304","parent":"420300"},{"name":"郧西县","value":"420322","parent":"420300"},{"name":"竹山县","value":"420323","parent":"420300"},{"name":"竹溪县","value":"420324","parent":"420300"},{"name":"房县","value":"420325","parent":"420300"},{"name":"丹江口市","value":"420381","parent":"420300"},{"name":"西陵区","value":"420502","parent":"420500"},{"name":"伍家岗区","value":"420503","parent":"420500"},{"name":"点军区","value":"420504","parent":"420500"},{"name":"猇亭区","value":"420505","parent":"420500"},{"name":"夷陵区","value":"420506","parent":"420500"},{"name":"远安县","value":"420525","parent":"420500"},{"name":"兴山县","value":"420526","parent":"420500"},{"name":"秭归县","value":"420527","parent":"420500"},{"name":"长阳土家族自治县","value":"420528","parent":"420500"},{"name":"五峰土家族自治县","value":"420529","parent":"420500"},{"name":"宜都市","value":"420581","parent":"420500"},{"name":"当阳市","value":"420582","parent":"420500"},{"name":"枝江市","value":"420583","parent":"420500"},{"name":"襄城区","value":"420602","parent":"420600"},{"name":"樊城区","value":"420606","parent":"420600"},{"name":"襄州区","value":"420607","parent":"420600"},{"name":"南漳县","value":"420624","parent":"420600"},{"name":"谷城县","value":"420625","parent":"420600"},{"name":"保康县","value":"420626","parent":"420600"},{"name":"老河口市","value":"420682","parent":"420600"},{"name":"枣阳市","value":"420683","parent":"420600"},{"name":"宜城市","value":"420684","parent":"420600"},{"name":"梁子湖区","value":"420702","parent":"420700"},{"name":"华容区","value":"420703","parent":"420700"},{"name":"鄂城区","value":"420704","parent":"420700"},{"name":"东宝区","value":"420802","parent":"420800"},{"name":"掇刀区","value":"420804","parent":"420800"},{"name":"京山县","value":"420821","parent":"420800"},{"name":"沙洋县","value":"420822","parent":"420800"},{"name":"钟祥市","value":"420881","parent":"420800"},{"name":"孝南区","value":"420902","parent":"420900"},{"name":"孝昌县","value":"420921","parent":"420900"},{"name":"大悟县","value":"420922","parent":"420900"},{"name":"云梦县","value":"420923","parent":"420900"},{"name":"应城市","value":"420981","parent":"420900"},{"name":"安陆市","value":"420982","parent":"420900"},{"name":"汉川市","value":"420984","parent":"420900"},{"name":"沙市区","value":"421002","parent":"421000"},{"name":"荆州区","value":"421003","parent":"421000"},{"name":"公安县","value":"421022","parent":"421000"},{"name":"监利县","value":"421023","parent":"421000"},{"name":"江陵县","value":"421024","parent":"421000"},{"name":"石首市","value":"421081","parent":"421000"},{"name":"洪湖市","value":"421083","parent":"421000"},{"name":"松滋市","value":"421087","parent":"421000"},{"name":"黄州区","value":"421102","parent":"421100"},{"name":"团风县","value":"421121","parent":"421100"},{"name":"红安县","value":"421122","parent":"421100"},{"name":"罗田县","value":"421123","parent":"421100"},{"name":"英山县","value":"421124","parent":"421100"},{"name":"浠水县","value":"421125","parent":"421100"},{"name":"蕲春县","value":"421126","parent":"421100"},{"name":"黄梅县","value":"421127","parent":"421100"},{"name":"麻城市","value":"421181","parent":"421100"},{"name":"武穴市","value":"421182","parent":"421100"},{"name":"咸安区","value":"421202","parent":"421200"},{"name":"嘉鱼县","value":"421221","parent":"421200"},{"name":"通城县","value":"421222","parent":"421200"},{"name":"崇阳县","value":"421223","parent":"421200"},{"name":"通山县","value":"421224","parent":"421200"},{"name":"赤壁市","value":"421281","parent":"421200"},{"name":"曾都区","value":"421303","parent":"421300"},{"name":"随县","value":"421321","parent":"421300"},{"name":"广水市","value":"421381","parent":"421300"},{"name":"恩施市","value":"422801","parent":"422800"},{"name":"利川市","value":"422802","parent":"422800"},{"name":"建始县","value":"422822","parent":"422800"},{"name":"巴东县","value":"422823","parent":"422800"},{"name":"宣恩县","value":"422825","parent":"422800"},{"name":"咸丰县","value":"422826","parent":"422800"},{"name":"来凤县","value":"422827","parent":"422800"},{"name":"鹤峰县","value":"422828","parent":"422800"},{"name":"长沙市","value":"430100","parent":"430000"},{"name":"株洲市","value":"430200","parent":"430000"},{"name":"湘潭市","value":"430300","parent":"430000"},{"name":"衡阳市","value":"430400","parent":"430000"},{"name":"邵阳市","value":"430500","parent":"430000"},{"name":"岳阳市","value":"430600","parent":"430000"},{"name":"常德市","value":"430700","parent":"430000"},{"name":"张家界市","value":"430800","parent":"430000"},{"name":"益阳市","value":"430900","parent":"430000"},{"name":"郴州市","value":"431000","parent":"430000"},{"name":"永州市","value":"431100","parent":"430000"},{"name":"怀化市","value":"431200","parent":"430000"},{"name":"娄底市","value":"431300","parent":"430000"},{"name":"湘西土家族苗族自治州","value":"433100","parent":"430000"},{"name":"芙蓉区","value":"430102","parent":"430100"},{"name":"天心区","value":"430103","parent":"430100"},{"name":"岳麓区","value":"430104","parent":"430100"},{"name":"开福区","value":"430105","parent":"430100"},{"name":"雨花区","value":"430111","parent":"430100"},{"name":"望城区","value":"430112","parent":"430100"},{"name":"长沙县","value":"430121","parent":"430100"},{"name":"宁乡县","value":"430124","parent":"430100"},{"name":"浏阳市","value":"430181","parent":"430100"},{"name":"荷塘区","value":"430202","parent":"430200"},{"name":"芦淞区","value":"430203","parent":"430200"},{"name":"石峰区","value":"430204","parent":"430200"},{"name":"天元区","value":"430211","parent":"430200"},{"name":"株洲县","value":"430221","parent":"430200"},{"name":"攸县","value":"430223","parent":"430200"},{"name":"茶陵县","value":"430224","parent":"430200"},{"name":"炎陵县","value":"430225","parent":"430200"},{"name":"醴陵市","value":"430281","parent":"430200"},{"name":"雨湖区","value":"430302","parent":"430300"},{"name":"岳塘区","value":"430304","parent":"430300"},{"name":"湘潭县","value":"430321","parent":"430300"},{"name":"湘乡市","value":"430381","parent":"430300"},{"name":"韶山市","value":"430382","parent":"430300"},{"name":"珠晖区","value":"430405","parent":"430400"},{"name":"雁峰区","value":"430406","parent":"430400"},{"name":"石鼓区","value":"430407","parent":"430400"},{"name":"蒸湘区","value":"430408","parent":"430400"},{"name":"南岳区","value":"430412","parent":"430400"},{"name":"衡阳县","value":"430421","parent":"430400"},{"name":"衡南县","value":"430422","parent":"430400"},{"name":"衡山县","value":"430423","parent":"430400"},{"name":"衡东县","value":"430424","parent":"430400"},{"name":"祁东县","value":"430426","parent":"430400"},{"name":"耒阳市","value":"430481","parent":"430400"},{"name":"常宁市","value":"430482","parent":"430400"},{"name":"双清区","value":"430502","parent":"430500"},{"name":"大祥区","value":"430503","parent":"430500"},{"name":"北塔区","value":"430511","parent":"430500"},{"name":"邵东县","value":"430521","parent":"430500"},{"name":"新邵县","value":"430522","parent":"430500"},{"name":"邵阳县","value":"430523","parent":"430500"},{"name":"隆回县","value":"430524","parent":"430500"},{"name":"洞口县","value":"430525","parent":"430500"},{"name":"绥宁县","value":"430527","parent":"430500"},{"name":"新宁县","value":"430528","parent":"430500"},{"name":"城步苗族自治县","value":"430529","parent":"430500"},{"name":"武冈市","value":"430581","parent":"430500"},{"name":"岳阳楼区","value":"430602","parent":"430600"},{"name":"云溪区","value":"430603","parent":"430600"},{"name":"君山区","value":"430611","parent":"430600"},{"name":"岳阳县","value":"430621","parent":"430600"},{"name":"华容县","value":"430623","parent":"430600"},{"name":"湘阴县","value":"430624","parent":"430600"},{"name":"平江县","value":"430626","parent":"430600"},{"name":"汨罗市","value":"430681","parent":"430600"},{"name":"临湘市","value":"430682","parent":"430600"},{"name":"武陵区","value":"430702","parent":"430700"},{"name":"鼎城区","value":"430703","parent":"430700"},{"name":"安乡县","value":"430721","parent":"430700"},{"name":"汉寿县","value":"430722","parent":"430700"},{"name":"澧县","value":"430723","parent":"430700"},{"name":"临澧县","value":"430724","parent":"430700"},{"name":"桃源县","value":"430725","parent":"430700"},{"name":"石门县","value":"430726","parent":"430700"},{"name":"津市市","value":"430781","parent":"430700"},{"name":"永定区","value":"430802","parent":"430800"},{"name":"武陵源区","value":"430811","parent":"430800"},{"name":"慈利县","value":"430821","parent":"430800"},{"name":"桑植县","value":"430822","parent":"430800"},{"name":"资阳区","value":"430902","parent":"430900"},{"name":"赫山区","value":"430903","parent":"430900"},{"name":"南县","value":"430921","parent":"430900"},{"name":"桃江县","value":"430922","parent":"430900"},{"name":"安化县","value":"430923","parent":"430900"},{"name":"沅江市","value":"430981","parent":"430900"},{"name":"北湖区","value":"431002","parent":"431000"},{"name":"苏仙区","value":"431003","parent":"431000"},{"name":"桂阳县","value":"431021","parent":"431000"},{"name":"宜章县","value":"431022","parent":"431000"},{"name":"永兴县","value":"431023","parent":"431000"},{"name":"嘉禾县","value":"431024","parent":"431000"},{"name":"临武县","value":"431025","parent":"431000"},{"name":"汝城县","value":"431026","parent":"431000"},{"name":"桂东县","value":"431027","parent":"431000"},{"name":"安仁县","value":"431028","parent":"431000"},{"name":"资兴市","value":"431081","parent":"431000"},{"name":"零陵区","value":"431102","parent":"431100"},{"name":"冷水滩区","value":"431103","parent":"431100"},{"name":"祁阳县","value":"431121","parent":"431100"},{"name":"东安县","value":"431122","parent":"431100"},{"name":"双牌县","value":"431123","parent":"431100"},{"name":"道县","value":"431124","parent":"431100"},{"name":"江永县","value":"431125","parent":"431100"},{"name":"宁远县","value":"431126","parent":"431100"},{"name":"蓝山县","value":"431127","parent":"431100"},{"name":"新田县","value":"431128","parent":"431100"},{"name":"江华瑶族自治县","value":"431129","parent":"431100"},{"name":"鹤城区","value":"431202","parent":"431200"},{"name":"中方县","value":"431221","parent":"431200"},{"name":"沅陵县","value":"431222","parent":"431200"},{"name":"辰溪县","value":"431223","parent":"431200"},{"name":"溆浦县","value":"431224","parent":"431200"},{"name":"会同县","value":"431225","parent":"431200"},{"name":"麻阳苗族自治县","value":"431226","parent":"431200"},{"name":"新晃侗族自治县","value":"431227","parent":"431200"},{"name":"芷江侗族自治县","value":"431228","parent":"431200"},{"name":"靖州苗族侗族自治县","value":"431229","parent":"431200"},{"name":"通道侗族自治县","value":"431230","parent":"431200"},{"name":"洪江市","value":"431281","parent":"431200"},{"name":"娄星区","value":"431302","parent":"431300"},{"name":"双峰县","value":"431321","parent":"431300"},{"name":"新化县","value":"431322","parent":"431300"},{"name":"冷水江市","value":"431381","parent":"431300"},{"name":"涟源市","value":"431382","parent":"431300"},{"name":"吉首市","value":"433101","parent":"433100"},{"name":"泸溪县","value":"433122","parent":"433100"},{"name":"凤凰县","value":"433123","parent":"433100"},{"name":"花垣县","value":"433124","parent":"433100"},{"name":"保靖县","value":"433125","parent":"433100"},{"name":"古丈县","value":"433126","parent":"433100"},{"name":"永顺县","value":"433127","parent":"433100"},{"name":"龙山县","value":"433130","parent":"433100"},{"name":"广州市","value":"440100","parent":"440000"},{"name":"韶关市","value":"440200","parent":"440000"},{"name":"深圳市","value":"440300","parent":"440000"},{"name":"珠海市","value":"440400","parent":"440000"},{"name":"汕头市","value":"440500","parent":"440000"},{"name":"佛山市","value":"440600","parent":"440000"},{"name":"江门市","value":"440700","parent":"440000"},{"name":"湛江市","value":"440800","parent":"440000"},{"name":"茂名市","value":"440900","parent":"440000"},{"name":"肇庆市","value":"441200","parent":"440000"},{"name":"惠州市","value":"441300","parent":"440000"},{"name":"梅州市","value":"441400","parent":"440000"},{"name":"汕尾市","value":"441500","parent":"440000"},{"name":"河源市","value":"441600","parent":"440000"},{"name":"阳江市","value":"441700","parent":"440000"},{"name":"清远市","value":"441800","parent":"440000"},{"name":"东莞市","value":"441900","parent":"440000"},{"name":"中山市","value":"442000","parent":"440000"},{"name":"潮州市","value":"445100","parent":"440000"},{"name":"揭阳市","value":"445200","parent":"440000"},{"name":"云浮市","value":"445300","parent":"440000"},{"name":"荔湾区","value":"440103","parent":"440100"},{"name":"越秀区","value":"440104","parent":"440100"},{"name":"海珠区","value":"440105","parent":"440100"},{"name":"天河区","value":"440106","parent":"440100"},{"name":"白云区","value":"440111","parent":"440100"},{"name":"黄埔区","value":"440112","parent":"440100"},{"name":"番禺区","value":"440113","parent":"440100"},{"name":"花都区","value":"440114","parent":"440100"},{"name":"南沙区","value":"440115","parent":"440100"},{"name":"从化区","value":"440117","parent":"440100"},{"name":"增城区","value":"440118","parent":"440100"},{"name":"武江区","value":"440203","parent":"440200"},{"name":"浈江区","value":"440204","parent":"440200"},{"name":"曲江区","value":"440205","parent":"440200"},{"name":"始兴县","value":"440222","parent":"440200"},{"name":"仁化县","value":"440224","parent":"440200"},{"name":"翁源县","value":"440229","parent":"440200"},{"name":"乳源瑶族自治县","value":"440232","parent":"440200"},{"name":"新丰县","value":"440233","parent":"440200"},{"name":"乐昌市","value":"440281","parent":"440200"},{"name":"南雄市","value":"440282","parent":"440200"},{"name":"罗湖区","value":"440303","parent":"440300"},{"name":"福田区","value":"440304","parent":"440300"},{"name":"南山区","value":"440305","parent":"440300"},{"name":"宝安区","value":"440306","parent":"440300"},{"name":"龙岗区","value":"440307","parent":"440300"},{"name":"盐田区","value":"440308","parent":"440300"},{"name":"香洲区","value":"440402","parent":"440400"},{"name":"斗门区","value":"440403","parent":"440400"},{"name":"金湾区","value":"440404","parent":"440400"},{"name":"龙湖区","value":"440507","parent":"440500"},{"name":"金平区","value":"440511","parent":"440500"},{"name":"濠江区","value":"440512","parent":"440500"},{"name":"潮阳区","value":"440513","parent":"440500"},{"name":"潮南区","value":"440514","parent":"440500"},{"name":"澄海区","value":"440515","parent":"440500"},{"name":"南澳县","value":"440523","parent":"440500"},{"name":"禅城区","value":"440604","parent":"440600"},{"name":"南海区","value":"440605","parent":"440600"},{"name":"顺德区","value":"440606","parent":"440600"},{"name":"三水区","value":"440607","parent":"440600"},{"name":"高明区","value":"440608","parent":"440600"},{"name":"蓬江区","value":"440703","parent":"440700"},{"name":"江海区","value":"440704","parent":"440700"},{"name":"新会区","value":"440705","parent":"440700"},{"name":"台山市","value":"440781","parent":"440700"},{"name":"开平市","value":"440783","parent":"440700"},{"name":"鹤山市","value":"440784","parent":"440700"},{"name":"恩平市","value":"440785","parent":"440700"},{"name":"赤坎区","value":"440802","parent":"440800"},{"name":"霞山区","value":"440803","parent":"440800"},{"name":"坡头区","value":"440804","parent":"440800"},{"name":"麻章区","value":"440811","parent":"440800"},{"name":"遂溪县","value":"440823","parent":"440800"},{"name":"徐闻县","value":"440825","parent":"440800"},{"name":"廉江市","value":"440881","parent":"440800"},{"name":"雷州市","value":"440882","parent":"440800"},{"name":"吴川市","value":"440883","parent":"440800"},{"name":"茂南区","value":"440902","parent":"440900"},{"name":"电白区","value":"440904","parent":"440900"},{"name":"高州市","value":"440981","parent":"440900"},{"name":"化州市","value":"440982","parent":"440900"},{"name":"信宜市","value":"440983","parent":"440900"},{"name":"端州区","value":"441202","parent":"441200"},{"name":"鼎湖区","value":"441203","parent":"441200"},{"name":"高要区","value":"441204","parent":"441200"},{"name":"广宁县","value":"441223","parent":"441200"},{"name":"怀集县","value":"441224","parent":"441200"},{"name":"封开县","value":"441225","parent":"441200"},{"name":"德庆县","value":"441226","parent":"441200"},{"name":"四会市","value":"441284","parent":"441200"},{"name":"惠城区","value":"441302","parent":"441300"},{"name":"惠阳区","value":"441303","parent":"441300"},{"name":"博罗县","value":"441322","parent":"441300"},{"name":"惠东县","value":"441323","parent":"441300"},{"name":"龙门县","value":"441324","parent":"441300"},{"name":"梅江区","value":"441402","parent":"441400"},{"name":"梅县区","value":"441403","parent":"441400"},{"name":"大埔县","value":"441422","parent":"441400"},{"name":"丰顺县","value":"441423","parent":"441400"},{"name":"五华县","value":"441424","parent":"441400"},{"name":"平远县","value":"441426","parent":"441400"},{"name":"蕉岭县","value":"441427","parent":"441400"},{"name":"兴宁市","value":"441481","parent":"441400"},{"name":"城区","value":"441502","parent":"441500"},{"name":"海丰县","value":"441521","parent":"441500"},{"name":"陆河县","value":"441523","parent":"441500"},{"name":"陆丰市","value":"441581","parent":"441500"},{"name":"源城区","value":"441602","parent":"441600"},{"name":"紫金县","value":"441621","parent":"441600"},{"name":"龙川县","value":"441622","parent":"441600"},{"name":"连平县","value":"441623","parent":"441600"},{"name":"和平县","value":"441624","parent":"441600"},{"name":"东源县","value":"441625","parent":"441600"},{"name":"江城区","value":"441702","parent":"441700"},{"name":"阳东区","value":"441704","parent":"441700"},{"name":"阳西县","value":"441721","parent":"441700"},{"name":"阳春市","value":"441781","parent":"441700"},{"name":"清城区","value":"441802","parent":"441800"},{"name":"清新区","value":"441803","parent":"441800"},{"name":"佛冈县","value":"441821","parent":"441800"},{"name":"阳山县","value":"441823","parent":"441800"},{"name":"连山壮族瑶族自治县","value":"441825","parent":"441800"},{"name":"连南瑶族自治县","value":"441826","parent":"441800"},{"name":"英德市","value":"441881","parent":"441800"},{"name":"连州市","value":"441882","parent":"441800"},{"name":"湘桥区","value":"445102","parent":"445100"},{"name":"潮安区","value":"445103","parent":"445100"},{"name":"饶平县","value":"445122","parent":"445100"},{"name":"榕城区","value":"445202","parent":"445200"},{"name":"揭东区","value":"445203","parent":"445200"},{"name":"揭西县","value":"445222","parent":"445200"},{"name":"惠来县","value":"445224","parent":"445200"},{"name":"普宁市","value":"445281","parent":"445200"},{"name":"云城区","value":"445302","parent":"445300"},{"name":"云安区","value":"445303","parent":"445300"},{"name":"新兴县","value":"445321","parent":"445300"},{"name":"郁南县","value":"445322","parent":"445300"},{"name":"罗定市","value":"445381","parent":"445300"},{"name":"南宁市","value":"450100","parent":"450000"},{"name":"柳州市","value":"450200","parent":"450000"},{"name":"桂林市","value":"450300","parent":"450000"},{"name":"梧州市","value":"450400","parent":"450000"},{"name":"北海市","value":"450500","parent":"450000"},{"name":"防城港市","value":"450600","parent":"450000"},{"name":"钦州市","value":"450700","parent":"450000"},{"name":"贵港市","value":"450800","parent":"450000"},{"name":"玉林市","value":"450900","parent":"450000"},{"name":"百色市","value":"451000","parent":"450000"},{"name":"贺州市","value":"451100","parent":"450000"},{"name":"河池市","value":"451200","parent":"450000"},{"name":"来宾市","value":"451300","parent":"450000"},{"name":"崇左市","value":"451400","parent":"450000"},{"name":"兴宁区","value":"450102","parent":"450100"},{"name":"青秀区","value":"450103","parent":"450100"},{"name":"江南区","value":"450105","parent":"450100"},{"name":"西乡塘区","value":"450107","parent":"450100"},{"name":"良庆区","value":"450108","parent":"450100"},{"name":"邕宁区","value":"450109","parent":"450100"},{"name":"武鸣区","value":"450110","parent":"450100"},{"name":"隆安县","value":"450123","parent":"450100"},{"name":"马山县","value":"450124","parent":"450100"},{"name":"上林县","value":"450125","parent":"450100"},{"name":"宾阳县","value":"450126","parent":"450100"},{"name":"横县","value":"450127","parent":"450100"},{"name":"城中区","value":"450202","parent":"450200"},{"name":"鱼峰区","value":"450203","parent":"450200"},{"name":"柳南区","value":"450204","parent":"450200"},{"name":"柳北区","value":"450205","parent":"450200"},{"name":"柳江县","value":"450221","parent":"450200"},{"name":"柳城县","value":"450222","parent":"450200"},{"name":"鹿寨县","value":"450223","parent":"450200"},{"name":"融安县","value":"450224","parent":"450200"},{"name":"融水苗族自治县","value":"450225","parent":"450200"},{"name":"三江侗族自治县","value":"450226","parent":"450200"},{"name":"秀峰区","value":"450302","parent":"450300"},{"name":"叠彩区","value":"450303","parent":"450300"},{"name":"象山区","value":"450304","parent":"450300"},{"name":"七星区","value":"450305","parent":"450300"},{"name":"雁山区","value":"450311","parent":"450300"},{"name":"临桂区","value":"450312","parent":"450300"},{"name":"阳朔县","value":"450321","parent":"450300"},{"name":"灵川县","value":"450323","parent":"450300"},{"name":"全州县","value":"450324","parent":"450300"},{"name":"兴安县","value":"450325","parent":"450300"},{"name":"永福县","value":"450326","parent":"450300"},{"name":"灌阳县","value":"450327","parent":"450300"},{"name":"龙胜各族自治县","value":"450328","parent":"450300"},{"name":"资源县","value":"450329","parent":"450300"},{"name":"平乐县","value":"450330","parent":"450300"},{"name":"荔浦县","value":"450331","parent":"450300"},{"name":"恭城瑶族自治县","value":"450332","parent":"450300"},{"name":"万秀区","value":"450403","parent":"450400"},{"name":"长洲区","value":"450405","parent":"450400"},{"name":"龙圩区","value":"450406","parent":"450400"},{"name":"苍梧县","value":"450421","parent":"450400"},{"name":"藤县","value":"450422","parent":"450400"},{"name":"蒙山县","value":"450423","parent":"450400"},{"name":"岑溪市","value":"450481","parent":"450400"},{"name":"海城区","value":"450502","parent":"450500"},{"name":"银海区","value":"450503","parent":"450500"},{"name":"铁山港区","value":"450512","parent":"450500"},{"name":"合浦县","value":"450521","parent":"450500"},{"name":"港口区","value":"450602","parent":"450600"},{"name":"防城区","value":"450603","parent":"450600"},{"name":"上思县","value":"450621","parent":"450600"},{"name":"东兴市","value":"450681","parent":"450600"},{"name":"钦南区","value":"450702","parent":"450700"},{"name":"钦北区","value":"450703","parent":"450700"},{"name":"灵山县","value":"450721","parent":"450700"},{"name":"浦北县","value":"450722","parent":"450700"},{"name":"港北区","value":"450802","parent":"450800"},{"name":"港南区","value":"450803","parent":"450800"},{"name":"覃塘区","value":"450804","parent":"450800"},{"name":"平南县","value":"450821","parent":"450800"},{"name":"桂平市","value":"450881","parent":"450800"},{"name":"玉州区","value":"450902","parent":"450900"},{"name":"福绵区","value":"450903","parent":"450900"},{"name":"容县","value":"450921","parent":"450900"},{"name":"陆川县","value":"450922","parent":"450900"},{"name":"博白县","value":"450923","parent":"450900"},{"name":"兴业县","value":"450924","parent":"450900"},{"name":"北流市","value":"450981","parent":"450900"},{"name":"右江区","value":"451002","parent":"451000"},{"name":"田阳县","value":"451021","parent":"451000"},{"name":"田东县","value":"451022","parent":"451000"},{"name":"平果县","value":"451023","parent":"451000"},{"name":"德保县","value":"451024","parent":"451000"},{"name":"那坡县","value":"451026","parent":"451000"},{"name":"凌云县","value":"451027","parent":"451000"},{"name":"乐业县","value":"451028","parent":"451000"},{"name":"田林县","value":"451029","parent":"451000"},{"name":"西林县","value":"451030","parent":"451000"},{"name":"隆林各族自治县","value":"451031","parent":"451000"},{"name":"靖西市","value":"451081","parent":"451000"},{"name":"八步区","value":"451102","parent":"451100"},{"name":"昭平县","value":"451121","parent":"451100"},{"name":"钟山县","value":"451122","parent":"451100"},{"name":"富川瑶族自治县","value":"451123","parent":"451100"},{"name":"金城江区","value":"451202","parent":"451200"},{"name":"南丹县","value":"451221","parent":"451200"},{"name":"天峨县","value":"451222","parent":"451200"},{"name":"凤山县","value":"451223","parent":"451200"},{"name":"东兰县","value":"451224","parent":"451200"},{"name":"罗城仫佬族自治县","value":"451225","parent":"451200"},{"name":"环江毛南族自治县","value":"451226","parent":"451200"},{"name":"巴马瑶族自治县","value":"451227","parent":"451200"},{"name":"都安瑶族自治县","value":"451228","parent":"451200"},{"name":"大化瑶族自治县","value":"451229","parent":"451200"},{"name":"宜州市","value":"451281","parent":"451200"},{"name":"兴宾区","value":"451302","parent":"451300"},{"name":"忻城县","value":"451321","parent":"451300"},{"name":"象州县","value":"451322","parent":"451300"},{"name":"武宣县","value":"451323","parent":"451300"},{"name":"金秀瑶族自治县","value":"451324","parent":"451300"},{"name":"合山市","value":"451381","parent":"451300"},{"name":"江州区","value":"451402","parent":"451400"},{"name":"扶绥县","value":"451421","parent":"451400"},{"name":"宁明县","value":"451422","parent":"451400"},{"name":"龙州县","value":"451423","parent":"451400"},{"name":"大新县","value":"451424","parent":"451400"},{"name":"天等县","value":"451425","parent":"451400"},{"name":"凭祥市","value":"451481","parent":"451400"},{"name":"海口市","value":"460100","parent":"460000"},{"name":"三亚市","value":"460200","parent":"460000"},{"name":"三沙市","value":"460300","parent":"460000"},{"name":"五指山市","value":"469001","parent":"460000"},{"name":"琼海市","value":"469002","parent":"460000"},{"name":"儋州市","value":"469003","parent":"460000"},{"name":"文昌市","value":"469005","parent":"460000"},{"name":"万宁市","value":"469006","parent":"460000"},{"name":"东方市","value":"469007","parent":"460000"},{"name":"定安县","value":"469021","parent":"460000"},{"name":"屯昌县","value":"469022","parent":"460000"},{"name":"澄迈县","value":"469023","parent":"460000"},{"name":"临高县","value":"469024","parent":"460000"},{"name":"白沙黎族自治县","value":"469025","parent":"460000"},{"name":"昌江黎族自治县","value":"469026","parent":"460000"},{"name":"乐东黎族自治县","value":"469027","parent":"460000"},{"name":"陵水黎族自治县","value":"469028","parent":"460000"},{"name":"保亭黎族苗族自治县","value":"469029","parent":"460000"},{"name":"琼中黎族苗族自治县","value":"469030","parent":"460000"},{"name":"秀英区","value":"460105","parent":"460100"},{"name":"龙华区","value":"460106","parent":"460100"},{"name":"琼山区","value":"460107","parent":"460100"},{"name":"美兰区","value":"460108","parent":"460100"},{"name":"海棠区","value":"460202","parent":"460200"},{"name":"吉阳区","value":"460203","parent":"460200"},{"name":"天涯区","value":"460204","parent":"460200"},{"name":"崖州区","value":"460205","parent":"460200"},{"name":"西沙群岛","value":"460321","parent":"460300"},{"name":"南沙群岛","value":"460322","parent":"460300"},{"name":"中沙群岛的岛礁及其海域","value":"460323","parent":"460300"},{"name":"市辖区","value":"500100","parent":"500000"},{"name":"万州区","value":"500101","parent":"500100"},{"name":"涪陵区","value":"500102","parent":"500100"},{"name":"渝中区","value":"500103","parent":"500100"},{"name":"大渡口区","value":"500104","parent":"500100"},{"name":"江北区","value":"500105","parent":"500100"},{"name":"沙坪坝区","value":"500106","parent":"500100"},{"name":"九龙坡区","value":"500107","parent":"500100"},{"name":"南岸区","value":"500108","parent":"500100"},{"name":"北碚区","value":"500109","parent":"500100"},{"name":"綦江区","value":"500110","parent":"500100"},{"name":"大足区","value":"500111","parent":"500100"},{"name":"渝北区","value":"500112","parent":"500100"},{"name":"巴南区","value":"500113","parent":"500100"},{"name":"黔江区","value":"500114","parent":"500100"},{"name":"长寿区","value":"500115","parent":"500100"},{"name":"江津区","value":"500116","parent":"500100"},{"name":"合川区","value":"500117","parent":"500100"},{"name":"永川区","value":"500118","parent":"500100"},{"name":"南川区","value":"500119","parent":"500100"},{"name":"璧山区","value":"500120","parent":"500100"},{"name":"铜梁区","value":"500151","parent":"500100"},{"name":"潼南区","value":"500152","parent":"500100"},{"name":"荣昌区","value":"500153","parent":"500100"},{"name":"梁平县","value":"500228","parent":"500100"},{"name":"城口县","value":"500229","parent":"500100"},{"name":"丰都县","value":"500230","parent":"500100"},{"name":"垫江县","value":"500231","parent":"500100"},{"name":"武隆县","value":"500232","parent":"500100"},{"name":"忠县","value":"500233","parent":"500100"},{"name":"开县","value":"500234","parent":"500100"},{"name":"云阳县","value":"500235","parent":"500100"},{"name":"奉节县","value":"500236","parent":"500100"},{"name":"巫山县","value":"500237","parent":"500100"},{"name":"巫溪县","value":"500238","parent":"500100"},{"name":"石柱土家族自治县","value":"500240","parent":"500100"},{"name":"秀山土家族苗族自治县","value":"500241","parent":"500100"},{"name":"酉阳土家族苗族自治县","value":"500242","parent":"500100"},{"name":"彭水苗族土家族自治县","value":"500243","parent":"500100"},{"name":"成都市","value":"510100","parent":"510000"},{"name":"自贡市","value":"510300","parent":"510000"},{"name":"攀枝花市","value":"510400","parent":"510000"},{"name":"泸州市","value":"510500","parent":"510000"},{"name":"德阳市","value":"510600","parent":"510000"},{"name":"绵阳市","value":"510700","parent":"510000"},{"name":"广元市","value":"510800","parent":"510000"},{"name":"遂宁市","value":"510900","parent":"510000"},{"name":"内江市","value":"511000","parent":"510000"},{"name":"乐山市","value":"511100","parent":"510000"},{"name":"南充市","value":"511300","parent":"510000"},{"name":"眉山市","value":"511400","parent":"510000"},{"name":"宜宾市","value":"511500","parent":"510000"},{"name":"广安市","value":"511600","parent":"510000"},{"name":"达州市","value":"511700","parent":"510000"},{"name":"雅安市","value":"511800","parent":"510000"},{"name":"巴中市","value":"511900","parent":"510000"},{"name":"资阳市","value":"512000","parent":"510000"},{"name":"阿坝藏族羌族自治州","value":"513200","parent":"510000"},{"name":"甘孜藏族自治州","value":"513300","parent":"510000"},{"name":"凉山彝族自治州","value":"513400","parent":"510000"},{"name":"锦江区","value":"510104","parent":"510100"},{"name":"青羊区","value":"510105","parent":"510100"},{"name":"金牛区","value":"510106","parent":"510100"},{"name":"武侯区","value":"510107","parent":"510100"},{"name":"成华区","value":"510108","parent":"510100"},{"name":"龙泉驿区","value":"510112","parent":"510100"},{"name":"青白江区","value":"510113","parent":"510100"},{"name":"新都区","value":"510114","parent":"510100"},{"name":"温江区","value":"510115","parent":"510100"},{"name":"金堂县","value":"510121","parent":"510100"},{"name":"双流县","value":"510122","parent":"510100"},{"name":"郫县","value":"510124","parent":"510100"},{"name":"大邑县","value":"510129","parent":"510100"},{"name":"蒲江县","value":"510131","parent":"510100"},{"name":"新津县","value":"510132","parent":"510100"},{"name":"都江堰市","value":"510181","parent":"510100"},{"name":"彭州市","value":"510182","parent":"510100"},{"name":"邛崃市","value":"510183","parent":"510100"},{"name":"崇州市","value":"510184","parent":"510100"},{"name":"自流井区","value":"510302","parent":"510300"},{"name":"贡井区","value":"510303","parent":"510300"},{"name":"大安区","value":"510304","parent":"510300"},{"name":"沿滩区","value":"510311","parent":"510300"},{"name":"荣县","value":"510321","parent":"510300"},{"name":"富顺县","value":"510322","parent":"510300"},{"name":"东区","value":"510402","parent":"510400"},{"name":"西区","value":"510403","parent":"510400"},{"name":"仁和区","value":"510411","parent":"510400"},{"name":"米易县","value":"510421","parent":"510400"},{"name":"盐边县","value":"510422","parent":"510400"},{"name":"江阳区","value":"510502","parent":"510500"},{"name":"纳溪区","value":"510503","parent":"510500"},{"name":"龙马潭区","value":"510504","parent":"510500"},{"name":"泸县","value":"510521","parent":"510500"},{"name":"合江县","value":"510522","parent":"510500"},{"name":"叙永县","value":"510524","parent":"510500"},{"name":"古蔺县","value":"510525","parent":"510500"},{"name":"旌阳区","value":"510603","parent":"510600"},{"name":"中江县","value":"510623","parent":"510600"},{"name":"罗江县","value":"510626","parent":"510600"},{"name":"广汉市","value":"510681","parent":"510600"},{"name":"什邡市","value":"510682","parent":"510600"},{"name":"绵竹市","value":"510683","parent":"510600"},{"name":"涪城区","value":"510703","parent":"510700"},{"name":"游仙区","value":"510704","parent":"510700"},{"name":"三台县","value":"510722","parent":"510700"},{"name":"盐亭县","value":"510723","parent":"510700"},{"name":"安县","value":"510724","parent":"510700"},{"name":"梓潼县","value":"510725","parent":"510700"},{"name":"北川羌族自治县","value":"510726","parent":"510700"},{"name":"平武县","value":"510727","parent":"510700"},{"name":"江油市","value":"510781","parent":"510700"},{"name":"利州区","value":"510802","parent":"510800"},{"name":"昭化区","value":"510811","parent":"510800"},{"name":"朝天区","value":"510812","parent":"510800"},{"name":"旺苍县","value":"510821","parent":"510800"},{"name":"青川县","value":"510822","parent":"510800"},{"name":"剑阁县","value":"510823","parent":"510800"},{"name":"苍溪县","value":"510824","parent":"510800"},{"name":"船山区","value":"510903","parent":"510900"},{"name":"安居区","value":"510904","parent":"510900"},{"name":"蓬溪县","value":"510921","parent":"510900"},{"name":"射洪县","value":"510922","parent":"510900"},{"name":"大英县","value":"510923","parent":"510900"},{"name":"市中区","value":"511002","parent":"511000"},{"name":"东兴区","value":"511011","parent":"511000"},{"name":"威远县","value":"511024","parent":"511000"},{"name":"资中县","value":"511025","parent":"511000"},{"name":"隆昌县","value":"511028","parent":"511000"},{"name":"市中区","value":"511102","parent":"511100"},{"name":"沙湾区","value":"511111","parent":"511100"},{"name":"五通桥区","value":"511112","parent":"511100"},{"name":"金口河区","value":"511113","parent":"511100"},{"name":"犍为县","value":"511123","parent":"511100"},{"name":"井研县","value":"511124","parent":"511100"},{"name":"夹江县","value":"511126","parent":"511100"},{"name":"沐川县","value":"511129","parent":"511100"},{"name":"峨边彝族自治县","value":"511132","parent":"511100"},{"name":"马边彝族自治县","value":"511133","parent":"511100"},{"name":"峨眉山市","value":"511181","parent":"511100"},{"name":"顺庆区","value":"511302","parent":"511300"},{"name":"高坪区","value":"511303","parent":"511300"},{"name":"嘉陵区","value":"511304","parent":"511300"},{"name":"南部县","value":"511321","parent":"511300"},{"name":"营山县","value":"511322","parent":"511300"},{"name":"蓬安县","value":"511323","parent":"511300"},{"name":"仪陇县","value":"511324","parent":"511300"},{"name":"西充县","value":"511325","parent":"511300"},{"name":"阆中市","value":"511381","parent":"511300"},{"name":"东坡区","value":"511402","parent":"511400"},{"name":"彭山区","value":"511403","parent":"511400"},{"name":"仁寿县","value":"511421","parent":"511400"},{"name":"洪雅县","value":"511423","parent":"511400"},{"name":"丹棱县","value":"511424","parent":"511400"},{"name":"青神县","value":"511425","parent":"511400"},{"name":"翠屏区","value":"511502","parent":"511500"},{"name":"南溪区","value":"511503","parent":"511500"},{"name":"宜宾县","value":"511521","parent":"511500"},{"name":"江安县","value":"511523","parent":"511500"},{"name":"长宁县","value":"511524","parent":"511500"},{"name":"高县","value":"511525","parent":"511500"},{"name":"珙县","value":"511526","parent":"511500"},{"name":"筠连县","value":"511527","parent":"511500"},{"name":"兴文县","value":"511528","parent":"511500"},{"name":"屏山县","value":"511529","parent":"511500"},{"name":"广安区","value":"511602","parent":"511600"},{"name":"前锋区","value":"511603","parent":"511600"},{"name":"岳池县","value":"511621","parent":"511600"},{"name":"武胜县","value":"511622","parent":"511600"},{"name":"邻水县","value":"511623","parent":"511600"},{"name":"华蓥市","value":"511681","parent":"511600"},{"name":"通川区","value":"511702","parent":"511700"},{"name":"达川区","value":"511703","parent":"511700"},{"name":"宣汉县","value":"511722","parent":"511700"},{"name":"开江县","value":"511723","parent":"511700"},{"name":"大竹县","value":"511724","parent":"511700"},{"name":"渠县","value":"511725","parent":"511700"},{"name":"万源市","value":"511781","parent":"511700"},{"name":"雨城区","value":"511802","parent":"511800"},{"name":"名山区","value":"511803","parent":"511800"},{"name":"荥经县","value":"511822","parent":"511800"},{"name":"汉源县","value":"511823","parent":"511800"},{"name":"石棉县","value":"511824","parent":"511800"},{"name":"天全县","value":"511825","parent":"511800"},{"name":"芦山县","value":"511826","parent":"511800"},{"name":"宝兴县","value":"511827","parent":"511800"},{"name":"巴州区","value":"511902","parent":"511900"},{"name":"恩阳区","value":"511903","parent":"511900"},{"name":"通江县","value":"511921","parent":"511900"},{"name":"南江县","value":"511922","parent":"511900"},{"name":"平昌县","value":"511923","parent":"511900"},{"name":"雁江区","value":"512002","parent":"512000"},{"name":"安岳县","value":"512021","parent":"512000"},{"name":"乐至县","value":"512022","parent":"512000"},{"name":"简阳市","value":"512081","parent":"512000"},{"name":"汶川县","value":"513221","parent":"513200"},{"name":"理县","value":"513222","parent":"513200"},{"name":"茂县","value":"513223","parent":"513200"},{"name":"松潘县","value":"513224","parent":"513200"},{"name":"九寨沟县","value":"513225","parent":"513200"},{"name":"金川县","value":"513226","parent":"513200"},{"name":"小金县","value":"513227","parent":"513200"},{"name":"黑水县","value":"513228","parent":"513200"},{"name":"马尔康县","value":"513229","parent":"513200"},{"name":"壤塘县","value":"513230","parent":"513200"},{"name":"阿坝县","value":"513231","parent":"513200"},{"name":"若尔盖县","value":"513232","parent":"513200"},{"name":"红原县","value":"513233","parent":"513200"},{"name":"康定市","value":"513301","parent":"513300"},{"name":"泸定县","value":"513322","parent":"513300"},{"name":"丹巴县","value":"513323","parent":"513300"},{"name":"九龙县","value":"513324","parent":"513300"},{"name":"雅江县","value":"513325","parent":"513300"},{"name":"道孚县","value":"513326","parent":"513300"},{"name":"炉霍县","value":"513327","parent":"513300"},{"name":"甘孜县","value":"513328","parent":"513300"},{"name":"新龙县","value":"513329","parent":"513300"},{"name":"德格县","value":"513330","parent":"513300"},{"name":"白玉县","value":"513331","parent":"513300"},{"name":"石渠县","value":"513332","parent":"513300"},{"name":"色达县","value":"513333","parent":"513300"},{"name":"理塘县","value":"513334","parent":"513300"},{"name":"巴塘县","value":"513335","parent":"513300"},{"name":"乡城县","value":"513336","parent":"513300"},{"name":"稻城县","value":"513337","parent":"513300"},{"name":"得荣县","value":"513338","parent":"513300"},{"name":"西昌市","value":"513401","parent":"513400"},{"name":"木里藏族自治县","value":"513422","parent":"513400"},{"name":"盐源县","value":"513423","parent":"513400"},{"name":"德昌县","value":"513424","parent":"513400"},{"name":"会理县","value":"513425","parent":"513400"},{"name":"会东县","value":"513426","parent":"513400"},{"name":"宁南县","value":"513427","parent":"513400"},{"name":"普格县","value":"513428","parent":"513400"},{"name":"布拖县","value":"513429","parent":"513400"},{"name":"金阳县","value":"513430","parent":"513400"},{"name":"昭觉县","value":"513431","parent":"513400"},{"name":"喜德县","value":"513432","parent":"513400"},{"name":"冕宁县","value":"513433","parent":"513400"},{"name":"越西县","value":"513434","parent":"513400"},{"name":"甘洛县","value":"513435","parent":"513400"},{"name":"美姑县","value":"513436","parent":"513400"},{"name":"雷波县","value":"513437","parent":"513400"},{"name":"贵阳市","value":"520100","parent":"520000"},{"name":"六盘水市","value":"520200","parent":"520000"},{"name":"遵义市","value":"520300","parent":"520000"},{"name":"安顺市","value":"520400","parent":"520000"},{"name":"毕节市","value":"520500","parent":"520000"},{"name":"铜仁市","value":"520600","parent":"520000"},{"name":"黔西南布依族苗族自治州","value":"522300","parent":"520000"},{"name":"黔东南苗族侗族自治州","value":"522600","parent":"520000"},{"name":"黔南布依族苗族自治州","value":"522700","parent":"520000"},{"name":"南明区","value":"520102","parent":"520100"},{"name":"云岩区","value":"520103","parent":"520100"},{"name":"花溪区","value":"520111","parent":"520100"},{"name":"乌当区","value":"520112","parent":"520100"},{"name":"白云区","value":"520113","parent":"520100"},{"name":"观山湖区","value":"520115","parent":"520100"},{"name":"开阳县","value":"520121","parent":"520100"},{"name":"息烽县","value":"520122","parent":"520100"},{"name":"修文县","value":"520123","parent":"520100"},{"name":"清镇市","value":"520181","parent":"520100"},{"name":"钟山区","value":"520201","parent":"520200"},{"name":"六枝特区","value":"520203","parent":"520200"},{"name":"水城县","value":"520221","parent":"520200"},{"name":"盘县","value":"520222","parent":"520200"},{"name":"红花岗区","value":"520302","parent":"520300"},{"name":"汇川区","value":"520303","parent":"520300"},{"name":"遵义县","value":"520321","parent":"520300"},{"name":"桐梓县","value":"520322","parent":"520300"},{"name":"绥阳县","value":"520323","parent":"520300"},{"name":"正安县","value":"520324","parent":"520300"},{"name":"道真仡佬族苗族自治县","value":"520325","parent":"520300"},{"name":"务川仡佬族苗族自治县","value":"520326","parent":"520300"},{"name":"凤冈县","value":"520327","parent":"520300"},{"name":"湄潭县","value":"520328","parent":"520300"},{"name":"余庆县","value":"520329","parent":"520300"},{"name":"习水县","value":"520330","parent":"520300"},{"name":"赤水市","value":"520381","parent":"520300"},{"name":"仁怀市","value":"520382","parent":"520300"},{"name":"西秀区","value":"520402","parent":"520400"},{"name":"平坝区","value":"520403","parent":"520400"},{"name":"普定县","value":"520422","parent":"520400"},{"name":"镇宁布依族苗族自治县","value":"520423","parent":"520400"},{"name":"关岭布依族苗族自治县","value":"520424","parent":"520400"},{"name":"紫云苗族布依族自治县","value":"520425","parent":"520400"},{"name":"七星关区","value":"520502","parent":"520500"},{"name":"大方县","value":"520521","parent":"520500"},{"name":"黔西县","value":"520522","parent":"520500"},{"name":"金沙县","value":"520523","parent":"520500"},{"name":"织金县","value":"520524","parent":"520500"},{"name":"纳雍县","value":"520525","parent":"520500"},{"name":"威宁彝族回族苗族自治县","value":"520526","parent":"520500"},{"name":"赫章县","value":"520527","parent":"520500"},{"name":"碧江区","value":"520602","parent":"520600"},{"name":"万山区","value":"520603","parent":"520600"},{"name":"江口县","value":"520621","parent":"520600"},{"name":"玉屏侗族自治县","value":"520622","parent":"520600"},{"name":"石阡县","value":"520623","parent":"520600"},{"name":"思南县","value":"520624","parent":"520600"},{"name":"印江土家族苗族自治县","value":"520625","parent":"520600"},{"name":"德江县","value":"520626","parent":"520600"},{"name":"沿河土家族自治县","value":"520627","parent":"520600"},{"name":"松桃苗族自治县","value":"520628","parent":"520600"},{"name":"兴义市","value":"522301","parent":"522300"},{"name":"兴仁县","value":"522322","parent":"522300"},{"name":"普安县","value":"522323","parent":"522300"},{"name":"晴隆县","value":"522324","parent":"522300"},{"name":"贞丰县","value":"522325","parent":"522300"},{"name":"望谟县","value":"522326","parent":"522300"},{"name":"册亨县","value":"522327","parent":"522300"},{"name":"安龙县","value":"522328","parent":"522300"},{"name":"凯里市","value":"522601","parent":"522600"},{"name":"黄平县","value":"522622","parent":"522600"},{"name":"施秉县","value":"522623","parent":"522600"},{"name":"三穗县","value":"522624","parent":"522600"},{"name":"镇远县","value":"522625","parent":"522600"},{"name":"岑巩县","value":"522626","parent":"522600"},{"name":"天柱县","value":"522627","parent":"522600"},{"name":"锦屏县","value":"522628","parent":"522600"},{"name":"剑河县","value":"522629","parent":"522600"},{"name":"台江县","value":"522630","parent":"522600"},{"name":"黎平县","value":"522631","parent":"522600"},{"name":"榕江县","value":"522632","parent":"522600"},{"name":"从江县","value":"522633","parent":"522600"},{"name":"雷山县","value":"522634","parent":"522600"},{"name":"麻江县","value":"522635","parent":"522600"},{"name":"丹寨县","value":"522636","parent":"522600"},{"name":"都匀市","value":"522701","parent":"522700"},{"name":"福泉市","value":"522702","parent":"522700"},{"name":"荔波县","value":"522722","parent":"522700"},{"name":"贵定县","value":"522723","parent":"522700"},{"name":"瓮安县","value":"522725","parent":"522700"},{"name":"独山县","value":"522726","parent":"522700"},{"name":"平塘县","value":"522727","parent":"522700"},{"name":"罗甸县","value":"522728","parent":"522700"},{"name":"长顺县","value":"522729","parent":"522700"},{"name":"龙里县","value":"522730","parent":"522700"},{"name":"惠水县","value":"522731","parent":"522700"},{"name":"三都水族自治县","value":"522732","parent":"522700"},{"name":"昆明市","value":"530100","parent":"530000"},{"name":"曲靖市","value":"530300","parent":"530000"},{"name":"玉溪市","value":"530400","parent":"530000"},{"name":"保山市","value":"530500","parent":"530000"},{"name":"昭通市","value":"530600","parent":"530000"},{"name":"丽江市","value":"530700","parent":"530000"},{"name":"普洱市","value":"530800","parent":"530000"},{"name":"临沧市","value":"530900","parent":"530000"},{"name":"楚雄彝族自治州","value":"532300","parent":"530000"},{"name":"红河哈尼族彝族自治州","value":"532500","parent":"530000"},{"name":"文山壮族苗族自治州","value":"532600","parent":"530000"},{"name":"西双版纳傣族自治州","value":"532800","parent":"530000"},{"name":"大理白族自治州","value":"532900","parent":"530000"},{"name":"德宏傣族景颇族自治州","value":"533100","parent":"530000"},{"name":"怒江傈僳族自治州","value":"533300","parent":"530000"},{"name":"迪庆藏族自治州","value":"533400","parent":"530000"},{"name":"五华区","value":"530102","parent":"530100"},{"name":"盘龙区","value":"530103","parent":"530100"},{"name":"官渡区","value":"530111","parent":"530100"},{"name":"西山区","value":"530112","parent":"530100"},{"name":"东川区","value":"530113","parent":"530100"},{"name":"呈贡区","value":"530114","parent":"530100"},{"name":"晋宁县","value":"530122","parent":"530100"},{"name":"富民县","value":"530124","parent":"530100"},{"name":"宜良县","value":"530125","parent":"530100"},{"name":"石林彝族自治县","value":"530126","parent":"530100"},{"name":"嵩明县","value":"530127","parent":"530100"},{"name":"禄劝彝族苗族自治县","value":"530128","parent":"530100"},{"name":"寻甸回族彝族自治县","value":"530129","parent":"530100"},{"name":"安宁市","value":"530181","parent":"530100"},{"name":"麒麟区","value":"530302","parent":"530300"},{"name":"马龙县","value":"530321","parent":"530300"},{"name":"陆良县","value":"530322","parent":"530300"},{"name":"师宗县","value":"530323","parent":"530300"},{"name":"罗平县","value":"530324","parent":"530300"},{"name":"富源县","value":"530325","parent":"530300"},{"name":"会泽县","value":"530326","parent":"530300"},{"name":"沾益县","value":"530328","parent":"530300"},{"name":"宣威市","value":"530381","parent":"530300"},{"name":"红塔区","value":"530402","parent":"530400"},{"name":"江川县","value":"530421","parent":"530400"},{"name":"澄江县","value":"530422","parent":"530400"},{"name":"通海县","value":"530423","parent":"530400"},{"name":"华宁县","value":"530424","parent":"530400"},{"name":"易门县","value":"530425","parent":"530400"},{"name":"峨山彝族自治县","value":"530426","parent":"530400"},{"name":"新平彝族傣族自治县","value":"530427","parent":"530400"},{"name":"元江哈尼族彝族傣族自治县","value":"530428","parent":"530400"},{"name":"隆阳区","value":"530502","parent":"530500"},{"name":"施甸县","value":"530521","parent":"530500"},{"name":"龙陵县","value":"530523","parent":"530500"},{"name":"昌宁县","value":"530524","parent":"530500"},{"name":"腾冲市","value":"530581","parent":"530500"},{"name":"昭阳区","value":"530602","parent":"530600"},{"name":"鲁甸县","value":"530621","parent":"530600"},{"name":"巧家县","value":"530622","parent":"530600"},{"name":"盐津县","value":"530623","parent":"530600"},{"name":"大关县","value":"530624","parent":"530600"},{"name":"永善县","value":"530625","parent":"530600"},{"name":"绥江县","value":"530626","parent":"530600"},{"name":"镇雄县","value":"530627","parent":"530600"},{"name":"彝良县","value":"530628","parent":"530600"},{"name":"威信县","value":"530629","parent":"530600"},{"name":"水富县","value":"530630","parent":"530600"},{"name":"古城区","value":"530702","parent":"530700"},{"name":"玉龙纳西族自治县","value":"530721","parent":"530700"},{"name":"永胜县","value":"530722","parent":"530700"},{"name":"华坪县","value":"530723","parent":"530700"},{"name":"宁蒗彝族自治县","value":"530724","parent":"530700"},{"name":"思茅区","value":"530802","parent":"530800"},{"name":"宁洱哈尼族彝族自治县","value":"530821","parent":"530800"},{"name":"墨江哈尼族自治县","value":"530822","parent":"530800"},{"name":"景东彝族自治县","value":"530823","parent":"530800"},{"name":"景谷傣族彝族自治县","value":"530824","parent":"530800"},{"name":"镇沅彝族哈尼族拉祜族自治县","value":"530825","parent":"530800"},{"name":"江城哈尼族彝族自治县","value":"530826","parent":"530800"},{"name":"孟连傣族拉祜族佤族自治县","value":"530827","parent":"530800"},{"name":"澜沧拉祜族自治县","value":"530828","parent":"530800"},{"name":"西盟佤族自治县","value":"530829","parent":"530800"},{"name":"临翔区","value":"530902","parent":"530900"},{"name":"凤庆县","value":"530921","parent":"530900"},{"name":"云县","value":"530922","parent":"530900"},{"name":"永德县","value":"530923","parent":"530900"},{"name":"镇康县","value":"530924","parent":"530900"},{"name":"双江拉祜族佤族布朗族傣族自治县","value":"530925","parent":"530900"},{"name":"耿马傣族佤族自治县","value":"530926","parent":"530900"},{"name":"沧源佤族自治县","value":"530927","parent":"530900"},{"name":"楚雄市","value":"532301","parent":"532300"},{"name":"双柏县","value":"532322","parent":"532300"},{"name":"牟定县","value":"532323","parent":"532300"},{"name":"南华县","value":"532324","parent":"532300"},{"name":"姚安县","value":"532325","parent":"532300"},{"name":"大姚县","value":"532326","parent":"532300"},{"name":"永仁县","value":"532327","parent":"532300"},{"name":"元谋县","value":"532328","parent":"532300"},{"name":"武定县","value":"532329","parent":"532300"},{"name":"禄丰县","value":"532331","parent":"532300"},{"name":"个旧市","value":"532501","parent":"532500"},{"name":"开远市","value":"532502","parent":"532500"},{"name":"蒙自市","value":"532503","parent":"532500"},{"name":"弥勒市","value":"532504","parent":"532500"},{"name":"屏边苗族自治县","value":"532523","parent":"532500"},{"name":"建水县","value":"532524","parent":"532500"},{"name":"石屏县","value":"532525","parent":"532500"},{"name":"泸西县","value":"532527","parent":"532500"},{"name":"元阳县","value":"532528","parent":"532500"},{"name":"红河县","value":"532529","parent":"532500"},{"name":"金平苗族瑶族傣族自治县","value":"532530","parent":"532500"},{"name":"绿春县","value":"532531","parent":"532500"},{"name":"河口瑶族自治县","value":"532532","parent":"532500"},{"name":"文山市","value":"532601","parent":"532600"},{"name":"砚山县","value":"532622","parent":"532600"},{"name":"西畴县","value":"532623","parent":"532600"},{"name":"麻栗坡县","value":"532624","parent":"532600"},{"name":"马关县","value":"532625","parent":"532600"},{"name":"丘北县","value":"532626","parent":"532600"},{"name":"广南县","value":"532627","parent":"532600"},{"name":"富宁县","value":"532628","parent":"532600"},{"name":"景洪市","value":"532801","parent":"532800"},{"name":"勐海县","value":"532822","parent":"532800"},{"name":"勐腊县","value":"532823","parent":"532800"},{"name":"大理市","value":"532901","parent":"532900"},{"name":"漾濞彝族自治县","value":"532922","parent":"532900"},{"name":"祥云县","value":"532923","parent":"532900"},{"name":"宾川县","value":"532924","parent":"532900"},{"name":"弥渡县","value":"532925","parent":"532900"},{"name":"南涧彝族自治县","value":"532926","parent":"532900"},{"name":"巍山彝族回族自治县","value":"532927","parent":"532900"},{"name":"永平县","value":"532928","parent":"532900"},{"name":"云龙县","value":"532929","parent":"532900"},{"name":"洱源县","value":"532930","parent":"532900"},{"name":"剑川县","value":"532931","parent":"532900"},{"name":"鹤庆县","value":"532932","parent":"532900"},{"name":"瑞丽市","value":"533102","parent":"533100"},{"name":"芒市","value":"533103","parent":"533100"},{"name":"梁河县","value":"533122","parent":"533100"},{"name":"盈江县","value":"533123","parent":"533100"},{"name":"陇川县","value":"533124","parent":"533100"},{"name":"泸水县","value":"533321","parent":"533300"},{"name":"福贡县","value":"533323","parent":"533300"},{"name":"贡山独龙族怒族自治县","value":"533324","parent":"533300"},{"name":"兰坪白族普米族自治县","value":"533325","parent":"533300"},{"name":"香格里拉市","value":"533401","parent":"533400"},{"name":"德钦县","value":"533422","parent":"533400"},{"name":"维西傈僳族自治县","value":"533423","parent":"533400"},{"name":"拉萨市","value":"540100","parent":"540000"},{"name":"日喀则市","value":"540200","parent":"540000"},{"name":"昌都市","value":"540300","parent":"540000"},{"name":"林芝市","value":"540400","parent":"540000"},{"name":"山南地区","value":"542200","parent":"540000"},{"name":"那曲地区","value":"542400","parent":"540000"},{"name":"阿里地区","value":"542500","parent":"540000"},{"name":"城关区","value":"540102","parent":"540100"},{"name":"林周县","value":"540121","parent":"540100"},{"name":"当雄县","value":"540122","parent":"540100"},{"name":"尼木县","value":"540123","parent":"540100"},{"name":"曲水县","value":"540124","parent":"540100"},{"name":"堆龙德庆县","value":"540125","parent":"540100"},{"name":"达孜县","value":"540126","parent":"540100"},{"name":"墨竹工卡县","value":"540127","parent":"540100"},{"name":"桑珠孜区","value":"540202","parent":"540200"},{"name":"南木林县","value":"540221","parent":"540200"},{"name":"江孜县","value":"540222","parent":"540200"},{"name":"定日县","value":"540223","parent":"540200"},{"name":"萨迦县","value":"540224","parent":"540200"},{"name":"拉孜县","value":"540225","parent":"540200"},{"name":"昂仁县","value":"540226","parent":"540200"},{"name":"谢通门县","value":"540227","parent":"540200"},{"name":"白朗县","value":"540228","parent":"540200"},{"name":"仁布县","value":"540229","parent":"540200"},{"name":"康马县","value":"540230","parent":"540200"},{"name":"定结县","value":"540231","parent":"540200"},{"name":"仲巴县","value":"540232","parent":"540200"},{"name":"亚东县","value":"540233","parent":"540200"},{"name":"吉隆县","value":"540234","parent":"540200"},{"name":"聂拉木县","value":"540235","parent":"540200"},{"name":"萨嘎县","value":"540236","parent":"540200"},{"name":"岗巴县","value":"540237","parent":"540200"},{"name":"卡若区","value":"540302","parent":"540300"},{"name":"江达县","value":"540321","parent":"540300"},{"name":"贡觉县","value":"540322","parent":"540300"},{"name":"类乌齐县","value":"540323","parent":"540300"},{"name":"丁青县","value":"540324","parent":"540300"},{"name":"察雅县","value":"540325","parent":"540300"},{"name":"八宿县","value":"540326","parent":"540300"},{"name":"左贡县","value":"540327","parent":"540300"},{"name":"芒康县","value":"540328","parent":"540300"},{"name":"洛隆县","value":"540329","parent":"540300"},{"name":"边坝县","value":"540330","parent":"540300"},{"name":"巴宜区","value":"540402","parent":"540400"},{"name":"工布江达县","value":"540421","parent":"540400"},{"name":"米林县","value":"540422","parent":"540400"},{"name":"墨脱县","value":"540423","parent":"540400"},{"name":"波密县","value":"540424","parent":"540400"},{"name":"察隅县","value":"540425","parent":"540400"},{"name":"朗县","value":"540426","parent":"540400"},{"name":"乃东县","value":"542221","parent":"542200"},{"name":"扎囊县","value":"542222","parent":"542200"},{"name":"贡嘎县","value":"542223","parent":"542200"},{"name":"桑日县","value":"542224","parent":"542200"},{"name":"琼结县","value":"542225","parent":"542200"},{"name":"曲松县","value":"542226","parent":"542200"},{"name":"措美县","value":"542227","parent":"542200"},{"name":"洛扎县","value":"542228","parent":"542200"},{"name":"加查县","value":"542229","parent":"542200"},{"name":"隆子县","value":"542231","parent":"542200"},{"name":"错那县","value":"542232","parent":"542200"},{"name":"浪卡子县","value":"542233","parent":"542200"},{"name":"那曲县","value":"542421","parent":"542400"},{"name":"嘉黎县","value":"542422","parent":"542400"},{"name":"比如县","value":"542423","parent":"542400"},{"name":"聂荣县","value":"542424","parent":"542400"},{"name":"安多县","value":"542425","parent":"542400"},{"name":"申扎县","value":"542426","parent":"542400"},{"name":"索县","value":"542427","parent":"542400"},{"name":"班戈县","value":"542428","parent":"542400"},{"name":"巴青县","value":"542429","parent":"542400"},{"name":"尼玛县","value":"542430","parent":"542400"},{"name":"双湖县","value":"542431","parent":"542400"},{"name":"普兰县","value":"542521","parent":"542500"},{"name":"札达县","value":"542522","parent":"542500"},{"name":"噶尔县","value":"542523","parent":"542500"},{"name":"日土县","value":"542524","parent":"542500"},{"name":"革吉县","value":"542525","parent":"542500"},{"name":"改则县","value":"542526","parent":"542500"},{"name":"措勤县","value":"542527","parent":"542500"},{"name":"西安市","value":"610100","parent":"610000"},{"name":"铜川市","value":"610200","parent":"610000"},{"name":"宝鸡市","value":"610300","parent":"610000"},{"name":"咸阳市","value":"610400","parent":"610000"},{"name":"渭南市","value":"610500","parent":"610000"},{"name":"延安市","value":"610600","parent":"610000"},{"name":"汉中市","value":"610700","parent":"610000"},{"name":"榆林市","value":"610800","parent":"610000"},{"name":"安康市","value":"610900","parent":"610000"},{"name":"商洛市","value":"611000","parent":"610000"},{"name":"新城区","value":"610102","parent":"610100"},{"name":"碑林区","value":"610103","parent":"610100"},{"name":"莲湖区","value":"610104","parent":"610100"},{"name":"灞桥区","value":"610111","parent":"610100"},{"name":"未央区","value":"610112","parent":"610100"},{"name":"雁塔区","value":"610113","parent":"610100"},{"name":"阎良区","value":"610114","parent":"610100"},{"name":"临潼区","value":"610115","parent":"610100"},{"name":"长安区","value":"610116","parent":"610100"},{"name":"高陵区","value":"610117","parent":"610100"},{"name":"蓝田县","value":"610122","parent":"610100"},{"name":"周至县","value":"610124","parent":"610100"},{"name":"户县","value":"610125","parent":"610100"},{"name":"王益区","value":"610202","parent":"610200"},{"name":"印台区","value":"610203","parent":"610200"},{"name":"耀州区","value":"610204","parent":"610200"},{"name":"宜君县","value":"610222","parent":"610200"},{"name":"渭滨区","value":"610302","parent":"610300"},{"name":"金台区","value":"610303","parent":"610300"},{"name":"陈仓区","value":"610304","parent":"610300"},{"name":"凤翔县","value":"610322","parent":"610300"},{"name":"岐山县","value":"610323","parent":"610300"},{"name":"扶风县","value":"610324","parent":"610300"},{"name":"眉县","value":"610326","parent":"610300"},{"name":"陇县","value":"610327","parent":"610300"},{"name":"千阳县","value":"610328","parent":"610300"},{"name":"麟游县","value":"610329","parent":"610300"},{"name":"凤县","value":"610330","parent":"610300"},{"name":"太白县","value":"610331","parent":"610300"},{"name":"秦都区","value":"610402","parent":"610400"},{"name":"杨陵区","value":"610403","parent":"610400"},{"name":"渭城区","value":"610404","parent":"610400"},{"name":"三原县","value":"610422","parent":"610400"},{"name":"泾阳县","value":"610423","parent":"610400"},{"name":"乾县","value":"610424","parent":"610400"},{"name":"礼泉县","value":"610425","parent":"610400"},{"name":"永寿县","value":"610426","parent":"610400"},{"name":"彬县","value":"610427","parent":"610400"},{"name":"长武县","value":"610428","parent":"610400"},{"name":"旬邑县","value":"610429","parent":"610400"},{"name":"淳化县","value":"610430","parent":"610400"},{"name":"武功县","value":"610431","parent":"610400"},{"name":"兴平市","value":"610481","parent":"610400"},{"name":"临渭区","value":"610502","parent":"610500"},{"name":"华县","value":"610521","parent":"610500"},{"name":"潼关县","value":"610522","parent":"610500"},{"name":"大荔县","value":"610523","parent":"610500"},{"name":"合阳县","value":"610524","parent":"610500"},{"name":"澄城县","value":"610525","parent":"610500"},{"name":"蒲城县","value":"610526","parent":"610500"},{"name":"白水县","value":"610527","parent":"610500"},{"name":"富平县","value":"610528","parent":"610500"},{"name":"韩城市","value":"610581","parent":"610500"},{"name":"华阴市","value":"610582","parent":"610500"},{"name":"宝塔区","value":"610602","parent":"610600"},{"name":"延长县","value":"610621","parent":"610600"},{"name":"延川县","value":"610622","parent":"610600"},{"name":"子长县","value":"610623","parent":"610600"},{"name":"安塞县","value":"610624","parent":"610600"},{"name":"志丹县","value":"610625","parent":"610600"},{"name":"吴起县","value":"610626","parent":"610600"},{"name":"甘泉县","value":"610627","parent":"610600"},{"name":"富县","value":"610628","parent":"610600"},{"name":"洛川县","value":"610629","parent":"610600"},{"name":"宜川县","value":"610630","parent":"610600"},{"name":"黄龙县","value":"610631","parent":"610600"},{"name":"黄陵县","value":"610632","parent":"610600"},{"name":"汉台区","value":"610702","parent":"610700"},{"name":"南郑县","value":"610721","parent":"610700"},{"name":"城固县","value":"610722","parent":"610700"},{"name":"洋县","value":"610723","parent":"610700"},{"name":"西乡县","value":"610724","parent":"610700"},{"name":"勉县","value":"610725","parent":"610700"},{"name":"宁强县","value":"610726","parent":"610700"},{"name":"略阳县","value":"610727","parent":"610700"},{"name":"镇巴县","value":"610728","parent":"610700"},{"name":"留坝县","value":"610729","parent":"610700"},{"name":"佛坪县","value":"610730","parent":"610700"},{"name":"榆阳区","value":"610802","parent":"610800"},{"name":"神木县","value":"610821","parent":"610800"},{"name":"府谷县","value":"610822","parent":"610800"},{"name":"横山县","value":"610823","parent":"610800"},{"name":"靖边县","value":"610824","parent":"610800"},{"name":"定边县","value":"610825","parent":"610800"},{"name":"绥德县","value":"610826","parent":"610800"},{"name":"米脂县","value":"610827","parent":"610800"},{"name":"佳县","value":"610828","parent":"610800"},{"name":"吴堡县","value":"610829","parent":"610800"},{"name":"清涧县","value":"610830","parent":"610800"},{"name":"子洲县","value":"610831","parent":"610800"},{"name":"汉滨区","value":"610902","parent":"610900"},{"name":"汉阴县","value":"610921","parent":"610900"},{"name":"石泉县","value":"610922","parent":"610900"},{"name":"宁陕县","value":"610923","parent":"610900"},{"name":"紫阳县","value":"610924","parent":"610900"},{"name":"岚皋县","value":"610925","parent":"610900"},{"name":"平利县","value":"610926","parent":"610900"},{"name":"镇坪县","value":"610927","parent":"610900"},{"name":"旬阳县","value":"610928","parent":"610900"},{"name":"白河县","value":"610929","parent":"610900"},{"name":"商州区","value":"611002","parent":"611000"},{"name":"洛南县","value":"611021","parent":"611000"},{"name":"丹凤县","value":"611022","parent":"611000"},{"name":"商南县","value":"611023","parent":"611000"},{"name":"山阳县","value":"611024","parent":"611000"},{"name":"镇安县","value":"611025","parent":"611000"},{"name":"柞水县","value":"611026","parent":"611000"},{"name":"兰州市","value":"620100","parent":"620000"},{"name":"嘉峪关市","value":"620200","parent":"620000"},{"name":"金昌市","value":"620300","parent":"620000"},{"name":"白银市","value":"620400","parent":"620000"},{"name":"天水市","value":"620500","parent":"620000"},{"name":"武威市","value":"620600","parent":"620000"},{"name":"张掖市","value":"620700","parent":"620000"},{"name":"平凉市","value":"620800","parent":"620000"},{"name":"酒泉市","value":"620900","parent":"620000"},{"name":"庆阳市","value":"621000","parent":"620000"},{"name":"定西市","value":"621100","parent":"620000"},{"name":"陇南市","value":"621200","parent":"620000"},{"name":"临夏回族自治州","value":"622900","parent":"620000"},{"name":"甘南藏族自治州","value":"623000","parent":"620000"},{"name":"城关区","value":"620102","parent":"620100"},{"name":"七里河区","value":"620103","parent":"620100"},{"name":"西固区","value":"620104","parent":"620100"},{"name":"安宁区","value":"620105","parent":"620100"},{"name":"红古区","value":"620111","parent":"620100"},{"name":"永登县","value":"620121","parent":"620100"},{"name":"皋兰县","value":"620122","parent":"620100"},{"name":"榆中县","value":"620123","parent":"620100"},{"name":"金川区","value":"620302","parent":"620300"},{"name":"永昌县","value":"620321","parent":"620300"},{"name":"白银区","value":"620402","parent":"620400"},{"name":"平川区","value":"620403","parent":"620400"},{"name":"靖远县","value":"620421","parent":"620400"},{"name":"会宁县","value":"620422","parent":"620400"},{"name":"景泰县","value":"620423","parent":"620400"},{"name":"秦州区","value":"620502","parent":"620500"},{"name":"麦积区","value":"620503","parent":"620500"},{"name":"清水县","value":"620521","parent":"620500"},{"name":"秦安县","value":"620522","parent":"620500"},{"name":"甘谷县","value":"620523","parent":"620500"},{"name":"武山县","value":"620524","parent":"620500"},{"name":"张家川回族自治县","value":"620525","parent":"620500"},{"name":"凉州区","value":"620602","parent":"620600"},{"name":"民勤县","value":"620621","parent":"620600"},{"name":"古浪县","value":"620622","parent":"620600"},{"name":"天祝藏族自治县","value":"620623","parent":"620600"},{"name":"甘州区","value":"620702","parent":"620700"},{"name":"肃南裕固族自治县","value":"620721","parent":"620700"},{"name":"民乐县","value":"620722","parent":"620700"},{"name":"临泽县","value":"620723","parent":"620700"},{"name":"高台县","value":"620724","parent":"620700"},{"name":"山丹县","value":"620725","parent":"620700"},{"name":"崆峒区","value":"620802","parent":"620800"},{"name":"泾川县","value":"620821","parent":"620800"},{"name":"灵台县","value":"620822","parent":"620800"},{"name":"崇信县","value":"620823","parent":"620800"},{"name":"华亭县","value":"620824","parent":"620800"},{"name":"庄浪县","value":"620825","parent":"620800"},{"name":"静宁县","value":"620826","parent":"620800"},{"name":"肃州区","value":"620902","parent":"620900"},{"name":"金塔县","value":"620921","parent":"620900"},{"name":"瓜州县","value":"620922","parent":"620900"},{"name":"肃北蒙古族自治县","value":"620923","parent":"620900"},{"name":"阿克塞哈萨克族自治县","value":"620924","parent":"620900"},{"name":"玉门市","value":"620981","parent":"620900"},{"name":"敦煌市","value":"620982","parent":"620900"},{"name":"西峰区","value":"621002","parent":"621000"},{"name":"庆城县","value":"621021","parent":"621000"},{"name":"环县","value":"621022","parent":"621000"},{"name":"华池县","value":"621023","parent":"621000"},{"name":"合水县","value":"621024","parent":"621000"},{"name":"正宁县","value":"621025","parent":"621000"},{"name":"宁县","value":"621026","parent":"621000"},{"name":"镇原县","value":"621027","parent":"621000"},{"name":"安定区","value":"621102","parent":"621100"},{"name":"通渭县","value":"621121","parent":"621100"},{"name":"陇西县","value":"621122","parent":"621100"},{"name":"渭源县","value":"621123","parent":"621100"},{"name":"临洮县","value":"621124","parent":"621100"},{"name":"漳县","value":"621125","parent":"621100"},{"name":"岷县","value":"621126","parent":"621100"},{"name":"武都区","value":"621202","parent":"621200"},{"name":"成县","value":"621221","parent":"621200"},{"name":"文县","value":"621222","parent":"621200"},{"name":"宕昌县","value":"621223","parent":"621200"},{"name":"康县","value":"621224","parent":"621200"},{"name":"西和县","value":"621225","parent":"621200"},{"name":"礼县","value":"621226","parent":"621200"},{"name":"徽县","value":"621227","parent":"621200"},{"name":"两当县","value":"621228","parent":"621200"},{"name":"临夏市","value":"622901","parent":"622900"},{"name":"临夏县","value":"622921","parent":"622900"},{"name":"康乐县","value":"622922","parent":"622900"},{"name":"永靖县","value":"622923","parent":"622900"},{"name":"广河县","value":"622924","parent":"622900"},{"name":"和政县","value":"622925","parent":"622900"},{"name":"东乡族自治县","value":"622926","parent":"622900"},{"name":"积石山保安族东乡族撒拉族自治县","value":"622927","parent":"622900"},{"name":"合作市","value":"623001","parent":"623000"},{"name":"临潭县","value":"623021","parent":"623000"},{"name":"卓尼县","value":"623022","parent":"623000"},{"name":"舟曲县","value":"623023","parent":"623000"},{"name":"迭部县","value":"623024","parent":"623000"},{"name":"玛曲县","value":"623025","parent":"623000"},{"name":"碌曲县","value":"623026","parent":"623000"},{"name":"夏河县","value":"623027","parent":"623000"},{"name":"西宁市","value":"630100","parent":"630000"},{"name":"海东市","value":"630200","parent":"630000"},{"name":"海北藏族自治州","value":"632200","parent":"630000"},{"name":"黄南藏族自治州","value":"632300","parent":"630000"},{"name":"海南藏族自治州","value":"632500","parent":"630000"},{"name":"果洛藏族自治州","value":"632600","parent":"630000"},{"name":"玉树藏族自治州","value":"632700","parent":"630000"},{"name":"海西蒙古族藏族自治州","value":"632800","parent":"630000"},{"name":"城东区","value":"630102","parent":"630100"},{"name":"城中区","value":"630103","parent":"630100"},{"name":"城西区","value":"630104","parent":"630100"},{"name":"城北区","value":"630105","parent":"630100"},{"name":"大通回族土族自治县","value":"630121","parent":"630100"},{"name":"湟中县","value":"630122","parent":"630100"},{"name":"湟源县","value":"630123","parent":"630100"},{"name":"乐都区","value":"630202","parent":"630200"},{"name":"平安区","value":"630203","parent":"630200"},{"name":"民和回族土族自治县","value":"630222","parent":"630200"},{"name":"互助土族自治县","value":"630223","parent":"630200"},{"name":"化隆回族自治县","value":"630224","parent":"630200"},{"name":"循化撒拉族自治县","value":"630225","parent":"630200"},{"name":"门源回族自治县","value":"632221","parent":"632200"},{"name":"祁连县","value":"632222","parent":"632200"},{"name":"海晏县","value":"632223","parent":"632200"},{"name":"刚察县","value":"632224","parent":"632200"},{"name":"同仁县","value":"632321","parent":"632300"},{"name":"尖扎县","value":"632322","parent":"632300"},{"name":"泽库县","value":"632323","parent":"632300"},{"name":"河南蒙古族自治县","value":"632324","parent":"632300"},{"name":"共和县","value":"632521","parent":"632500"},{"name":"同德县","value":"632522","parent":"632500"},{"name":"贵德县","value":"632523","parent":"632500"},{"name":"兴海县","value":"632524","parent":"632500"},{"name":"贵南县","value":"632525","parent":"632500"},{"name":"玛沁县","value":"632621","parent":"632600"},{"name":"班玛县","value":"632622","parent":"632600"},{"name":"甘德县","value":"632623","parent":"632600"},{"name":"达日县","value":"632624","parent":"632600"},{"name":"久治县","value":"632625","parent":"632600"},{"name":"玛多县","value":"632626","parent":"632600"},{"name":"玉树市","value":"632701","parent":"632700"},{"name":"杂多县","value":"632722","parent":"632700"},{"name":"称多县","value":"632723","parent":"632700"},{"name":"治多县","value":"632724","parent":"632700"},{"name":"囊谦县","value":"632725","parent":"632700"},{"name":"曲麻莱县","value":"632726","parent":"632700"},{"name":"格尔木市","value":"632801","parent":"632800"},{"name":"德令哈市","value":"632802","parent":"632800"},{"name":"乌兰县","value":"632821","parent":"632800"},{"name":"都兰县","value":"632822","parent":"632800"},{"name":"天峻县","value":"632823","parent":"632800"},{"name":"银川市","value":"640100","parent":"640000"},{"name":"石嘴山市","value":"640200","parent":"640000"},{"name":"吴忠市","value":"640300","parent":"640000"},{"name":"固原市","value":"640400","parent":"640000"},{"name":"中卫市","value":"640500","parent":"640000"},{"name":"兴庆区","value":"640104","parent":"640100"},{"name":"西夏区","value":"640105","parent":"640100"},{"name":"金凤区","value":"640106","parent":"640100"},{"name":"永宁县","value":"640121","parent":"640100"},{"name":"贺兰县","value":"640122","parent":"640100"},{"name":"灵武市","value":"640181","parent":"640100"},{"name":"大武口区","value":"640202","parent":"640200"},{"name":"惠农区","value":"640205","parent":"640200"},{"name":"平罗县","value":"640221","parent":"640200"},{"name":"利通区","value":"640302","parent":"640300"},{"name":"红寺堡区","value":"640303","parent":"640300"},{"name":"盐池县","value":"640323","parent":"640300"},{"name":"同心县","value":"640324","parent":"640300"},{"name":"青铜峡市","value":"640381","parent":"640300"},{"name":"原州区","value":"640402","parent":"640400"},{"name":"西吉县","value":"640422","parent":"640400"},{"name":"隆德县","value":"640423","parent":"640400"},{"name":"泾源县","value":"640424","parent":"640400"},{"name":"彭阳县","value":"640425","parent":"640400"},{"name":"沙坡头区","value":"640502","parent":"640500"},{"name":"中宁县","value":"640521","parent":"640500"},{"name":"海原县","value":"640522","parent":"640500"},{"name":"乌鲁木齐市","value":"650100","parent":"650000"},{"name":"克拉玛依市","value":"650200","parent":"650000"},{"name":"吐鲁番市","value":"650400","parent":"650000"},{"name":"哈密地区","value":"652200","parent":"650000"},{"name":"昌吉回族自治州","value":"652300","parent":"650000"},{"name":"博尔塔拉蒙古自治州","value":"652700","parent":"650000"},{"name":"巴音郭楞蒙古自治州","value":"652800","parent":"650000"},{"name":"阿克苏地区","value":"652900","parent":"650000"},{"name":"克孜勒苏柯尔克孜自治州","value":"653000","parent":"650000"},{"name":"喀什地区","value":"653100","parent":"650000"},{"name":"和田地区","value":"653200","parent":"650000"},{"name":"伊犁哈萨克自治州","value":"654000","parent":"650000"},{"name":"塔城地区","value":"654200","parent":"650000"},{"name":"阿勒泰地区","value":"654300","parent":"650000"},{"name":"石河子市","value":"659001","parent":"650000"},{"name":"阿拉尔市","value":"659002","parent":"650000"},{"name":"图木舒克市","value":"659003","parent":"650000"},{"name":"五家渠市","value":"659004","parent":"650000"},{"name":"天山区","value":"650102","parent":"650100"},{"name":"沙依巴克区","value":"650103","parent":"650100"},{"name":"新市区","value":"650104","parent":"650100"},{"name":"水磨沟区","value":"650105","parent":"650100"},{"name":"头屯河区","value":"650106","parent":"650100"},{"name":"达坂城区","value":"650107","parent":"650100"},{"name":"米东区","value":"650109","parent":"650100"},{"name":"乌鲁木齐县","value":"650121","parent":"650100"},{"name":"独山子区","value":"650202","parent":"650200"},{"name":"克拉玛依区","value":"650203","parent":"650200"},{"name":"白碱滩区","value":"650204","parent":"650200"},{"name":"乌尔禾区","value":"650205","parent":"650200"},{"name":"高昌区","value":"650402","parent":"650400"},{"name":"鄯善县","value":"650421","parent":"650400"},{"name":"托克逊县","value":"650422","parent":"650400"},{"name":"哈密市","value":"652201","parent":"652200"},{"name":"巴里坤哈萨克自治县","value":"652222","parent":"652200"},{"name":"伊吾县","value":"652223","parent":"652200"},{"name":"昌吉市","value":"652301","parent":"652300"},{"name":"阜康市","value":"652302","parent":"652300"},{"name":"呼图壁县","value":"652323","parent":"652300"},{"name":"玛纳斯县","value":"652324","parent":"652300"},{"name":"奇台县","value":"652325","parent":"652300"},{"name":"吉木萨尔县","value":"652327","parent":"652300"},{"name":"木垒哈萨克自治县","value":"652328","parent":"652300"},{"name":"博乐市","value":"652701","parent":"652700"},{"name":"阿拉山口市","value":"652702","parent":"652700"},{"name":"精河县","value":"652722","parent":"652700"},{"name":"温泉县","value":"652723","parent":"652700"},{"name":"库尔勒市","value":"652801","parent":"652800"},{"name":"轮台县","value":"652822","parent":"652800"},{"name":"尉犁县","value":"652823","parent":"652800"},{"name":"若羌县","value":"652824","parent":"652800"},{"name":"且末县","value":"652825","parent":"652800"},{"name":"焉耆回族自治县","value":"652826","parent":"652800"},{"name":"和静县","value":"652827","parent":"652800"},{"name":"和硕县","value":"652828","parent":"652800"},{"name":"博湖县","value":"652829","parent":"652800"},{"name":"阿克苏市","value":"652901","parent":"652900"},{"name":"温宿县","value":"652922","parent":"652900"},{"name":"库车县","value":"652923","parent":"652900"},{"name":"沙雅县","value":"652924","parent":"652900"},{"name":"新和县","value":"652925","parent":"652900"},{"name":"拜城县","value":"652926","parent":"652900"},{"name":"乌什县","value":"652927","parent":"652900"},{"name":"阿瓦提县","value":"652928","parent":"652900"},{"name":"柯坪县","value":"652929","parent":"652900"},{"name":"阿图什市","value":"653001","parent":"653000"},{"name":"阿克陶县","value":"653022","parent":"653000"},{"name":"阿合奇县","value":"653023","parent":"653000"},{"name":"乌恰县","value":"653024","parent":"653000"},{"name":"喀什市","value":"653101","parent":"653100"},{"name":"疏附县","value":"653121","parent":"653100"},{"name":"疏勒县","value":"653122","parent":"653100"},{"name":"英吉沙县","value":"653123","parent":"653100"},{"name":"泽普县","value":"653124","parent":"653100"},{"name":"莎车县","value":"653125","parent":"653100"},{"name":"叶城县","value":"653126","parent":"653100"},{"name":"麦盖提县","value":"653127","parent":"653100"},{"name":"岳普湖县","value":"653128","parent":"653100"},{"name":"伽师县","value":"653129","parent":"653100"},{"name":"巴楚县","value":"653130","parent":"653100"},{"name":"塔什库尔干塔吉克自治县","value":"653131","parent":"653100"},{"name":"和田市","value":"653201","parent":"653200"},{"name":"和田县","value":"653221","parent":"653200"},{"name":"墨玉县","value":"653222","parent":"653200"},{"name":"皮山县","value":"653223","parent":"653200"},{"name":"洛浦县","value":"653224","parent":"653200"},{"name":"策勒县","value":"653225","parent":"653200"},{"name":"于田县","value":"653226","parent":"653200"},{"name":"民丰县","value":"653227","parent":"653200"},{"name":"伊宁市","value":"654002","parent":"654000"},{"name":"奎屯市","value":"654003","parent":"654000"},{"name":"霍尔果斯市","value":"654004","parent":"654000"},{"name":"伊宁县","value":"654021","parent":"654000"},{"name":"察布查尔锡伯自治县","value":"654022","parent":"654000"},{"name":"霍城县","value":"654023","parent":"654000"},{"name":"巩留县","value":"654024","parent":"654000"},{"name":"新源县","value":"654025","parent":"654000"},{"name":"昭苏县","value":"654026","parent":"654000"},{"name":"特克斯县","value":"654027","parent":"654000"},{"name":"尼勒克县","value":"654028","parent":"654000"},{"name":"塔城市","value":"654201","parent":"654200"},{"name":"乌苏市","value":"654202","parent":"654200"},{"name":"额敏县","value":"654221","parent":"654200"},{"name":"沙湾县","value":"654223","parent":"654200"},{"name":"托里县","value":"654224","parent":"654200"},{"name":"裕民县","value":"654225","parent":"654200"},{"name":"和布克赛尔蒙古自治县","value":"654226","parent":"654200"},{"name":"阿勒泰市","value":"654301","parent":"654300"},{"name":"布尔津县","value":"654321","parent":"654300"},{"name":"富蕴县","value":"654322","parent":"654300"},{"name":"福海县","value":"654323","parent":"654300"},{"name":"哈巴河县","value":"654324","parent":"654300"},{"name":"青河县","value":"654325","parent":"654300"},{"name":"吉木乃县","value":"654326","parent":"654300"},{"name":"中西區","value":"810001","parent":"810000"},{"name":"灣仔區","value":"810002","parent":"810000"},{"name":"東區","value":"810003","parent":"810000"},{"name":"南區","value":"810004","parent":"810000"},{"name":"油尖旺區","value":"810005","parent":"810000"},{"name":"深水埗區","value":"810006","parent":"810000"},{"name":"九龍城區","value":"810007","parent":"810000"},{"name":"黃大仙區","value":"810008","parent":"810000"},{"name":"觀塘區","value":"810009","parent":"810000"},{"name":"荃灣區","value":"810010","parent":"810000"},{"name":"屯門區","value":"810011","parent":"810000"},{"name":"元朗區","value":"810012","parent":"810000"},{"name":"北區","value":"810013","parent":"810000"},{"name":"大埔區","value":"810014","parent":"810000"},{"name":"西貢區","value":"810015","parent":"810000"},{"name":"沙田區","value":"810016","parent":"810000"},{"name":"葵青區","value":"810017","parent":"810000"},{"name":"離島區","value":"810018","parent":"810000"},{"name":"花地瑪堂區","value":"820001","parent":"820000"},{"name":"花王堂區","value":"820002","parent":"820000"},{"name":"望德堂區","value":"820003","parent":"820000"},{"name":"大堂區","value":"820004","parent":"820000"},{"name":"風順堂區","value":"820005","parent":"820000"},{"name":"嘉模堂區","value":"820006","parent":"820000"},{"name":"路氹填海區","value":"820007","parent":"820000"},{"name":"聖方濟各堂區","value":"820008","parent":"820000"},{"name":"--","value":"--","parent":"110200"},{"name":"--","value":"--","parent":"120200"},{"name":"--","value":"--","parent":"139000"},{"name":"--","value":"--","parent":"139001"},{"name":"--","value":"--","parent":"139002"},{"name":"--","value":"--","parent":"310200"},{"name":"--","value":"--","parent":"419000"},{"name":"--","value":"--","parent":"419001"},{"name":"--","value":"--","parent":"429000"},{"name":"--","value":"--","parent":"429004"},{"name":"--","value":"--","parent":"429005"},{"name":"--","value":"--","parent":"429006"},{"name":"--","value":"--","parent":"429021"},{"name":"--","value":"--","parent":"441900"},{"name":"--","value":"--","parent":"442000"},{"name":"--","value":"--","parent":"469000"},{"name":"--","value":"--","parent":"469001"},{"name":"--","value":"--","parent":"469002"},{"name":"--","value":"--","parent":"469003"},{"name":"--","value":"--","parent":"469005"},{"name":"--","value":"--","parent":"469006"},{"name":"--","value":"--","parent":"469007"},{"name":"--","value":"--","parent":"469021"},{"name":"--","value":"--","parent":"469022"},{"name":"--","value":"--","parent":"469023"},{"name":"--","value":"--","parent":"469024"},{"name":"--","value":"--","parent":"469025"},{"name":"--","value":"--","parent":"469026"},{"name":"--","value":"--","parent":"469027"},{"name":"--","value":"--","parent":"469028"},{"name":"--","value":"--","parent":"469029"},{"name":"--","value":"--","parent":"469030"},{"name":"--","value":"--","parent":"500200"},{"name":"--","value":"--","parent":"620200"},{"name":"--","value":"--","parent":"659000"},{"name":"--","value":"--","parent":"659001"},{"name":"--","value":"--","parent":"659002"},{"name":"--","value":"--","parent":"659003"},{"name":"--","value":"--","parent":"659004"}]

/***/ }),
/* 297 */
/***/ (function(module, exports) {

module.exports = [{"name":"北京市","value":"110000"},{"name":"天津市","value":"120000"},{"name":"河北省","value":"130000"},{"name":"山西省","value":"140000"},{"name":"内蒙古自治区","value":"150000"},{"name":"辽宁省","value":"210000"},{"name":"吉林省","value":"220000"},{"name":"黑龙江省","value":"230000"},{"name":"上海市","value":"310000"},{"name":"江苏省","value":"320000"},{"name":"浙江省","value":"330000"},{"name":"安徽省","value":"340000"},{"name":"福建省","value":"350000"},{"name":"江西省","value":"360000"},{"name":"山东省","value":"370000"},{"name":"河南省","value":"410000"},{"name":"湖北省","value":"420000"},{"name":"湖南省","value":"430000"},{"name":"广东省","value":"440000"},{"name":"广西壮族自治区","value":"450000"},{"name":"海南省","value":"460000"},{"name":"重庆市","value":"500000"},{"name":"四川省","value":"510000"},{"name":"贵州省","value":"520000"},{"name":"云南省","value":"530000"},{"name":"西藏自治区","value":"540000"},{"name":"陕西省","value":"610000"},{"name":"甘肃省","value":"620000"},{"name":"青海省","value":"630000"},{"name":"宁夏回族自治区","value":"640000"},{"name":"新疆维吾尔自治区","value":"650000"},{"name":"北京市市辖区","value":"110100","parent":"110000"},{"name":"东城区","value":"110101","parent":"110100"},{"name":"西城区","value":"110102","parent":"110100"},{"name":"朝阳区","value":"110105","parent":"110100"},{"name":"丰台区","value":"110106","parent":"110100"},{"name":"石景山区","value":"110107","parent":"110100"},{"name":"海淀区","value":"110108","parent":"110100"},{"name":"门头沟区","value":"110109","parent":"110100"},{"name":"房山区","value":"110111","parent":"110100"},{"name":"通州区","value":"110112","parent":"110100"},{"name":"顺义区","value":"110113","parent":"110100"},{"name":"昌平区","value":"110114","parent":"110100"},{"name":"大兴区","value":"110115","parent":"110100"},{"name":"怀柔区","value":"110116","parent":"110100"},{"name":"平谷区","value":"110117","parent":"110100"},{"name":"密云区","value":"110128","parent":"110100"},{"name":"延庆区","value":"110129","parent":"110100"},{"name":"天津市市辖区","value":"120100","parent":"120000"},{"name":"天津市郊县","value":"120200","parent":"120000"},{"name":"和平区","value":"120101","parent":"120100"},{"name":"河东区","value":"120102","parent":"120100"},{"name":"河西区","value":"120103","parent":"120100"},{"name":"南开区","value":"120104","parent":"120100"},{"name":"河北区","value":"120105","parent":"120100"},{"name":"红桥区","value":"120106","parent":"120100"},{"name":"东丽区","value":"120110","parent":"120100"},{"name":"西青区","value":"120111","parent":"120100"},{"name":"津南区","value":"120112","parent":"120100"},{"name":"北辰区","value":"120113","parent":"120100"},{"name":"武清区","value":"120114","parent":"120100"},{"name":"宝坻区","value":"120115","parent":"120100"},{"name":"滨海新区","value":"120116","parent":"120100"},{"name":"宁河区","value":"120117","parent":"120100"},{"name":"静海区","value":"120118","parent":"120100"},{"name":"蓟县","value":"120225","parent":"120100"},{"name":"石家庄市","value":"130100","parent":"130000"},{"name":"唐山市","value":"130200","parent":"130000"},{"name":"秦皇岛市","value":"130300","parent":"130000"},{"name":"邯郸市","value":"130400","parent":"130000"},{"name":"邢台市","value":"130500","parent":"130000"},{"name":"保定市","value":"130600","parent":"130000"},{"name":"张家口市","value":"130700","parent":"130000"},{"name":"承德市","value":"130800","parent":"130000"},{"name":"沧州市","value":"130900","parent":"130000"},{"name":"廊坊市","value":"131000","parent":"130000"},{"name":"衡水市","value":"131100","parent":"130000"},{"name":"长安区","value":"130102","parent":"130100"},{"name":"桥西区","value":"130104","parent":"130100"},{"name":"新华区","value":"130105","parent":"130100"},{"name":"井陉矿区","value":"130107","parent":"130100"},{"name":"裕华区","value":"130108","parent":"130100"},{"name":"藁城区","value":"130109","parent":"130100"},{"name":"鹿泉区","value":"130110","parent":"130100"},{"name":"栾城区","value":"130111","parent":"130100"},{"name":"井陉县","value":"130121","parent":"130100"},{"name":"正定县","value":"130123","parent":"130100"},{"name":"行唐县","value":"130125","parent":"130100"},{"name":"灵寿县","value":"130126","parent":"130100"},{"name":"高邑县","value":"130127","parent":"130100"},{"name":"深泽县","value":"130128","parent":"130100"},{"name":"赞皇县","value":"130129","parent":"130100"},{"name":"无极县","value":"130130","parent":"130100"},{"name":"平山县","value":"130131","parent":"130100"},{"name":"元氏县","value":"130132","parent":"130100"},{"name":"赵县","value":"130133","parent":"130100"},{"name":"辛集市","value":"130181","parent":"130100"},{"name":"晋州市","value":"130183","parent":"130100"},{"name":"新乐市","value":"130184","parent":"130100"},{"name":"路南区","value":"130202","parent":"130200"},{"name":"路北区","value":"130203","parent":"130200"},{"name":"古冶区","value":"130204","parent":"130200"},{"name":"开平区","value":"130205","parent":"130200"},{"name":"丰南区","value":"130207","parent":"130200"},{"name":"丰润区","value":"130208","parent":"130200"},{"name":"曹妃甸区","value":"130209","parent":"130200"},{"name":"滦县","value":"130223","parent":"130200"},{"name":"滦南县","value":"130224","parent":"130200"},{"name":"乐亭县","value":"130225","parent":"130200"},{"name":"迁西县","value":"130227","parent":"130200"},{"name":"玉田县","value":"130229","parent":"130200"},{"name":"遵化市","value":"130281","parent":"130200"},{"name":"迁安市","value":"130283","parent":"130200"},{"name":"海港区","value":"130302","parent":"130300"},{"name":"山海关区","value":"130303","parent":"130300"},{"name":"北戴河区","value":"130304","parent":"130300"},{"name":"抚宁区","value":"130306","parent":"130300"},{"name":"青龙满族自治县","value":"130321","parent":"130300"},{"name":"昌黎县","value":"130322","parent":"130300"},{"name":"卢龙县","value":"130324","parent":"130300"},{"name":"邯山区","value":"130402","parent":"130400"},{"name":"丛台区","value":"130403","parent":"130400"},{"name":"复兴区","value":"130404","parent":"130400"},{"name":"峰峰矿区","value":"130406","parent":"130400"},{"name":"邯郸县","value":"130421","parent":"130400"},{"name":"临漳县","value":"130423","parent":"130400"},{"name":"成安县","value":"130424","parent":"130400"},{"name":"大名县","value":"130425","parent":"130400"},{"name":"涉县","value":"130426","parent":"130400"},{"name":"磁县","value":"130427","parent":"130400"},{"name":"肥乡县","value":"130428","parent":"130400"},{"name":"永年县","value":"130429","parent":"130400"},{"name":"邱县","value":"130430","parent":"130400"},{"name":"鸡泽县","value":"130431","parent":"130400"},{"name":"广平县","value":"130432","parent":"130400"},{"name":"馆陶县","value":"130433","parent":"130400"},{"name":"魏县","value":"130434","parent":"130400"},{"name":"曲周县","value":"130435","parent":"130400"},{"name":"武安市","value":"130481","parent":"130400"},{"name":"桥东区","value":"130502","parent":"130500"},{"name":"桥西区","value":"130503","parent":"130500"},{"name":"邢台县","value":"130521","parent":"130500"},{"name":"临城县","value":"130522","parent":"130500"},{"name":"内丘县","value":"130523","parent":"130500"},{"name":"柏乡县","value":"130524","parent":"130500"},{"name":"隆尧县","value":"130525","parent":"130500"},{"name":"任县","value":"130526","parent":"130500"},{"name":"南和县","value":"130527","parent":"130500"},{"name":"宁晋县","value":"130528","parent":"130500"},{"name":"巨鹿县","value":"130529","parent":"130500"},{"name":"新河县","value":"130530","parent":"130500"},{"name":"广宗县","value":"130531","parent":"130500"},{"name":"平乡县","value":"130532","parent":"130500"},{"name":"威县","value":"130533","parent":"130500"},{"name":"清河县","value":"130534","parent":"130500"},{"name":"临西县","value":"130535","parent":"130500"},{"name":"南宫市","value":"130581","parent":"130500"},{"name":"沙河市","value":"130582","parent":"130500"},{"name":"竞秀区","value":"130602","parent":"130600"},{"name":"莲池区","value":"130606","parent":"130600"},{"name":"满城区","value":"130607","parent":"130600"},{"name":"清苑区","value":"130608","parent":"130600"},{"name":"徐水区","value":"130609","parent":"130600"},{"name":"涞水县","value":"130623","parent":"130600"},{"name":"阜平县","value":"130624","parent":"130600"},{"name":"定兴县","value":"130626","parent":"130600"},{"name":"唐县","value":"130627","parent":"130600"},{"name":"高阳县","value":"130628","parent":"130600"},{"name":"容城县","value":"130629","parent":"130600"},{"name":"涞源县","value":"130630","parent":"130600"},{"name":"望都县","value":"130631","parent":"130600"},{"name":"安新县","value":"130632","parent":"130600"},{"name":"易县","value":"130633","parent":"130600"},{"name":"曲阳县","value":"130634","parent":"130600"},{"name":"蠡县","value":"130635","parent":"130600"},{"name":"顺平县","value":"130636","parent":"130600"},{"name":"博野县","value":"130637","parent":"130600"},{"name":"雄县","value":"130638","parent":"130600"},{"name":"涿州市","value":"130681","parent":"130600"},{"name":"定州市","value":"130682","parent":"130600"},{"name":"安国市","value":"130683","parent":"130600"},{"name":"高碑店市","value":"130684","parent":"130600"},{"name":"桥东区","value":"130702","parent":"130700"},{"name":"桥西区","value":"130703","parent":"130700"},{"name":"宣化区","value":"130705","parent":"130700"},{"name":"下花园区","value":"130706","parent":"130700"},{"name":"宣化县","value":"130721","parent":"130700"},{"name":"张北县","value":"130722","parent":"130700"},{"name":"康保县","value":"130723","parent":"130700"},{"name":"沽源县","value":"130724","parent":"130700"},{"name":"尚义县","value":"130725","parent":"130700"},{"name":"蔚县","value":"130726","parent":"130700"},{"name":"阳原县","value":"130727","parent":"130700"},{"name":"怀安县","value":"130728","parent":"130700"},{"name":"万全县","value":"130729","parent":"130700"},{"name":"怀来县","value":"130730","parent":"130700"},{"name":"涿鹿县","value":"130731","parent":"130700"},{"name":"赤城县","value":"130732","parent":"130700"},{"name":"崇礼县","value":"130733","parent":"130700"},{"name":"双桥区","value":"130802","parent":"130800"},{"name":"双滦区","value":"130803","parent":"130800"},{"name":"鹰手营子矿区","value":"130804","parent":"130800"},{"name":"承德县","value":"130821","parent":"130800"},{"name":"兴隆县","value":"130822","parent":"130800"},{"name":"平泉县","value":"130823","parent":"130800"},{"name":"滦平县","value":"130824","parent":"130800"},{"name":"隆化县","value":"130825","parent":"130800"},{"name":"丰宁满族自治县","value":"130826","parent":"130800"},{"name":"宽城满族自治县","value":"130827","parent":"130800"},{"name":"围场满族蒙古族自治县","value":"130828","parent":"130800"},{"name":"新华区","value":"130902","parent":"130900"},{"name":"运河区","value":"130903","parent":"130900"},{"name":"沧县","value":"130921","parent":"130900"},{"name":"青县","value":"130922","parent":"130900"},{"name":"东光县","value":"130923","parent":"130900"},{"name":"海兴县","value":"130924","parent":"130900"},{"name":"盐山县","value":"130925","parent":"130900"},{"name":"肃宁县","value":"130926","parent":"130900"},{"name":"南皮县","value":"130927","parent":"130900"},{"name":"吴桥县","value":"130928","parent":"130900"},{"name":"献县","value":"130929","parent":"130900"},{"name":"孟村回族自治县","value":"130930","parent":"130900"},{"name":"泊头市","value":"130981","parent":"130900"},{"name":"任丘市","value":"130982","parent":"130900"},{"name":"黄骅市","value":"130983","parent":"130900"},{"name":"河间市","value":"130984","parent":"130900"},{"name":"安次区","value":"131002","parent":"131000"},{"name":"广阳区","value":"131003","parent":"131000"},{"name":"固安县","value":"131022","parent":"131000"},{"name":"永清县","value":"131023","parent":"131000"},{"name":"香河县","value":"131024","parent":"131000"},{"name":"大城县","value":"131025","parent":"131000"},{"name":"文安县","value":"131026","parent":"131000"},{"name":"大厂回族自治县","value":"131028","parent":"131000"},{"name":"霸州市","value":"131081","parent":"131000"},{"name":"三河市","value":"131082","parent":"131000"},{"name":"桃城区","value":"131102","parent":"131100"},{"name":"枣强县","value":"131121","parent":"131100"},{"name":"武邑县","value":"131122","parent":"131100"},{"name":"武强县","value":"131123","parent":"131100"},{"name":"饶阳县","value":"131124","parent":"131100"},{"name":"安平县","value":"131125","parent":"131100"},{"name":"故城县","value":"131126","parent":"131100"},{"name":"景县","value":"131127","parent":"131100"},{"name":"阜城县","value":"131128","parent":"131100"},{"name":"冀州市","value":"131181","parent":"131100"},{"name":"深州市","value":"131182","parent":"131100"},{"name":"太原市","value":"140100","parent":"140000"},{"name":"大同市","value":"140200","parent":"140000"},{"name":"阳泉市","value":"140300","parent":"140000"},{"name":"长治市","value":"140400","parent":"140000"},{"name":"晋城市","value":"140500","parent":"140000"},{"name":"朔州市","value":"140600","parent":"140000"},{"name":"晋中市","value":"140700","parent":"140000"},{"name":"运城市","value":"140800","parent":"140000"},{"name":"忻州市","value":"140900","parent":"140000"},{"name":"临汾市","value":"141000","parent":"140000"},{"name":"吕梁市","value":"141100","parent":"140000"},{"name":"小店区","value":"140105","parent":"140100"},{"name":"迎泽区","value":"140106","parent":"140100"},{"name":"杏花岭区","value":"140107","parent":"140100"},{"name":"尖草坪区","value":"140108","parent":"140100"},{"name":"万柏林区","value":"140109","parent":"140100"},{"name":"晋源区","value":"140110","parent":"140100"},{"name":"清徐县","value":"140121","parent":"140100"},{"name":"阳曲县","value":"140122","parent":"140100"},{"name":"娄烦县","value":"140123","parent":"140100"},{"name":"古交市","value":"140181","parent":"140100"},{"name":"城区","value":"140202","parent":"140200"},{"name":"矿区","value":"140203","parent":"140200"},{"name":"南郊区","value":"140211","parent":"140200"},{"name":"新荣区","value":"140212","parent":"140200"},{"name":"阳高县","value":"140221","parent":"140200"},{"name":"天镇县","value":"140222","parent":"140200"},{"name":"广灵县","value":"140223","parent":"140200"},{"name":"灵丘县","value":"140224","parent":"140200"},{"name":"浑源县","value":"140225","parent":"140200"},{"name":"左云县","value":"140226","parent":"140200"},{"name":"大同县","value":"140227","parent":"140200"},{"name":"城区","value":"140302","parent":"140300"},{"name":"矿区","value":"140303","parent":"140300"},{"name":"郊区","value":"140311","parent":"140300"},{"name":"平定县","value":"140321","parent":"140300"},{"name":"盂县","value":"140322","parent":"140300"},{"name":"城区","value":"140402","parent":"140400"},{"name":"郊区","value":"140411","parent":"140400"},{"name":"长治县","value":"140421","parent":"140400"},{"name":"襄垣县","value":"140423","parent":"140400"},{"name":"屯留县","value":"140424","parent":"140400"},{"name":"平顺县","value":"140425","parent":"140400"},{"name":"黎城县","value":"140426","parent":"140400"},{"name":"壶关县","value":"140427","parent":"140400"},{"name":"长子县","value":"140428","parent":"140400"},{"name":"武乡县","value":"140429","parent":"140400"},{"name":"沁县","value":"140430","parent":"140400"},{"name":"沁源县","value":"140431","parent":"140400"},{"name":"潞城市","value":"140481","parent":"140400"},{"name":"城区","value":"140502","parent":"140500"},{"name":"沁水县","value":"140521","parent":"140500"},{"name":"阳城县","value":"140522","parent":"140500"},{"name":"陵川县","value":"140524","parent":"140500"},{"name":"泽州县","value":"140525","parent":"140500"},{"name":"高平市","value":"140581","parent":"140500"},{"name":"朔城区","value":"140602","parent":"140600"},{"name":"平鲁区","value":"140603","parent":"140600"},{"name":"山阴县","value":"140621","parent":"140600"},{"name":"应县","value":"140622","parent":"140600"},{"name":"右玉县","value":"140623","parent":"140600"},{"name":"怀仁县","value":"140624","parent":"140600"},{"name":"榆次区","value":"140702","parent":"140700"},{"name":"榆社县","value":"140721","parent":"140700"},{"name":"左权县","value":"140722","parent":"140700"},{"name":"和顺县","value":"140723","parent":"140700"},{"name":"昔阳县","value":"140724","parent":"140700"},{"name":"寿阳县","value":"140725","parent":"140700"},{"name":"太谷县","value":"140726","parent":"140700"},{"name":"祁县","value":"140727","parent":"140700"},{"name":"平遥县","value":"140728","parent":"140700"},{"name":"灵石县","value":"140729","parent":"140700"},{"name":"介休市","value":"140781","parent":"140700"},{"name":"盐湖区","value":"140802","parent":"140800"},{"name":"临猗县","value":"140821","parent":"140800"},{"name":"万荣县","value":"140822","parent":"140800"},{"name":"闻喜县","value":"140823","parent":"140800"},{"name":"稷山县","value":"140824","parent":"140800"},{"name":"新绛县","value":"140825","parent":"140800"},{"name":"绛县","value":"140826","parent":"140800"},{"name":"垣曲县","value":"140827","parent":"140800"},{"name":"夏县","value":"140828","parent":"140800"},{"name":"平陆县","value":"140829","parent":"140800"},{"name":"芮城县","value":"140830","parent":"140800"},{"name":"永济市","value":"140881","parent":"140800"},{"name":"河津市","value":"140882","parent":"140800"},{"name":"忻府区","value":"140902","parent":"140900"},{"name":"定襄县","value":"140921","parent":"140900"},{"name":"五台县","value":"140922","parent":"140900"},{"name":"代县","value":"140923","parent":"140900"},{"name":"繁峙县","value":"140924","parent":"140900"},{"name":"宁武县","value":"140925","parent":"140900"},{"name":"静乐县","value":"140926","parent":"140900"},{"name":"神池县","value":"140927","parent":"140900"},{"name":"五寨县","value":"140928","parent":"140900"},{"name":"岢岚县","value":"140929","parent":"140900"},{"name":"河曲县","value":"140930","parent":"140900"},{"name":"保德县","value":"140931","parent":"140900"},{"name":"偏关县","value":"140932","parent":"140900"},{"name":"原平市","value":"140981","parent":"140900"},{"name":"尧都区","value":"141002","parent":"141000"},{"name":"曲沃县","value":"141021","parent":"141000"},{"name":"翼城县","value":"141022","parent":"141000"},{"name":"襄汾县","value":"141023","parent":"141000"},{"name":"洪洞县","value":"141024","parent":"141000"},{"name":"古县","value":"141025","parent":"141000"},{"name":"安泽县","value":"141026","parent":"141000"},{"name":"浮山县","value":"141027","parent":"141000"},{"name":"吉县","value":"141028","parent":"141000"},{"name":"乡宁县","value":"141029","parent":"141000"},{"name":"大宁县","value":"141030","parent":"141000"},{"name":"隰县","value":"141031","parent":"141000"},{"name":"永和县","value":"141032","parent":"141000"},{"name":"蒲县","value":"141033","parent":"141000"},{"name":"汾西县","value":"141034","parent":"141000"},{"name":"侯马市","value":"141081","parent":"141000"},{"name":"霍州市","value":"141082","parent":"141000"},{"name":"离石区","value":"141102","parent":"141100"},{"name":"文水县","value":"141121","parent":"141100"},{"name":"交城县","value":"141122","parent":"141100"},{"name":"兴县","value":"141123","parent":"141100"},{"name":"临县","value":"141124","parent":"141100"},{"name":"柳林县","value":"141125","parent":"141100"},{"name":"石楼县","value":"141126","parent":"141100"},{"name":"岚县","value":"141127","parent":"141100"},{"name":"方山县","value":"141128","parent":"141100"},{"name":"中阳县","value":"141129","parent":"141100"},{"name":"交口县","value":"141130","parent":"141100"},{"name":"孝义市","value":"141181","parent":"141100"},{"name":"汾阳市","value":"141182","parent":"141100"},{"name":"呼和浩特市","value":"150100","parent":"150000"},{"name":"包头市","value":"150200","parent":"150000"},{"name":"乌海市","value":"150300","parent":"150000"},{"name":"赤峰市","value":"150400","parent":"150000"},{"name":"通辽市","value":"150500","parent":"150000"},{"name":"鄂尔多斯市","value":"150600","parent":"150000"},{"name":"呼伦贝尔市","value":"150700","parent":"150000"},{"name":"巴彦淖尔市","value":"150800","parent":"150000"},{"name":"乌兰察布市","value":"150900","parent":"150000"},{"name":"兴安盟","value":"152200","parent":"150000"},{"name":"锡林郭勒盟","value":"152500","parent":"150000"},{"name":"阿拉善盟","value":"152900","parent":"150000"},{"name":"新城区","value":"150102","parent":"150100"},{"name":"回民区","value":"150103","parent":"150100"},{"name":"玉泉区","value":"150104","parent":"150100"},{"name":"赛罕区","value":"150105","parent":"150100"},{"name":"土默特左旗","value":"150121","parent":"150100"},{"name":"托克托县","value":"150122","parent":"150100"},{"name":"和林格尔县","value":"150123","parent":"150100"},{"name":"清水河县","value":"150124","parent":"150100"},{"name":"武川县","value":"150125","parent":"150100"},{"name":"东河区","value":"150202","parent":"150200"},{"name":"昆都仑区","value":"150203","parent":"150200"},{"name":"青山区","value":"150204","parent":"150200"},{"name":"石拐区","value":"150205","parent":"150200"},{"name":"白云鄂博矿区","value":"150206","parent":"150200"},{"name":"九原区","value":"150207","parent":"150200"},{"name":"土默特右旗","value":"150221","parent":"150200"},{"name":"固阳县","value":"150222","parent":"150200"},{"name":"达尔罕茂明安联合旗","value":"150223","parent":"150200"},{"name":"海勃湾区","value":"150302","parent":"150300"},{"name":"海南区","value":"150303","parent":"150300"},{"name":"乌达区","value":"150304","parent":"150300"},{"name":"红山区","value":"150402","parent":"150400"},{"name":"元宝山区","value":"150403","parent":"150400"},{"name":"松山区","value":"150404","parent":"150400"},{"name":"阿鲁科尔沁旗","value":"150421","parent":"150400"},{"name":"巴林左旗","value":"150422","parent":"150400"},{"name":"巴林右旗","value":"150423","parent":"150400"},{"name":"林西县","value":"150424","parent":"150400"},{"name":"克什克腾旗","value":"150425","parent":"150400"},{"name":"翁牛特旗","value":"150426","parent":"150400"},{"name":"喀喇沁旗","value":"150428","parent":"150400"},{"name":"宁城县","value":"150429","parent":"150400"},{"name":"敖汉旗","value":"150430","parent":"150400"},{"name":"科尔沁区","value":"150502","parent":"150500"},{"name":"科尔沁左翼中旗","value":"150521","parent":"150500"},{"name":"科尔沁左翼后旗","value":"150522","parent":"150500"},{"name":"开鲁县","value":"150523","parent":"150500"},{"name":"库伦旗","value":"150524","parent":"150500"},{"name":"奈曼旗","value":"150525","parent":"150500"},{"name":"扎鲁特旗","value":"150526","parent":"150500"},{"name":"霍林郭勒市","value":"150581","parent":"150500"},{"name":"东胜区","value":"150602","parent":"150600"},{"name":"达拉特旗","value":"150621","parent":"150600"},{"name":"准格尔旗","value":"150622","parent":"150600"},{"name":"鄂托克前旗","value":"150623","parent":"150600"},{"name":"鄂托克旗","value":"150624","parent":"150600"},{"name":"杭锦旗","value":"150625","parent":"150600"},{"name":"乌审旗","value":"150626","parent":"150600"},{"name":"伊金霍洛旗","value":"150627","parent":"150600"},{"name":"海拉尔区","value":"150702","parent":"150700"},{"name":"扎赉诺尔区","value":"150703","parent":"150700"},{"name":"阿荣旗","value":"150721","parent":"150700"},{"name":"莫力达瓦达斡尔族自治旗","value":"150722","parent":"150700"},{"name":"鄂伦春自治旗","value":"150723","parent":"150700"},{"name":"鄂温克族自治旗","value":"150724","parent":"150700"},{"name":"陈巴尔虎旗","value":"150725","parent":"150700"},{"name":"新巴尔虎左旗","value":"150726","parent":"150700"},{"name":"新巴尔虎右旗","value":"150727","parent":"150700"},{"name":"满洲里市","value":"150781","parent":"150700"},{"name":"牙克石市","value":"150782","parent":"150700"},{"name":"扎兰屯市","value":"150783","parent":"150700"},{"name":"额尔古纳市","value":"150784","parent":"150700"},{"name":"根河市","value":"150785","parent":"150700"},{"name":"临河区","value":"150802","parent":"150800"},{"name":"五原县","value":"150821","parent":"150800"},{"name":"磴口县","value":"150822","parent":"150800"},{"name":"乌拉特前旗","value":"150823","parent":"150800"},{"name":"乌拉特中旗","value":"150824","parent":"150800"},{"name":"乌拉特后旗","value":"150825","parent":"150800"},{"name":"杭锦后旗","value":"150826","parent":"150800"},{"name":"集宁区","value":"150902","parent":"150900"},{"name":"卓资县","value":"150921","parent":"150900"},{"name":"化德县","value":"150922","parent":"150900"},{"name":"商都县","value":"150923","parent":"150900"},{"name":"兴和县","value":"150924","parent":"150900"},{"name":"凉城县","value":"150925","parent":"150900"},{"name":"察哈尔右翼前旗","value":"150926","parent":"150900"},{"name":"察哈尔右翼中旗","value":"150927","parent":"150900"},{"name":"察哈尔右翼后旗","value":"150928","parent":"150900"},{"name":"四子王旗","value":"150929","parent":"150900"},{"name":"丰镇市","value":"150981","parent":"150900"},{"name":"乌兰浩特市","value":"152201","parent":"152200"},{"name":"阿尔山市","value":"152202","parent":"152200"},{"name":"科尔沁右翼前旗","value":"152221","parent":"152200"},{"name":"科尔沁右翼中旗","value":"152222","parent":"152200"},{"name":"扎赉特旗","value":"152223","parent":"152200"},{"name":"突泉县","value":"152224","parent":"152200"},{"name":"二连浩特市","value":"152501","parent":"152500"},{"name":"锡林浩特市","value":"152502","parent":"152500"},{"name":"阿巴嘎旗","value":"152522","parent":"152500"},{"name":"苏尼特左旗","value":"152523","parent":"152500"},{"name":"苏尼特右旗","value":"152524","parent":"152500"},{"name":"东乌珠穆沁旗","value":"152525","parent":"152500"},{"name":"西乌珠穆沁旗","value":"152526","parent":"152500"},{"name":"太仆寺旗","value":"152527","parent":"152500"},{"name":"镶黄旗","value":"152528","parent":"152500"},{"name":"正镶白旗","value":"152529","parent":"152500"},{"name":"正蓝旗","value":"152530","parent":"152500"},{"name":"多伦县","value":"152531","parent":"152500"},{"name":"阿拉善左旗","value":"152921","parent":"152900"},{"name":"阿拉善右旗","value":"152922","parent":"152900"},{"name":"额济纳旗","value":"152923","parent":"152900"},{"name":"沈阳市","value":"210100","parent":"210000"},{"name":"大连市","value":"210200","parent":"210000"},{"name":"鞍山市","value":"210300","parent":"210000"},{"name":"抚顺市","value":"210400","parent":"210000"},{"name":"本溪市","value":"210500","parent":"210000"},{"name":"丹东市","value":"210600","parent":"210000"},{"name":"锦州市","value":"210700","parent":"210000"},{"name":"营口市","value":"210800","parent":"210000"},{"name":"阜新市","value":"210900","parent":"210000"},{"name":"辽阳市","value":"211000","parent":"210000"},{"name":"盘锦市","value":"211100","parent":"210000"},{"name":"铁岭市","value":"211200","parent":"210000"},{"name":"朝阳市","value":"211300","parent":"210000"},{"name":"葫芦岛市","value":"211400","parent":"210000"},{"name":"和平区","value":"210102","parent":"210100"},{"name":"沈河区","value":"210103","parent":"210100"},{"name":"大东区","value":"210104","parent":"210100"},{"name":"皇姑区","value":"210105","parent":"210100"},{"name":"铁西区","value":"210106","parent":"210100"},{"name":"苏家屯区","value":"210111","parent":"210100"},{"name":"浑南区","value":"210112","parent":"210100"},{"name":"沈北新区","value":"210113","parent":"210100"},{"name":"于洪区","value":"210114","parent":"210100"},{"name":"辽中县","value":"210122","parent":"210100"},{"name":"康平县","value":"210123","parent":"210100"},{"name":"法库县","value":"210124","parent":"210100"},{"name":"新民市","value":"210181","parent":"210100"},{"name":"中山区","value":"210202","parent":"210200"},{"name":"西岗区","value":"210203","parent":"210200"},{"name":"沙河口区","value":"210204","parent":"210200"},{"name":"甘井子区","value":"210211","parent":"210200"},{"name":"旅顺口区","value":"210212","parent":"210200"},{"name":"金州区","value":"210213","parent":"210200"},{"name":"长海县","value":"210224","parent":"210200"},{"name":"瓦房店市","value":"210281","parent":"210200"},{"name":"普兰店市","value":"210282","parent":"210200"},{"name":"庄河市","value":"210283","parent":"210200"},{"name":"铁东区","value":"210302","parent":"210300"},{"name":"铁西区","value":"210303","parent":"210300"},{"name":"立山区","value":"210304","parent":"210300"},{"name":"千山区","value":"210311","parent":"210300"},{"name":"台安县","value":"210321","parent":"210300"},{"name":"岫岩满族自治县","value":"210323","parent":"210300"},{"name":"海城市","value":"210381","parent":"210300"},{"name":"新抚区","value":"210402","parent":"210400"},{"name":"东洲区","value":"210403","parent":"210400"},{"name":"望花区","value":"210404","parent":"210400"},{"name":"顺城区","value":"210411","parent":"210400"},{"name":"抚顺县","value":"210421","parent":"210400"},{"name":"新宾满族自治县","value":"210422","parent":"210400"},{"name":"清原满族自治县","value":"210423","parent":"210400"},{"name":"平山区","value":"210502","parent":"210500"},{"name":"溪湖区","value":"210503","parent":"210500"},{"name":"明山区","value":"210504","parent":"210500"},{"name":"南芬区","value":"210505","parent":"210500"},{"name":"本溪满族自治县","value":"210521","parent":"210500"},{"name":"桓仁满族自治县","value":"210522","parent":"210500"},{"name":"元宝区","value":"210602","parent":"210600"},{"name":"振兴区","value":"210603","parent":"210600"},{"name":"振安区","value":"210604","parent":"210600"},{"name":"宽甸满族自治县","value":"210624","parent":"210600"},{"name":"东港市","value":"210681","parent":"210600"},{"name":"凤城市","value":"210682","parent":"210600"},{"name":"古塔区","value":"210702","parent":"210700"},{"name":"凌河区","value":"210703","parent":"210700"},{"name":"太和区","value":"210711","parent":"210700"},{"name":"黑山县","value":"210726","parent":"210700"},{"name":"义县","value":"210727","parent":"210700"},{"name":"凌海市","value":"210781","parent":"210700"},{"name":"北镇市","value":"210782","parent":"210700"},{"name":"站前区","value":"210802","parent":"210800"},{"name":"西市区","value":"210803","parent":"210800"},{"name":"鲅鱼圈区","value":"210804","parent":"210800"},{"name":"老边区","value":"210811","parent":"210800"},{"name":"盖州市","value":"210881","parent":"210800"},{"name":"大石桥市","value":"210882","parent":"210800"},{"name":"海州区","value":"210902","parent":"210900"},{"name":"新邱区","value":"210903","parent":"210900"},{"name":"太平区","value":"210904","parent":"210900"},{"name":"清河门区","value":"210905","parent":"210900"},{"name":"细河区","value":"210911","parent":"210900"},{"name":"阜新蒙古族自治县","value":"210921","parent":"210900"},{"name":"彰武县","value":"210922","parent":"210900"},{"name":"白塔区","value":"211002","parent":"211000"},{"name":"文圣区","value":"211003","parent":"211000"},{"name":"宏伟区","value":"211004","parent":"211000"},{"name":"弓长岭区","value":"211005","parent":"211000"},{"name":"太子河区","value":"211011","parent":"211000"},{"name":"辽阳县","value":"211021","parent":"211000"},{"name":"灯塔市","value":"211081","parent":"211000"},{"name":"双台子区","value":"211102","parent":"211100"},{"name":"兴隆台区","value":"211103","parent":"211100"},{"name":"大洼县","value":"211121","parent":"211100"},{"name":"盘山县","value":"211122","parent":"211100"},{"name":"银州区","value":"211202","parent":"211200"},{"name":"清河区","value":"211204","parent":"211200"},{"name":"铁岭县","value":"211221","parent":"211200"},{"name":"西丰县","value":"211223","parent":"211200"},{"name":"昌图县","value":"211224","parent":"211200"},{"name":"调兵山市","value":"211281","parent":"211200"},{"name":"开原市","value":"211282","parent":"211200"},{"name":"双塔区","value":"211302","parent":"211300"},{"name":"龙城区","value":"211303","parent":"211300"},{"name":"朝阳县","value":"211321","parent":"211300"},{"name":"建平县","value":"211322","parent":"211300"},{"name":"喀喇沁左翼蒙古族自治县","value":"211324","parent":"211300"},{"name":"北票市","value":"211381","parent":"211300"},{"name":"凌源市","value":"211382","parent":"211300"},{"name":"连山区","value":"211402","parent":"211400"},{"name":"龙港区","value":"211403","parent":"211400"},{"name":"南票区","value":"211404","parent":"211400"},{"name":"绥中县","value":"211421","parent":"211400"},{"name":"建昌县","value":"211422","parent":"211400"},{"name":"兴城市","value":"211481","parent":"211400"},{"name":"长春市","value":"220100","parent":"220000"},{"name":"吉林市","value":"220200","parent":"220000"},{"name":"四平市","value":"220300","parent":"220000"},{"name":"辽源市","value":"220400","parent":"220000"},{"name":"通化市","value":"220500","parent":"220000"},{"name":"白山市","value":"220600","parent":"220000"},{"name":"松原市","value":"220700","parent":"220000"},{"name":"白城市","value":"220800","parent":"220000"},{"name":"延边朝鲜族自治州","value":"222400","parent":"220000"},{"name":"南关区","value":"220102","parent":"220100"},{"name":"宽城区","value":"220103","parent":"220100"},{"name":"朝阳区","value":"220104","parent":"220100"},{"name":"二道区","value":"220105","parent":"220100"},{"name":"绿园区","value":"220106","parent":"220100"},{"name":"双阳区","value":"220112","parent":"220100"},{"name":"九台区","value":"220113","parent":"220100"},{"name":"农安县","value":"220122","parent":"220100"},{"name":"榆树市","value":"220182","parent":"220100"},{"name":"德惠市","value":"220183","parent":"220100"},{"name":"昌邑区","value":"220202","parent":"220200"},{"name":"龙潭区","value":"220203","parent":"220200"},{"name":"船营区","value":"220204","parent":"220200"},{"name":"丰满区","value":"220211","parent":"220200"},{"name":"永吉县","value":"220221","parent":"220200"},{"name":"蛟河市","value":"220281","parent":"220200"},{"name":"桦甸市","value":"220282","parent":"220200"},{"name":"舒兰市","value":"220283","parent":"220200"},{"name":"磐石市","value":"220284","parent":"220200"},{"name":"铁西区","value":"220302","parent":"220300"},{"name":"铁东区","value":"220303","parent":"220300"},{"name":"梨树县","value":"220322","parent":"220300"},{"name":"伊通满族自治县","value":"220323","parent":"220300"},{"name":"公主岭市","value":"220381","parent":"220300"},{"name":"双辽市","value":"220382","parent":"220300"},{"name":"龙山区","value":"220402","parent":"220400"},{"name":"西安区","value":"220403","parent":"220400"},{"name":"东丰县","value":"220421","parent":"220400"},{"name":"东辽县","value":"220422","parent":"220400"},{"name":"东昌区","value":"220502","parent":"220500"},{"name":"二道江区","value":"220503","parent":"220500"},{"name":"通化县","value":"220521","parent":"220500"},{"name":"辉南县","value":"220523","parent":"220500"},{"name":"柳河县","value":"220524","parent":"220500"},{"name":"梅河口市","value":"220581","parent":"220500"},{"name":"集安市","value":"220582","parent":"220500"},{"name":"浑江区","value":"220602","parent":"220600"},{"name":"江源区","value":"220605","parent":"220600"},{"name":"抚松县","value":"220621","parent":"220600"},{"name":"靖宇县","value":"220622","parent":"220600"},{"name":"长白朝鲜族自治县","value":"220623","parent":"220600"},{"name":"临江市","value":"220681","parent":"220600"},{"name":"宁江区","value":"220702","parent":"220700"},{"name":"前郭尔罗斯蒙古族自治县","value":"220721","parent":"220700"},{"name":"长岭县","value":"220722","parent":"220700"},{"name":"乾安县","value":"220723","parent":"220700"},{"name":"扶余市","value":"220781","parent":"220700"},{"name":"洮北区","value":"220802","parent":"220800"},{"name":"镇赉县","value":"220821","parent":"220800"},{"name":"通榆县","value":"220822","parent":"220800"},{"name":"洮南市","value":"220881","parent":"220800"},{"name":"大安市","value":"220882","parent":"220800"},{"name":"延吉市","value":"222401","parent":"222400"},{"name":"图们市","value":"222402","parent":"222400"},{"name":"敦化市","value":"222403","parent":"222400"},{"name":"珲春市","value":"222404","parent":"222400"},{"name":"龙井市","value":"222405","parent":"222400"},{"name":"和龙市","value":"222406","parent":"222400"},{"name":"汪清县","value":"222424","parent":"222400"},{"name":"安图县","value":"222426","parent":"222400"},{"name":"哈尔滨市","value":"230100","parent":"230000"},{"name":"齐齐哈尔市","value":"230200","parent":"230000"},{"name":"鸡西市","value":"230300","parent":"230000"},{"name":"鹤岗市","value":"230400","parent":"230000"},{"name":"双鸭山市","value":"230500","parent":"230000"},{"name":"大庆市","value":"230600","parent":"230000"},{"name":"伊春市","value":"230700","parent":"230000"},{"name":"佳木斯市","value":"230800","parent":"230000"},{"name":"七台河市","value":"230900","parent":"230000"},{"name":"牡丹江市","value":"231000","parent":"230000"},{"name":"黑河市","value":"231100","parent":"230000"},{"name":"绥化市","value":"231200","parent":"230000"},{"name":"大兴安岭地区","value":"232700","parent":"230000"},{"name":"道里区","value":"230102","parent":"230100"},{"name":"南岗区","value":"230103","parent":"230100"},{"name":"道外区","value":"230104","parent":"230100"},{"name":"平房区","value":"230108","parent":"230100"},{"name":"松北区","value":"230109","parent":"230100"},{"name":"香坊区","value":"230110","parent":"230100"},{"name":"呼兰区","value":"230111","parent":"230100"},{"name":"阿城区","value":"230112","parent":"230100"},{"name":"双城区","value":"230113","parent":"230100"},{"name":"依兰县","value":"230123","parent":"230100"},{"name":"方正县","value":"230124","parent":"230100"},{"name":"宾县","value":"230125","parent":"230100"},{"name":"巴彦县","value":"230126","parent":"230100"},{"name":"木兰县","value":"230127","parent":"230100"},{"name":"通河县","value":"230128","parent":"230100"},{"name":"延寿县","value":"230129","parent":"230100"},{"name":"尚志市","value":"230183","parent":"230100"},{"name":"五常市","value":"230184","parent":"230100"},{"name":"龙沙区","value":"230202","parent":"230200"},{"name":"建华区","value":"230203","parent":"230200"},{"name":"铁锋区","value":"230204","parent":"230200"},{"name":"昂昂溪区","value":"230205","parent":"230200"},{"name":"富拉尔基区","value":"230206","parent":"230200"},{"name":"碾子山区","value":"230207","parent":"230200"},{"name":"梅里斯达斡尔族区","value":"230208","parent":"230200"},{"name":"龙江县","value":"230221","parent":"230200"},{"name":"依安县","value":"230223","parent":"230200"},{"name":"泰来县","value":"230224","parent":"230200"},{"name":"甘南县","value":"230225","parent":"230200"},{"name":"富裕县","value":"230227","parent":"230200"},{"name":"克山县","value":"230229","parent":"230200"},{"name":"克东县","value":"230230","parent":"230200"},{"name":"拜泉县","value":"230231","parent":"230200"},{"name":"讷河市","value":"230281","parent":"230200"},{"name":"鸡冠区","value":"230302","parent":"230300"},{"name":"恒山区","value":"230303","parent":"230300"},{"name":"滴道区","value":"230304","parent":"230300"},{"name":"梨树区","value":"230305","parent":"230300"},{"name":"城子河区","value":"230306","parent":"230300"},{"name":"麻山区","value":"230307","parent":"230300"},{"name":"鸡东县","value":"230321","parent":"230300"},{"name":"虎林市","value":"230381","parent":"230300"},{"name":"密山市","value":"230382","parent":"230300"},{"name":"向阳区","value":"230402","parent":"230400"},{"name":"工农区","value":"230403","parent":"230400"},{"name":"南山区","value":"230404","parent":"230400"},{"name":"兴安区","value":"230405","parent":"230400"},{"name":"东山区","value":"230406","parent":"230400"},{"name":"兴山区","value":"230407","parent":"230400"},{"name":"萝北县","value":"230421","parent":"230400"},{"name":"绥滨县","value":"230422","parent":"230400"},{"name":"尖山区","value":"230502","parent":"230500"},{"name":"岭东区","value":"230503","parent":"230500"},{"name":"四方台区","value":"230505","parent":"230500"},{"name":"宝山区","value":"230506","parent":"230500"},{"name":"集贤县","value":"230521","parent":"230500"},{"name":"友谊县","value":"230522","parent":"230500"},{"name":"宝清县","value":"230523","parent":"230500"},{"name":"饶河县","value":"230524","parent":"230500"},{"name":"萨尔图区","value":"230602","parent":"230600"},{"name":"龙凤区","value":"230603","parent":"230600"},{"name":"让胡路区","value":"230604","parent":"230600"},{"name":"红岗区","value":"230605","parent":"230600"},{"name":"大同区","value":"230606","parent":"230600"},{"name":"肇州县","value":"230621","parent":"230600"},{"name":"肇源县","value":"230622","parent":"230600"},{"name":"林甸县","value":"230623","parent":"230600"},{"name":"杜尔伯特蒙古族自治县","value":"230624","parent":"230600"},{"name":"伊春区","value":"230702","parent":"230700"},{"name":"南岔区","value":"230703","parent":"230700"},{"name":"友好区","value":"230704","parent":"230700"},{"name":"西林区","value":"230705","parent":"230700"},{"name":"翠峦区","value":"230706","parent":"230700"},{"name":"新青区","value":"230707","parent":"230700"},{"name":"美溪区","value":"230708","parent":"230700"},{"name":"金山屯区","value":"230709","parent":"230700"},{"name":"五营区","value":"230710","parent":"230700"},{"name":"乌马河区","value":"230711","parent":"230700"},{"name":"汤旺河区","value":"230712","parent":"230700"},{"name":"带岭区","value":"230713","parent":"230700"},{"name":"乌伊岭区","value":"230714","parent":"230700"},{"name":"红星区","value":"230715","parent":"230700"},{"name":"上甘岭区","value":"230716","parent":"230700"},{"name":"嘉荫县","value":"230722","parent":"230700"},{"name":"铁力市","value":"230781","parent":"230700"},{"name":"向阳区","value":"230803","parent":"230800"},{"name":"前进区","value":"230804","parent":"230800"},{"name":"东风区","value":"230805","parent":"230800"},{"name":"郊区","value":"230811","parent":"230800"},{"name":"桦南县","value":"230822","parent":"230800"},{"name":"桦川县","value":"230826","parent":"230800"},{"name":"汤原县","value":"230828","parent":"230800"},{"name":"抚远县","value":"230833","parent":"230800"},{"name":"同江市","value":"230881","parent":"230800"},{"name":"富锦市","value":"230882","parent":"230800"},{"name":"新兴区","value":"230902","parent":"230900"},{"name":"桃山区","value":"230903","parent":"230900"},{"name":"茄子河区","value":"230904","parent":"230900"},{"name":"勃利县","value":"230921","parent":"230900"},{"name":"东安区","value":"231002","parent":"231000"},{"name":"阳明区","value":"231003","parent":"231000"},{"name":"爱民区","value":"231004","parent":"231000"},{"name":"西安区","value":"231005","parent":"231000"},{"name":"东宁县","value":"231024","parent":"231000"},{"name":"林口县","value":"231025","parent":"231000"},{"name":"绥芬河市","value":"231081","parent":"231000"},{"name":"海林市","value":"231083","parent":"231000"},{"name":"宁安市","value":"231084","parent":"231000"},{"name":"穆棱市","value":"231085","parent":"231000"},{"name":"爱辉区","value":"231102","parent":"231100"},{"name":"嫩江县","value":"231121","parent":"231100"},{"name":"逊克县","value":"231123","parent":"231100"},{"name":"孙吴县","value":"231124","parent":"231100"},{"name":"北安市","value":"231181","parent":"231100"},{"name":"五大连池市","value":"231182","parent":"231100"},{"name":"北林区","value":"231202","parent":"231200"},{"name":"望奎县","value":"231221","parent":"231200"},{"name":"兰西县","value":"231222","parent":"231200"},{"name":"青冈县","value":"231223","parent":"231200"},{"name":"庆安县","value":"231224","parent":"231200"},{"name":"明水县","value":"231225","parent":"231200"},{"name":"绥棱县","value":"231226","parent":"231200"},{"name":"安达市","value":"231281","parent":"231200"},{"name":"肇东市","value":"231282","parent":"231200"},{"name":"海伦市","value":"231283","parent":"231200"},{"name":"加格达奇区","value":"232701","parent":"232700"},{"name":"呼玛县","value":"232721","parent":"232700"},{"name":"塔河县","value":"232722","parent":"232700"},{"name":"漠河县","value":"232723","parent":"232700"},{"name":"上海市市辖区","value":"310100","parent":"310000"},{"name":"上海市郊县","value":"310200","parent":"310000"},{"name":"黄浦区","value":"310101","parent":"310100"},{"name":"徐汇区","value":"310104","parent":"310100"},{"name":"长宁区","value":"310105","parent":"310100"},{"name":"静安区","value":"310106","parent":"310100"},{"name":"普陀区","value":"310107","parent":"310100"},{"name":"闸北区","value":"310108","parent":"310100"},{"name":"虹口区","value":"310109","parent":"310100"},{"name":"杨浦区","value":"310110","parent":"310100"},{"name":"闵行区","value":"310112","parent":"310100"},{"name":"宝山区","value":"310113","parent":"310100"},{"name":"嘉定区","value":"310114","parent":"310100"},{"name":"浦东新区","value":"310115","parent":"310100"},{"name":"金山区","value":"310116","parent":"310100"},{"name":"松江区","value":"310117","parent":"310100"},{"name":"青浦区","value":"310118","parent":"310100"},{"name":"奉贤区","value":"310120","parent":"310100"},{"name":"崇明县","value":"310230","parent":"310100"},{"name":"南京市","value":"320100","parent":"320000"},{"name":"无锡市","value":"320200","parent":"320000"},{"name":"徐州市","value":"320300","parent":"320000"},{"name":"常州市","value":"320400","parent":"320000"},{"name":"苏州市","value":"320500","parent":"320000"},{"name":"南通市","value":"320600","parent":"320000"},{"name":"连云港市","value":"320700","parent":"320000"},{"name":"淮安市","value":"320800","parent":"320000"},{"name":"盐城市","value":"320900","parent":"320000"},{"name":"扬州市","value":"321000","parent":"320000"},{"name":"镇江市","value":"321100","parent":"320000"},{"name":"泰州市","value":"321200","parent":"320000"},{"name":"宿迁市","value":"321300","parent":"320000"},{"name":"玄武区","value":"320102","parent":"320100"},{"name":"秦淮区","value":"320104","parent":"320100"},{"name":"建邺区","value":"320105","parent":"320100"},{"name":"鼓楼区","value":"320106","parent":"320100"},{"name":"浦口区","value":"320111","parent":"320100"},{"name":"栖霞区","value":"320113","parent":"320100"},{"name":"雨花台区","value":"320114","parent":"320100"},{"name":"江宁区","value":"320115","parent":"320100"},{"name":"六合区","value":"320116","parent":"320100"},{"name":"溧水区","value":"320117","parent":"320100"},{"name":"高淳区","value":"320118","parent":"320100"},{"name":"崇安区","value":"320202","parent":"320200"},{"name":"南长区","value":"320203","parent":"320200"},{"name":"北塘区","value":"320204","parent":"320200"},{"name":"锡山区","value":"320205","parent":"320200"},{"name":"惠山区","value":"320206","parent":"320200"},{"name":"滨湖区","value":"320211","parent":"320200"},{"name":"江阴市","value":"320281","parent":"320200"},{"name":"宜兴市","value":"320282","parent":"320200"},{"name":"鼓楼区","value":"320302","parent":"320300"},{"name":"云龙区","value":"320303","parent":"320300"},{"name":"贾汪区","value":"320305","parent":"320300"},{"name":"泉山区","value":"320311","parent":"320300"},{"name":"铜山区","value":"320312","parent":"320300"},{"name":"丰县","value":"320321","parent":"320300"},{"name":"沛县","value":"320322","parent":"320300"},{"name":"睢宁县","value":"320324","parent":"320300"},{"name":"新沂市","value":"320381","parent":"320300"},{"name":"邳州市","value":"320382","parent":"320300"},{"name":"天宁区","value":"320402","parent":"320400"},{"name":"钟楼区","value":"320404","parent":"320400"},{"name":"新北区","value":"320411","parent":"320400"},{"name":"武进区","value":"320412","parent":"320400"},{"name":"金坛区","value":"320413","parent":"320400"},{"name":"溧阳市","value":"320481","parent":"320400"},{"name":"虎丘区","value":"320505","parent":"320500"},{"name":"吴中区","value":"320506","parent":"320500"},{"name":"相城区","value":"320507","parent":"320500"},{"name":"姑苏区","value":"320508","parent":"320500"},{"name":"吴江区","value":"320509","parent":"320500"},{"name":"常熟市","value":"320581","parent":"320500"},{"name":"张家港市","value":"320582","parent":"320500"},{"name":"昆山市","value":"320583","parent":"320500"},{"name":"太仓市","value":"320585","parent":"320500"},{"name":"崇川区","value":"320602","parent":"320600"},{"name":"港闸区","value":"320611","parent":"320600"},{"name":"通州区","value":"320612","parent":"320600"},{"name":"海安县","value":"320621","parent":"320600"},{"name":"如东县","value":"320623","parent":"320600"},{"name":"启东市","value":"320681","parent":"320600"},{"name":"如皋市","value":"320682","parent":"320600"},{"name":"海门市","value":"320684","parent":"320600"},{"name":"连云区","value":"320703","parent":"320700"},{"name":"海州区","value":"320706","parent":"320700"},{"name":"赣榆区","value":"320707","parent":"320700"},{"name":"东海县","value":"320722","parent":"320700"},{"name":"灌云县","value":"320723","parent":"320700"},{"name":"灌南县","value":"320724","parent":"320700"},{"name":"清河区","value":"320802","parent":"320800"},{"name":"淮安区","value":"320803","parent":"320800"},{"name":"淮阴区","value":"320804","parent":"320800"},{"name":"清浦区","value":"320811","parent":"320800"},{"name":"涟水县","value":"320826","parent":"320800"},{"name":"洪泽县","value":"320829","parent":"320800"},{"name":"盱眙县","value":"320830","parent":"320800"},{"name":"金湖县","value":"320831","parent":"320800"},{"name":"亭湖区","value":"320902","parent":"320900"},{"name":"盐都区","value":"320903","parent":"320900"},{"name":"大丰区","value":"320904","parent":"320900"},{"name":"响水县","value":"320921","parent":"320900"},{"name":"滨海县","value":"320922","parent":"320900"},{"name":"阜宁县","value":"320923","parent":"320900"},{"name":"射阳县","value":"320924","parent":"320900"},{"name":"建湖县","value":"320925","parent":"320900"},{"name":"东台市","value":"320981","parent":"320900"},{"name":"广陵区","value":"321002","parent":"321000"},{"name":"邗江区","value":"321003","parent":"321000"},{"name":"江都区","value":"321012","parent":"321000"},{"name":"宝应县","value":"321023","parent":"321000"},{"name":"仪征市","value":"321081","parent":"321000"},{"name":"高邮市","value":"321084","parent":"321000"},{"name":"京口区","value":"321102","parent":"321100"},{"name":"润州区","value":"321111","parent":"321100"},{"name":"丹徒区","value":"321112","parent":"321100"},{"name":"丹阳市","value":"321181","parent":"321100"},{"name":"扬中市","value":"321182","parent":"321100"},{"name":"句容市","value":"321183","parent":"321100"},{"name":"海陵区","value":"321202","parent":"321200"},{"name":"高港区","value":"321203","parent":"321200"},{"name":"姜堰区","value":"321204","parent":"321200"},{"name":"兴化市","value":"321281","parent":"321200"},{"name":"靖江市","value":"321282","parent":"321200"},{"name":"泰兴市","value":"321283","parent":"321200"},{"name":"宿城区","value":"321302","parent":"321300"},{"name":"宿豫区","value":"321311","parent":"321300"},{"name":"沭阳县","value":"321322","parent":"321300"},{"name":"泗阳县","value":"321323","parent":"321300"},{"name":"泗洪县","value":"321324","parent":"321300"},{"name":"杭州市","value":"330100","parent":"330000"},{"name":"宁波市","value":"330200","parent":"330000"},{"name":"温州市","value":"330300","parent":"330000"},{"name":"嘉兴市","value":"330400","parent":"330000"},{"name":"湖州市","value":"330500","parent":"330000"},{"name":"绍兴市","value":"330600","parent":"330000"},{"name":"金华市","value":"330700","parent":"330000"},{"name":"衢州市","value":"330800","parent":"330000"},{"name":"舟山市","value":"330900","parent":"330000"},{"name":"台州市","value":"331000","parent":"330000"},{"name":"丽水市","value":"331100","parent":"330000"},{"name":"上城区","value":"330102","parent":"330100"},{"name":"下城区","value":"330103","parent":"330100"},{"name":"江干区","value":"330104","parent":"330100"},{"name":"拱墅区","value":"330105","parent":"330100"},{"name":"西湖区","value":"330106","parent":"330100"},{"name":"滨江区","value":"330108","parent":"330100"},{"name":"萧山区","value":"330109","parent":"330100"},{"name":"余杭区","value":"330110","parent":"330100"},{"name":"富阳区","value":"330111","parent":"330100"},{"name":"桐庐县","value":"330122","parent":"330100"},{"name":"淳安县","value":"330127","parent":"330100"},{"name":"建德市","value":"330182","parent":"330100"},{"name":"临安市","value":"330185","parent":"330100"},{"name":"海曙区","value":"330203","parent":"330200"},{"name":"江东区","value":"330204","parent":"330200"},{"name":"江北区","value":"330205","parent":"330200"},{"name":"北仑区","value":"330206","parent":"330200"},{"name":"镇海区","value":"330211","parent":"330200"},{"name":"鄞州区","value":"330212","parent":"330200"},{"name":"象山县","value":"330225","parent":"330200"},{"name":"宁海县","value":"330226","parent":"330200"},{"name":"余姚市","value":"330281","parent":"330200"},{"name":"慈溪市","value":"330282","parent":"330200"},{"name":"奉化市","value":"330283","parent":"330200"},{"name":"鹿城区","value":"330302","parent":"330300"},{"name":"龙湾区","value":"330303","parent":"330300"},{"name":"瓯海区","value":"330304","parent":"330300"},{"name":"洞头区","value":"330305","parent":"330300"},{"name":"永嘉县","value":"330324","parent":"330300"},{"name":"平阳县","value":"330326","parent":"330300"},{"name":"苍南县","value":"330327","parent":"330300"},{"name":"文成县","value":"330328","parent":"330300"},{"name":"泰顺县","value":"330329","parent":"330300"},{"name":"瑞安市","value":"330381","parent":"330300"},{"name":"乐清市","value":"330382","parent":"330300"},{"name":"南湖区","value":"330402","parent":"330400"},{"name":"秀洲区","value":"330411","parent":"330400"},{"name":"嘉善县","value":"330421","parent":"330400"},{"name":"海盐县","value":"330424","parent":"330400"},{"name":"海宁市","value":"330481","parent":"330400"},{"name":"平湖市","value":"330482","parent":"330400"},{"name":"桐乡市","value":"330483","parent":"330400"},{"name":"吴兴区","value":"330502","parent":"330500"},{"name":"南浔区","value":"330503","parent":"330500"},{"name":"德清县","value":"330521","parent":"330500"},{"name":"长兴县","value":"330522","parent":"330500"},{"name":"安吉县","value":"330523","parent":"330500"},{"name":"越城区","value":"330602","parent":"330600"},{"name":"柯桥区","value":"330603","parent":"330600"},{"name":"上虞区","value":"330604","parent":"330600"},{"name":"新昌县","value":"330624","parent":"330600"},{"name":"诸暨市","value":"330681","parent":"330600"},{"name":"嵊州市","value":"330683","parent":"330600"},{"name":"婺城区","value":"330702","parent":"330700"},{"name":"金东区","value":"330703","parent":"330700"},{"name":"武义县","value":"330723","parent":"330700"},{"name":"浦江县","value":"330726","parent":"330700"},{"name":"磐安县","value":"330727","parent":"330700"},{"name":"兰溪市","value":"330781","parent":"330700"},{"name":"义乌市","value":"330782","parent":"330700"},{"name":"东阳市","value":"330783","parent":"330700"},{"name":"永康市","value":"330784","parent":"330700"},{"name":"柯城区","value":"330802","parent":"330800"},{"name":"衢江区","value":"330803","parent":"330800"},{"name":"常山县","value":"330822","parent":"330800"},{"name":"开化县","value":"330824","parent":"330800"},{"name":"龙游县","value":"330825","parent":"330800"},{"name":"江山市","value":"330881","parent":"330800"},{"name":"定海区","value":"330902","parent":"330900"},{"name":"普陀区","value":"330903","parent":"330900"},{"name":"岱山县","value":"330921","parent":"330900"},{"name":"嵊泗县","value":"330922","parent":"330900"},{"name":"椒江区","value":"331002","parent":"331000"},{"name":"黄岩区","value":"331003","parent":"331000"},{"name":"路桥区","value":"331004","parent":"331000"},{"name":"玉环县","value":"331021","parent":"331000"},{"name":"三门县","value":"331022","parent":"331000"},{"name":"天台县","value":"331023","parent":"331000"},{"name":"仙居县","value":"331024","parent":"331000"},{"name":"温岭市","value":"331081","parent":"331000"},{"name":"临海市","value":"331082","parent":"331000"},{"name":"莲都区","value":"331102","parent":"331100"},{"name":"青田县","value":"331121","parent":"331100"},{"name":"缙云县","value":"331122","parent":"331100"},{"name":"遂昌县","value":"331123","parent":"331100"},{"name":"松阳县","value":"331124","parent":"331100"},{"name":"云和县","value":"331125","parent":"331100"},{"name":"庆元县","value":"331126","parent":"331100"},{"name":"景宁畲族自治县","value":"331127","parent":"331100"},{"name":"龙泉市","value":"331181","parent":"331100"},{"name":"合肥市","value":"340100","parent":"340000"},{"name":"芜湖市","value":"340200","parent":"340000"},{"name":"蚌埠市","value":"340300","parent":"340000"},{"name":"淮南市","value":"340400","parent":"340000"},{"name":"马鞍山市","value":"340500","parent":"340000"},{"name":"淮北市","value":"340600","parent":"340000"},{"name":"铜陵市","value":"340700","parent":"340000"},{"name":"安庆市","value":"340800","parent":"340000"},{"name":"黄山市","value":"341000","parent":"340000"},{"name":"滁州市","value":"341100","parent":"340000"},{"name":"阜阳市","value":"341200","parent":"340000"},{"name":"宿州市","value":"341300","parent":"340000"},{"name":"六安市","value":"341500","parent":"340000"},{"name":"亳州市","value":"341600","parent":"340000"},{"name":"池州市","value":"341700","parent":"340000"},{"name":"宣城市","value":"341800","parent":"340000"},{"name":"瑶海区","value":"340102","parent":"340100"},{"name":"庐阳区","value":"340103","parent":"340100"},{"name":"蜀山区","value":"340104","parent":"340100"},{"name":"包河区","value":"340111","parent":"340100"},{"name":"长丰县","value":"340121","parent":"340100"},{"name":"肥东县","value":"340122","parent":"340100"},{"name":"肥西县","value":"340123","parent":"340100"},{"name":"庐江县","value":"340124","parent":"340100"},{"name":"巢湖市","value":"340181","parent":"340100"},{"name":"镜湖区","value":"340202","parent":"340200"},{"name":"弋江区","value":"340203","parent":"340200"},{"name":"鸠江区","value":"340207","parent":"340200"},{"name":"三山区","value":"340208","parent":"340200"},{"name":"芜湖县","value":"340221","parent":"340200"},{"name":"繁昌县","value":"340222","parent":"340200"},{"name":"南陵县","value":"340223","parent":"340200"},{"name":"无为县","value":"340225","parent":"340200"},{"name":"龙子湖区","value":"340302","parent":"340300"},{"name":"蚌山区","value":"340303","parent":"340300"},{"name":"禹会区","value":"340304","parent":"340300"},{"name":"淮上区","value":"340311","parent":"340300"},{"name":"怀远县","value":"340321","parent":"340300"},{"name":"五河县","value":"340322","parent":"340300"},{"name":"固镇县","value":"340323","parent":"340300"},{"name":"大通区","value":"340402","parent":"340400"},{"name":"田家庵区","value":"340403","parent":"340400"},{"name":"谢家集区","value":"340404","parent":"340400"},{"name":"八公山区","value":"340405","parent":"340400"},{"name":"潘集区","value":"340406","parent":"340400"},{"name":"凤台县","value":"340421","parent":"340400"},{"name":"花山区","value":"340503","parent":"340500"},{"name":"雨山区","value":"340504","parent":"340500"},{"name":"博望区","value":"340506","parent":"340500"},{"name":"当涂县","value":"340521","parent":"340500"},{"name":"含山县","value":"340522","parent":"340500"},{"name":"和县","value":"340523","parent":"340500"},{"name":"杜集区","value":"340602","parent":"340600"},{"name":"相山区","value":"340603","parent":"340600"},{"name":"烈山区","value":"340604","parent":"340600"},{"name":"濉溪县","value":"340621","parent":"340600"},{"name":"铜官山区","value":"340702","parent":"340700"},{"name":"狮子山区","value":"340703","parent":"340700"},{"name":"郊区","value":"340711","parent":"340700"},{"name":"铜陵县","value":"340721","parent":"340700"},{"name":"迎江区","value":"340802","parent":"340800"},{"name":"大观区","value":"340803","parent":"340800"},{"name":"宜秀区","value":"340811","parent":"340800"},{"name":"怀宁县","value":"340822","parent":"340800"},{"name":"枞阳县","value":"340823","parent":"340800"},{"name":"潜山县","value":"340824","parent":"340800"},{"name":"太湖县","value":"340825","parent":"340800"},{"name":"宿松县","value":"340826","parent":"340800"},{"name":"望江县","value":"340827","parent":"340800"},{"name":"岳西县","value":"340828","parent":"340800"},{"name":"桐城市","value":"340881","parent":"340800"},{"name":"屯溪区","value":"341002","parent":"341000"},{"name":"黄山区","value":"341003","parent":"341000"},{"name":"徽州区","value":"341004","parent":"341000"},{"name":"歙县","value":"341021","parent":"341000"},{"name":"休宁县","value":"341022","parent":"341000"},{"name":"黟县","value":"341023","parent":"341000"},{"name":"祁门县","value":"341024","parent":"341000"},{"name":"琅琊区","value":"341102","parent":"341100"},{"name":"南谯区","value":"341103","parent":"341100"},{"name":"来安县","value":"341122","parent":"341100"},{"name":"全椒县","value":"341124","parent":"341100"},{"name":"定远县","value":"341125","parent":"341100"},{"name":"凤阳县","value":"341126","parent":"341100"},{"name":"天长市","value":"341181","parent":"341100"},{"name":"明光市","value":"341182","parent":"341100"},{"name":"颍州区","value":"341202","parent":"341200"},{"name":"颍东区","value":"341203","parent":"341200"},{"name":"颍泉区","value":"341204","parent":"341200"},{"name":"临泉县","value":"341221","parent":"341200"},{"name":"太和县","value":"341222","parent":"341200"},{"name":"阜南县","value":"341225","parent":"341200"},{"name":"颍上县","value":"341226","parent":"341200"},{"name":"界首市","value":"341282","parent":"341200"},{"name":"埇桥区","value":"341302","parent":"341300"},{"name":"砀山县","value":"341321","parent":"341300"},{"name":"萧县","value":"341322","parent":"341300"},{"name":"灵璧县","value":"341323","parent":"341300"},{"name":"泗县","value":"341324","parent":"341300"},{"name":"金安区","value":"341502","parent":"341500"},{"name":"裕安区","value":"341503","parent":"341500"},{"name":"寿县","value":"341521","parent":"341500"},{"name":"霍邱县","value":"341522","parent":"341500"},{"name":"舒城县","value":"341523","parent":"341500"},{"name":"金寨县","value":"341524","parent":"341500"},{"name":"霍山县","value":"341525","parent":"341500"},{"name":"谯城区","value":"341602","parent":"341600"},{"name":"涡阳县","value":"341621","parent":"341600"},{"name":"蒙城县","value":"341622","parent":"341600"},{"name":"利辛县","value":"341623","parent":"341600"},{"name":"贵池区","value":"341702","parent":"341700"},{"name":"东至县","value":"341721","parent":"341700"},{"name":"石台县","value":"341722","parent":"341700"},{"name":"青阳县","value":"341723","parent":"341700"},{"name":"宣州区","value":"341802","parent":"341800"},{"name":"郎溪县","value":"341821","parent":"341800"},{"name":"广德县","value":"341822","parent":"341800"},{"name":"泾县","value":"341823","parent":"341800"},{"name":"绩溪县","value":"341824","parent":"341800"},{"name":"旌德县","value":"341825","parent":"341800"},{"name":"宁国市","value":"341881","parent":"341800"},{"name":"福州市","value":"350100","parent":"350000"},{"name":"厦门市","value":"350200","parent":"350000"},{"name":"莆田市","value":"350300","parent":"350000"},{"name":"三明市","value":"350400","parent":"350000"},{"name":"泉州市","value":"350500","parent":"350000"},{"name":"漳州市","value":"350600","parent":"350000"},{"name":"南平市","value":"350700","parent":"350000"},{"name":"龙岩市","value":"350800","parent":"350000"},{"name":"宁德市","value":"350900","parent":"350000"},{"name":"鼓楼区","value":"350102","parent":"350100"},{"name":"台江区","value":"350103","parent":"350100"},{"name":"仓山区","value":"350104","parent":"350100"},{"name":"马尾区","value":"350105","parent":"350100"},{"name":"晋安区","value":"350111","parent":"350100"},{"name":"闽侯县","value":"350121","parent":"350100"},{"name":"连江县","value":"350122","parent":"350100"},{"name":"罗源县","value":"350123","parent":"350100"},{"name":"闽清县","value":"350124","parent":"350100"},{"name":"永泰县","value":"350125","parent":"350100"},{"name":"平潭县","value":"350128","parent":"350100"},{"name":"福清市","value":"350181","parent":"350100"},{"name":"长乐市","value":"350182","parent":"350100"},{"name":"思明区","value":"350203","parent":"350200"},{"name":"海沧区","value":"350205","parent":"350200"},{"name":"湖里区","value":"350206","parent":"350200"},{"name":"集美区","value":"350211","parent":"350200"},{"name":"同安区","value":"350212","parent":"350200"},{"name":"翔安区","value":"350213","parent":"350200"},{"name":"城厢区","value":"350302","parent":"350300"},{"name":"涵江区","value":"350303","parent":"350300"},{"name":"荔城区","value":"350304","parent":"350300"},{"name":"秀屿区","value":"350305","parent":"350300"},{"name":"仙游县","value":"350322","parent":"350300"},{"name":"梅列区","value":"350402","parent":"350400"},{"name":"三元区","value":"350403","parent":"350400"},{"name":"明溪县","value":"350421","parent":"350400"},{"name":"清流县","value":"350423","parent":"350400"},{"name":"宁化县","value":"350424","parent":"350400"},{"name":"大田县","value":"350425","parent":"350400"},{"name":"尤溪县","value":"350426","parent":"350400"},{"name":"沙县","value":"350427","parent":"350400"},{"name":"将乐县","value":"350428","parent":"350400"},{"name":"泰宁县","value":"350429","parent":"350400"},{"name":"建宁县","value":"350430","parent":"350400"},{"name":"永安市","value":"350481","parent":"350400"},{"name":"鲤城区","value":"350502","parent":"350500"},{"name":"丰泽区","value":"350503","parent":"350500"},{"name":"洛江区","value":"350504","parent":"350500"},{"name":"泉港区","value":"350505","parent":"350500"},{"name":"惠安县","value":"350521","parent":"350500"},{"name":"安溪县","value":"350524","parent":"350500"},{"name":"永春县","value":"350525","parent":"350500"},{"name":"德化县","value":"350526","parent":"350500"},{"name":"金门县","value":"350527","parent":"350500"},{"name":"石狮市","value":"350581","parent":"350500"},{"name":"晋江市","value":"350582","parent":"350500"},{"name":"南安市","value":"350583","parent":"350500"},{"name":"芗城区","value":"350602","parent":"350600"},{"name":"龙文区","value":"350603","parent":"350600"},{"name":"云霄县","value":"350622","parent":"350600"},{"name":"漳浦县","value":"350623","parent":"350600"},{"name":"诏安县","value":"350624","parent":"350600"},{"name":"长泰县","value":"350625","parent":"350600"},{"name":"东山县","value":"350626","parent":"350600"},{"name":"南靖县","value":"350627","parent":"350600"},{"name":"平和县","value":"350628","parent":"350600"},{"name":"华安县","value":"350629","parent":"350600"},{"name":"龙海市","value":"350681","parent":"350600"},{"name":"延平区","value":"350702","parent":"350700"},{"name":"建阳区","value":"350703","parent":"350700"},{"name":"顺昌县","value":"350721","parent":"350700"},{"name":"浦城县","value":"350722","parent":"350700"},{"name":"光泽县","value":"350723","parent":"350700"},{"name":"松溪县","value":"350724","parent":"350700"},{"name":"政和县","value":"350725","parent":"350700"},{"name":"邵武市","value":"350781","parent":"350700"},{"name":"武夷山市","value":"350782","parent":"350700"},{"name":"建瓯市","value":"350783","parent":"350700"},{"name":"新罗区","value":"350802","parent":"350800"},{"name":"永定区","value":"350803","parent":"350800"},{"name":"长汀县","value":"350821","parent":"350800"},{"name":"上杭县","value":"350823","parent":"350800"},{"name":"武平县","value":"350824","parent":"350800"},{"name":"连城县","value":"350825","parent":"350800"},{"name":"漳平市","value":"350881","parent":"350800"},{"name":"蕉城区","value":"350902","parent":"350900"},{"name":"霞浦县","value":"350921","parent":"350900"},{"name":"古田县","value":"350922","parent":"350900"},{"name":"屏南县","value":"350923","parent":"350900"},{"name":"寿宁县","value":"350924","parent":"350900"},{"name":"周宁县","value":"350925","parent":"350900"},{"name":"柘荣县","value":"350926","parent":"350900"},{"name":"福安市","value":"350981","parent":"350900"},{"name":"福鼎市","value":"350982","parent":"350900"},{"name":"南昌市","value":"360100","parent":"360000"},{"name":"景德镇市","value":"360200","parent":"360000"},{"name":"萍乡市","value":"360300","parent":"360000"},{"name":"九江市","value":"360400","parent":"360000"},{"name":"新余市","value":"360500","parent":"360000"},{"name":"鹰潭市","value":"360600","parent":"360000"},{"name":"赣州市","value":"360700","parent":"360000"},{"name":"吉安市","value":"360800","parent":"360000"},{"name":"宜春市","value":"360900","parent":"360000"},{"name":"抚州市","value":"361000","parent":"360000"},{"name":"上饶市","value":"361100","parent":"360000"},{"name":"东湖区","value":"360102","parent":"360100"},{"name":"西湖区","value":"360103","parent":"360100"},{"name":"青云谱区","value":"360104","parent":"360100"},{"name":"湾里区","value":"360105","parent":"360100"},{"name":"青山湖区","value":"360111","parent":"360100"},{"name":"新建区","value":"360112","parent":"360100"},{"name":"南昌县","value":"360121","parent":"360100"},{"name":"安义县","value":"360123","parent":"360100"},{"name":"进贤县","value":"360124","parent":"360100"},{"name":"昌江区","value":"360202","parent":"360200"},{"name":"珠山区","value":"360203","parent":"360200"},{"name":"浮梁县","value":"360222","parent":"360200"},{"name":"乐平市","value":"360281","parent":"360200"},{"name":"安源区","value":"360302","parent":"360300"},{"name":"湘东区","value":"360313","parent":"360300"},{"name":"莲花县","value":"360321","parent":"360300"},{"name":"上栗县","value":"360322","parent":"360300"},{"name":"芦溪县","value":"360323","parent":"360300"},{"name":"庐山区","value":"360402","parent":"360400"},{"name":"浔阳区","value":"360403","parent":"360400"},{"name":"九江县","value":"360421","parent":"360400"},{"name":"武宁县","value":"360423","parent":"360400"},{"name":"修水县","value":"360424","parent":"360400"},{"name":"永修县","value":"360425","parent":"360400"},{"name":"德安县","value":"360426","parent":"360400"},{"name":"星子县","value":"360427","parent":"360400"},{"name":"都昌县","value":"360428","parent":"360400"},{"name":"湖口县","value":"360429","parent":"360400"},{"name":"彭泽县","value":"360430","parent":"360400"},{"name":"瑞昌市","value":"360481","parent":"360400"},{"name":"共青城市","value":"360482","parent":"360400"},{"name":"渝水区","value":"360502","parent":"360500"},{"name":"分宜县","value":"360521","parent":"360500"},{"name":"月湖区","value":"360602","parent":"360600"},{"name":"余江县","value":"360622","parent":"360600"},{"name":"贵溪市","value":"360681","parent":"360600"},{"name":"章贡区","value":"360702","parent":"360700"},{"name":"南康区","value":"360703","parent":"360700"},{"name":"赣县","value":"360721","parent":"360700"},{"name":"信丰县","value":"360722","parent":"360700"},{"name":"大余县","value":"360723","parent":"360700"},{"name":"上犹县","value":"360724","parent":"360700"},{"name":"崇义县","value":"360725","parent":"360700"},{"name":"安远县","value":"360726","parent":"360700"},{"name":"龙南县","value":"360727","parent":"360700"},{"name":"定南县","value":"360728","parent":"360700"},{"name":"全南县","value":"360729","parent":"360700"},{"name":"宁都县","value":"360730","parent":"360700"},{"name":"于都县","value":"360731","parent":"360700"},{"name":"兴国县","value":"360732","parent":"360700"},{"name":"会昌县","value":"360733","parent":"360700"},{"name":"寻乌县","value":"360734","parent":"360700"},{"name":"石城县","value":"360735","parent":"360700"},{"name":"瑞金市","value":"360781","parent":"360700"},{"name":"吉州区","value":"360802","parent":"360800"},{"name":"青原区","value":"360803","parent":"360800"},{"name":"吉安县","value":"360821","parent":"360800"},{"name":"吉水县","value":"360822","parent":"360800"},{"name":"峡江县","value":"360823","parent":"360800"},{"name":"新干县","value":"360824","parent":"360800"},{"name":"永丰县","value":"360825","parent":"360800"},{"name":"泰和县","value":"360826","parent":"360800"},{"name":"遂川县","value":"360827","parent":"360800"},{"name":"万安县","value":"360828","parent":"360800"},{"name":"安福县","value":"360829","parent":"360800"},{"name":"永新县","value":"360830","parent":"360800"},{"name":"井冈山市","value":"360881","parent":"360800"},{"name":"袁州区","value":"360902","parent":"360900"},{"name":"奉新县","value":"360921","parent":"360900"},{"name":"万载县","value":"360922","parent":"360900"},{"name":"上高县","value":"360923","parent":"360900"},{"name":"宜丰县","value":"360924","parent":"360900"},{"name":"靖安县","value":"360925","parent":"360900"},{"name":"铜鼓县","value":"360926","parent":"360900"},{"name":"丰城市","value":"360981","parent":"360900"},{"name":"樟树市","value":"360982","parent":"360900"},{"name":"高安市","value":"360983","parent":"360900"},{"name":"临川区","value":"361002","parent":"361000"},{"name":"南城县","value":"361021","parent":"361000"},{"name":"黎川县","value":"361022","parent":"361000"},{"name":"南丰县","value":"361023","parent":"361000"},{"name":"崇仁县","value":"361024","parent":"361000"},{"name":"乐安县","value":"361025","parent":"361000"},{"name":"宜黄县","value":"361026","parent":"361000"},{"name":"金溪县","value":"361027","parent":"361000"},{"name":"资溪县","value":"361028","parent":"361000"},{"name":"东乡县","value":"361029","parent":"361000"},{"name":"广昌县","value":"361030","parent":"361000"},{"name":"信州区","value":"361102","parent":"361100"},{"name":"广丰区","value":"361103","parent":"361100"},{"name":"上饶县","value":"361121","parent":"361100"},{"name":"玉山县","value":"361123","parent":"361100"},{"name":"铅山县","value":"361124","parent":"361100"},{"name":"横峰县","value":"361125","parent":"361100"},{"name":"弋阳县","value":"361126","parent":"361100"},{"name":"余干县","value":"361127","parent":"361100"},{"name":"鄱阳县","value":"361128","parent":"361100"},{"name":"万年县","value":"361129","parent":"361100"},{"name":"婺源县","value":"361130","parent":"361100"},{"name":"德兴市","value":"361181","parent":"361100"},{"name":"济南市","value":"370100","parent":"370000"},{"name":"青岛市","value":"370200","parent":"370000"},{"name":"淄博市","value":"370300","parent":"370000"},{"name":"枣庄市","value":"370400","parent":"370000"},{"name":"东营市","value":"370500","parent":"370000"},{"name":"烟台市","value":"370600","parent":"370000"},{"name":"潍坊市","value":"370700","parent":"370000"},{"name":"济宁市","value":"370800","parent":"370000"},{"name":"泰安市","value":"370900","parent":"370000"},{"name":"威海市","value":"371000","parent":"370000"},{"name":"日照市","value":"371100","parent":"370000"},{"name":"莱芜市","value":"371200","parent":"370000"},{"name":"临沂市","value":"371300","parent":"370000"},{"name":"德州市","value":"371400","parent":"370000"},{"name":"聊城市","value":"371500","parent":"370000"},{"name":"滨州市","value":"371600","parent":"370000"},{"name":"菏泽市","value":"371700","parent":"370000"},{"name":"历下区","value":"370102","parent":"370100"},{"name":"市中区","value":"370103","parent":"370100"},{"name":"槐荫区","value":"370104","parent":"370100"},{"name":"天桥区","value":"370105","parent":"370100"},{"name":"历城区","value":"370112","parent":"370100"},{"name":"长清区","value":"370113","parent":"370100"},{"name":"平阴县","value":"370124","parent":"370100"},{"name":"济阳县","value":"370125","parent":"370100"},{"name":"商河县","value":"370126","parent":"370100"},{"name":"章丘市","value":"370181","parent":"370100"},{"name":"市南区","value":"370202","parent":"370200"},{"name":"市北区","value":"370203","parent":"370200"},{"name":"黄岛区","value":"370211","parent":"370200"},{"name":"崂山区","value":"370212","parent":"370200"},{"name":"李沧区","value":"370213","parent":"370200"},{"name":"城阳区","value":"370214","parent":"370200"},{"name":"胶州市","value":"370281","parent":"370200"},{"name":"即墨市","value":"370282","parent":"370200"},{"name":"平度市","value":"370283","parent":"370200"},{"name":"莱西市","value":"370285","parent":"370200"},{"name":"淄川区","value":"370302","parent":"370300"},{"name":"张店区","value":"370303","parent":"370300"},{"name":"博山区","value":"370304","parent":"370300"},{"name":"临淄区","value":"370305","parent":"370300"},{"name":"周村区","value":"370306","parent":"370300"},{"name":"桓台县","value":"370321","parent":"370300"},{"name":"高青县","value":"370322","parent":"370300"},{"name":"沂源县","value":"370323","parent":"370300"},{"name":"市中区","value":"370402","parent":"370400"},{"name":"薛城区","value":"370403","parent":"370400"},{"name":"峄城区","value":"370404","parent":"370400"},{"name":"台儿庄区","value":"370405","parent":"370400"},{"name":"山亭区","value":"370406","parent":"370400"},{"name":"滕州市","value":"370481","parent":"370400"},{"name":"东营区","value":"370502","parent":"370500"},{"name":"河口区","value":"370503","parent":"370500"},{"name":"垦利县","value":"370521","parent":"370500"},{"name":"利津县","value":"370522","parent":"370500"},{"name":"广饶县","value":"370523","parent":"370500"},{"name":"芝罘区","value":"370602","parent":"370600"},{"name":"福山区","value":"370611","parent":"370600"},{"name":"牟平区","value":"370612","parent":"370600"},{"name":"莱山区","value":"370613","parent":"370600"},{"name":"长岛县","value":"370634","parent":"370600"},{"name":"龙口市","value":"370681","parent":"370600"},{"name":"莱阳市","value":"370682","parent":"370600"},{"name":"莱州市","value":"370683","parent":"370600"},{"name":"蓬莱市","value":"370684","parent":"370600"},{"name":"招远市","value":"370685","parent":"370600"},{"name":"栖霞市","value":"370686","parent":"370600"},{"name":"海阳市","value":"370687","parent":"370600"},{"name":"潍城区","value":"370702","parent":"370700"},{"name":"寒亭区","value":"370703","parent":"370700"},{"name":"坊子区","value":"370704","parent":"370700"},{"name":"奎文区","value":"370705","parent":"370700"},{"name":"临朐县","value":"370724","parent":"370700"},{"name":"昌乐县","value":"370725","parent":"370700"},{"name":"青州市","value":"370781","parent":"370700"},{"name":"诸城市","value":"370782","parent":"370700"},{"name":"寿光市","value":"370783","parent":"370700"},{"name":"安丘市","value":"370784","parent":"370700"},{"name":"高密市","value":"370785","parent":"370700"},{"name":"昌邑市","value":"370786","parent":"370700"},{"name":"任城区","value":"370811","parent":"370800"},{"name":"兖州区","value":"370812","parent":"370800"},{"name":"微山县","value":"370826","parent":"370800"},{"name":"鱼台县","value":"370827","parent":"370800"},{"name":"金乡县","value":"370828","parent":"370800"},{"name":"嘉祥县","value":"370829","parent":"370800"},{"name":"汶上县","value":"370830","parent":"370800"},{"name":"泗水县","value":"370831","parent":"370800"},{"name":"梁山县","value":"370832","parent":"370800"},{"name":"曲阜市","value":"370881","parent":"370800"},{"name":"邹城市","value":"370883","parent":"370800"},{"name":"泰山区","value":"370902","parent":"370900"},{"name":"岱岳区","value":"370911","parent":"370900"},{"name":"宁阳县","value":"370921","parent":"370900"},{"name":"东平县","value":"370923","parent":"370900"},{"name":"新泰市","value":"370982","parent":"370900"},{"name":"肥城市","value":"370983","parent":"370900"},{"name":"环翠区","value":"371002","parent":"371000"},{"name":"文登区","value":"371003","parent":"371000"},{"name":"荣成市","value":"371082","parent":"371000"},{"name":"乳山市","value":"371083","parent":"371000"},{"name":"东港区","value":"371102","parent":"371100"},{"name":"岚山区","value":"371103","parent":"371100"},{"name":"五莲县","value":"371121","parent":"371100"},{"name":"莒县","value":"371122","parent":"371100"},{"name":"莱城区","value":"371202","parent":"371200"},{"name":"钢城区","value":"371203","parent":"371200"},{"name":"兰山区","value":"371302","parent":"371300"},{"name":"罗庄区","value":"371311","parent":"371300"},{"name":"河东区","value":"371312","parent":"371300"},{"name":"沂南县","value":"371321","parent":"371300"},{"name":"郯城县","value":"371322","parent":"371300"},{"name":"沂水县","value":"371323","parent":"371300"},{"name":"兰陵县","value":"371324","parent":"371300"},{"name":"费县","value":"371325","parent":"371300"},{"name":"平邑县","value":"371326","parent":"371300"},{"name":"莒南县","value":"371327","parent":"371300"},{"name":"蒙阴县","value":"371328","parent":"371300"},{"name":"临沭县","value":"371329","parent":"371300"},{"name":"德城区","value":"371402","parent":"371400"},{"name":"陵城区","value":"371403","parent":"371400"},{"name":"宁津县","value":"371422","parent":"371400"},{"name":"庆云县","value":"371423","parent":"371400"},{"name":"临邑县","value":"371424","parent":"371400"},{"name":"齐河县","value":"371425","parent":"371400"},{"name":"平原县","value":"371426","parent":"371400"},{"name":"夏津县","value":"371427","parent":"371400"},{"name":"武城县","value":"371428","parent":"371400"},{"name":"乐陵市","value":"371481","parent":"371400"},{"name":"禹城市","value":"371482","parent":"371400"},{"name":"东昌府区","value":"371502","parent":"371500"},{"name":"阳谷县","value":"371521","parent":"371500"},{"name":"莘县","value":"371522","parent":"371500"},{"name":"茌平县","value":"371523","parent":"371500"},{"name":"东阿县","value":"371524","parent":"371500"},{"name":"冠县","value":"371525","parent":"371500"},{"name":"高唐县","value":"371526","parent":"371500"},{"name":"临清市","value":"371581","parent":"371500"},{"name":"滨城区","value":"371602","parent":"371600"},{"name":"沾化区","value":"371603","parent":"371600"},{"name":"惠民县","value":"371621","parent":"371600"},{"name":"阳信县","value":"371622","parent":"371600"},{"name":"无棣县","value":"371623","parent":"371600"},{"name":"博兴县","value":"371625","parent":"371600"},{"name":"邹平县","value":"371626","parent":"371600"},{"name":"牡丹区","value":"371702","parent":"371700"},{"name":"曹县","value":"371721","parent":"371700"},{"name":"单县","value":"371722","parent":"371700"},{"name":"成武县","value":"371723","parent":"371700"},{"name":"巨野县","value":"371724","parent":"371700"},{"name":"郓城县","value":"371725","parent":"371700"},{"name":"鄄城县","value":"371726","parent":"371700"},{"name":"定陶县","value":"371727","parent":"371700"},{"name":"东明县","value":"371728","parent":"371700"},{"name":"郑州市","value":"410100","parent":"410000"},{"name":"开封市","value":"410200","parent":"410000"},{"name":"洛阳市","value":"410300","parent":"410000"},{"name":"平顶山市","value":"410400","parent":"410000"},{"name":"安阳市","value":"410500","parent":"410000"},{"name":"鹤壁市","value":"410600","parent":"410000"},{"name":"新乡市","value":"410700","parent":"410000"},{"name":"焦作市","value":"410800","parent":"410000"},{"name":"濮阳市","value":"410900","parent":"410000"},{"name":"许昌市","value":"411000","parent":"410000"},{"name":"漯河市","value":"411100","parent":"410000"},{"name":"三门峡市","value":"411200","parent":"410000"},{"name":"南阳市","value":"411300","parent":"410000"},{"name":"商丘市","value":"411400","parent":"410000"},{"name":"信阳市","value":"411500","parent":"410000"},{"name":"周口市","value":"411600","parent":"410000"},{"name":"驻马店市","value":"411700","parent":"410000"},{"name":"济源市","value":"419001","parent":"410000"},{"name":"中原区","value":"410102","parent":"410100"},{"name":"二七区","value":"410103","parent":"410100"},{"name":"管城回族区","value":"410104","parent":"410100"},{"name":"金水区","value":"410105","parent":"410100"},{"name":"上街区","value":"410106","parent":"410100"},{"name":"惠济区","value":"410108","parent":"410100"},{"name":"中牟县","value":"410122","parent":"410100"},{"name":"巩义市","value":"410181","parent":"410100"},{"name":"荥阳市","value":"410182","parent":"410100"},{"name":"新密市","value":"410183","parent":"410100"},{"name":"新郑市","value":"410184","parent":"410100"},{"name":"登封市","value":"410185","parent":"410100"},{"name":"龙亭区","value":"410202","parent":"410200"},{"name":"顺河回族区","value":"410203","parent":"410200"},{"name":"鼓楼区","value":"410204","parent":"410200"},{"name":"禹王台区","value":"410205","parent":"410200"},{"name":"祥符区","value":"410212","parent":"410200"},{"name":"杞县","value":"410221","parent":"410200"},{"name":"通许县","value":"410222","parent":"410200"},{"name":"尉氏县","value":"410223","parent":"410200"},{"name":"兰考县","value":"410225","parent":"410200"},{"name":"老城区","value":"410302","parent":"410300"},{"name":"西工区","value":"410303","parent":"410300"},{"name":"瀍河回族区","value":"410304","parent":"410300"},{"name":"涧西区","value":"410305","parent":"410300"},{"name":"吉利区","value":"410306","parent":"410300"},{"name":"洛龙区","value":"410311","parent":"410300"},{"name":"孟津县","value":"410322","parent":"410300"},{"name":"新安县","value":"410323","parent":"410300"},{"name":"栾川县","value":"410324","parent":"410300"},{"name":"嵩县","value":"410325","parent":"410300"},{"name":"汝阳县","value":"410326","parent":"410300"},{"name":"宜阳县","value":"410327","parent":"410300"},{"name":"洛宁县","value":"410328","parent":"410300"},{"name":"伊川县","value":"410329","parent":"410300"},{"name":"偃师市","value":"410381","parent":"410300"},{"name":"新华区","value":"410402","parent":"410400"},{"name":"卫东区","value":"410403","parent":"410400"},{"name":"石龙区","value":"410404","parent":"410400"},{"name":"湛河区","value":"410411","parent":"410400"},{"name":"宝丰县","value":"410421","parent":"410400"},{"name":"叶县","value":"410422","parent":"410400"},{"name":"鲁山县","value":"410423","parent":"410400"},{"name":"郏县","value":"410425","parent":"410400"},{"name":"舞钢市","value":"410481","parent":"410400"},{"name":"汝州市","value":"410482","parent":"410400"},{"name":"文峰区","value":"410502","parent":"410500"},{"name":"北关区","value":"410503","parent":"410500"},{"name":"殷都区","value":"410505","parent":"410500"},{"name":"龙安区","value":"410506","parent":"410500"},{"name":"安阳县","value":"410522","parent":"410500"},{"name":"汤阴县","value":"410523","parent":"410500"},{"name":"滑县","value":"410526","parent":"410500"},{"name":"内黄县","value":"410527","parent":"410500"},{"name":"林州市","value":"410581","parent":"410500"},{"name":"鹤山区","value":"410602","parent":"410600"},{"name":"山城区","value":"410603","parent":"410600"},{"name":"淇滨区","value":"410611","parent":"410600"},{"name":"浚县","value":"410621","parent":"410600"},{"name":"淇县","value":"410622","parent":"410600"},{"name":"红旗区","value":"410702","parent":"410700"},{"name":"卫滨区","value":"410703","parent":"410700"},{"name":"凤泉区","value":"410704","parent":"410700"},{"name":"牧野区","value":"410711","parent":"410700"},{"name":"新乡县","value":"410721","parent":"410700"},{"name":"获嘉县","value":"410724","parent":"410700"},{"name":"原阳县","value":"410725","parent":"410700"},{"name":"延津县","value":"410726","parent":"410700"},{"name":"封丘县","value":"410727","parent":"410700"},{"name":"长垣县","value":"410728","parent":"410700"},{"name":"卫辉市","value":"410781","parent":"410700"},{"name":"辉县市","value":"410782","parent":"410700"},{"name":"解放区","value":"410802","parent":"410800"},{"name":"中站区","value":"410803","parent":"410800"},{"name":"马村区","value":"410804","parent":"410800"},{"name":"山阳区","value":"410811","parent":"410800"},{"name":"修武县","value":"410821","parent":"410800"},{"name":"博爱县","value":"410822","parent":"410800"},{"name":"武陟县","value":"410823","parent":"410800"},{"name":"温县","value":"410825","parent":"410800"},{"name":"沁阳市","value":"410882","parent":"410800"},{"name":"孟州市","value":"410883","parent":"410800"},{"name":"华龙区","value":"410902","parent":"410900"},{"name":"清丰县","value":"410922","parent":"410900"},{"name":"南乐县","value":"410923","parent":"410900"},{"name":"范县","value":"410926","parent":"410900"},{"name":"台前县","value":"410927","parent":"410900"},{"name":"濮阳县","value":"410928","parent":"410900"},{"name":"魏都区","value":"411002","parent":"411000"},{"name":"许昌县","value":"411023","parent":"411000"},{"name":"鄢陵县","value":"411024","parent":"411000"},{"name":"襄城县","value":"411025","parent":"411000"},{"name":"禹州市","value":"411081","parent":"411000"},{"name":"长葛市","value":"411082","parent":"411000"},{"name":"源汇区","value":"411102","parent":"411100"},{"name":"郾城区","value":"411103","parent":"411100"},{"name":"召陵区","value":"411104","parent":"411100"},{"name":"舞阳县","value":"411121","parent":"411100"},{"name":"临颍县","value":"411122","parent":"411100"},{"name":"湖滨区","value":"411202","parent":"411200"},{"name":"陕州区","value":"411203","parent":"411200"},{"name":"渑池县","value":"411221","parent":"411200"},{"name":"卢氏县","value":"411224","parent":"411200"},{"name":"义马市","value":"411281","parent":"411200"},{"name":"灵宝市","value":"411282","parent":"411200"},{"name":"宛城区","value":"411302","parent":"411300"},{"name":"卧龙区","value":"411303","parent":"411300"},{"name":"南召县","value":"411321","parent":"411300"},{"name":"方城县","value":"411322","parent":"411300"},{"name":"西峡县","value":"411323","parent":"411300"},{"name":"镇平县","value":"411324","parent":"411300"},{"name":"内乡县","value":"411325","parent":"411300"},{"name":"淅川县","value":"411326","parent":"411300"},{"name":"社旗县","value":"411327","parent":"411300"},{"name":"唐河县","value":"411328","parent":"411300"},{"name":"新野县","value":"411329","parent":"411300"},{"name":"桐柏县","value":"411330","parent":"411300"},{"name":"邓州市","value":"411381","parent":"411300"},{"name":"梁园区","value":"411402","parent":"411400"},{"name":"睢阳区","value":"411403","parent":"411400"},{"name":"民权县","value":"411421","parent":"411400"},{"name":"睢县","value":"411422","parent":"411400"},{"name":"宁陵县","value":"411423","parent":"411400"},{"name":"柘城县","value":"411424","parent":"411400"},{"name":"虞城县","value":"411425","parent":"411400"},{"name":"夏邑县","value":"411426","parent":"411400"},{"name":"永城市","value":"411481","parent":"411400"},{"name":"浉河区","value":"411502","parent":"411500"},{"name":"平桥区","value":"411503","parent":"411500"},{"name":"罗山县","value":"411521","parent":"411500"},{"name":"光山县","value":"411522","parent":"411500"},{"name":"新县","value":"411523","parent":"411500"},{"name":"商城县","value":"411524","parent":"411500"},{"name":"固始县","value":"411525","parent":"411500"},{"name":"潢川县","value":"411526","parent":"411500"},{"name":"淮滨县","value":"411527","parent":"411500"},{"name":"息县","value":"411528","parent":"411500"},{"name":"川汇区","value":"411602","parent":"411600"},{"name":"扶沟县","value":"411621","parent":"411600"},{"name":"西华县","value":"411622","parent":"411600"},{"name":"商水县","value":"411623","parent":"411600"},{"name":"沈丘县","value":"411624","parent":"411600"},{"name":"郸城县","value":"411625","parent":"411600"},{"name":"淮阳县","value":"411626","parent":"411600"},{"name":"太康县","value":"411627","parent":"411600"},{"name":"鹿邑县","value":"411628","parent":"411600"},{"name":"项城市","value":"411681","parent":"411600"},{"name":"驿城区","value":"411702","parent":"411700"},{"name":"西平县","value":"411721","parent":"411700"},{"name":"上蔡县","value":"411722","parent":"411700"},{"name":"平舆县","value":"411723","parent":"411700"},{"name":"正阳县","value":"411724","parent":"411700"},{"name":"确山县","value":"411725","parent":"411700"},{"name":"泌阳县","value":"411726","parent":"411700"},{"name":"汝南县","value":"411727","parent":"411700"},{"name":"遂平县","value":"411728","parent":"411700"},{"name":"新蔡县","value":"411729","parent":"411700"},{"name":"武汉市","value":"420100","parent":"420000"},{"name":"黄石市","value":"420200","parent":"420000"},{"name":"十堰市","value":"420300","parent":"420000"},{"name":"宜昌市","value":"420500","parent":"420000"},{"name":"襄阳市","value":"420600","parent":"420000"},{"name":"鄂州市","value":"420700","parent":"420000"},{"name":"荆门市","value":"420800","parent":"420000"},{"name":"孝感市","value":"420900","parent":"420000"},{"name":"荆州市","value":"421000","parent":"420000"},{"name":"黄冈市","value":"421100","parent":"420000"},{"name":"咸宁市","value":"421200","parent":"420000"},{"name":"随州市","value":"421300","parent":"420000"},{"name":"恩施土家族苗族自治州","value":"422800","parent":"420000"},{"name":"仙桃市","value":"429004","parent":"420000"},{"name":"潜江市","value":"429005","parent":"420000"},{"name":"天门市","value":"429006","parent":"420000"},{"name":"神农架林区","value":"429021","parent":"420000"},{"name":"江岸区","value":"420102","parent":"420100"},{"name":"江汉区","value":"420103","parent":"420100"},{"name":"硚口区","value":"420104","parent":"420100"},{"name":"汉阳区","value":"420105","parent":"420100"},{"name":"武昌区","value":"420106","parent":"420100"},{"name":"青山区","value":"420107","parent":"420100"},{"name":"洪山区","value":"420111","parent":"420100"},{"name":"东西湖区","value":"420112","parent":"420100"},{"name":"汉南区","value":"420113","parent":"420100"},{"name":"蔡甸区","value":"420114","parent":"420100"},{"name":"江夏区","value":"420115","parent":"420100"},{"name":"黄陂区","value":"420116","parent":"420100"},{"name":"新洲区","value":"420117","parent":"420100"},{"name":"黄石港区","value":"420202","parent":"420200"},{"name":"西塞山区","value":"420203","parent":"420200"},{"name":"下陆区","value":"420204","parent":"420200"},{"name":"铁山区","value":"420205","parent":"420200"},{"name":"阳新县","value":"420222","parent":"420200"},{"name":"大冶市","value":"420281","parent":"420200"},{"name":"茅箭区","value":"420302","parent":"420300"},{"name":"张湾区","value":"420303","parent":"420300"},{"name":"郧阳区","value":"420304","parent":"420300"},{"name":"郧西县","value":"420322","parent":"420300"},{"name":"竹山县","value":"420323","parent":"420300"},{"name":"竹溪县","value":"420324","parent":"420300"},{"name":"房县","value":"420325","parent":"420300"},{"name":"丹江口市","value":"420381","parent":"420300"},{"name":"西陵区","value":"420502","parent":"420500"},{"name":"伍家岗区","value":"420503","parent":"420500"},{"name":"点军区","value":"420504","parent":"420500"},{"name":"猇亭区","value":"420505","parent":"420500"},{"name":"夷陵区","value":"420506","parent":"420500"},{"name":"远安县","value":"420525","parent":"420500"},{"name":"兴山县","value":"420526","parent":"420500"},{"name":"秭归县","value":"420527","parent":"420500"},{"name":"长阳土家族自治县","value":"420528","parent":"420500"},{"name":"五峰土家族自治县","value":"420529","parent":"420500"},{"name":"宜都市","value":"420581","parent":"420500"},{"name":"当阳市","value":"420582","parent":"420500"},{"name":"枝江市","value":"420583","parent":"420500"},{"name":"襄城区","value":"420602","parent":"420600"},{"name":"樊城区","value":"420606","parent":"420600"},{"name":"襄州区","value":"420607","parent":"420600"},{"name":"南漳县","value":"420624","parent":"420600"},{"name":"谷城县","value":"420625","parent":"420600"},{"name":"保康县","value":"420626","parent":"420600"},{"name":"老河口市","value":"420682","parent":"420600"},{"name":"枣阳市","value":"420683","parent":"420600"},{"name":"宜城市","value":"420684","parent":"420600"},{"name":"梁子湖区","value":"420702","parent":"420700"},{"name":"华容区","value":"420703","parent":"420700"},{"name":"鄂城区","value":"420704","parent":"420700"},{"name":"东宝区","value":"420802","parent":"420800"},{"name":"掇刀区","value":"420804","parent":"420800"},{"name":"京山县","value":"420821","parent":"420800"},{"name":"沙洋县","value":"420822","parent":"420800"},{"name":"钟祥市","value":"420881","parent":"420800"},{"name":"孝南区","value":"420902","parent":"420900"},{"name":"孝昌县","value":"420921","parent":"420900"},{"name":"大悟县","value":"420922","parent":"420900"},{"name":"云梦县","value":"420923","parent":"420900"},{"name":"应城市","value":"420981","parent":"420900"},{"name":"安陆市","value":"420982","parent":"420900"},{"name":"汉川市","value":"420984","parent":"420900"},{"name":"沙市区","value":"421002","parent":"421000"},{"name":"荆州区","value":"421003","parent":"421000"},{"name":"公安县","value":"421022","parent":"421000"},{"name":"监利县","value":"421023","parent":"421000"},{"name":"江陵县","value":"421024","parent":"421000"},{"name":"石首市","value":"421081","parent":"421000"},{"name":"洪湖市","value":"421083","parent":"421000"},{"name":"松滋市","value":"421087","parent":"421000"},{"name":"黄州区","value":"421102","parent":"421100"},{"name":"团风县","value":"421121","parent":"421100"},{"name":"红安县","value":"421122","parent":"421100"},{"name":"罗田县","value":"421123","parent":"421100"},{"name":"英山县","value":"421124","parent":"421100"},{"name":"浠水县","value":"421125","parent":"421100"},{"name":"蕲春县","value":"421126","parent":"421100"},{"name":"黄梅县","value":"421127","parent":"421100"},{"name":"麻城市","value":"421181","parent":"421100"},{"name":"武穴市","value":"421182","parent":"421100"},{"name":"咸安区","value":"421202","parent":"421200"},{"name":"嘉鱼县","value":"421221","parent":"421200"},{"name":"通城县","value":"421222","parent":"421200"},{"name":"崇阳县","value":"421223","parent":"421200"},{"name":"通山县","value":"421224","parent":"421200"},{"name":"赤壁市","value":"421281","parent":"421200"},{"name":"曾都区","value":"421303","parent":"421300"},{"name":"随县","value":"421321","parent":"421300"},{"name":"广水市","value":"421381","parent":"421300"},{"name":"恩施市","value":"422801","parent":"422800"},{"name":"利川市","value":"422802","parent":"422800"},{"name":"建始县","value":"422822","parent":"422800"},{"name":"巴东县","value":"422823","parent":"422800"},{"name":"宣恩县","value":"422825","parent":"422800"},{"name":"咸丰县","value":"422826","parent":"422800"},{"name":"来凤县","value":"422827","parent":"422800"},{"name":"鹤峰县","value":"422828","parent":"422800"},{"name":"长沙市","value":"430100","parent":"430000"},{"name":"株洲市","value":"430200","parent":"430000"},{"name":"湘潭市","value":"430300","parent":"430000"},{"name":"衡阳市","value":"430400","parent":"430000"},{"name":"邵阳市","value":"430500","parent":"430000"},{"name":"岳阳市","value":"430600","parent":"430000"},{"name":"常德市","value":"430700","parent":"430000"},{"name":"张家界市","value":"430800","parent":"430000"},{"name":"益阳市","value":"430900","parent":"430000"},{"name":"郴州市","value":"431000","parent":"430000"},{"name":"永州市","value":"431100","parent":"430000"},{"name":"怀化市","value":"431200","parent":"430000"},{"name":"娄底市","value":"431300","parent":"430000"},{"name":"湘西土家族苗族自治州","value":"433100","parent":"430000"},{"name":"芙蓉区","value":"430102","parent":"430100"},{"name":"天心区","value":"430103","parent":"430100"},{"name":"岳麓区","value":"430104","parent":"430100"},{"name":"开福区","value":"430105","parent":"430100"},{"name":"雨花区","value":"430111","parent":"430100"},{"name":"望城区","value":"430112","parent":"430100"},{"name":"长沙县","value":"430121","parent":"430100"},{"name":"宁乡县","value":"430124","parent":"430100"},{"name":"浏阳市","value":"430181","parent":"430100"},{"name":"荷塘区","value":"430202","parent":"430200"},{"name":"芦淞区","value":"430203","parent":"430200"},{"name":"石峰区","value":"430204","parent":"430200"},{"name":"天元区","value":"430211","parent":"430200"},{"name":"株洲县","value":"430221","parent":"430200"},{"name":"攸县","value":"430223","parent":"430200"},{"name":"茶陵县","value":"430224","parent":"430200"},{"name":"炎陵县","value":"430225","parent":"430200"},{"name":"醴陵市","value":"430281","parent":"430200"},{"name":"雨湖区","value":"430302","parent":"430300"},{"name":"岳塘区","value":"430304","parent":"430300"},{"name":"湘潭县","value":"430321","parent":"430300"},{"name":"湘乡市","value":"430381","parent":"430300"},{"name":"韶山市","value":"430382","parent":"430300"},{"name":"珠晖区","value":"430405","parent":"430400"},{"name":"雁峰区","value":"430406","parent":"430400"},{"name":"石鼓区","value":"430407","parent":"430400"},{"name":"蒸湘区","value":"430408","parent":"430400"},{"name":"南岳区","value":"430412","parent":"430400"},{"name":"衡阳县","value":"430421","parent":"430400"},{"name":"衡南县","value":"430422","parent":"430400"},{"name":"衡山县","value":"430423","parent":"430400"},{"name":"衡东县","value":"430424","parent":"430400"},{"name":"祁东县","value":"430426","parent":"430400"},{"name":"耒阳市","value":"430481","parent":"430400"},{"name":"常宁市","value":"430482","parent":"430400"},{"name":"双清区","value":"430502","parent":"430500"},{"name":"大祥区","value":"430503","parent":"430500"},{"name":"北塔区","value":"430511","parent":"430500"},{"name":"邵东县","value":"430521","parent":"430500"},{"name":"新邵县","value":"430522","parent":"430500"},{"name":"邵阳县","value":"430523","parent":"430500"},{"name":"隆回县","value":"430524","parent":"430500"},{"name":"洞口县","value":"430525","parent":"430500"},{"name":"绥宁县","value":"430527","parent":"430500"},{"name":"新宁县","value":"430528","parent":"430500"},{"name":"城步苗族自治县","value":"430529","parent":"430500"},{"name":"武冈市","value":"430581","parent":"430500"},{"name":"岳阳楼区","value":"430602","parent":"430600"},{"name":"云溪区","value":"430603","parent":"430600"},{"name":"君山区","value":"430611","parent":"430600"},{"name":"岳阳县","value":"430621","parent":"430600"},{"name":"华容县","value":"430623","parent":"430600"},{"name":"湘阴县","value":"430624","parent":"430600"},{"name":"平江县","value":"430626","parent":"430600"},{"name":"汨罗市","value":"430681","parent":"430600"},{"name":"临湘市","value":"430682","parent":"430600"},{"name":"武陵区","value":"430702","parent":"430700"},{"name":"鼎城区","value":"430703","parent":"430700"},{"name":"安乡县","value":"430721","parent":"430700"},{"name":"汉寿县","value":"430722","parent":"430700"},{"name":"澧县","value":"430723","parent":"430700"},{"name":"临澧县","value":"430724","parent":"430700"},{"name":"桃源县","value":"430725","parent":"430700"},{"name":"石门县","value":"430726","parent":"430700"},{"name":"津市市","value":"430781","parent":"430700"},{"name":"永定区","value":"430802","parent":"430800"},{"name":"武陵源区","value":"430811","parent":"430800"},{"name":"慈利县","value":"430821","parent":"430800"},{"name":"桑植县","value":"430822","parent":"430800"},{"name":"资阳区","value":"430902","parent":"430900"},{"name":"赫山区","value":"430903","parent":"430900"},{"name":"南县","value":"430921","parent":"430900"},{"name":"桃江县","value":"430922","parent":"430900"},{"name":"安化县","value":"430923","parent":"430900"},{"name":"沅江市","value":"430981","parent":"430900"},{"name":"北湖区","value":"431002","parent":"431000"},{"name":"苏仙区","value":"431003","parent":"431000"},{"name":"桂阳县","value":"431021","parent":"431000"},{"name":"宜章县","value":"431022","parent":"431000"},{"name":"永兴县","value":"431023","parent":"431000"},{"name":"嘉禾县","value":"431024","parent":"431000"},{"name":"临武县","value":"431025","parent":"431000"},{"name":"汝城县","value":"431026","parent":"431000"},{"name":"桂东县","value":"431027","parent":"431000"},{"name":"安仁县","value":"431028","parent":"431000"},{"name":"资兴市","value":"431081","parent":"431000"},{"name":"零陵区","value":"431102","parent":"431100"},{"name":"冷水滩区","value":"431103","parent":"431100"},{"name":"祁阳县","value":"431121","parent":"431100"},{"name":"东安县","value":"431122","parent":"431100"},{"name":"双牌县","value":"431123","parent":"431100"},{"name":"道县","value":"431124","parent":"431100"},{"name":"江永县","value":"431125","parent":"431100"},{"name":"宁远县","value":"431126","parent":"431100"},{"name":"蓝山县","value":"431127","parent":"431100"},{"name":"新田县","value":"431128","parent":"431100"},{"name":"江华瑶族自治县","value":"431129","parent":"431100"},{"name":"鹤城区","value":"431202","parent":"431200"},{"name":"中方县","value":"431221","parent":"431200"},{"name":"沅陵县","value":"431222","parent":"431200"},{"name":"辰溪县","value":"431223","parent":"431200"},{"name":"溆浦县","value":"431224","parent":"431200"},{"name":"会同县","value":"431225","parent":"431200"},{"name":"麻阳苗族自治县","value":"431226","parent":"431200"},{"name":"新晃侗族自治县","value":"431227","parent":"431200"},{"name":"芷江侗族自治县","value":"431228","parent":"431200"},{"name":"靖州苗族侗族自治县","value":"431229","parent":"431200"},{"name":"通道侗族自治县","value":"431230","parent":"431200"},{"name":"洪江市","value":"431281","parent":"431200"},{"name":"娄星区","value":"431302","parent":"431300"},{"name":"双峰县","value":"431321","parent":"431300"},{"name":"新化县","value":"431322","parent":"431300"},{"name":"冷水江市","value":"431381","parent":"431300"},{"name":"涟源市","value":"431382","parent":"431300"},{"name":"吉首市","value":"433101","parent":"433100"},{"name":"泸溪县","value":"433122","parent":"433100"},{"name":"凤凰县","value":"433123","parent":"433100"},{"name":"花垣县","value":"433124","parent":"433100"},{"name":"保靖县","value":"433125","parent":"433100"},{"name":"古丈县","value":"433126","parent":"433100"},{"name":"永顺县","value":"433127","parent":"433100"},{"name":"龙山县","value":"433130","parent":"433100"},{"name":"广州市","value":"440100","parent":"440000"},{"name":"韶关市","value":"440200","parent":"440000"},{"name":"深圳市","value":"440300","parent":"440000"},{"name":"珠海市","value":"440400","parent":"440000"},{"name":"汕头市","value":"440500","parent":"440000"},{"name":"佛山市","value":"440600","parent":"440000"},{"name":"江门市","value":"440700","parent":"440000"},{"name":"湛江市","value":"440800","parent":"440000"},{"name":"茂名市","value":"440900","parent":"440000"},{"name":"肇庆市","value":"441200","parent":"440000"},{"name":"惠州市","value":"441300","parent":"440000"},{"name":"梅州市","value":"441400","parent":"440000"},{"name":"汕尾市","value":"441500","parent":"440000"},{"name":"河源市","value":"441600","parent":"440000"},{"name":"阳江市","value":"441700","parent":"440000"},{"name":"清远市","value":"441800","parent":"440000"},{"name":"东莞市","value":"441900","parent":"440000"},{"name":"中山市","value":"442000","parent":"440000"},{"name":"潮州市","value":"445100","parent":"440000"},{"name":"揭阳市","value":"445200","parent":"440000"},{"name":"云浮市","value":"445300","parent":"440000"},{"name":"荔湾区","value":"440103","parent":"440100"},{"name":"越秀区","value":"440104","parent":"440100"},{"name":"海珠区","value":"440105","parent":"440100"},{"name":"天河区","value":"440106","parent":"440100"},{"name":"白云区","value":"440111","parent":"440100"},{"name":"黄埔区","value":"440112","parent":"440100"},{"name":"番禺区","value":"440113","parent":"440100"},{"name":"花都区","value":"440114","parent":"440100"},{"name":"南沙区","value":"440115","parent":"440100"},{"name":"从化区","value":"440117","parent":"440100"},{"name":"增城区","value":"440118","parent":"440100"},{"name":"武江区","value":"440203","parent":"440200"},{"name":"浈江区","value":"440204","parent":"440200"},{"name":"曲江区","value":"440205","parent":"440200"},{"name":"始兴县","value":"440222","parent":"440200"},{"name":"仁化县","value":"440224","parent":"440200"},{"name":"翁源县","value":"440229","parent":"440200"},{"name":"乳源瑶族自治县","value":"440232","parent":"440200"},{"name":"新丰县","value":"440233","parent":"440200"},{"name":"乐昌市","value":"440281","parent":"440200"},{"name":"南雄市","value":"440282","parent":"440200"},{"name":"罗湖区","value":"440303","parent":"440300"},{"name":"福田区","value":"440304","parent":"440300"},{"name":"南山区","value":"440305","parent":"440300"},{"name":"宝安区","value":"440306","parent":"440300"},{"name":"龙岗区","value":"440307","parent":"440300"},{"name":"盐田区","value":"440308","parent":"440300"},{"name":"香洲区","value":"440402","parent":"440400"},{"name":"斗门区","value":"440403","parent":"440400"},{"name":"金湾区","value":"440404","parent":"440400"},{"name":"龙湖区","value":"440507","parent":"440500"},{"name":"金平区","value":"440511","parent":"440500"},{"name":"濠江区","value":"440512","parent":"440500"},{"name":"潮阳区","value":"440513","parent":"440500"},{"name":"潮南区","value":"440514","parent":"440500"},{"name":"澄海区","value":"440515","parent":"440500"},{"name":"南澳县","value":"440523","parent":"440500"},{"name":"禅城区","value":"440604","parent":"440600"},{"name":"南海区","value":"440605","parent":"440600"},{"name":"顺德区","value":"440606","parent":"440600"},{"name":"三水区","value":"440607","parent":"440600"},{"name":"高明区","value":"440608","parent":"440600"},{"name":"蓬江区","value":"440703","parent":"440700"},{"name":"江海区","value":"440704","parent":"440700"},{"name":"新会区","value":"440705","parent":"440700"},{"name":"台山市","value":"440781","parent":"440700"},{"name":"开平市","value":"440783","parent":"440700"},{"name":"鹤山市","value":"440784","parent":"440700"},{"name":"恩平市","value":"440785","parent":"440700"},{"name":"赤坎区","value":"440802","parent":"440800"},{"name":"霞山区","value":"440803","parent":"440800"},{"name":"坡头区","value":"440804","parent":"440800"},{"name":"麻章区","value":"440811","parent":"440800"},{"name":"遂溪县","value":"440823","parent":"440800"},{"name":"徐闻县","value":"440825","parent":"440800"},{"name":"廉江市","value":"440881","parent":"440800"},{"name":"雷州市","value":"440882","parent":"440800"},{"name":"吴川市","value":"440883","parent":"440800"},{"name":"茂南区","value":"440902","parent":"440900"},{"name":"电白区","value":"440904","parent":"440900"},{"name":"高州市","value":"440981","parent":"440900"},{"name":"化州市","value":"440982","parent":"440900"},{"name":"信宜市","value":"440983","parent":"440900"},{"name":"端州区","value":"441202","parent":"441200"},{"name":"鼎湖区","value":"441203","parent":"441200"},{"name":"高要区","value":"441204","parent":"441200"},{"name":"广宁县","value":"441223","parent":"441200"},{"name":"怀集县","value":"441224","parent":"441200"},{"name":"封开县","value":"441225","parent":"441200"},{"name":"德庆县","value":"441226","parent":"441200"},{"name":"四会市","value":"441284","parent":"441200"},{"name":"惠城区","value":"441302","parent":"441300"},{"name":"惠阳区","value":"441303","parent":"441300"},{"name":"博罗县","value":"441322","parent":"441300"},{"name":"惠东县","value":"441323","parent":"441300"},{"name":"龙门县","value":"441324","parent":"441300"},{"name":"梅江区","value":"441402","parent":"441400"},{"name":"梅县区","value":"441403","parent":"441400"},{"name":"大埔县","value":"441422","parent":"441400"},{"name":"丰顺县","value":"441423","parent":"441400"},{"name":"五华县","value":"441424","parent":"441400"},{"name":"平远县","value":"441426","parent":"441400"},{"name":"蕉岭县","value":"441427","parent":"441400"},{"name":"兴宁市","value":"441481","parent":"441400"},{"name":"城区","value":"441502","parent":"441500"},{"name":"海丰县","value":"441521","parent":"441500"},{"name":"陆河县","value":"441523","parent":"441500"},{"name":"陆丰市","value":"441581","parent":"441500"},{"name":"源城区","value":"441602","parent":"441600"},{"name":"紫金县","value":"441621","parent":"441600"},{"name":"龙川县","value":"441622","parent":"441600"},{"name":"连平县","value":"441623","parent":"441600"},{"name":"和平县","value":"441624","parent":"441600"},{"name":"东源县","value":"441625","parent":"441600"},{"name":"江城区","value":"441702","parent":"441700"},{"name":"阳东区","value":"441704","parent":"441700"},{"name":"阳西县","value":"441721","parent":"441700"},{"name":"阳春市","value":"441781","parent":"441700"},{"name":"清城区","value":"441802","parent":"441800"},{"name":"清新区","value":"441803","parent":"441800"},{"name":"佛冈县","value":"441821","parent":"441800"},{"name":"阳山县","value":"441823","parent":"441800"},{"name":"连山壮族瑶族自治县","value":"441825","parent":"441800"},{"name":"连南瑶族自治县","value":"441826","parent":"441800"},{"name":"英德市","value":"441881","parent":"441800"},{"name":"连州市","value":"441882","parent":"441800"},{"name":"三元里","value":"441900","parent":"441900"},{"name":"湖滨北路","value":"442000","parent":"442000"},{"name":"湘桥区","value":"445102","parent":"445100"},{"name":"潮安区","value":"445103","parent":"445100"},{"name":"饶平县","value":"445122","parent":"445100"},{"name":"榕城区","value":"445202","parent":"445200"},{"name":"揭东区","value":"445203","parent":"445200"},{"name":"揭西县","value":"445222","parent":"445200"},{"name":"惠来县","value":"445224","parent":"445200"},{"name":"普宁市","value":"445281","parent":"445200"},{"name":"云城区","value":"445302","parent":"445300"},{"name":"云安区","value":"445303","parent":"445300"},{"name":"新兴县","value":"445321","parent":"445300"},{"name":"郁南县","value":"445322","parent":"445300"},{"name":"罗定市","value":"445381","parent":"445300"},{"name":"南宁市","value":"450100","parent":"450000"},{"name":"柳州市","value":"450200","parent":"450000"},{"name":"桂林市","value":"450300","parent":"450000"},{"name":"梧州市","value":"450400","parent":"450000"},{"name":"北海市","value":"450500","parent":"450000"},{"name":"防城港市","value":"450600","parent":"450000"},{"name":"钦州市","value":"450700","parent":"450000"},{"name":"贵港市","value":"450800","parent":"450000"},{"name":"玉林市","value":"450900","parent":"450000"},{"name":"百色市","value":"451000","parent":"450000"},{"name":"贺州市","value":"451100","parent":"450000"},{"name":"河池市","value":"451200","parent":"450000"},{"name":"来宾市","value":"451300","parent":"450000"},{"name":"崇左市","value":"451400","parent":"450000"},{"name":"兴宁区","value":"450102","parent":"450100"},{"name":"青秀区","value":"450103","parent":"450100"},{"name":"江南区","value":"450105","parent":"450100"},{"name":"西乡塘区","value":"450107","parent":"450100"},{"name":"良庆区","value":"450108","parent":"450100"},{"name":"邕宁区","value":"450109","parent":"450100"},{"name":"武鸣区","value":"450110","parent":"450100"},{"name":"隆安县","value":"450123","parent":"450100"},{"name":"马山县","value":"450124","parent":"450100"},{"name":"上林县","value":"450125","parent":"450100"},{"name":"宾阳县","value":"450126","parent":"450100"},{"name":"横县","value":"450127","parent":"450100"},{"name":"城中区","value":"450202","parent":"450200"},{"name":"鱼峰区","value":"450203","parent":"450200"},{"name":"柳南区","value":"450204","parent":"450200"},{"name":"柳北区","value":"450205","parent":"450200"},{"name":"柳江县","value":"450221","parent":"450200"},{"name":"柳城县","value":"450222","parent":"450200"},{"name":"鹿寨县","value":"450223","parent":"450200"},{"name":"融安县","value":"450224","parent":"450200"},{"name":"融水苗族自治县","value":"450225","parent":"450200"},{"name":"三江侗族自治县","value":"450226","parent":"450200"},{"name":"秀峰区","value":"450302","parent":"450300"},{"name":"叠彩区","value":"450303","parent":"450300"},{"name":"象山区","value":"450304","parent":"450300"},{"name":"七星区","value":"450305","parent":"450300"},{"name":"雁山区","value":"450311","parent":"450300"},{"name":"临桂区","value":"450312","parent":"450300"},{"name":"阳朔县","value":"450321","parent":"450300"},{"name":"灵川县","value":"450323","parent":"450300"},{"name":"全州县","value":"450324","parent":"450300"},{"name":"兴安县","value":"450325","parent":"450300"},{"name":"永福县","value":"450326","parent":"450300"},{"name":"灌阳县","value":"450327","parent":"450300"},{"name":"龙胜各族自治县","value":"450328","parent":"450300"},{"name":"资源县","value":"450329","parent":"450300"},{"name":"平乐县","value":"450330","parent":"450300"},{"name":"荔浦县","value":"450331","parent":"450300"},{"name":"恭城瑶族自治县","value":"450332","parent":"450300"},{"name":"万秀区","value":"450403","parent":"450400"},{"name":"长洲区","value":"450405","parent":"450400"},{"name":"龙圩区","value":"450406","parent":"450400"},{"name":"苍梧县","value":"450421","parent":"450400"},{"name":"藤县","value":"450422","parent":"450400"},{"name":"蒙山县","value":"450423","parent":"450400"},{"name":"岑溪市","value":"450481","parent":"450400"},{"name":"海城区","value":"450502","parent":"450500"},{"name":"银海区","value":"450503","parent":"450500"},{"name":"铁山港区","value":"450512","parent":"450500"},{"name":"合浦县","value":"450521","parent":"450500"},{"name":"港口区","value":"450602","parent":"450600"},{"name":"防城区","value":"450603","parent":"450600"},{"name":"上思县","value":"450621","parent":"450600"},{"name":"东兴市","value":"450681","parent":"450600"},{"name":"钦南区","value":"450702","parent":"450700"},{"name":"钦北区","value":"450703","parent":"450700"},{"name":"灵山县","value":"450721","parent":"450700"},{"name":"浦北县","value":"450722","parent":"450700"},{"name":"港北区","value":"450802","parent":"450800"},{"name":"港南区","value":"450803","parent":"450800"},{"name":"覃塘区","value":"450804","parent":"450800"},{"name":"平南县","value":"450821","parent":"450800"},{"name":"桂平市","value":"450881","parent":"450800"},{"name":"玉州区","value":"450902","parent":"450900"},{"name":"福绵区","value":"450903","parent":"450900"},{"name":"容县","value":"450921","parent":"450900"},{"name":"陆川县","value":"450922","parent":"450900"},{"name":"博白县","value":"450923","parent":"450900"},{"name":"兴业县","value":"450924","parent":"450900"},{"name":"北流市","value":"450981","parent":"450900"},{"name":"右江区","value":"451002","parent":"451000"},{"name":"田阳县","value":"451021","parent":"451000"},{"name":"田东县","value":"451022","parent":"451000"},{"name":"平果县","value":"451023","parent":"451000"},{"name":"德保县","value":"451024","parent":"451000"},{"name":"那坡县","value":"451026","parent":"451000"},{"name":"凌云县","value":"451027","parent":"451000"},{"name":"乐业县","value":"451028","parent":"451000"},{"name":"田林县","value":"451029","parent":"451000"},{"name":"西林县","value":"451030","parent":"451000"},{"name":"隆林各族自治县","value":"451031","parent":"451000"},{"name":"靖西市","value":"451081","parent":"451000"},{"name":"八步区","value":"451102","parent":"451100"},{"name":"昭平县","value":"451121","parent":"451100"},{"name":"钟山县","value":"451122","parent":"451100"},{"name":"富川瑶族自治县","value":"451123","parent":"451100"},{"name":"金城江区","value":"451202","parent":"451200"},{"name":"南丹县","value":"451221","parent":"451200"},{"name":"天峨县","value":"451222","parent":"451200"},{"name":"凤山县","value":"451223","parent":"451200"},{"name":"东兰县","value":"451224","parent":"451200"},{"name":"罗城仫佬族自治县","value":"451225","parent":"451200"},{"name":"环江毛南族自治县","value":"451226","parent":"451200"},{"name":"巴马瑶族自治县","value":"451227","parent":"451200"},{"name":"都安瑶族自治县","value":"451228","parent":"451200"},{"name":"大化瑶族自治县","value":"451229","parent":"451200"},{"name":"宜州市","value":"451281","parent":"451200"},{"name":"兴宾区","value":"451302","parent":"451300"},{"name":"忻城县","value":"451321","parent":"451300"},{"name":"象州县","value":"451322","parent":"451300"},{"name":"武宣县","value":"451323","parent":"451300"},{"name":"金秀瑶族自治县","value":"451324","parent":"451300"},{"name":"合山市","value":"451381","parent":"451300"},{"name":"江州区","value":"451402","parent":"451400"},{"name":"扶绥县","value":"451421","parent":"451400"},{"name":"宁明县","value":"451422","parent":"451400"},{"name":"龙州县","value":"451423","parent":"451400"},{"name":"大新县","value":"451424","parent":"451400"},{"name":"天等县","value":"451425","parent":"451400"},{"name":"凭祥市","value":"451481","parent":"451400"},{"name":"海口市","value":"460100","parent":"460000"},{"name":"三亚市","value":"460200","parent":"460000"},{"name":"三沙市","value":"460300","parent":"460000"},{"name":"儋州市","value":"460400","parent":"460000"},{"name":"五指山市","value":"469001","parent":"460000"},{"name":"琼海市","value":"469002","parent":"460000"},{"name":"文昌市","value":"469005","parent":"460000"},{"name":"万宁市","value":"469006","parent":"460000"},{"name":"东方市","value":"469007","parent":"460000"},{"name":"定安县","value":"469021","parent":"460000"},{"name":"屯昌县","value":"469022","parent":"460000"},{"name":"澄迈县","value":"469023","parent":"460000"},{"name":"临高县","value":"469024","parent":"460000"},{"name":"白沙黎族自治县","value":"469025","parent":"460000"},{"name":"昌江黎族自治县","value":"469026","parent":"460000"},{"name":"乐东黎族自治县","value":"469027","parent":"460000"},{"name":"陵水黎族自治县","value":"469028","parent":"460000"},{"name":"保亭黎族苗族自治县","value":"469029","parent":"460000"},{"name":"琼中黎族苗族自治县","value":"469030","parent":"460000"},{"name":"秀英区","value":"460105","parent":"460100"},{"name":"龙华区","value":"460106","parent":"460100"},{"name":"琼山区","value":"460107","parent":"460100"},{"name":"美兰区","value":"460108","parent":"460100"},{"name":"三亚湾","value":"460200","parent":"460200"},{"name":"海棠区","value":"460202","parent":"460200"},{"name":"吉阳区","value":"460203","parent":"460200"},{"name":"天涯区","value":"460204","parent":"460200"},{"name":"崖州区","value":"460205","parent":"460200"},{"name":"西沙群岛","value":"460321","parent":"460300"},{"name":"南沙群岛","value":"460322","parent":"460300"},{"name":"中沙群岛的岛礁及其海域","value":"460323","parent":"460300"},{"name":"重庆市市辖区","value":"500100","parent":"500000"},{"name":"重庆市郊县","value":"500200","parent":"500000"},{"name":"万州区","value":"500101","parent":"500100"},{"name":"涪陵区","value":"500102","parent":"500100"},{"name":"渝中区","value":"500103","parent":"500100"},{"name":"大渡口区","value":"500104","parent":"500100"},{"name":"江北区","value":"500105","parent":"500100"},{"name":"沙坪坝区","value":"500106","parent":"500100"},{"name":"九龙坡区","value":"500107","parent":"500100"},{"name":"南岸区","value":"500108","parent":"500100"},{"name":"北碚区","value":"500109","parent":"500100"},{"name":"綦江区","value":"500110","parent":"500100"},{"name":"大足区","value":"500111","parent":"500100"},{"name":"渝北区","value":"500112","parent":"500100"},{"name":"巴南区","value":"500113","parent":"500100"},{"name":"黔江区","value":"500114","parent":"500100"},{"name":"长寿区","value":"500115","parent":"500100"},{"name":"江津区","value":"500116","parent":"500100"},{"name":"合川区","value":"500117","parent":"500100"},{"name":"永川区","value":"500118","parent":"500100"},{"name":"南川区","value":"500119","parent":"500100"},{"name":"璧山区","value":"500120","parent":"500100"},{"name":"铜梁区","value":"500151","parent":"500100"},{"name":"潼南区","value":"500152","parent":"500100"},{"name":"荣昌区","value":"500153","parent":"500100"},{"name":"梁平县","value":"500228","parent":"500100"},{"name":"城口县","value":"500229","parent":"500100"},{"name":"丰都县","value":"500230","parent":"500100"},{"name":"垫江县","value":"500231","parent":"500100"},{"name":"武隆县","value":"500232","parent":"500100"},{"name":"忠县","value":"500233","parent":"500100"},{"name":"开县","value":"500234","parent":"500100"},{"name":"云阳县","value":"500235","parent":"500100"},{"name":"奉节县","value":"500236","parent":"500100"},{"name":"巫山县","value":"500237","parent":"500100"},{"name":"巫溪县","value":"500238","parent":"500100"},{"name":"石柱土家族自治县","value":"500240","parent":"500100"},{"name":"秀山土家族苗族自治县","value":"500241","parent":"500100"},{"name":"酉阳土家族苗族自治县","value":"500242","parent":"500100"},{"name":"彭水苗族土家族自治县","value":"500243","parent":"500100"},{"name":"成都市","value":"510100","parent":"510000"},{"name":"自贡市","value":"510300","parent":"510000"},{"name":"攀枝花市","value":"510400","parent":"510000"},{"name":"泸州市","value":"510500","parent":"510000"},{"name":"德阳市","value":"510600","parent":"510000"},{"name":"绵阳市","value":"510700","parent":"510000"},{"name":"广元市","value":"510800","parent":"510000"},{"name":"遂宁市","value":"510900","parent":"510000"},{"name":"内江市","value":"511000","parent":"510000"},{"name":"乐山市","value":"511100","parent":"510000"},{"name":"南充市","value":"511300","parent":"510000"},{"name":"眉山市","value":"511400","parent":"510000"},{"name":"宜宾市","value":"511500","parent":"510000"},{"name":"广安市","value":"511600","parent":"510000"},{"name":"达州市","value":"511700","parent":"510000"},{"name":"雅安市","value":"511800","parent":"510000"},{"name":"巴中市","value":"511900","parent":"510000"},{"name":"资阳市","value":"512000","parent":"510000"},{"name":"阿坝藏族羌族自治州","value":"513200","parent":"510000"},{"name":"甘孜藏族自治州","value":"513300","parent":"510000"},{"name":"凉山彝族自治州","value":"513400","parent":"510000"},{"name":"锦江区","value":"510104","parent":"510100"},{"name":"青羊区","value":"510105","parent":"510100"},{"name":"金牛区","value":"510106","parent":"510100"},{"name":"武侯区","value":"510107","parent":"510100"},{"name":"成华区","value":"510108","parent":"510100"},{"name":"龙泉驿区","value":"510112","parent":"510100"},{"name":"青白江区","value":"510113","parent":"510100"},{"name":"新都区","value":"510114","parent":"510100"},{"name":"温江区","value":"510115","parent":"510100"},{"name":"金堂县","value":"510121","parent":"510100"},{"name":"双流县","value":"510122","parent":"510100"},{"name":"郫县","value":"510124","parent":"510100"},{"name":"大邑县","value":"510129","parent":"510100"},{"name":"蒲江县","value":"510131","parent":"510100"},{"name":"新津县","value":"510132","parent":"510100"},{"name":"都江堰市","value":"510181","parent":"510100"},{"name":"彭州市","value":"510182","parent":"510100"},{"name":"邛崃市","value":"510183","parent":"510100"},{"name":"崇州市","value":"510184","parent":"510100"},{"name":"自流井区","value":"510302","parent":"510300"},{"name":"贡井区","value":"510303","parent":"510300"},{"name":"大安区","value":"510304","parent":"510300"},{"name":"沿滩区","value":"510311","parent":"510300"},{"name":"荣县","value":"510321","parent":"510300"},{"name":"富顺县","value":"510322","parent":"510300"},{"name":"东区","value":"510402","parent":"510400"},{"name":"西区","value":"510403","parent":"510400"},{"name":"仁和区","value":"510411","parent":"510400"},{"name":"米易县","value":"510421","parent":"510400"},{"name":"盐边县","value":"510422","parent":"510400"},{"name":"江阳区","value":"510502","parent":"510500"},{"name":"纳溪区","value":"510503","parent":"510500"},{"name":"龙马潭区","value":"510504","parent":"510500"},{"name":"泸县","value":"510521","parent":"510500"},{"name":"合江县","value":"510522","parent":"510500"},{"name":"叙永县","value":"510524","parent":"510500"},{"name":"古蔺县","value":"510525","parent":"510500"},{"name":"旌阳区","value":"510603","parent":"510600"},{"name":"中江县","value":"510623","parent":"510600"},{"name":"罗江县","value":"510626","parent":"510600"},{"name":"广汉市","value":"510681","parent":"510600"},{"name":"什邡市","value":"510682","parent":"510600"},{"name":"绵竹市","value":"510683","parent":"510600"},{"name":"涪城区","value":"510703","parent":"510700"},{"name":"游仙区","value":"510704","parent":"510700"},{"name":"三台县","value":"510722","parent":"510700"},{"name":"盐亭县","value":"510723","parent":"510700"},{"name":"安县","value":"510724","parent":"510700"},{"name":"梓潼县","value":"510725","parent":"510700"},{"name":"北川羌族自治县","value":"510726","parent":"510700"},{"name":"平武县","value":"510727","parent":"510700"},{"name":"江油市","value":"510781","parent":"510700"},{"name":"利州区","value":"510802","parent":"510800"},{"name":"昭化区","value":"510811","parent":"510800"},{"name":"朝天区","value":"510812","parent":"510800"},{"name":"旺苍县","value":"510821","parent":"510800"},{"name":"青川县","value":"510822","parent":"510800"},{"name":"剑阁县","value":"510823","parent":"510800"},{"name":"苍溪县","value":"510824","parent":"510800"},{"name":"船山区","value":"510903","parent":"510900"},{"name":"安居区","value":"510904","parent":"510900"},{"name":"蓬溪县","value":"510921","parent":"510900"},{"name":"射洪县","value":"510922","parent":"510900"},{"name":"大英县","value":"510923","parent":"510900"},{"name":"市中区","value":"511002","parent":"511000"},{"name":"东兴区","value":"511011","parent":"511000"},{"name":"威远县","value":"511024","parent":"511000"},{"name":"资中县","value":"511025","parent":"511000"},{"name":"隆昌县","value":"511028","parent":"511000"},{"name":"市中区","value":"511102","parent":"511100"},{"name":"沙湾区","value":"511111","parent":"511100"},{"name":"五通桥区","value":"511112","parent":"511100"},{"name":"金口河区","value":"511113","parent":"511100"},{"name":"犍为县","value":"511123","parent":"511100"},{"name":"井研县","value":"511124","parent":"511100"},{"name":"夹江县","value":"511126","parent":"511100"},{"name":"沐川县","value":"511129","parent":"511100"},{"name":"峨边彝族自治县","value":"511132","parent":"511100"},{"name":"马边彝族自治县","value":"511133","parent":"511100"},{"name":"峨眉山市","value":"511181","parent":"511100"},{"name":"顺庆区","value":"511302","parent":"511300"},{"name":"高坪区","value":"511303","parent":"511300"},{"name":"嘉陵区","value":"511304","parent":"511300"},{"name":"南部县","value":"511321","parent":"511300"},{"name":"营山县","value":"511322","parent":"511300"},{"name":"蓬安县","value":"511323","parent":"511300"},{"name":"仪陇县","value":"511324","parent":"511300"},{"name":"西充县","value":"511325","parent":"511300"},{"name":"阆中市","value":"511381","parent":"511300"},{"name":"东坡区","value":"511402","parent":"511400"},{"name":"彭山区","value":"511403","parent":"511400"},{"name":"仁寿县","value":"511421","parent":"511400"},{"name":"洪雅县","value":"511423","parent":"511400"},{"name":"丹棱县","value":"511424","parent":"511400"},{"name":"青神县","value":"511425","parent":"511400"},{"name":"翠屏区","value":"511502","parent":"511500"},{"name":"南溪区","value":"511503","parent":"511500"},{"name":"宜宾县","value":"511521","parent":"511500"},{"name":"江安县","value":"511523","parent":"511500"},{"name":"长宁县","value":"511524","parent":"511500"},{"name":"高县","value":"511525","parent":"511500"},{"name":"珙县","value":"511526","parent":"511500"},{"name":"筠连县","value":"511527","parent":"511500"},{"name":"兴文县","value":"511528","parent":"511500"},{"name":"屏山县","value":"511529","parent":"511500"},{"name":"广安区","value":"511602","parent":"511600"},{"name":"前锋区","value":"511603","parent":"511600"},{"name":"岳池县","value":"511621","parent":"511600"},{"name":"武胜县","value":"511622","parent":"511600"},{"name":"邻水县","value":"511623","parent":"511600"},{"name":"华蓥市","value":"511681","parent":"511600"},{"name":"通川区","value":"511702","parent":"511700"},{"name":"达川区","value":"511703","parent":"511700"},{"name":"宣汉县","value":"511722","parent":"511700"},{"name":"开江县","value":"511723","parent":"511700"},{"name":"大竹县","value":"511724","parent":"511700"},{"name":"渠县","value":"511725","parent":"511700"},{"name":"万源市","value":"511781","parent":"511700"},{"name":"雨城区","value":"511802","parent":"511800"},{"name":"名山区","value":"511803","parent":"511800"},{"name":"荥经县","value":"511822","parent":"511800"},{"name":"汉源县","value":"511823","parent":"511800"},{"name":"石棉县","value":"511824","parent":"511800"},{"name":"天全县","value":"511825","parent":"511800"},{"name":"芦山县","value":"511826","parent":"511800"},{"name":"宝兴县","value":"511827","parent":"511800"},{"name":"巴州区","value":"511902","parent":"511900"},{"name":"恩阳区","value":"511903","parent":"511900"},{"name":"通江县","value":"511921","parent":"511900"},{"name":"南江县","value":"511922","parent":"511900"},{"name":"平昌县","value":"511923","parent":"511900"},{"name":"雁江区","value":"512002","parent":"512000"},{"name":"安岳县","value":"512021","parent":"512000"},{"name":"乐至县","value":"512022","parent":"512000"},{"name":"简阳市","value":"512081","parent":"512000"},{"name":"汶川县","value":"513221","parent":"513200"},{"name":"理县","value":"513222","parent":"513200"},{"name":"茂县","value":"513223","parent":"513200"},{"name":"松潘县","value":"513224","parent":"513200"},{"name":"九寨沟县","value":"513225","parent":"513200"},{"name":"金川县","value":"513226","parent":"513200"},{"name":"小金县","value":"513227","parent":"513200"},{"name":"黑水县","value":"513228","parent":"513200"},{"name":"马尔康县","value":"513229","parent":"513200"},{"name":"壤塘县","value":"513230","parent":"513200"},{"name":"阿坝县","value":"513231","parent":"513200"},{"name":"若尔盖县","value":"513232","parent":"513200"},{"name":"红原县","value":"513233","parent":"513200"},{"name":"康定市","value":"513301","parent":"513300"},{"name":"泸定县","value":"513322","parent":"513300"},{"name":"丹巴县","value":"513323","parent":"513300"},{"name":"九龙县","value":"513324","parent":"513300"},{"name":"雅江县","value":"513325","parent":"513300"},{"name":"道孚县","value":"513326","parent":"513300"},{"name":"炉霍县","value":"513327","parent":"513300"},{"name":"甘孜县","value":"513328","parent":"513300"},{"name":"新龙县","value":"513329","parent":"513300"},{"name":"德格县","value":"513330","parent":"513300"},{"name":"白玉县","value":"513331","parent":"513300"},{"name":"石渠县","value":"513332","parent":"513300"},{"name":"色达县","value":"513333","parent":"513300"},{"name":"理塘县","value":"513334","parent":"513300"},{"name":"巴塘县","value":"513335","parent":"513300"},{"name":"乡城县","value":"513336","parent":"513300"},{"name":"稻城县","value":"513337","parent":"513300"},{"name":"得荣县","value":"513338","parent":"513300"},{"name":"西昌市","value":"513401","parent":"513400"},{"name":"木里藏族自治县","value":"513422","parent":"513400"},{"name":"盐源县","value":"513423","parent":"513400"},{"name":"德昌县","value":"513424","parent":"513400"},{"name":"会理县","value":"513425","parent":"513400"},{"name":"会东县","value":"513426","parent":"513400"},{"name":"宁南县","value":"513427","parent":"513400"},{"name":"普格县","value":"513428","parent":"513400"},{"name":"布拖县","value":"513429","parent":"513400"},{"name":"金阳县","value":"513430","parent":"513400"},{"name":"昭觉县","value":"513431","parent":"513400"},{"name":"喜德县","value":"513432","parent":"513400"},{"name":"冕宁县","value":"513433","parent":"513400"},{"name":"越西县","value":"513434","parent":"513400"},{"name":"甘洛县","value":"513435","parent":"513400"},{"name":"美姑县","value":"513436","parent":"513400"},{"name":"雷波县","value":"513437","parent":"513400"},{"name":"贵阳市","value":"520100","parent":"520000"},{"name":"六盘水市","value":"520200","parent":"520000"},{"name":"遵义市","value":"520300","parent":"520000"},{"name":"安顺市","value":"520400","parent":"520000"},{"name":"毕节市","value":"520500","parent":"520000"},{"name":"铜仁市","value":"520600","parent":"520000"},{"name":"黔西南布依族苗族自治州","value":"522300","parent":"520000"},{"name":"黔东南苗族侗族自治州","value":"522600","parent":"520000"},{"name":"黔南布依族苗族自治州","value":"522700","parent":"520000"},{"name":"南明区","value":"520102","parent":"520100"},{"name":"云岩区","value":"520103","parent":"520100"},{"name":"花溪区","value":"520111","parent":"520100"},{"name":"乌当区","value":"520112","parent":"520100"},{"name":"白云区","value":"520113","parent":"520100"},{"name":"观山湖区","value":"520115","parent":"520100"},{"name":"开阳县","value":"520121","parent":"520100"},{"name":"息烽县","value":"520122","parent":"520100"},{"name":"修文县","value":"520123","parent":"520100"},{"name":"清镇市","value":"520181","parent":"520100"},{"name":"钟山区","value":"520201","parent":"520200"},{"name":"六枝特区","value":"520203","parent":"520200"},{"name":"水城县","value":"520221","parent":"520200"},{"name":"盘县","value":"520222","parent":"520200"},{"name":"红花岗区","value":"520302","parent":"520300"},{"name":"汇川区","value":"520303","parent":"520300"},{"name":"遵义县","value":"520321","parent":"520300"},{"name":"桐梓县","value":"520322","parent":"520300"},{"name":"绥阳县","value":"520323","parent":"520300"},{"name":"正安县","value":"520324","parent":"520300"},{"name":"道真仡佬族苗族自治县","value":"520325","parent":"520300"},{"name":"务川仡佬族苗族自治县","value":"520326","parent":"520300"},{"name":"凤冈县","value":"520327","parent":"520300"},{"name":"湄潭县","value":"520328","parent":"520300"},{"name":"余庆县","value":"520329","parent":"520300"},{"name":"习水县","value":"520330","parent":"520300"},{"name":"赤水市","value":"520381","parent":"520300"},{"name":"仁怀市","value":"520382","parent":"520300"},{"name":"西秀区","value":"520402","parent":"520400"},{"name":"平坝区","value":"520403","parent":"520400"},{"name":"普定县","value":"520422","parent":"520400"},{"name":"镇宁布依族苗族自治县","value":"520423","parent":"520400"},{"name":"关岭布依族苗族自治县","value":"520424","parent":"520400"},{"name":"紫云苗族布依族自治县","value":"520425","parent":"520400"},{"name":"七星关区","value":"520502","parent":"520500"},{"name":"大方县","value":"520521","parent":"520500"},{"name":"黔西县","value":"520522","parent":"520500"},{"name":"金沙县","value":"520523","parent":"520500"},{"name":"织金县","value":"520524","parent":"520500"},{"name":"纳雍县","value":"520525","parent":"520500"},{"name":"威宁彝族回族苗族自治县","value":"520526","parent":"520500"},{"name":"赫章县","value":"520527","parent":"520500"},{"name":"碧江区","value":"520602","parent":"520600"},{"name":"万山区","value":"520603","parent":"520600"},{"name":"江口县","value":"520621","parent":"520600"},{"name":"玉屏侗族自治县","value":"520622","parent":"520600"},{"name":"石阡县","value":"520623","parent":"520600"},{"name":"思南县","value":"520624","parent":"520600"},{"name":"印江土家族苗族自治县","value":"520625","parent":"520600"},{"name":"德江县","value":"520626","parent":"520600"},{"name":"沿河土家族自治县","value":"520627","parent":"520600"},{"name":"松桃苗族自治县","value":"520628","parent":"520600"},{"name":"兴义市","value":"522301","parent":"522300"},{"name":"兴仁县","value":"522322","parent":"522300"},{"name":"普安县","value":"522323","parent":"522300"},{"name":"晴隆县","value":"522324","parent":"522300"},{"name":"贞丰县","value":"522325","parent":"522300"},{"name":"望谟县","value":"522326","parent":"522300"},{"name":"册亨县","value":"522327","parent":"522300"},{"name":"安龙县","value":"522328","parent":"522300"},{"name":"凯里市","value":"522601","parent":"522600"},{"name":"黄平县","value":"522622","parent":"522600"},{"name":"施秉县","value":"522623","parent":"522600"},{"name":"三穗县","value":"522624","parent":"522600"},{"name":"镇远县","value":"522625","parent":"522600"},{"name":"岑巩县","value":"522626","parent":"522600"},{"name":"天柱县","value":"522627","parent":"522600"},{"name":"锦屏县","value":"522628","parent":"522600"},{"name":"剑河县","value":"522629","parent":"522600"},{"name":"台江县","value":"522630","parent":"522600"},{"name":"黎平县","value":"522631","parent":"522600"},{"name":"榕江县","value":"522632","parent":"522600"},{"name":"从江县","value":"522633","parent":"522600"},{"name":"雷山县","value":"522634","parent":"522600"},{"name":"麻江县","value":"522635","parent":"522600"},{"name":"丹寨县","value":"522636","parent":"522600"},{"name":"都匀市","value":"522701","parent":"522700"},{"name":"福泉市","value":"522702","parent":"522700"},{"name":"荔波县","value":"522722","parent":"522700"},{"name":"贵定县","value":"522723","parent":"522700"},{"name":"瓮安县","value":"522725","parent":"522700"},{"name":"独山县","value":"522726","parent":"522700"},{"name":"平塘县","value":"522727","parent":"522700"},{"name":"罗甸县","value":"522728","parent":"522700"},{"name":"长顺县","value":"522729","parent":"522700"},{"name":"龙里县","value":"522730","parent":"522700"},{"name":"惠水县","value":"522731","parent":"522700"},{"name":"三都水族自治县","value":"522732","parent":"522700"},{"name":"昆明市","value":"530100","parent":"530000"},{"name":"曲靖市","value":"530300","parent":"530000"},{"name":"玉溪市","value":"530400","parent":"530000"},{"name":"保山市","value":"530500","parent":"530000"},{"name":"昭通市","value":"530600","parent":"530000"},{"name":"丽江市","value":"530700","parent":"530000"},{"name":"普洱市","value":"530800","parent":"530000"},{"name":"临沧市","value":"530900","parent":"530000"},{"name":"楚雄彝族自治州","value":"532300","parent":"530000"},{"name":"红河哈尼族彝族自治州","value":"532500","parent":"530000"},{"name":"文山壮族苗族自治州","value":"532600","parent":"530000"},{"name":"西双版纳傣族自治州","value":"532800","parent":"530000"},{"name":"大理白族自治州","value":"532900","parent":"530000"},{"name":"德宏傣族景颇族自治州","value":"533100","parent":"530000"},{"name":"怒江傈僳族自治州","value":"533300","parent":"530000"},{"name":"迪庆藏族自治州","value":"533400","parent":"530000"},{"name":"五华区","value":"530102","parent":"530100"},{"name":"盘龙区","value":"530103","parent":"530100"},{"name":"官渡区","value":"530111","parent":"530100"},{"name":"西山区","value":"530112","parent":"530100"},{"name":"东川区","value":"530113","parent":"530100"},{"name":"呈贡区","value":"530114","parent":"530100"},{"name":"晋宁县","value":"530122","parent":"530100"},{"name":"富民县","value":"530124","parent":"530100"},{"name":"宜良县","value":"530125","parent":"530100"},{"name":"石林彝族自治县","value":"530126","parent":"530100"},{"name":"嵩明县","value":"530127","parent":"530100"},{"name":"禄劝彝族苗族自治县","value":"530128","parent":"530100"},{"name":"寻甸回族彝族自治县","value":"530129","parent":"530100"},{"name":"安宁市","value":"530181","parent":"530100"},{"name":"麒麟区","value":"530302","parent":"530300"},{"name":"马龙县","value":"530321","parent":"530300"},{"name":"陆良县","value":"530322","parent":"530300"},{"name":"师宗县","value":"530323","parent":"530300"},{"name":"罗平县","value":"530324","parent":"530300"},{"name":"富源县","value":"530325","parent":"530300"},{"name":"会泽县","value":"530326","parent":"530300"},{"name":"沾益县","value":"530328","parent":"530300"},{"name":"宣威市","value":"530381","parent":"530300"},{"name":"红塔区","value":"530402","parent":"530400"},{"name":"江川县","value":"530421","parent":"530400"},{"name":"澄江县","value":"530422","parent":"530400"},{"name":"通海县","value":"530423","parent":"530400"},{"name":"华宁县","value":"530424","parent":"530400"},{"name":"易门县","value":"530425","parent":"530400"},{"name":"峨山彝族自治县","value":"530426","parent":"530400"},{"name":"新平彝族傣族自治县","value":"530427","parent":"530400"},{"name":"元江哈尼族彝族傣族自治县","value":"530428","parent":"530400"},{"name":"隆阳区","value":"530502","parent":"530500"},{"name":"施甸县","value":"530521","parent":"530500"},{"name":"龙陵县","value":"530523","parent":"530500"},{"name":"昌宁县","value":"530524","parent":"530500"},{"name":"腾冲市","value":"530581","parent":"530500"},{"name":"昭阳区","value":"530602","parent":"530600"},{"name":"鲁甸县","value":"530621","parent":"530600"},{"name":"巧家县","value":"530622","parent":"530600"},{"name":"盐津县","value":"530623","parent":"530600"},{"name":"大关县","value":"530624","parent":"530600"},{"name":"永善县","value":"530625","parent":"530600"},{"name":"绥江县","value":"530626","parent":"530600"},{"name":"镇雄县","value":"530627","parent":"530600"},{"name":"彝良县","value":"530628","parent":"530600"},{"name":"威信县","value":"530629","parent":"530600"},{"name":"水富县","value":"530630","parent":"530600"},{"name":"古城区","value":"530702","parent":"530700"},{"name":"玉龙纳西族自治县","value":"530721","parent":"530700"},{"name":"永胜县","value":"530722","parent":"530700"},{"name":"华坪县","value":"530723","parent":"530700"},{"name":"宁蒗彝族自治县","value":"530724","parent":"530700"},{"name":"思茅区","value":"530802","parent":"530800"},{"name":"宁洱哈尼族彝族自治县","value":"530821","parent":"530800"},{"name":"墨江哈尼族自治县","value":"530822","parent":"530800"},{"name":"景东彝族自治县","value":"530823","parent":"530800"},{"name":"景谷傣族彝族自治县","value":"530824","parent":"530800"},{"name":"镇沅彝族哈尼族拉祜族自治县","value":"530825","parent":"530800"},{"name":"江城哈尼族彝族自治县","value":"530826","parent":"530800"},{"name":"孟连傣族拉祜族佤族自治县","value":"530827","parent":"530800"},{"name":"澜沧拉祜族自治县","value":"530828","parent":"530800"},{"name":"西盟佤族自治县","value":"530829","parent":"530800"},{"name":"临翔区","value":"530902","parent":"530900"},{"name":"凤庆县","value":"530921","parent":"530900"},{"name":"云县","value":"530922","parent":"530900"},{"name":"永德县","value":"530923","parent":"530900"},{"name":"镇康县","value":"530924","parent":"530900"},{"name":"双江拉祜族佤族布朗族傣族自治县","value":"530925","parent":"530900"},{"name":"耿马傣族佤族自治县","value":"530926","parent":"530900"},{"name":"沧源佤族自治县","value":"530927","parent":"530900"},{"name":"楚雄市","value":"532301","parent":"532300"},{"name":"双柏县","value":"532322","parent":"532300"},{"name":"牟定县","value":"532323","parent":"532300"},{"name":"南华县","value":"532324","parent":"532300"},{"name":"姚安县","value":"532325","parent":"532300"},{"name":"大姚县","value":"532326","parent":"532300"},{"name":"永仁县","value":"532327","parent":"532300"},{"name":"元谋县","value":"532328","parent":"532300"},{"name":"武定县","value":"532329","parent":"532300"},{"name":"禄丰县","value":"532331","parent":"532300"},{"name":"个旧市","value":"532501","parent":"532500"},{"name":"开远市","value":"532502","parent":"532500"},{"name":"蒙自市","value":"532503","parent":"532500"},{"name":"弥勒市","value":"532504","parent":"532500"},{"name":"屏边苗族自治县","value":"532523","parent":"532500"},{"name":"建水县","value":"532524","parent":"532500"},{"name":"石屏县","value":"532525","parent":"532500"},{"name":"泸西县","value":"532527","parent":"532500"},{"name":"元阳县","value":"532528","parent":"532500"},{"name":"红河县","value":"532529","parent":"532500"},{"name":"金平苗族瑶族傣族自治县","value":"532530","parent":"532500"},{"name":"绿春县","value":"532531","parent":"532500"},{"name":"河口瑶族自治县","value":"532532","parent":"532500"},{"name":"文山市","value":"532601","parent":"532600"},{"name":"砚山县","value":"532622","parent":"532600"},{"name":"西畴县","value":"532623","parent":"532600"},{"name":"麻栗坡县","value":"532624","parent":"532600"},{"name":"马关县","value":"532625","parent":"532600"},{"name":"丘北县","value":"532626","parent":"532600"},{"name":"广南县","value":"532627","parent":"532600"},{"name":"富宁县","value":"532628","parent":"532600"},{"name":"景洪市","value":"532801","parent":"532800"},{"name":"勐海县","value":"532822","parent":"532800"},{"name":"勐腊县","value":"532823","parent":"532800"},{"name":"大理市","value":"532901","parent":"532900"},{"name":"漾濞彝族自治县","value":"532922","parent":"532900"},{"name":"祥云县","value":"532923","parent":"532900"},{"name":"宾川县","value":"532924","parent":"532900"},{"name":"弥渡县","value":"532925","parent":"532900"},{"name":"南涧彝族自治县","value":"532926","parent":"532900"},{"name":"巍山彝族回族自治县","value":"532927","parent":"532900"},{"name":"永平县","value":"532928","parent":"532900"},{"name":"云龙县","value":"532929","parent":"532900"},{"name":"洱源县","value":"532930","parent":"532900"},{"name":"剑川县","value":"532931","parent":"532900"},{"name":"鹤庆县","value":"532932","parent":"532900"},{"name":"瑞丽市","value":"533102","parent":"533100"},{"name":"芒市","value":"533103","parent":"533100"},{"name":"梁河县","value":"533122","parent":"533100"},{"name":"盈江县","value":"533123","parent":"533100"},{"name":"陇川县","value":"533124","parent":"533100"},{"name":"泸水县","value":"533321","parent":"533300"},{"name":"福贡县","value":"533323","parent":"533300"},{"name":"贡山独龙族怒族自治县","value":"533324","parent":"533300"},{"name":"兰坪白族普米族自治县","value":"533325","parent":"533300"},{"name":"香格里拉市","value":"533401","parent":"533400"},{"name":"德钦县","value":"533422","parent":"533400"},{"name":"维西傈僳族自治县","value":"533423","parent":"533400"},{"name":"拉萨市","value":"540100","parent":"540000"},{"name":"日喀则市","value":"540200","parent":"540000"},{"name":"昌都市","value":"540300","parent":"540000"},{"name":"林芝市","value":"540400","parent":"540000"},{"name":"山南地区","value":"542200","parent":"540000"},{"name":"那曲地区","value":"542400","parent":"540000"},{"name":"阿里地区","value":"542500","parent":"540000"},{"name":"城关区","value":"540102","parent":"540100"},{"name":"林周县","value":"540121","parent":"540100"},{"name":"当雄县","value":"540122","parent":"540100"},{"name":"尼木县","value":"540123","parent":"540100"},{"name":"曲水县","value":"540124","parent":"540100"},{"name":"堆龙德庆县","value":"540125","parent":"540100"},{"name":"达孜县","value":"540126","parent":"540100"},{"name":"墨竹工卡县","value":"540127","parent":"540100"},{"name":"桑珠孜区","value":"540202","parent":"540200"},{"name":"南木林县","value":"540221","parent":"540200"},{"name":"江孜县","value":"540222","parent":"540200"},{"name":"定日县","value":"540223","parent":"540200"},{"name":"萨迦县","value":"540224","parent":"540200"},{"name":"拉孜县","value":"540225","parent":"540200"},{"name":"昂仁县","value":"540226","parent":"540200"},{"name":"谢通门县","value":"540227","parent":"540200"},{"name":"白朗县","value":"540228","parent":"540200"},{"name":"仁布县","value":"540229","parent":"540200"},{"name":"康马县","value":"540230","parent":"540200"},{"name":"定结县","value":"540231","parent":"540200"},{"name":"仲巴县","value":"540232","parent":"540200"},{"name":"亚东县","value":"540233","parent":"540200"},{"name":"吉隆县","value":"540234","parent":"540200"},{"name":"聂拉木县","value":"540235","parent":"540200"},{"name":"萨嘎县","value":"540236","parent":"540200"},{"name":"岗巴县","value":"540237","parent":"540200"},{"name":"卡若区","value":"540302","parent":"540300"},{"name":"江达县","value":"540321","parent":"540300"},{"name":"贡觉县","value":"540322","parent":"540300"},{"name":"类乌齐县","value":"540323","parent":"540300"},{"name":"丁青县","value":"540324","parent":"540300"},{"name":"察雅县","value":"540325","parent":"540300"},{"name":"八宿县","value":"540326","parent":"540300"},{"name":"左贡县","value":"540327","parent":"540300"},{"name":"芒康县","value":"540328","parent":"540300"},{"name":"洛隆县","value":"540329","parent":"540300"},{"name":"边坝县","value":"540330","parent":"540300"},{"name":"巴宜区","value":"540402","parent":"540400"},{"name":"工布江达县","value":"540421","parent":"540400"},{"name":"米林县","value":"540422","parent":"540400"},{"name":"墨脱县","value":"540423","parent":"540400"},{"name":"波密县","value":"540424","parent":"540400"},{"name":"察隅县","value":"540425","parent":"540400"},{"name":"朗县","value":"540426","parent":"540400"},{"name":"乃东县","value":"542221","parent":"542200"},{"name":"扎囊县","value":"542222","parent":"542200"},{"name":"贡嘎县","value":"542223","parent":"542200"},{"name":"桑日县","value":"542224","parent":"542200"},{"name":"琼结县","value":"542225","parent":"542200"},{"name":"曲松县","value":"542226","parent":"542200"},{"name":"措美县","value":"542227","parent":"542200"},{"name":"洛扎县","value":"542228","parent":"542200"},{"name":"加查县","value":"542229","parent":"542200"},{"name":"隆子县","value":"542231","parent":"542200"},{"name":"错那县","value":"542232","parent":"542200"},{"name":"浪卡子县","value":"542233","parent":"542200"},{"name":"那曲县","value":"542421","parent":"542400"},{"name":"嘉黎县","value":"542422","parent":"542400"},{"name":"比如县","value":"542423","parent":"542400"},{"name":"聂荣县","value":"542424","parent":"542400"},{"name":"安多县","value":"542425","parent":"542400"},{"name":"申扎县","value":"542426","parent":"542400"},{"name":"索县","value":"542427","parent":"542400"},{"name":"班戈县","value":"542428","parent":"542400"},{"name":"巴青县","value":"542429","parent":"542400"},{"name":"尼玛县","value":"542430","parent":"542400"},{"name":"双湖县","value":"542431","parent":"542400"},{"name":"普兰县","value":"542521","parent":"542500"},{"name":"札达县","value":"542522","parent":"542500"},{"name":"噶尔县","value":"542523","parent":"542500"},{"name":"日土县","value":"542524","parent":"542500"},{"name":"革吉县","value":"542525","parent":"542500"},{"name":"改则县","value":"542526","parent":"542500"},{"name":"措勤县","value":"542527","parent":"542500"},{"name":"西安市","value":"610100","parent":"610000"},{"name":"铜川市","value":"610200","parent":"610000"},{"name":"宝鸡市","value":"610300","parent":"610000"},{"name":"咸阳市","value":"610400","parent":"610000"},{"name":"渭南市","value":"610500","parent":"610000"},{"name":"延安市","value":"610600","parent":"610000"},{"name":"汉中市","value":"610700","parent":"610000"},{"name":"榆林市","value":"610800","parent":"610000"},{"name":"安康市","value":"610900","parent":"610000"},{"name":"商洛市","value":"611000","parent":"610000"},{"name":"新城区","value":"610102","parent":"610100"},{"name":"碑林区","value":"610103","parent":"610100"},{"name":"莲湖区","value":"610104","parent":"610100"},{"name":"灞桥区","value":"610111","parent":"610100"},{"name":"未央区","value":"610112","parent":"610100"},{"name":"雁塔区","value":"610113","parent":"610100"},{"name":"阎良区","value":"610114","parent":"610100"},{"name":"临潼区","value":"610115","parent":"610100"},{"name":"长安区","value":"610116","parent":"610100"},{"name":"高陵区","value":"610117","parent":"610100"},{"name":"蓝田县","value":"610122","parent":"610100"},{"name":"周至县","value":"610124","parent":"610100"},{"name":"户县","value":"610125","parent":"610100"},{"name":"王益区","value":"610202","parent":"610200"},{"name":"印台区","value":"610203","parent":"610200"},{"name":"耀州区","value":"610204","parent":"610200"},{"name":"宜君县","value":"610222","parent":"610200"},{"name":"渭滨区","value":"610302","parent":"610300"},{"name":"金台区","value":"610303","parent":"610300"},{"name":"陈仓区","value":"610304","parent":"610300"},{"name":"凤翔县","value":"610322","parent":"610300"},{"name":"岐山县","value":"610323","parent":"610300"},{"name":"扶风县","value":"610324","parent":"610300"},{"name":"眉县","value":"610326","parent":"610300"},{"name":"陇县","value":"610327","parent":"610300"},{"name":"千阳县","value":"610328","parent":"610300"},{"name":"麟游县","value":"610329","parent":"610300"},{"name":"凤县","value":"610330","parent":"610300"},{"name":"太白县","value":"610331","parent":"610300"},{"name":"秦都区","value":"610402","parent":"610400"},{"name":"杨陵区","value":"610403","parent":"610400"},{"name":"渭城区","value":"610404","parent":"610400"},{"name":"三原县","value":"610422","parent":"610400"},{"name":"泾阳县","value":"610423","parent":"610400"},{"name":"乾县","value":"610424","parent":"610400"},{"name":"礼泉县","value":"610425","parent":"610400"},{"name":"永寿县","value":"610426","parent":"610400"},{"name":"彬县","value":"610427","parent":"610400"},{"name":"长武县","value":"610428","parent":"610400"},{"name":"旬邑县","value":"610429","parent":"610400"},{"name":"淳化县","value":"610430","parent":"610400"},{"name":"武功县","value":"610431","parent":"610400"},{"name":"兴平市","value":"610481","parent":"610400"},{"name":"临渭区","value":"610502","parent":"610500"},{"name":"华县","value":"610521","parent":"610500"},{"name":"潼关县","value":"610522","parent":"610500"},{"name":"大荔县","value":"610523","parent":"610500"},{"name":"合阳县","value":"610524","parent":"610500"},{"name":"澄城县","value":"610525","parent":"610500"},{"name":"蒲城县","value":"610526","parent":"610500"},{"name":"白水县","value":"610527","parent":"610500"},{"name":"富平县","value":"610528","parent":"610500"},{"name":"韩城市","value":"610581","parent":"610500"},{"name":"华阴市","value":"610582","parent":"610500"},{"name":"宝塔区","value":"610602","parent":"610600"},{"name":"延长县","value":"610621","parent":"610600"},{"name":"延川县","value":"610622","parent":"610600"},{"name":"子长县","value":"610623","parent":"610600"},{"name":"安塞县","value":"610624","parent":"610600"},{"name":"志丹县","value":"610625","parent":"610600"},{"name":"吴起县","value":"610626","parent":"610600"},{"name":"甘泉县","value":"610627","parent":"610600"},{"name":"富县","value":"610628","parent":"610600"},{"name":"洛川县","value":"610629","parent":"610600"},{"name":"宜川县","value":"610630","parent":"610600"},{"name":"黄龙县","value":"610631","parent":"610600"},{"name":"黄陵县","value":"610632","parent":"610600"},{"name":"汉台区","value":"610702","parent":"610700"},{"name":"南郑县","value":"610721","parent":"610700"},{"name":"城固县","value":"610722","parent":"610700"},{"name":"洋县","value":"610723","parent":"610700"},{"name":"西乡县","value":"610724","parent":"610700"},{"name":"勉县","value":"610725","parent":"610700"},{"name":"宁强县","value":"610726","parent":"610700"},{"name":"略阳县","value":"610727","parent":"610700"},{"name":"镇巴县","value":"610728","parent":"610700"},{"name":"留坝县","value":"610729","parent":"610700"},{"name":"佛坪县","value":"610730","parent":"610700"},{"name":"榆阳区","value":"610802","parent":"610800"},{"name":"神木县","value":"610821","parent":"610800"},{"name":"府谷县","value":"610822","parent":"610800"},{"name":"横山县","value":"610823","parent":"610800"},{"name":"靖边县","value":"610824","parent":"610800"},{"name":"定边县","value":"610825","parent":"610800"},{"name":"绥德县","value":"610826","parent":"610800"},{"name":"米脂县","value":"610827","parent":"610800"},{"name":"佳县","value":"610828","parent":"610800"},{"name":"吴堡县","value":"610829","parent":"610800"},{"name":"清涧县","value":"610830","parent":"610800"},{"name":"子洲县","value":"610831","parent":"610800"},{"name":"汉滨区","value":"610902","parent":"610900"},{"name":"汉阴县","value":"610921","parent":"610900"},{"name":"石泉县","value":"610922","parent":"610900"},{"name":"宁陕县","value":"610923","parent":"610900"},{"name":"紫阳县","value":"610924","parent":"610900"},{"name":"岚皋县","value":"610925","parent":"610900"},{"name":"平利县","value":"610926","parent":"610900"},{"name":"镇坪县","value":"610927","parent":"610900"},{"name":"旬阳县","value":"610928","parent":"610900"},{"name":"白河县","value":"610929","parent":"610900"},{"name":"商州区","value":"611002","parent":"611000"},{"name":"洛南县","value":"611021","parent":"611000"},{"name":"丹凤县","value":"611022","parent":"611000"},{"name":"商南县","value":"611023","parent":"611000"},{"name":"山阳县","value":"611024","parent":"611000"},{"name":"镇安县","value":"611025","parent":"611000"},{"name":"柞水县","value":"611026","parent":"611000"},{"name":"兰州市","value":"620100","parent":"620000"},{"name":"嘉峪关市","value":"620200","parent":"620000"},{"name":"金昌市","value":"620300","parent":"620000"},{"name":"白银市","value":"620400","parent":"620000"},{"name":"天水市","value":"620500","parent":"620000"},{"name":"武威市","value":"620600","parent":"620000"},{"name":"张掖市","value":"620700","parent":"620000"},{"name":"平凉市","value":"620800","parent":"620000"},{"name":"酒泉市","value":"620900","parent":"620000"},{"name":"庆阳市","value":"621000","parent":"620000"},{"name":"定西市","value":"621100","parent":"620000"},{"name":"陇南市","value":"621200","parent":"620000"},{"name":"临夏回族自治州","value":"622900","parent":"620000"},{"name":"甘南藏族自治州","value":"623000","parent":"620000"},{"name":"城关区","value":"620102","parent":"620100"},{"name":"七里河区","value":"620103","parent":"620100"},{"name":"西固区","value":"620104","parent":"620100"},{"name":"安宁区","value":"620105","parent":"620100"},{"name":"红古区","value":"620111","parent":"620100"},{"name":"永登县","value":"620121","parent":"620100"},{"name":"皋兰县","value":"620122","parent":"620100"},{"name":"榆中县","value":"620123","parent":"620100"},{"name":"金川区","value":"620302","parent":"620300"},{"name":"永昌县","value":"620321","parent":"620300"},{"name":"白银区","value":"620402","parent":"620400"},{"name":"平川区","value":"620403","parent":"620400"},{"name":"靖远县","value":"620421","parent":"620400"},{"name":"会宁县","value":"620422","parent":"620400"},{"name":"景泰县","value":"620423","parent":"620400"},{"name":"秦州区","value":"620502","parent":"620500"},{"name":"麦积区","value":"620503","parent":"620500"},{"name":"清水县","value":"620521","parent":"620500"},{"name":"秦安县","value":"620522","parent":"620500"},{"name":"甘谷县","value":"620523","parent":"620500"},{"name":"武山县","value":"620524","parent":"620500"},{"name":"张家川回族自治县","value":"620525","parent":"620500"},{"name":"凉州区","value":"620602","parent":"620600"},{"name":"民勤县","value":"620621","parent":"620600"},{"name":"古浪县","value":"620622","parent":"620600"},{"name":"天祝藏族自治县","value":"620623","parent":"620600"},{"name":"甘州区","value":"620702","parent":"620700"},{"name":"肃南裕固族自治县","value":"620721","parent":"620700"},{"name":"民乐县","value":"620722","parent":"620700"},{"name":"临泽县","value":"620723","parent":"620700"},{"name":"高台县","value":"620724","parent":"620700"},{"name":"山丹县","value":"620725","parent":"620700"},{"name":"崆峒区","value":"620802","parent":"620800"},{"name":"泾川县","value":"620821","parent":"620800"},{"name":"灵台县","value":"620822","parent":"620800"},{"name":"崇信县","value":"620823","parent":"620800"},{"name":"华亭县","value":"620824","parent":"620800"},{"name":"庄浪县","value":"620825","parent":"620800"},{"name":"静宁县","value":"620826","parent":"620800"},{"name":"肃州区","value":"620902","parent":"620900"},{"name":"金塔县","value":"620921","parent":"620900"},{"name":"瓜州县","value":"620922","parent":"620900"},{"name":"肃北蒙古族自治县","value":"620923","parent":"620900"},{"name":"阿克塞哈萨克族自治县","value":"620924","parent":"620900"},{"name":"玉门市","value":"620981","parent":"620900"},{"name":"敦煌市","value":"620982","parent":"620900"},{"name":"西峰区","value":"621002","parent":"621000"},{"name":"庆城县","value":"621021","parent":"621000"},{"name":"环县","value":"621022","parent":"621000"},{"name":"华池县","value":"621023","parent":"621000"},{"name":"合水县","value":"621024","parent":"621000"},{"name":"正宁县","value":"621025","parent":"621000"},{"name":"宁县","value":"621026","parent":"621000"},{"name":"镇原县","value":"621027","parent":"621000"},{"name":"安定区","value":"621102","parent":"621100"},{"name":"通渭县","value":"621121","parent":"621100"},{"name":"陇西县","value":"621122","parent":"621100"},{"name":"渭源县","value":"621123","parent":"621100"},{"name":"临洮县","value":"621124","parent":"621100"},{"name":"漳县","value":"621125","parent":"621100"},{"name":"岷县","value":"621126","parent":"621100"},{"name":"武都区","value":"621202","parent":"621200"},{"name":"成县","value":"621221","parent":"621200"},{"name":"文县","value":"621222","parent":"621200"},{"name":"宕昌县","value":"621223","parent":"621200"},{"name":"康县","value":"621224","parent":"621200"},{"name":"西和县","value":"621225","parent":"621200"},{"name":"礼县","value":"621226","parent":"621200"},{"name":"徽县","value":"621227","parent":"621200"},{"name":"两当县","value":"621228","parent":"621200"},{"name":"临夏市","value":"622901","parent":"622900"},{"name":"临夏县","value":"622921","parent":"622900"},{"name":"康乐县","value":"622922","parent":"622900"},{"name":"永靖县","value":"622923","parent":"622900"},{"name":"广河县","value":"622924","parent":"622900"},{"name":"和政县","value":"622925","parent":"622900"},{"name":"东乡族自治县","value":"622926","parent":"622900"},{"name":"积石山保安族东乡族撒拉族自治县","value":"622927","parent":"622900"},{"name":"合作市","value":"623001","parent":"623000"},{"name":"临潭县","value":"623021","parent":"623000"},{"name":"卓尼县","value":"623022","parent":"623000"},{"name":"舟曲县","value":"623023","parent":"623000"},{"name":"迭部县","value":"623024","parent":"623000"},{"name":"玛曲县","value":"623025","parent":"623000"},{"name":"碌曲县","value":"623026","parent":"623000"},{"name":"夏河县","value":"623027","parent":"623000"},{"name":"西宁市","value":"630100","parent":"630000"},{"name":"海东市","value":"630200","parent":"630000"},{"name":"海北藏族自治州","value":"632200","parent":"630000"},{"name":"黄南藏族自治州","value":"632300","parent":"630000"},{"name":"海南藏族自治州","value":"632500","parent":"630000"},{"name":"果洛藏族自治州","value":"632600","parent":"630000"},{"name":"玉树藏族自治州","value":"632700","parent":"630000"},{"name":"海西蒙古族藏族自治州","value":"632800","parent":"630000"},{"name":"城东区","value":"630102","parent":"630100"},{"name":"城中区","value":"630103","parent":"630100"},{"name":"城西区","value":"630104","parent":"630100"},{"name":"城北区","value":"630105","parent":"630100"},{"name":"大通回族土族自治县","value":"630121","parent":"630100"},{"name":"湟中县","value":"630122","parent":"630100"},{"name":"湟源县","value":"630123","parent":"630100"},{"name":"乐都区","value":"630202","parent":"630200"},{"name":"平安区","value":"630203","parent":"630200"},{"name":"民和回族土族自治县","value":"630222","parent":"630200"},{"name":"互助土族自治县","value":"630223","parent":"630200"},{"name":"化隆回族自治县","value":"630224","parent":"630200"},{"name":"循化撒拉族自治县","value":"630225","parent":"630200"},{"name":"门源回族自治县","value":"632221","parent":"632200"},{"name":"祁连县","value":"632222","parent":"632200"},{"name":"海晏县","value":"632223","parent":"632200"},{"name":"刚察县","value":"632224","parent":"632200"},{"name":"同仁县","value":"632321","parent":"632300"},{"name":"尖扎县","value":"632322","parent":"632300"},{"name":"泽库县","value":"632323","parent":"632300"},{"name":"河南蒙古族自治县","value":"632324","parent":"632300"},{"name":"共和县","value":"632521","parent":"632500"},{"name":"同德县","value":"632522","parent":"632500"},{"name":"贵德县","value":"632523","parent":"632500"},{"name":"兴海县","value":"632524","parent":"632500"},{"name":"贵南县","value":"632525","parent":"632500"},{"name":"玛沁县","value":"632621","parent":"632600"},{"name":"班玛县","value":"632622","parent":"632600"},{"name":"甘德县","value":"632623","parent":"632600"},{"name":"达日县","value":"632624","parent":"632600"},{"name":"久治县","value":"632625","parent":"632600"},{"name":"玛多县","value":"632626","parent":"632600"},{"name":"玉树市","value":"632701","parent":"632700"},{"name":"杂多县","value":"632722","parent":"632700"},{"name":"称多县","value":"632723","parent":"632700"},{"name":"治多县","value":"632724","parent":"632700"},{"name":"囊谦县","value":"632725","parent":"632700"},{"name":"曲麻莱县","value":"632726","parent":"632700"},{"name":"格尔木市","value":"632801","parent":"632800"},{"name":"德令哈市","value":"632802","parent":"632800"},{"name":"乌兰县","value":"632821","parent":"632800"},{"name":"都兰县","value":"632822","parent":"632800"},{"name":"天峻县","value":"632823","parent":"632800"},{"name":"海西蒙古族藏族自治州直辖","value":"632825","parent":"632800"},{"name":"银川市","value":"640100","parent":"640000"},{"name":"石嘴山市","value":"640200","parent":"640000"},{"name":"吴忠市","value":"640300","parent":"640000"},{"name":"固原市","value":"640400","parent":"640000"},{"name":"中卫市","value":"640500","parent":"640000"},{"name":"兴庆区","value":"640104","parent":"640100"},{"name":"西夏区","value":"640105","parent":"640100"},{"name":"金凤区","value":"640106","parent":"640100"},{"name":"永宁县","value":"640121","parent":"640100"},{"name":"贺兰县","value":"640122","parent":"640100"},{"name":"灵武市","value":"640181","parent":"640100"},{"name":"大武口区","value":"640202","parent":"640200"},{"name":"惠农区","value":"640205","parent":"640200"},{"name":"平罗县","value":"640221","parent":"640200"},{"name":"利通区","value":"640302","parent":"640300"},{"name":"红寺堡区","value":"640303","parent":"640300"},{"name":"盐池县","value":"640323","parent":"640300"},{"name":"同心县","value":"640324","parent":"640300"},{"name":"青铜峡市","value":"640381","parent":"640300"},{"name":"原州区","value":"640402","parent":"640400"},{"name":"西吉县","value":"640422","parent":"640400"},{"name":"隆德县","value":"640423","parent":"640400"},{"name":"泾源县","value":"640424","parent":"640400"},{"name":"彭阳县","value":"640425","parent":"640400"},{"name":"沙坡头区","value":"640502","parent":"640500"},{"name":"中宁县","value":"640521","parent":"640500"},{"name":"海原县","value":"640522","parent":"640500"},{"name":"乌鲁木齐市","value":"650100","parent":"650000"},{"name":"克拉玛依市","value":"650200","parent":"650000"},{"name":"吐鲁番市","value":"650400","parent":"650000"},{"name":"哈密地区","value":"652200","parent":"650000"},{"name":"昌吉回族自治州","value":"652300","parent":"650000"},{"name":"博尔塔拉蒙古自治州","value":"652700","parent":"650000"},{"name":"巴音郭楞蒙古自治州","value":"652800","parent":"650000"},{"name":"阿克苏地区","value":"652900","parent":"650000"},{"name":"克孜勒苏柯尔克孜自治州","value":"653000","parent":"650000"},{"name":"喀什地区","value":"653100","parent":"650000"},{"name":"和田地区","value":"653200","parent":"650000"},{"name":"伊犁哈萨克自治州","value":"654000","parent":"650000"},{"name":"塔城地区","value":"654200","parent":"650000"},{"name":"阿勒泰地区","value":"654300","parent":"650000"},{"name":"石河子市","value":"659001","parent":"650000"},{"name":"阿拉尔市","value":"659002","parent":"650000"},{"name":"图木舒克市","value":"659003","parent":"650000"},{"name":"五家渠市","value":"659004","parent":"650000"},{"name":"北屯市","value":"659005","parent":"650000"},{"name":"铁门关市","value":"659006","parent":"650000"},{"name":"双河市","value":"659007","parent":"650000"},{"name":"可克达拉市","value":"659008","parent":"650000"},{"name":"天山区","value":"650102","parent":"650100"},{"name":"沙依巴克区","value":"650103","parent":"650100"},{"name":"新市区","value":"650104","parent":"650100"},{"name":"水磨沟区","value":"650105","parent":"650100"},{"name":"头屯河区","value":"650106","parent":"650100"},{"name":"达坂城区","value":"650107","parent":"650100"},{"name":"米东区","value":"650109","parent":"650100"},{"name":"乌鲁木齐县","value":"650121","parent":"650100"},{"name":"独山子区","value":"650202","parent":"650200"},{"name":"克拉玛依区","value":"650203","parent":"650200"},{"name":"白碱滩区","value":"650204","parent":"650200"},{"name":"乌尔禾区","value":"650205","parent":"650200"},{"name":"高昌区","value":"650402","parent":"650400"},{"name":"鄯善县","value":"650421","parent":"650400"},{"name":"托克逊县","value":"650422","parent":"650400"},{"name":"哈密市","value":"652201","parent":"652200"},{"name":"巴里坤哈萨克自治县","value":"652222","parent":"652200"},{"name":"伊吾县","value":"652223","parent":"652200"},{"name":"昌吉市","value":"652301","parent":"652300"},{"name":"阜康市","value":"652302","parent":"652300"},{"name":"呼图壁县","value":"652323","parent":"652300"},{"name":"玛纳斯县","value":"652324","parent":"652300"},{"name":"奇台县","value":"652325","parent":"652300"},{"name":"吉木萨尔县","value":"652327","parent":"652300"},{"name":"木垒哈萨克自治县","value":"652328","parent":"652300"},{"name":"博乐市","value":"652701","parent":"652700"},{"name":"阿拉山口市","value":"652702","parent":"652700"},{"name":"精河县","value":"652722","parent":"652700"},{"name":"温泉县","value":"652723","parent":"652700"},{"name":"库尔勒市","value":"652801","parent":"652800"},{"name":"轮台县","value":"652822","parent":"652800"},{"name":"尉犁县","value":"652823","parent":"652800"},{"name":"若羌县","value":"652824","parent":"652800"},{"name":"且末县","value":"652825","parent":"652800"},{"name":"焉耆回族自治县","value":"652826","parent":"652800"},{"name":"和静县","value":"652827","parent":"652800"},{"name":"和硕县","value":"652828","parent":"652800"},{"name":"博湖县","value":"652829","parent":"652800"},{"name":"阿克苏市","value":"652901","parent":"652900"},{"name":"温宿县","value":"652922","parent":"652900"},{"name":"库车县","value":"652923","parent":"652900"},{"name":"沙雅县","value":"652924","parent":"652900"},{"name":"新和县","value":"652925","parent":"652900"},{"name":"拜城县","value":"652926","parent":"652900"},{"name":"乌什县","value":"652927","parent":"652900"},{"name":"阿瓦提县","value":"652928","parent":"652900"},{"name":"柯坪县","value":"652929","parent":"652900"},{"name":"阿图什市","value":"653001","parent":"653000"},{"name":"阿克陶县","value":"653022","parent":"653000"},{"name":"阿合奇县","value":"653023","parent":"653000"},{"name":"乌恰县","value":"653024","parent":"653000"},{"name":"喀什市","value":"653101","parent":"653100"},{"name":"疏附县","value":"653121","parent":"653100"},{"name":"疏勒县","value":"653122","parent":"653100"},{"name":"英吉沙县","value":"653123","parent":"653100"},{"name":"泽普县","value":"653124","parent":"653100"},{"name":"莎车县","value":"653125","parent":"653100"},{"name":"叶城县","value":"653126","parent":"653100"},{"name":"麦盖提县","value":"653127","parent":"653100"},{"name":"岳普湖县","value":"653128","parent":"653100"},{"name":"伽师县","value":"653129","parent":"653100"},{"name":"巴楚县","value":"653130","parent":"653100"},{"name":"塔什库尔干塔吉克自治县","value":"653131","parent":"653100"},{"name":"和田市","value":"653201","parent":"653200"},{"name":"和田县","value":"653221","parent":"653200"},{"name":"墨玉县","value":"653222","parent":"653200"},{"name":"皮山县","value":"653223","parent":"653200"},{"name":"洛浦县","value":"653224","parent":"653200"},{"name":"策勒县","value":"653225","parent":"653200"},{"name":"于田县","value":"653226","parent":"653200"},{"name":"民丰县","value":"653227","parent":"653200"},{"name":"伊宁市","value":"654002","parent":"654000"},{"name":"奎屯市","value":"654003","parent":"654000"},{"name":"霍尔果斯市","value":"654004","parent":"654000"},{"name":"伊宁县","value":"654021","parent":"654000"},{"name":"察布查尔锡伯自治县","value":"654022","parent":"654000"},{"name":"霍城县","value":"654023","parent":"654000"},{"name":"巩留县","value":"654024","parent":"654000"},{"name":"新源县","value":"654025","parent":"654000"},{"name":"昭苏县","value":"654026","parent":"654000"},{"name":"特克斯县","value":"654027","parent":"654000"},{"name":"尼勒克县","value":"654028","parent":"654000"},{"name":"塔城市","value":"654201","parent":"654200"},{"name":"乌苏市","value":"654202","parent":"654200"},{"name":"额敏县","value":"654221","parent":"654200"},{"name":"沙湾县","value":"654223","parent":"654200"},{"name":"托里县","value":"654224","parent":"654200"},{"name":"裕民县","value":"654225","parent":"654200"},{"name":"和布克赛尔蒙古自治县","value":"654226","parent":"654200"},{"name":"阿勒泰市","value":"654301","parent":"654300"},{"name":"布尔津县","value":"654321","parent":"654300"},{"name":"富蕴县","value":"654322","parent":"654300"},{"name":"福海县","value":"654323","parent":"654300"},{"name":"哈巴河县","value":"654324","parent":"654300"},{"name":"青河县","value":"654325","parent":"654300"},{"name":"吉木乃县","value":"654326","parent":"654300"},{"name":"中西區","value":"810001","parent":"810000"},{"name":"灣仔區","value":"810002","parent":"810000"},{"name":"東區","value":"810003","parent":"810000"},{"name":"南區","value":"810004","parent":"810000"},{"name":"油尖旺區","value":"810005","parent":"810000"},{"name":"深水埗區","value":"810006","parent":"810000"},{"name":"九龍城區","value":"810007","parent":"810000"},{"name":"黃大仙區","value":"810008","parent":"810000"},{"name":"觀塘區","value":"810009","parent":"810000"},{"name":"荃灣區","value":"810010","parent":"810000"},{"name":"屯門區","value":"810011","parent":"810000"},{"name":"元朗區","value":"810012","parent":"810000"},{"name":"北區","value":"810013","parent":"810000"},{"name":"大埔區","value":"810014","parent":"810000"},{"name":"西貢區","value":"810015","parent":"810000"},{"name":"沙田區","value":"810016","parent":"810000"},{"name":"葵青區","value":"810017","parent":"810000"},{"name":"離島區","value":"810018","parent":"810000"},{"name":"花地瑪堂區","value":"820001","parent":"820000"},{"name":"花王堂區","value":"820002","parent":"820000"},{"name":"望德堂區","value":"820003","parent":"820000"},{"name":"大堂區","value":"820004","parent":"820000"},{"name":"風順堂區","value":"820005","parent":"820000"},{"name":"嘉模堂區","value":"820006","parent":"820000"},{"name":"路氹填海區","value":"820007","parent":"820000"},{"name":"聖方濟各堂區","value":"820008","parent":"820000"},{"name":"--","value":"120200--","parent":"120200"},{"name":"--","value":"310200--","parent":"310200"},{"name":"--","value":"429004--","parent":"429004"},{"name":"--","value":"429005--","parent":"429005"},{"name":"--","value":"429006--","parent":"429006"},{"name":"--","value":"659001--","parent":"659001"},{"name":"--","value":"659002--","parent":"659002"},{"name":"--","value":"659003--","parent":"659003"},{"name":"--","value":"659004--","parent":"659004"},{"name":"--","value":"659005--","parent":"659005"},{"name":"--","value":"659006--","parent":"659006"},{"name":"--","value":"659007--","parent":"659007"},{"name":"--","value":"659008--","parent":"659008"},{"name":"--","value":"500200--","parent":"500200"},{"name":"--","value":"429021--","parent":"429021"},{"name":"--","value":"419001--","parent":"419001"},{"name":"--","value":"460400--","parent":"460400"},{"name":"--","value":"469001--","parent":"469001"},{"name":"--","value":"469002--","parent":"469002"},{"name":"--","value":"469005--","parent":"469005"},{"name":"--","value":"469006--","parent":"469006"},{"name":"--","value":"469007--","parent":"469007"},{"name":"--","value":"469021--","parent":"469021"},{"name":"--","value":"469022--","parent":"469022"},{"name":"--","value":"469023--","parent":"469023"},{"name":"--","value":"469024--","parent":"469024"},{"name":"--","value":"469025--","parent":"469025"},{"name":"--","value":"469026--","parent":"469026"},{"name":"--","value":"469027--","parent":"469027"},{"name":"--","value":"469028--","parent":"469028"},{"name":"--","value":"469029--","parent":"469029"},{"name":"--","value":"469030--","parent":"469030"}]

/***/ }),
/* 298 */
/***/ (function(module, exports) {

module.exports = [{"name":"北京市","value":"110000"},{"name":"天津市","value":"120000"},{"name":"河北省","value":"130000"},{"name":"山西省","value":"140000"},{"name":"内蒙古自治区","value":"150000"},{"name":"辽宁省","value":"210000"},{"name":"吉林省","value":"220000"},{"name":"黑龙江省","value":"230000"},{"name":"上海市","value":"310000"},{"name":"江苏省","value":"320000"},{"name":"浙江省","value":"330000"},{"name":"安徽省","value":"340000"},{"name":"福建省","value":"350000"},{"name":"江西省","value":"360000"},{"name":"山东省","value":"370000"},{"name":"河南省","value":"410000"},{"name":"湖北省","value":"420000"},{"name":"湖南省","value":"430000"},{"name":"广东省","value":"440000"},{"name":"广西壮族自治区","value":"450000"},{"name":"海南省","value":"460000"},{"name":"重庆市","value":"500000"},{"name":"四川省","value":"510000"},{"name":"贵州省","value":"520000"},{"name":"云南省","value":"530000"},{"name":"西藏自治区","value":"540000"},{"name":"陕西省","value":"610000"},{"name":"甘肃省","value":"620000"},{"name":"青海省","value":"630000"},{"name":"宁夏回族自治区","value":"640000"},{"name":"新疆维吾尔自治区","value":"650000"},{"name":"市辖区","value":"110100","parent":"110000"},{"name":"东城区","value":"110101","parent":"110100"},{"name":"西城区","value":"110102","parent":"110100"},{"name":"朝阳区","value":"110105","parent":"110100"},{"name":"丰台区","value":"110106","parent":"110100"},{"name":"石景山区","value":"110107","parent":"110100"},{"name":"海淀区","value":"110108","parent":"110100"},{"name":"门头沟区","value":"110109","parent":"110100"},{"name":"房山区","value":"110111","parent":"110100"},{"name":"通州区","value":"110112","parent":"110100"},{"name":"顺义区","value":"110113","parent":"110100"},{"name":"昌平区","value":"110114","parent":"110100"},{"name":"大兴区","value":"110115","parent":"110100"},{"name":"怀柔区","value":"110116","parent":"110100"},{"name":"平谷区","value":"110117","parent":"110100"},{"name":"密云县","value":"110228","parent":"110100"},{"name":"延庆县","value":"110229","parent":"110100"},{"name":"市辖区","value":"120100","parent":"120000"},{"name":"和平区","value":"120101","parent":"120100"},{"name":"河东区","value":"120102","parent":"120100"},{"name":"河西区","value":"120103","parent":"120100"},{"name":"南开区","value":"120104","parent":"120100"},{"name":"河北区","value":"120105","parent":"120100"},{"name":"红桥区","value":"120106","parent":"120100"},{"name":"东丽区","value":"120110","parent":"120100"},{"name":"西青区","value":"120111","parent":"120100"},{"name":"津南区","value":"120112","parent":"120100"},{"name":"北辰区","value":"120113","parent":"120100"},{"name":"武清区","value":"120114","parent":"120100"},{"name":"宝坻区","value":"120115","parent":"120100"},{"name":"滨海新区","value":"120116","parent":"120100"},{"name":"宁河区","value":"120117","parent":"120100"},{"name":"静海区","value":"120118","parent":"120100"},{"name":"蓟县","value":"120225","parent":"120100"},{"name":"石家庄市","value":"130100","parent":"130000"},{"name":"唐山市","value":"130200","parent":"130000"},{"name":"秦皇岛市","value":"130300","parent":"130000"},{"name":"邯郸市","value":"130400","parent":"130000"},{"name":"邢台市","value":"130500","parent":"130000"},{"name":"保定市","value":"130600","parent":"130000"},{"name":"张家口市","value":"130700","parent":"130000"},{"name":"承德市","value":"130800","parent":"130000"},{"name":"沧州市","value":"130900","parent":"130000"},{"name":"廊坊市","value":"131000","parent":"130000"},{"name":"衡水市","value":"131100","parent":"130000"},{"name":"定州市","value":"139001","parent":"130000"},{"name":"辛集市","value":"139002","parent":"130000"},{"name":"长安区","value":"130102","parent":"130100"},{"name":"桥西区","value":"130104","parent":"130100"},{"name":"新华区","value":"130105","parent":"130100"},{"name":"井陉矿区","value":"130107","parent":"130100"},{"name":"裕华区","value":"130108","parent":"130100"},{"name":"藁城区","value":"130109","parent":"130100"},{"name":"鹿泉区","value":"130110","parent":"130100"},{"name":"栾城区","value":"130111","parent":"130100"},{"name":"井陉县","value":"130121","parent":"130100"},{"name":"正定县","value":"130123","parent":"130100"},{"name":"行唐县","value":"130125","parent":"130100"},{"name":"灵寿县","value":"130126","parent":"130100"},{"name":"高邑县","value":"130127","parent":"130100"},{"name":"深泽县","value":"130128","parent":"130100"},{"name":"赞皇县","value":"130129","parent":"130100"},{"name":"无极县","value":"130130","parent":"130100"},{"name":"平山县","value":"130131","parent":"130100"},{"name":"元氏县","value":"130132","parent":"130100"},{"name":"赵县","value":"130133","parent":"130100"},{"name":"晋州市","value":"130183","parent":"130100"},{"name":"新乐市","value":"130184","parent":"130100"},{"name":"路南区","value":"130202","parent":"130200"},{"name":"路北区","value":"130203","parent":"130200"},{"name":"古冶区","value":"130204","parent":"130200"},{"name":"开平区","value":"130205","parent":"130200"},{"name":"丰南区","value":"130207","parent":"130200"},{"name":"丰润区","value":"130208","parent":"130200"},{"name":"曹妃甸区","value":"130209","parent":"130200"},{"name":"滦县","value":"130223","parent":"130200"},{"name":"滦南县","value":"130224","parent":"130200"},{"name":"乐亭县","value":"130225","parent":"130200"},{"name":"迁西县","value":"130227","parent":"130200"},{"name":"玉田县","value":"130229","parent":"130200"},{"name":"遵化市","value":"130281","parent":"130200"},{"name":"迁安市","value":"130283","parent":"130200"},{"name":"海港区","value":"130302","parent":"130300"},{"name":"山海关区","value":"130303","parent":"130300"},{"name":"北戴河区","value":"130304","parent":"130300"},{"name":"抚宁区","value":"130306","parent":"130300"},{"name":"青龙满族自治县","value":"130321","parent":"130300"},{"name":"昌黎县","value":"130322","parent":"130300"},{"name":"卢龙县","value":"130324","parent":"130300"},{"name":"邯山区","value":"130402","parent":"130400"},{"name":"丛台区","value":"130403","parent":"130400"},{"name":"复兴区","value":"130404","parent":"130400"},{"name":"峰峰矿区","value":"130406","parent":"130400"},{"name":"邯郸县","value":"130421","parent":"130400"},{"name":"临漳县","value":"130423","parent":"130400"},{"name":"成安县","value":"130424","parent":"130400"},{"name":"大名县","value":"130425","parent":"130400"},{"name":"涉县","value":"130426","parent":"130400"},{"name":"磁县","value":"130427","parent":"130400"},{"name":"肥乡县","value":"130428","parent":"130400"},{"name":"永年县","value":"130429","parent":"130400"},{"name":"邱县","value":"130430","parent":"130400"},{"name":"鸡泽县","value":"130431","parent":"130400"},{"name":"广平县","value":"130432","parent":"130400"},{"name":"馆陶县","value":"130433","parent":"130400"},{"name":"魏县","value":"130434","parent":"130400"},{"name":"曲周县","value":"130435","parent":"130400"},{"name":"武安市","value":"130481","parent":"130400"},{"name":"桥东区","value":"130502","parent":"130500"},{"name":"桥西区","value":"130503","parent":"130500"},{"name":"邢台县","value":"130521","parent":"130500"},{"name":"临城县","value":"130522","parent":"130500"},{"name":"内丘县","value":"130523","parent":"130500"},{"name":"柏乡县","value":"130524","parent":"130500"},{"name":"隆尧县","value":"130525","parent":"130500"},{"name":"任县","value":"130526","parent":"130500"},{"name":"南和县","value":"130527","parent":"130500"},{"name":"宁晋县","value":"130528","parent":"130500"},{"name":"巨鹿县","value":"130529","parent":"130500"},{"name":"新河县","value":"130530","parent":"130500"},{"name":"广宗县","value":"130531","parent":"130500"},{"name":"平乡县","value":"130532","parent":"130500"},{"name":"威县","value":"130533","parent":"130500"},{"name":"清河县","value":"130534","parent":"130500"},{"name":"临西县","value":"130535","parent":"130500"},{"name":"南宫市","value":"130581","parent":"130500"},{"name":"沙河市","value":"130582","parent":"130500"},{"name":"竞秀区","value":"130602","parent":"130600"},{"name":"莲池区","value":"130606","parent":"130600"},{"name":"满城区","value":"130607","parent":"130600"},{"name":"清苑区","value":"130608","parent":"130600"},{"name":"徐水区","value":"130609","parent":"130600"},{"name":"涞水县","value":"130623","parent":"130600"},{"name":"阜平县","value":"130624","parent":"130600"},{"name":"定兴县","value":"130626","parent":"130600"},{"name":"唐县","value":"130627","parent":"130600"},{"name":"高阳县","value":"130628","parent":"130600"},{"name":"容城县","value":"130629","parent":"130600"},{"name":"涞源县","value":"130630","parent":"130600"},{"name":"望都县","value":"130631","parent":"130600"},{"name":"安新县","value":"130632","parent":"130600"},{"name":"易县","value":"130633","parent":"130600"},{"name":"曲阳县","value":"130634","parent":"130600"},{"name":"蠡县","value":"130635","parent":"130600"},{"name":"顺平县","value":"130636","parent":"130600"},{"name":"博野县","value":"130637","parent":"130600"},{"name":"雄县","value":"130638","parent":"130600"},{"name":"涿州市","value":"130681","parent":"130600"},{"name":"安国市","value":"130683","parent":"130600"},{"name":"高碑店市","value":"130684","parent":"130600"},{"name":"桥东区","value":"130702","parent":"130700"},{"name":"桥西区","value":"130703","parent":"130700"},{"name":"宣化区","value":"130705","parent":"130700"},{"name":"下花园区","value":"130706","parent":"130700"},{"name":"宣化县","value":"130721","parent":"130700"},{"name":"张北县","value":"130722","parent":"130700"},{"name":"康保县","value":"130723","parent":"130700"},{"name":"沽源县","value":"130724","parent":"130700"},{"name":"尚义县","value":"130725","parent":"130700"},{"name":"蔚县","value":"130726","parent":"130700"},{"name":"阳原县","value":"130727","parent":"130700"},{"name":"怀安县","value":"130728","parent":"130700"},{"name":"万全县","value":"130729","parent":"130700"},{"name":"怀来县","value":"130730","parent":"130700"},{"name":"涿鹿县","value":"130731","parent":"130700"},{"name":"赤城县","value":"130732","parent":"130700"},{"name":"崇礼县","value":"130733","parent":"130700"},{"name":"双桥区","value":"130802","parent":"130800"},{"name":"双滦区","value":"130803","parent":"130800"},{"name":"鹰手营子矿区","value":"130804","parent":"130800"},{"name":"承德县","value":"130821","parent":"130800"},{"name":"兴隆县","value":"130822","parent":"130800"},{"name":"平泉县","value":"130823","parent":"130800"},{"name":"滦平县","value":"130824","parent":"130800"},{"name":"隆化县","value":"130825","parent":"130800"},{"name":"丰宁满族自治县","value":"130826","parent":"130800"},{"name":"宽城满族自治县","value":"130827","parent":"130800"},{"name":"围场满族蒙古族自治县","value":"130828","parent":"130800"},{"name":"新华区","value":"130902","parent":"130900"},{"name":"运河区","value":"130903","parent":"130900"},{"name":"沧县","value":"130921","parent":"130900"},{"name":"青县","value":"130922","parent":"130900"},{"name":"东光县","value":"130923","parent":"130900"},{"name":"海兴县","value":"130924","parent":"130900"},{"name":"盐山县","value":"130925","parent":"130900"},{"name":"肃宁县","value":"130926","parent":"130900"},{"name":"南皮县","value":"130927","parent":"130900"},{"name":"吴桥县","value":"130928","parent":"130900"},{"name":"献县","value":"130929","parent":"130900"},{"name":"孟村回族自治县","value":"130930","parent":"130900"},{"name":"泊头市","value":"130981","parent":"130900"},{"name":"任丘市","value":"130982","parent":"130900"},{"name":"黄骅市","value":"130983","parent":"130900"},{"name":"河间市","value":"130984","parent":"130900"},{"name":"安次区","value":"131002","parent":"131000"},{"name":"广阳区","value":"131003","parent":"131000"},{"name":"固安县","value":"131022","parent":"131000"},{"name":"永清县","value":"131023","parent":"131000"},{"name":"香河县","value":"131024","parent":"131000"},{"name":"大城县","value":"131025","parent":"131000"},{"name":"文安县","value":"131026","parent":"131000"},{"name":"大厂回族自治县","value":"131028","parent":"131000"},{"name":"霸州市","value":"131081","parent":"131000"},{"name":"三河市","value":"131082","parent":"131000"},{"name":"桃城区","value":"131102","parent":"131100"},{"name":"枣强县","value":"131121","parent":"131100"},{"name":"武邑县","value":"131122","parent":"131100"},{"name":"武强县","value":"131123","parent":"131100"},{"name":"饶阳县","value":"131124","parent":"131100"},{"name":"安平县","value":"131125","parent":"131100"},{"name":"故城县","value":"131126","parent":"131100"},{"name":"景县","value":"131127","parent":"131100"},{"name":"阜城县","value":"131128","parent":"131100"},{"name":"冀州市","value":"131181","parent":"131100"},{"name":"深州市","value":"131182","parent":"131100"},{"name":"太原市","value":"140100","parent":"140000"},{"name":"大同市","value":"140200","parent":"140000"},{"name":"阳泉市","value":"140300","parent":"140000"},{"name":"长治市","value":"140400","parent":"140000"},{"name":"晋城市","value":"140500","parent":"140000"},{"name":"朔州市","value":"140600","parent":"140000"},{"name":"晋中市","value":"140700","parent":"140000"},{"name":"运城市","value":"140800","parent":"140000"},{"name":"忻州市","value":"140900","parent":"140000"},{"name":"临汾市","value":"141000","parent":"140000"},{"name":"吕梁市","value":"141100","parent":"140000"},{"name":"小店区","value":"140105","parent":"140100"},{"name":"迎泽区","value":"140106","parent":"140100"},{"name":"杏花岭区","value":"140107","parent":"140100"},{"name":"尖草坪区","value":"140108","parent":"140100"},{"name":"万柏林区","value":"140109","parent":"140100"},{"name":"晋源区","value":"140110","parent":"140100"},{"name":"清徐县","value":"140121","parent":"140100"},{"name":"阳曲县","value":"140122","parent":"140100"},{"name":"娄烦县","value":"140123","parent":"140100"},{"name":"古交市","value":"140181","parent":"140100"},{"name":"城区","value":"140202","parent":"140200"},{"name":"矿区","value":"140203","parent":"140200"},{"name":"南郊区","value":"140211","parent":"140200"},{"name":"新荣区","value":"140212","parent":"140200"},{"name":"阳高县","value":"140221","parent":"140200"},{"name":"天镇县","value":"140222","parent":"140200"},{"name":"广灵县","value":"140223","parent":"140200"},{"name":"灵丘县","value":"140224","parent":"140200"},{"name":"浑源县","value":"140225","parent":"140200"},{"name":"左云县","value":"140226","parent":"140200"},{"name":"大同县","value":"140227","parent":"140200"},{"name":"城区","value":"140302","parent":"140300"},{"name":"矿区","value":"140303","parent":"140300"},{"name":"郊区","value":"140311","parent":"140300"},{"name":"平定县","value":"140321","parent":"140300"},{"name":"盂县","value":"140322","parent":"140300"},{"name":"城区","value":"140402","parent":"140400"},{"name":"郊区","value":"140411","parent":"140400"},{"name":"长治县","value":"140421","parent":"140400"},{"name":"襄垣县","value":"140423","parent":"140400"},{"name":"屯留县","value":"140424","parent":"140400"},{"name":"平顺县","value":"140425","parent":"140400"},{"name":"黎城县","value":"140426","parent":"140400"},{"name":"壶关县","value":"140427","parent":"140400"},{"name":"长子县","value":"140428","parent":"140400"},{"name":"武乡县","value":"140429","parent":"140400"},{"name":"沁县","value":"140430","parent":"140400"},{"name":"沁源县","value":"140431","parent":"140400"},{"name":"潞城市","value":"140481","parent":"140400"},{"name":"城区","value":"140502","parent":"140500"},{"name":"沁水县","value":"140521","parent":"140500"},{"name":"阳城县","value":"140522","parent":"140500"},{"name":"陵川县","value":"140524","parent":"140500"},{"name":"泽州县","value":"140525","parent":"140500"},{"name":"高平市","value":"140581","parent":"140500"},{"name":"朔城区","value":"140602","parent":"140600"},{"name":"平鲁区","value":"140603","parent":"140600"},{"name":"山阴县","value":"140621","parent":"140600"},{"name":"应县","value":"140622","parent":"140600"},{"name":"右玉县","value":"140623","parent":"140600"},{"name":"怀仁县","value":"140624","parent":"140600"},{"name":"榆次区","value":"140702","parent":"140700"},{"name":"榆社县","value":"140721","parent":"140700"},{"name":"左权县","value":"140722","parent":"140700"},{"name":"和顺县","value":"140723","parent":"140700"},{"name":"昔阳县","value":"140724","parent":"140700"},{"name":"寿阳县","value":"140725","parent":"140700"},{"name":"太谷县","value":"140726","parent":"140700"},{"name":"祁县","value":"140727","parent":"140700"},{"name":"平遥县","value":"140728","parent":"140700"},{"name":"灵石县","value":"140729","parent":"140700"},{"name":"介休市","value":"140781","parent":"140700"},{"name":"盐湖区","value":"140802","parent":"140800"},{"name":"临猗县","value":"140821","parent":"140800"},{"name":"万荣县","value":"140822","parent":"140800"},{"name":"闻喜县","value":"140823","parent":"140800"},{"name":"稷山县","value":"140824","parent":"140800"},{"name":"新绛县","value":"140825","parent":"140800"},{"name":"绛县","value":"140826","parent":"140800"},{"name":"垣曲县","value":"140827","parent":"140800"},{"name":"夏县","value":"140828","parent":"140800"},{"name":"平陆县","value":"140829","parent":"140800"},{"name":"芮城县","value":"140830","parent":"140800"},{"name":"永济市","value":"140881","parent":"140800"},{"name":"河津市","value":"140882","parent":"140800"},{"name":"忻府区","value":"140902","parent":"140900"},{"name":"定襄县","value":"140921","parent":"140900"},{"name":"五台县","value":"140922","parent":"140900"},{"name":"代县","value":"140923","parent":"140900"},{"name":"繁峙县","value":"140924","parent":"140900"},{"name":"宁武县","value":"140925","parent":"140900"},{"name":"静乐县","value":"140926","parent":"140900"},{"name":"神池县","value":"140927","parent":"140900"},{"name":"五寨县","value":"140928","parent":"140900"},{"name":"岢岚县","value":"140929","parent":"140900"},{"name":"河曲县","value":"140930","parent":"140900"},{"name":"保德县","value":"140931","parent":"140900"},{"name":"偏关县","value":"140932","parent":"140900"},{"name":"原平市","value":"140981","parent":"140900"},{"name":"尧都区","value":"141002","parent":"141000"},{"name":"曲沃县","value":"141021","parent":"141000"},{"name":"翼城县","value":"141022","parent":"141000"},{"name":"襄汾县","value":"141023","parent":"141000"},{"name":"洪洞县","value":"141024","parent":"141000"},{"name":"古县","value":"141025","parent":"141000"},{"name":"安泽县","value":"141026","parent":"141000"},{"name":"浮山县","value":"141027","parent":"141000"},{"name":"吉县","value":"141028","parent":"141000"},{"name":"乡宁县","value":"141029","parent":"141000"},{"name":"大宁县","value":"141030","parent":"141000"},{"name":"隰县","value":"141031","parent":"141000"},{"name":"永和县","value":"141032","parent":"141000"},{"name":"蒲县","value":"141033","parent":"141000"},{"name":"汾西县","value":"141034","parent":"141000"},{"name":"侯马市","value":"141081","parent":"141000"},{"name":"霍州市","value":"141082","parent":"141000"},{"name":"离石区","value":"141102","parent":"141100"},{"name":"文水县","value":"141121","parent":"141100"},{"name":"交城县","value":"141122","parent":"141100"},{"name":"兴县","value":"141123","parent":"141100"},{"name":"临县","value":"141124","parent":"141100"},{"name":"柳林县","value":"141125","parent":"141100"},{"name":"石楼县","value":"141126","parent":"141100"},{"name":"岚县","value":"141127","parent":"141100"},{"name":"方山县","value":"141128","parent":"141100"},{"name":"中阳县","value":"141129","parent":"141100"},{"name":"交口县","value":"141130","parent":"141100"},{"name":"孝义市","value":"141181","parent":"141100"},{"name":"汾阳市","value":"141182","parent":"141100"},{"name":"呼和浩特市","value":"150100","parent":"150000"},{"name":"包头市","value":"150200","parent":"150000"},{"name":"乌海市","value":"150300","parent":"150000"},{"name":"赤峰市","value":"150400","parent":"150000"},{"name":"通辽市","value":"150500","parent":"150000"},{"name":"鄂尔多斯市","value":"150600","parent":"150000"},{"name":"呼伦贝尔市","value":"150700","parent":"150000"},{"name":"巴彦淖尔市","value":"150800","parent":"150000"},{"name":"乌兰察布市","value":"150900","parent":"150000"},{"name":"兴安盟","value":"152200","parent":"150000"},{"name":"锡林郭勒盟","value":"152500","parent":"150000"},{"name":"阿拉善盟","value":"152900","parent":"150000"},{"name":"新城区","value":"150102","parent":"150100"},{"name":"回民区","value":"150103","parent":"150100"},{"name":"玉泉区","value":"150104","parent":"150100"},{"name":"赛罕区","value":"150105","parent":"150100"},{"name":"土默特左旗","value":"150121","parent":"150100"},{"name":"托克托县","value":"150122","parent":"150100"},{"name":"和林格尔县","value":"150123","parent":"150100"},{"name":"清水河县","value":"150124","parent":"150100"},{"name":"武川县","value":"150125","parent":"150100"},{"name":"东河区","value":"150202","parent":"150200"},{"name":"昆都仑区","value":"150203","parent":"150200"},{"name":"青山区","value":"150204","parent":"150200"},{"name":"石拐区","value":"150205","parent":"150200"},{"name":"白云鄂博矿区","value":"150206","parent":"150200"},{"name":"九原区","value":"150207","parent":"150200"},{"name":"土默特右旗","value":"150221","parent":"150200"},{"name":"固阳县","value":"150222","parent":"150200"},{"name":"达尔罕茂明安联合旗","value":"150223","parent":"150200"},{"name":"海勃湾区","value":"150302","parent":"150300"},{"name":"海南区","value":"150303","parent":"150300"},{"name":"乌达区","value":"150304","parent":"150300"},{"name":"红山区","value":"150402","parent":"150400"},{"name":"元宝山区","value":"150403","parent":"150400"},{"name":"松山区","value":"150404","parent":"150400"},{"name":"阿鲁科尔沁旗","value":"150421","parent":"150400"},{"name":"巴林左旗","value":"150422","parent":"150400"},{"name":"巴林右旗","value":"150423","parent":"150400"},{"name":"林西县","value":"150424","parent":"150400"},{"name":"克什克腾旗","value":"150425","parent":"150400"},{"name":"翁牛特旗","value":"150426","parent":"150400"},{"name":"喀喇沁旗","value":"150428","parent":"150400"},{"name":"宁城县","value":"150429","parent":"150400"},{"name":"敖汉旗","value":"150430","parent":"150400"},{"name":"科尔沁区","value":"150502","parent":"150500"},{"name":"科尔沁左翼中旗","value":"150521","parent":"150500"},{"name":"科尔沁左翼后旗","value":"150522","parent":"150500"},{"name":"开鲁县","value":"150523","parent":"150500"},{"name":"库伦旗","value":"150524","parent":"150500"},{"name":"奈曼旗","value":"150525","parent":"150500"},{"name":"扎鲁特旗","value":"150526","parent":"150500"},{"name":"霍林郭勒市","value":"150581","parent":"150500"},{"name":"东胜区","value":"150602","parent":"150600"},{"name":"达拉特旗","value":"150621","parent":"150600"},{"name":"准格尔旗","value":"150622","parent":"150600"},{"name":"鄂托克前旗","value":"150623","parent":"150600"},{"name":"鄂托克旗","value":"150624","parent":"150600"},{"name":"杭锦旗","value":"150625","parent":"150600"},{"name":"乌审旗","value":"150626","parent":"150600"},{"name":"伊金霍洛旗","value":"150627","parent":"150600"},{"name":"海拉尔区","value":"150702","parent":"150700"},{"name":"扎赉诺尔区","value":"150703","parent":"150700"},{"name":"阿荣旗","value":"150721","parent":"150700"},{"name":"莫力达瓦达斡尔族自治旗","value":"150722","parent":"150700"},{"name":"鄂伦春自治旗","value":"150723","parent":"150700"},{"name":"鄂温克族自治旗","value":"150724","parent":"150700"},{"name":"陈巴尔虎旗","value":"150725","parent":"150700"},{"name":"新巴尔虎左旗","value":"150726","parent":"150700"},{"name":"新巴尔虎右旗","value":"150727","parent":"150700"},{"name":"满洲里市","value":"150781","parent":"150700"},{"name":"牙克石市","value":"150782","parent":"150700"},{"name":"扎兰屯市","value":"150783","parent":"150700"},{"name":"额尔古纳市","value":"150784","parent":"150700"},{"name":"根河市","value":"150785","parent":"150700"},{"name":"临河区","value":"150802","parent":"150800"},{"name":"五原县","value":"150821","parent":"150800"},{"name":"磴口县","value":"150822","parent":"150800"},{"name":"乌拉特前旗","value":"150823","parent":"150800"},{"name":"乌拉特中旗","value":"150824","parent":"150800"},{"name":"乌拉特后旗","value":"150825","parent":"150800"},{"name":"杭锦后旗","value":"150826","parent":"150800"},{"name":"集宁区","value":"150902","parent":"150900"},{"name":"卓资县","value":"150921","parent":"150900"},{"name":"化德县","value":"150922","parent":"150900"},{"name":"商都县","value":"150923","parent":"150900"},{"name":"兴和县","value":"150924","parent":"150900"},{"name":"凉城县","value":"150925","parent":"150900"},{"name":"察哈尔右翼前旗","value":"150926","parent":"150900"},{"name":"察哈尔右翼中旗","value":"150927","parent":"150900"},{"name":"察哈尔右翼后旗","value":"150928","parent":"150900"},{"name":"四子王旗","value":"150929","parent":"150900"},{"name":"丰镇市","value":"150981","parent":"150900"},{"name":"乌兰浩特市","value":"152201","parent":"152200"},{"name":"阿尔山市","value":"152202","parent":"152200"},{"name":"科尔沁右翼前旗","value":"152221","parent":"152200"},{"name":"科尔沁右翼中旗","value":"152222","parent":"152200"},{"name":"扎赉特旗","value":"152223","parent":"152200"},{"name":"突泉县","value":"152224","parent":"152200"},{"name":"二连浩特市","value":"152501","parent":"152500"},{"name":"锡林浩特市","value":"152502","parent":"152500"},{"name":"阿巴嘎旗","value":"152522","parent":"152500"},{"name":"苏尼特左旗","value":"152523","parent":"152500"},{"name":"苏尼特右旗","value":"152524","parent":"152500"},{"name":"东乌珠穆沁旗","value":"152525","parent":"152500"},{"name":"西乌珠穆沁旗","value":"152526","parent":"152500"},{"name":"太仆寺旗","value":"152527","parent":"152500"},{"name":"镶黄旗","value":"152528","parent":"152500"},{"name":"正镶白旗","value":"152529","parent":"152500"},{"name":"正蓝旗","value":"152530","parent":"152500"},{"name":"多伦县","value":"152531","parent":"152500"},{"name":"阿拉善左旗","value":"152921","parent":"152900"},{"name":"阿拉善右旗","value":"152922","parent":"152900"},{"name":"额济纳旗","value":"152923","parent":"152900"},{"name":"沈阳市","value":"210100","parent":"210000"},{"name":"大连市","value":"210200","parent":"210000"},{"name":"鞍山市","value":"210300","parent":"210000"},{"name":"抚顺市","value":"210400","parent":"210000"},{"name":"本溪市","value":"210500","parent":"210000"},{"name":"丹东市","value":"210600","parent":"210000"},{"name":"锦州市","value":"210700","parent":"210000"},{"name":"营口市","value":"210800","parent":"210000"},{"name":"阜新市","value":"210900","parent":"210000"},{"name":"辽阳市","value":"211000","parent":"210000"},{"name":"盘锦市","value":"211100","parent":"210000"},{"name":"铁岭市","value":"211200","parent":"210000"},{"name":"朝阳市","value":"211300","parent":"210000"},{"name":"葫芦岛市","value":"211400","parent":"210000"},{"name":"和平区","value":"210102","parent":"210100"},{"name":"沈河区","value":"210103","parent":"210100"},{"name":"大东区","value":"210104","parent":"210100"},{"name":"皇姑区","value":"210105","parent":"210100"},{"name":"铁西区","value":"210106","parent":"210100"},{"name":"苏家屯区","value":"210111","parent":"210100"},{"name":"浑南区","value":"210112","parent":"210100"},{"name":"沈北新区","value":"210113","parent":"210100"},{"name":"于洪区","value":"210114","parent":"210100"},{"name":"辽中县","value":"210122","parent":"210100"},{"name":"康平县","value":"210123","parent":"210100"},{"name":"法库县","value":"210124","parent":"210100"},{"name":"新民市","value":"210181","parent":"210100"},{"name":"中山区","value":"210202","parent":"210200"},{"name":"西岗区","value":"210203","parent":"210200"},{"name":"沙河口区","value":"210204","parent":"210200"},{"name":"甘井子区","value":"210211","parent":"210200"},{"name":"旅顺口区","value":"210212","parent":"210200"},{"name":"金州区","value":"210213","parent":"210200"},{"name":"长海县","value":"210224","parent":"210200"},{"name":"瓦房店市","value":"210281","parent":"210200"},{"name":"普兰店市","value":"210282","parent":"210200"},{"name":"庄河市","value":"210283","parent":"210200"},{"name":"铁东区","value":"210302","parent":"210300"},{"name":"铁西区","value":"210303","parent":"210300"},{"name":"立山区","value":"210304","parent":"210300"},{"name":"千山区","value":"210311","parent":"210300"},{"name":"台安县","value":"210321","parent":"210300"},{"name":"岫岩满族自治县","value":"210323","parent":"210300"},{"name":"海城市","value":"210381","parent":"210300"},{"name":"新抚区","value":"210402","parent":"210400"},{"name":"东洲区","value":"210403","parent":"210400"},{"name":"望花区","value":"210404","parent":"210400"},{"name":"顺城区","value":"210411","parent":"210400"},{"name":"抚顺县","value":"210421","parent":"210400"},{"name":"新宾满族自治县","value":"210422","parent":"210400"},{"name":"清原满族自治县","value":"210423","parent":"210400"},{"name":"平山区","value":"210502","parent":"210500"},{"name":"溪湖区","value":"210503","parent":"210500"},{"name":"明山区","value":"210504","parent":"210500"},{"name":"南芬区","value":"210505","parent":"210500"},{"name":"本溪满族自治县","value":"210521","parent":"210500"},{"name":"桓仁满族自治县","value":"210522","parent":"210500"},{"name":"元宝区","value":"210602","parent":"210600"},{"name":"振兴区","value":"210603","parent":"210600"},{"name":"振安区","value":"210604","parent":"210600"},{"name":"宽甸满族自治县","value":"210624","parent":"210600"},{"name":"东港市","value":"210681","parent":"210600"},{"name":"凤城市","value":"210682","parent":"210600"},{"name":"古塔区","value":"210702","parent":"210700"},{"name":"凌河区","value":"210703","parent":"210700"},{"name":"太和区","value":"210711","parent":"210700"},{"name":"黑山县","value":"210726","parent":"210700"},{"name":"义县","value":"210727","parent":"210700"},{"name":"凌海市","value":"210781","parent":"210700"},{"name":"北镇市","value":"210782","parent":"210700"},{"name":"站前区","value":"210802","parent":"210800"},{"name":"西市区","value":"210803","parent":"210800"},{"name":"鲅鱼圈区","value":"210804","parent":"210800"},{"name":"老边区","value":"210811","parent":"210800"},{"name":"盖州市","value":"210881","parent":"210800"},{"name":"大石桥市","value":"210882","parent":"210800"},{"name":"海州区","value":"210902","parent":"210900"},{"name":"新邱区","value":"210903","parent":"210900"},{"name":"太平区","value":"210904","parent":"210900"},{"name":"清河门区","value":"210905","parent":"210900"},{"name":"细河区","value":"210911","parent":"210900"},{"name":"阜新蒙古族自治县","value":"210921","parent":"210900"},{"name":"彰武县","value":"210922","parent":"210900"},{"name":"白塔区","value":"211002","parent":"211000"},{"name":"文圣区","value":"211003","parent":"211000"},{"name":"宏伟区","value":"211004","parent":"211000"},{"name":"弓长岭区","value":"211005","parent":"211000"},{"name":"太子河区","value":"211011","parent":"211000"},{"name":"辽阳县","value":"211021","parent":"211000"},{"name":"灯塔市","value":"211081","parent":"211000"},{"name":"双台子区","value":"211102","parent":"211100"},{"name":"兴隆台区","value":"211103","parent":"211100"},{"name":"大洼县","value":"211121","parent":"211100"},{"name":"盘山县","value":"211122","parent":"211100"},{"name":"银州区","value":"211202","parent":"211200"},{"name":"清河区","value":"211204","parent":"211200"},{"name":"铁岭县","value":"211221","parent":"211200"},{"name":"西丰县","value":"211223","parent":"211200"},{"name":"昌图县","value":"211224","parent":"211200"},{"name":"调兵山市","value":"211281","parent":"211200"},{"name":"开原市","value":"211282","parent":"211200"},{"name":"双塔区","value":"211302","parent":"211300"},{"name":"龙城区","value":"211303","parent":"211300"},{"name":"朝阳县","value":"211321","parent":"211300"},{"name":"建平县","value":"211322","parent":"211300"},{"name":"喀喇沁左翼蒙古族自治县","value":"211324","parent":"211300"},{"name":"北票市","value":"211381","parent":"211300"},{"name":"凌源市","value":"211382","parent":"211300"},{"name":"连山区","value":"211402","parent":"211400"},{"name":"龙港区","value":"211403","parent":"211400"},{"name":"南票区","value":"211404","parent":"211400"},{"name":"绥中县","value":"211421","parent":"211400"},{"name":"建昌县","value":"211422","parent":"211400"},{"name":"兴城市","value":"211481","parent":"211400"},{"name":"长春市","value":"220100","parent":"220000"},{"name":"吉林市","value":"220200","parent":"220000"},{"name":"四平市","value":"220300","parent":"220000"},{"name":"辽源市","value":"220400","parent":"220000"},{"name":"通化市","value":"220500","parent":"220000"},{"name":"白山市","value":"220600","parent":"220000"},{"name":"松原市","value":"220700","parent":"220000"},{"name":"白城市","value":"220800","parent":"220000"},{"name":"延边朝鲜族自治州","value":"222400","parent":"220000"},{"name":"南关区","value":"220102","parent":"220100"},{"name":"宽城区","value":"220103","parent":"220100"},{"name":"朝阳区","value":"220104","parent":"220100"},{"name":"二道区","value":"220105","parent":"220100"},{"name":"绿园区","value":"220106","parent":"220100"},{"name":"双阳区","value":"220112","parent":"220100"},{"name":"九台区","value":"220113","parent":"220100"},{"name":"农安县","value":"220122","parent":"220100"},{"name":"榆树市","value":"220182","parent":"220100"},{"name":"德惠市","value":"220183","parent":"220100"},{"name":"昌邑区","value":"220202","parent":"220200"},{"name":"龙潭区","value":"220203","parent":"220200"},{"name":"船营区","value":"220204","parent":"220200"},{"name":"丰满区","value":"220211","parent":"220200"},{"name":"永吉县","value":"220221","parent":"220200"},{"name":"蛟河市","value":"220281","parent":"220200"},{"name":"桦甸市","value":"220282","parent":"220200"},{"name":"舒兰市","value":"220283","parent":"220200"},{"name":"磐石市","value":"220284","parent":"220200"},{"name":"铁西区","value":"220302","parent":"220300"},{"name":"铁东区","value":"220303","parent":"220300"},{"name":"梨树县","value":"220322","parent":"220300"},{"name":"伊通满族自治县","value":"220323","parent":"220300"},{"name":"公主岭市","value":"220381","parent":"220300"},{"name":"双辽市","value":"220382","parent":"220300"},{"name":"龙山区","value":"220402","parent":"220400"},{"name":"西安区","value":"220403","parent":"220400"},{"name":"东丰县","value":"220421","parent":"220400"},{"name":"东辽县","value":"220422","parent":"220400"},{"name":"东昌区","value":"220502","parent":"220500"},{"name":"二道江区","value":"220503","parent":"220500"},{"name":"通化县","value":"220521","parent":"220500"},{"name":"辉南县","value":"220523","parent":"220500"},{"name":"柳河县","value":"220524","parent":"220500"},{"name":"梅河口市","value":"220581","parent":"220500"},{"name":"集安市","value":"220582","parent":"220500"},{"name":"浑江区","value":"220602","parent":"220600"},{"name":"江源区","value":"220605","parent":"220600"},{"name":"抚松县","value":"220621","parent":"220600"},{"name":"靖宇县","value":"220622","parent":"220600"},{"name":"长白朝鲜族自治县","value":"220623","parent":"220600"},{"name":"临江市","value":"220681","parent":"220600"},{"name":"宁江区","value":"220702","parent":"220700"},{"name":"前郭尔罗斯蒙古族自治县","value":"220721","parent":"220700"},{"name":"长岭县","value":"220722","parent":"220700"},{"name":"乾安县","value":"220723","parent":"220700"},{"name":"扶余市","value":"220781","parent":"220700"},{"name":"洮北区","value":"220802","parent":"220800"},{"name":"镇赉县","value":"220821","parent":"220800"},{"name":"通榆县","value":"220822","parent":"220800"},{"name":"洮南市","value":"220881","parent":"220800"},{"name":"大安市","value":"220882","parent":"220800"},{"name":"延吉市","value":"222401","parent":"222400"},{"name":"图们市","value":"222402","parent":"222400"},{"name":"敦化市","value":"222403","parent":"222400"},{"name":"珲春市","value":"222404","parent":"222400"},{"name":"龙井市","value":"222405","parent":"222400"},{"name":"和龙市","value":"222406","parent":"222400"},{"name":"汪清县","value":"222424","parent":"222400"},{"name":"安图县","value":"222426","parent":"222400"},{"name":"哈尔滨市","value":"230100","parent":"230000"},{"name":"齐齐哈尔市","value":"230200","parent":"230000"},{"name":"鸡西市","value":"230300","parent":"230000"},{"name":"鹤岗市","value":"230400","parent":"230000"},{"name":"双鸭山市","value":"230500","parent":"230000"},{"name":"大庆市","value":"230600","parent":"230000"},{"name":"伊春市","value":"230700","parent":"230000"},{"name":"佳木斯市","value":"230800","parent":"230000"},{"name":"七台河市","value":"230900","parent":"230000"},{"name":"牡丹江市","value":"231000","parent":"230000"},{"name":"黑河市","value":"231100","parent":"230000"},{"name":"绥化市","value":"231200","parent":"230000"},{"name":"大兴安岭地区","value":"232700","parent":"230000"},{"name":"道里区","value":"230102","parent":"230100"},{"name":"南岗区","value":"230103","parent":"230100"},{"name":"道外区","value":"230104","parent":"230100"},{"name":"平房区","value":"230108","parent":"230100"},{"name":"松北区","value":"230109","parent":"230100"},{"name":"香坊区","value":"230110","parent":"230100"},{"name":"呼兰区","value":"230111","parent":"230100"},{"name":"阿城区","value":"230112","parent":"230100"},{"name":"双城区","value":"230113","parent":"230100"},{"name":"依兰县","value":"230123","parent":"230100"},{"name":"方正县","value":"230124","parent":"230100"},{"name":"宾县","value":"230125","parent":"230100"},{"name":"巴彦县","value":"230126","parent":"230100"},{"name":"木兰县","value":"230127","parent":"230100"},{"name":"通河县","value":"230128","parent":"230100"},{"name":"延寿县","value":"230129","parent":"230100"},{"name":"尚志市","value":"230183","parent":"230100"},{"name":"五常市","value":"230184","parent":"230100"},{"name":"龙沙区","value":"230202","parent":"230200"},{"name":"建华区","value":"230203","parent":"230200"},{"name":"铁锋区","value":"230204","parent":"230200"},{"name":"昂昂溪区","value":"230205","parent":"230200"},{"name":"富拉尔基区","value":"230206","parent":"230200"},{"name":"碾子山区","value":"230207","parent":"230200"},{"name":"梅里斯达斡尔族区","value":"230208","parent":"230200"},{"name":"龙江县","value":"230221","parent":"230200"},{"name":"依安县","value":"230223","parent":"230200"},{"name":"泰来县","value":"230224","parent":"230200"},{"name":"甘南县","value":"230225","parent":"230200"},{"name":"富裕县","value":"230227","parent":"230200"},{"name":"克山县","value":"230229","parent":"230200"},{"name":"克东县","value":"230230","parent":"230200"},{"name":"拜泉县","value":"230231","parent":"230200"},{"name":"讷河市","value":"230281","parent":"230200"},{"name":"鸡冠区","value":"230302","parent":"230300"},{"name":"恒山区","value":"230303","parent":"230300"},{"name":"滴道区","value":"230304","parent":"230300"},{"name":"梨树区","value":"230305","parent":"230300"},{"name":"城子河区","value":"230306","parent":"230300"},{"name":"麻山区","value":"230307","parent":"230300"},{"name":"鸡东县","value":"230321","parent":"230300"},{"name":"虎林市","value":"230381","parent":"230300"},{"name":"密山市","value":"230382","parent":"230300"},{"name":"向阳区","value":"230402","parent":"230400"},{"name":"工农区","value":"230403","parent":"230400"},{"name":"南山区","value":"230404","parent":"230400"},{"name":"兴安区","value":"230405","parent":"230400"},{"name":"东山区","value":"230406","parent":"230400"},{"name":"兴山区","value":"230407","parent":"230400"},{"name":"萝北县","value":"230421","parent":"230400"},{"name":"绥滨县","value":"230422","parent":"230400"},{"name":"尖山区","value":"230502","parent":"230500"},{"name":"岭东区","value":"230503","parent":"230500"},{"name":"四方台区","value":"230505","parent":"230500"},{"name":"宝山区","value":"230506","parent":"230500"},{"name":"集贤县","value":"230521","parent":"230500"},{"name":"友谊县","value":"230522","parent":"230500"},{"name":"宝清县","value":"230523","parent":"230500"},{"name":"饶河县","value":"230524","parent":"230500"},{"name":"萨尔图区","value":"230602","parent":"230600"},{"name":"龙凤区","value":"230603","parent":"230600"},{"name":"让胡路区","value":"230604","parent":"230600"},{"name":"红岗区","value":"230605","parent":"230600"},{"name":"大同区","value":"230606","parent":"230600"},{"name":"肇州县","value":"230621","parent":"230600"},{"name":"肇源县","value":"230622","parent":"230600"},{"name":"林甸县","value":"230623","parent":"230600"},{"name":"杜尔伯特蒙古族自治县","value":"230624","parent":"230600"},{"name":"伊春区","value":"230702","parent":"230700"},{"name":"南岔区","value":"230703","parent":"230700"},{"name":"友好区","value":"230704","parent":"230700"},{"name":"西林区","value":"230705","parent":"230700"},{"name":"翠峦区","value":"230706","parent":"230700"},{"name":"新青区","value":"230707","parent":"230700"},{"name":"美溪区","value":"230708","parent":"230700"},{"name":"金山屯区","value":"230709","parent":"230700"},{"name":"五营区","value":"230710","parent":"230700"},{"name":"乌马河区","value":"230711","parent":"230700"},{"name":"汤旺河区","value":"230712","parent":"230700"},{"name":"带岭区","value":"230713","parent":"230700"},{"name":"乌伊岭区","value":"230714","parent":"230700"},{"name":"红星区","value":"230715","parent":"230700"},{"name":"上甘岭区","value":"230716","parent":"230700"},{"name":"嘉荫县","value":"230722","parent":"230700"},{"name":"铁力市","value":"230781","parent":"230700"},{"name":"向阳区","value":"230803","parent":"230800"},{"name":"前进区","value":"230804","parent":"230800"},{"name":"东风区","value":"230805","parent":"230800"},{"name":"郊区","value":"230811","parent":"230800"},{"name":"桦南县","value":"230822","parent":"230800"},{"name":"桦川县","value":"230826","parent":"230800"},{"name":"汤原县","value":"230828","parent":"230800"},{"name":"抚远县","value":"230833","parent":"230800"},{"name":"同江市","value":"230881","parent":"230800"},{"name":"富锦市","value":"230882","parent":"230800"},{"name":"新兴区","value":"230902","parent":"230900"},{"name":"桃山区","value":"230903","parent":"230900"},{"name":"茄子河区","value":"230904","parent":"230900"},{"name":"勃利县","value":"230921","parent":"230900"},{"name":"东安区","value":"231002","parent":"231000"},{"name":"阳明区","value":"231003","parent":"231000"},{"name":"爱民区","value":"231004","parent":"231000"},{"name":"西安区","value":"231005","parent":"231000"},{"name":"东宁县","value":"231024","parent":"231000"},{"name":"林口县","value":"231025","parent":"231000"},{"name":"绥芬河市","value":"231081","parent":"231000"},{"name":"海林市","value":"231083","parent":"231000"},{"name":"宁安市","value":"231084","parent":"231000"},{"name":"穆棱市","value":"231085","parent":"231000"},{"name":"爱辉区","value":"231102","parent":"231100"},{"name":"嫩江县","value":"231121","parent":"231100"},{"name":"逊克县","value":"231123","parent":"231100"},{"name":"孙吴县","value":"231124","parent":"231100"},{"name":"北安市","value":"231181","parent":"231100"},{"name":"五大连池市","value":"231182","parent":"231100"},{"name":"北林区","value":"231202","parent":"231200"},{"name":"望奎县","value":"231221","parent":"231200"},{"name":"兰西县","value":"231222","parent":"231200"},{"name":"青冈县","value":"231223","parent":"231200"},{"name":"庆安县","value":"231224","parent":"231200"},{"name":"明水县","value":"231225","parent":"231200"},{"name":"绥棱县","value":"231226","parent":"231200"},{"name":"安达市","value":"231281","parent":"231200"},{"name":"肇东市","value":"231282","parent":"231200"},{"name":"海伦市","value":"231283","parent":"231200"},{"name":"呼玛县","value":"232721","parent":"232700"},{"name":"塔河县","value":"232722","parent":"232700"},{"name":"漠河县","value":"232723","parent":"232700"},{"name":"市辖区","value":"310100","parent":"310000"},{"name":"黄浦区","value":"310101","parent":"310100"},{"name":"徐汇区","value":"310104","parent":"310100"},{"name":"长宁区","value":"310105","parent":"310100"},{"name":"静安区","value":"310106","parent":"310100"},{"name":"普陀区","value":"310107","parent":"310100"},{"name":"闸北区","value":"310108","parent":"310100"},{"name":"虹口区","value":"310109","parent":"310100"},{"name":"杨浦区","value":"310110","parent":"310100"},{"name":"闵行区","value":"310112","parent":"310100"},{"name":"宝山区","value":"310113","parent":"310100"},{"name":"嘉定区","value":"310114","parent":"310100"},{"name":"浦东新区","value":"310115","parent":"310100"},{"name":"金山区","value":"310116","parent":"310100"},{"name":"松江区","value":"310117","parent":"310100"},{"name":"青浦区","value":"310118","parent":"310100"},{"name":"奉贤区","value":"310120","parent":"310100"},{"name":"崇明县","value":"310230","parent":"310100"},{"name":"南京市","value":"320100","parent":"320000"},{"name":"无锡市","value":"320200","parent":"320000"},{"name":"徐州市","value":"320300","parent":"320000"},{"name":"常州市","value":"320400","parent":"320000"},{"name":"苏州市","value":"320500","parent":"320000"},{"name":"南通市","value":"320600","parent":"320000"},{"name":"连云港市","value":"320700","parent":"320000"},{"name":"淮安市","value":"320800","parent":"320000"},{"name":"盐城市","value":"320900","parent":"320000"},{"name":"扬州市","value":"321000","parent":"320000"},{"name":"镇江市","value":"321100","parent":"320000"},{"name":"泰州市","value":"321200","parent":"320000"},{"name":"宿迁市","value":"321300","parent":"320000"},{"name":"玄武区","value":"320102","parent":"320100"},{"name":"秦淮区","value":"320104","parent":"320100"},{"name":"建邺区","value":"320105","parent":"320100"},{"name":"鼓楼区","value":"320106","parent":"320100"},{"name":"浦口区","value":"320111","parent":"320100"},{"name":"栖霞区","value":"320113","parent":"320100"},{"name":"雨花台区","value":"320114","parent":"320100"},{"name":"江宁区","value":"320115","parent":"320100"},{"name":"六合区","value":"320116","parent":"320100"},{"name":"溧水区","value":"320117","parent":"320100"},{"name":"高淳区","value":"320118","parent":"320100"},{"name":"崇安区","value":"320202","parent":"320200"},{"name":"南长区","value":"320203","parent":"320200"},{"name":"北塘区","value":"320204","parent":"320200"},{"name":"锡山区","value":"320205","parent":"320200"},{"name":"惠山区","value":"320206","parent":"320200"},{"name":"滨湖区","value":"320211","parent":"320200"},{"name":"江阴市","value":"320281","parent":"320200"},{"name":"宜兴市","value":"320282","parent":"320200"},{"name":"鼓楼区","value":"320302","parent":"320300"},{"name":"云龙区","value":"320303","parent":"320300"},{"name":"贾汪区","value":"320305","parent":"320300"},{"name":"泉山区","value":"320311","parent":"320300"},{"name":"铜山区","value":"320312","parent":"320300"},{"name":"丰县","value":"320321","parent":"320300"},{"name":"沛县","value":"320322","parent":"320300"},{"name":"睢宁县","value":"320324","parent":"320300"},{"name":"新沂市","value":"320381","parent":"320300"},{"name":"邳州市","value":"320382","parent":"320300"},{"name":"天宁区","value":"320402","parent":"320400"},{"name":"钟楼区","value":"320404","parent":"320400"},{"name":"新北区","value":"320411","parent":"320400"},{"name":"武进区","value":"320412","parent":"320400"},{"name":"金坛区","value":"320413","parent":"320400"},{"name":"溧阳市","value":"320481","parent":"320400"},{"name":"虎丘区","value":"320505","parent":"320500"},{"name":"吴中区","value":"320506","parent":"320500"},{"name":"相城区","value":"320507","parent":"320500"},{"name":"姑苏区","value":"320508","parent":"320500"},{"name":"吴江区","value":"320509","parent":"320500"},{"name":"常熟市","value":"320581","parent":"320500"},{"name":"张家港市","value":"320582","parent":"320500"},{"name":"昆山市","value":"320583","parent":"320500"},{"name":"太仓市","value":"320585","parent":"320500"},{"name":"崇川区","value":"320602","parent":"320600"},{"name":"港闸区","value":"320611","parent":"320600"},{"name":"通州区","value":"320612","parent":"320600"},{"name":"海安县","value":"320621","parent":"320600"},{"name":"如东县","value":"320623","parent":"320600"},{"name":"启东市","value":"320681","parent":"320600"},{"name":"如皋市","value":"320682","parent":"320600"},{"name":"海门市","value":"320684","parent":"320600"},{"name":"连云区","value":"320703","parent":"320700"},{"name":"海州区","value":"320706","parent":"320700"},{"name":"赣榆区","value":"320707","parent":"320700"},{"name":"东海县","value":"320722","parent":"320700"},{"name":"灌云县","value":"320723","parent":"320700"},{"name":"灌南县","value":"320724","parent":"320700"},{"name":"清河区","value":"320802","parent":"320800"},{"name":"淮安区","value":"320803","parent":"320800"},{"name":"淮阴区","value":"320804","parent":"320800"},{"name":"清浦区","value":"320811","parent":"320800"},{"name":"涟水县","value":"320826","parent":"320800"},{"name":"洪泽县","value":"320829","parent":"320800"},{"name":"盱眙县","value":"320830","parent":"320800"},{"name":"金湖县","value":"320831","parent":"320800"},{"name":"亭湖区","value":"320902","parent":"320900"},{"name":"盐都区","value":"320903","parent":"320900"},{"name":"大丰区","value":"320904","parent":"320900"},{"name":"响水县","value":"320921","parent":"320900"},{"name":"滨海县","value":"320922","parent":"320900"},{"name":"阜宁县","value":"320923","parent":"320900"},{"name":"射阳县","value":"320924","parent":"320900"},{"name":"建湖县","value":"320925","parent":"320900"},{"name":"东台市","value":"320981","parent":"320900"},{"name":"广陵区","value":"321002","parent":"321000"},{"name":"邗江区","value":"321003","parent":"321000"},{"name":"江都区","value":"321012","parent":"321000"},{"name":"宝应县","value":"321023","parent":"321000"},{"name":"仪征市","value":"321081","parent":"321000"},{"name":"高邮市","value":"321084","parent":"321000"},{"name":"京口区","value":"321102","parent":"321100"},{"name":"润州区","value":"321111","parent":"321100"},{"name":"丹徒区","value":"321112","parent":"321100"},{"name":"丹阳市","value":"321181","parent":"321100"},{"name":"扬中市","value":"321182","parent":"321100"},{"name":"句容市","value":"321183","parent":"321100"},{"name":"海陵区","value":"321202","parent":"321200"},{"name":"高港区","value":"321203","parent":"321200"},{"name":"姜堰区","value":"321204","parent":"321200"},{"name":"兴化市","value":"321281","parent":"321200"},{"name":"靖江市","value":"321282","parent":"321200"},{"name":"泰兴市","value":"321283","parent":"321200"},{"name":"宿城区","value":"321302","parent":"321300"},{"name":"宿豫区","value":"321311","parent":"321300"},{"name":"沭阳县","value":"321322","parent":"321300"},{"name":"泗阳县","value":"321323","parent":"321300"},{"name":"泗洪县","value":"321324","parent":"321300"},{"name":"杭州市","value":"330100","parent":"330000"},{"name":"宁波市","value":"330200","parent":"330000"},{"name":"温州市","value":"330300","parent":"330000"},{"name":"嘉兴市","value":"330400","parent":"330000"},{"name":"湖州市","value":"330500","parent":"330000"},{"name":"绍兴市","value":"330600","parent":"330000"},{"name":"金华市","value":"330700","parent":"330000"},{"name":"衢州市","value":"330800","parent":"330000"},{"name":"舟山市","value":"330900","parent":"330000"},{"name":"台州市","value":"331000","parent":"330000"},{"name":"丽水市","value":"331100","parent":"330000"},{"name":"上城区","value":"330102","parent":"330100"},{"name":"下城区","value":"330103","parent":"330100"},{"name":"江干区","value":"330104","parent":"330100"},{"name":"拱墅区","value":"330105","parent":"330100"},{"name":"西湖区","value":"330106","parent":"330100"},{"name":"滨江区","value":"330108","parent":"330100"},{"name":"萧山区","value":"330109","parent":"330100"},{"name":"余杭区","value":"330110","parent":"330100"},{"name":"富阳区","value":"330111","parent":"330100"},{"name":"桐庐县","value":"330122","parent":"330100"},{"name":"淳安县","value":"330127","parent":"330100"},{"name":"建德市","value":"330182","parent":"330100"},{"name":"临安市","value":"330185","parent":"330100"},{"name":"海曙区","value":"330203","parent":"330200"},{"name":"江东区","value":"330204","parent":"330200"},{"name":"江北区","value":"330205","parent":"330200"},{"name":"北仑区","value":"330206","parent":"330200"},{"name":"镇海区","value":"330211","parent":"330200"},{"name":"鄞州区","value":"330212","parent":"330200"},{"name":"象山县","value":"330225","parent":"330200"},{"name":"宁海县","value":"330226","parent":"330200"},{"name":"余姚市","value":"330281","parent":"330200"},{"name":"慈溪市","value":"330282","parent":"330200"},{"name":"奉化市","value":"330283","parent":"330200"},{"name":"鹿城区","value":"330302","parent":"330300"},{"name":"龙湾区","value":"330303","parent":"330300"},{"name":"瓯海区","value":"330304","parent":"330300"},{"name":"洞头区","value":"330305","parent":"330300"},{"name":"永嘉县","value":"330324","parent":"330300"},{"name":"平阳县","value":"330326","parent":"330300"},{"name":"苍南县","value":"330327","parent":"330300"},{"name":"文成县","value":"330328","parent":"330300"},{"name":"泰顺县","value":"330329","parent":"330300"},{"name":"瑞安市","value":"330381","parent":"330300"},{"name":"乐清市","value":"330382","parent":"330300"},{"name":"南湖区","value":"330402","parent":"330400"},{"name":"秀洲区","value":"330411","parent":"330400"},{"name":"嘉善县","value":"330421","parent":"330400"},{"name":"海盐县","value":"330424","parent":"330400"},{"name":"海宁市","value":"330481","parent":"330400"},{"name":"平湖市","value":"330482","parent":"330400"},{"name":"桐乡市","value":"330483","parent":"330400"},{"name":"吴兴区","value":"330502","parent":"330500"},{"name":"南浔区","value":"330503","parent":"330500"},{"name":"德清县","value":"330521","parent":"330500"},{"name":"长兴县","value":"330522","parent":"330500"},{"name":"安吉县","value":"330523","parent":"330500"},{"name":"越城区","value":"330602","parent":"330600"},{"name":"柯桥区","value":"330603","parent":"330600"},{"name":"上虞区","value":"330604","parent":"330600"},{"name":"新昌县","value":"330624","parent":"330600"},{"name":"诸暨市","value":"330681","parent":"330600"},{"name":"嵊州市","value":"330683","parent":"330600"},{"name":"婺城区","value":"330702","parent":"330700"},{"name":"金东区","value":"330703","parent":"330700"},{"name":"武义县","value":"330723","parent":"330700"},{"name":"浦江县","value":"330726","parent":"330700"},{"name":"磐安县","value":"330727","parent":"330700"},{"name":"兰溪市","value":"330781","parent":"330700"},{"name":"义乌市","value":"330782","parent":"330700"},{"name":"东阳市","value":"330783","parent":"330700"},{"name":"永康市","value":"330784","parent":"330700"},{"name":"柯城区","value":"330802","parent":"330800"},{"name":"衢江区","value":"330803","parent":"330800"},{"name":"常山县","value":"330822","parent":"330800"},{"name":"开化县","value":"330824","parent":"330800"},{"name":"龙游县","value":"330825","parent":"330800"},{"name":"江山市","value":"330881","parent":"330800"},{"name":"定海区","value":"330902","parent":"330900"},{"name":"普陀区","value":"330903","parent":"330900"},{"name":"岱山县","value":"330921","parent":"330900"},{"name":"嵊泗县","value":"330922","parent":"330900"},{"name":"椒江区","value":"331002","parent":"331000"},{"name":"黄岩区","value":"331003","parent":"331000"},{"name":"路桥区","value":"331004","parent":"331000"},{"name":"玉环县","value":"331021","parent":"331000"},{"name":"三门县","value":"331022","parent":"331000"},{"name":"天台县","value":"331023","parent":"331000"},{"name":"仙居县","value":"331024","parent":"331000"},{"name":"温岭市","value":"331081","parent":"331000"},{"name":"临海市","value":"331082","parent":"331000"},{"name":"莲都区","value":"331102","parent":"331100"},{"name":"青田县","value":"331121","parent":"331100"},{"name":"缙云县","value":"331122","parent":"331100"},{"name":"遂昌县","value":"331123","parent":"331100"},{"name":"松阳县","value":"331124","parent":"331100"},{"name":"云和县","value":"331125","parent":"331100"},{"name":"庆元县","value":"331126","parent":"331100"},{"name":"景宁畲族自治县","value":"331127","parent":"331100"},{"name":"龙泉市","value":"331181","parent":"331100"},{"name":"合肥市","value":"340100","parent":"340000"},{"name":"芜湖市","value":"340200","parent":"340000"},{"name":"蚌埠市","value":"340300","parent":"340000"},{"name":"淮南市","value":"340400","parent":"340000"},{"name":"马鞍山市","value":"340500","parent":"340000"},{"name":"淮北市","value":"340600","parent":"340000"},{"name":"铜陵市","value":"340700","parent":"340000"},{"name":"安庆市","value":"340800","parent":"340000"},{"name":"黄山市","value":"341000","parent":"340000"},{"name":"滁州市","value":"341100","parent":"340000"},{"name":"阜阳市","value":"341200","parent":"340000"},{"name":"宿州市","value":"341300","parent":"340000"},{"name":"六安市","value":"341500","parent":"340000"},{"name":"亳州市","value":"341600","parent":"340000"},{"name":"池州市","value":"341700","parent":"340000"},{"name":"宣城市","value":"341800","parent":"340000"},{"name":"瑶海区","value":"340102","parent":"340100"},{"name":"庐阳区","value":"340103","parent":"340100"},{"name":"蜀山区","value":"340104","parent":"340100"},{"name":"包河区","value":"340111","parent":"340100"},{"name":"长丰县","value":"340121","parent":"340100"},{"name":"肥东县","value":"340122","parent":"340100"},{"name":"肥西县","value":"340123","parent":"340100"},{"name":"庐江县","value":"340124","parent":"340100"},{"name":"巢湖市","value":"340181","parent":"340100"},{"name":"镜湖区","value":"340202","parent":"340200"},{"name":"弋江区","value":"340203","parent":"340200"},{"name":"鸠江区","value":"340207","parent":"340200"},{"name":"三山区","value":"340208","parent":"340200"},{"name":"芜湖县","value":"340221","parent":"340200"},{"name":"繁昌县","value":"340222","parent":"340200"},{"name":"南陵县","value":"340223","parent":"340200"},{"name":"无为县","value":"340225","parent":"340200"},{"name":"龙子湖区","value":"340302","parent":"340300"},{"name":"蚌山区","value":"340303","parent":"340300"},{"name":"禹会区","value":"340304","parent":"340300"},{"name":"淮上区","value":"340311","parent":"340300"},{"name":"怀远县","value":"340321","parent":"340300"},{"name":"五河县","value":"340322","parent":"340300"},{"name":"固镇县","value":"340323","parent":"340300"},{"name":"大通区","value":"340402","parent":"340400"},{"name":"田家庵区","value":"340403","parent":"340400"},{"name":"谢家集区","value":"340404","parent":"340400"},{"name":"八公山区","value":"340405","parent":"340400"},{"name":"潘集区","value":"340406","parent":"340400"},{"name":"凤台县","value":"340421","parent":"340400"},{"name":"花山区","value":"340503","parent":"340500"},{"name":"雨山区","value":"340504","parent":"340500"},{"name":"博望区","value":"340506","parent":"340500"},{"name":"当涂县","value":"340521","parent":"340500"},{"name":"含山县","value":"340522","parent":"340500"},{"name":"和县","value":"340523","parent":"340500"},{"name":"杜集区","value":"340602","parent":"340600"},{"name":"相山区","value":"340603","parent":"340600"},{"name":"烈山区","value":"340604","parent":"340600"},{"name":"濉溪县","value":"340621","parent":"340600"},{"name":"铜官山区","value":"340702","parent":"340700"},{"name":"狮子山区","value":"340703","parent":"340700"},{"name":"郊区","value":"340711","parent":"340700"},{"name":"铜陵县","value":"340721","parent":"340700"},{"name":"迎江区","value":"340802","parent":"340800"},{"name":"大观区","value":"340803","parent":"340800"},{"name":"宜秀区","value":"340811","parent":"340800"},{"name":"怀宁县","value":"340822","parent":"340800"},{"name":"枞阳县","value":"340823","parent":"340800"},{"name":"潜山县","value":"340824","parent":"340800"},{"name":"太湖县","value":"340825","parent":"340800"},{"name":"宿松县","value":"340826","parent":"340800"},{"name":"望江县","value":"340827","parent":"340800"},{"name":"岳西县","value":"340828","parent":"340800"},{"name":"桐城市","value":"340881","parent":"340800"},{"name":"屯溪区","value":"341002","parent":"341000"},{"name":"黄山区","value":"341003","parent":"341000"},{"name":"徽州区","value":"341004","parent":"341000"},{"name":"歙县","value":"341021","parent":"341000"},{"name":"休宁县","value":"341022","parent":"341000"},{"name":"黟县","value":"341023","parent":"341000"},{"name":"祁门县","value":"341024","parent":"341000"},{"name":"琅琊区","value":"341102","parent":"341100"},{"name":"南谯区","value":"341103","parent":"341100"},{"name":"来安县","value":"341122","parent":"341100"},{"name":"全椒县","value":"341124","parent":"341100"},{"name":"定远县","value":"341125","parent":"341100"},{"name":"凤阳县","value":"341126","parent":"341100"},{"name":"天长市","value":"341181","parent":"341100"},{"name":"明光市","value":"341182","parent":"341100"},{"name":"颍州区","value":"341202","parent":"341200"},{"name":"颍东区","value":"341203","parent":"341200"},{"name":"颍泉区","value":"341204","parent":"341200"},{"name":"临泉县","value":"341221","parent":"341200"},{"name":"太和县","value":"341222","parent":"341200"},{"name":"阜南县","value":"341225","parent":"341200"},{"name":"颍上县","value":"341226","parent":"341200"},{"name":"界首市","value":"341282","parent":"341200"},{"name":"埇桥区","value":"341302","parent":"341300"},{"name":"砀山县","value":"341321","parent":"341300"},{"name":"萧县","value":"341322","parent":"341300"},{"name":"灵璧县","value":"341323","parent":"341300"},{"name":"泗县","value":"341324","parent":"341300"},{"name":"金安区","value":"341502","parent":"341500"},{"name":"裕安区","value":"341503","parent":"341500"},{"name":"寿县","value":"341521","parent":"341500"},{"name":"霍邱县","value":"341522","parent":"341500"},{"name":"舒城县","value":"341523","parent":"341500"},{"name":"金寨县","value":"341524","parent":"341500"},{"name":"霍山县","value":"341525","parent":"341500"},{"name":"谯城区","value":"341602","parent":"341600"},{"name":"涡阳县","value":"341621","parent":"341600"},{"name":"蒙城县","value":"341622","parent":"341600"},{"name":"利辛县","value":"341623","parent":"341600"},{"name":"贵池区","value":"341702","parent":"341700"},{"name":"东至县","value":"341721","parent":"341700"},{"name":"石台县","value":"341722","parent":"341700"},{"name":"青阳县","value":"341723","parent":"341700"},{"name":"宣州区","value":"341802","parent":"341800"},{"name":"郎溪县","value":"341821","parent":"341800"},{"name":"广德县","value":"341822","parent":"341800"},{"name":"泾县","value":"341823","parent":"341800"},{"name":"绩溪县","value":"341824","parent":"341800"},{"name":"旌德县","value":"341825","parent":"341800"},{"name":"宁国市","value":"341881","parent":"341800"},{"name":"福州市","value":"350100","parent":"350000"},{"name":"厦门市","value":"350200","parent":"350000"},{"name":"莆田市","value":"350300","parent":"350000"},{"name":"三明市","value":"350400","parent":"350000"},{"name":"泉州市","value":"350500","parent":"350000"},{"name":"漳州市","value":"350600","parent":"350000"},{"name":"南平市","value":"350700","parent":"350000"},{"name":"龙岩市","value":"350800","parent":"350000"},{"name":"宁德市","value":"350900","parent":"350000"},{"name":"鼓楼区","value":"350102","parent":"350100"},{"name":"台江区","value":"350103","parent":"350100"},{"name":"仓山区","value":"350104","parent":"350100"},{"name":"马尾区","value":"350105","parent":"350100"},{"name":"晋安区","value":"350111","parent":"350100"},{"name":"闽侯县","value":"350121","parent":"350100"},{"name":"连江县","value":"350122","parent":"350100"},{"name":"罗源县","value":"350123","parent":"350100"},{"name":"闽清县","value":"350124","parent":"350100"},{"name":"永泰县","value":"350125","parent":"350100"},{"name":"平潭县","value":"350128","parent":"350100"},{"name":"福清市","value":"350181","parent":"350100"},{"name":"长乐市","value":"350182","parent":"350100"},{"name":"思明区","value":"350203","parent":"350200"},{"name":"海沧区","value":"350205","parent":"350200"},{"name":"湖里区","value":"350206","parent":"350200"},{"name":"集美区","value":"350211","parent":"350200"},{"name":"同安区","value":"350212","parent":"350200"},{"name":"翔安区","value":"350213","parent":"350200"},{"name":"城厢区","value":"350302","parent":"350300"},{"name":"涵江区","value":"350303","parent":"350300"},{"name":"荔城区","value":"350304","parent":"350300"},{"name":"秀屿区","value":"350305","parent":"350300"},{"name":"仙游县","value":"350322","parent":"350300"},{"name":"梅列区","value":"350402","parent":"350400"},{"name":"三元区","value":"350403","parent":"350400"},{"name":"明溪县","value":"350421","parent":"350400"},{"name":"清流县","value":"350423","parent":"350400"},{"name":"宁化县","value":"350424","parent":"350400"},{"name":"大田县","value":"350425","parent":"350400"},{"name":"尤溪县","value":"350426","parent":"350400"},{"name":"沙县","value":"350427","parent":"350400"},{"name":"将乐县","value":"350428","parent":"350400"},{"name":"泰宁县","value":"350429","parent":"350400"},{"name":"建宁县","value":"350430","parent":"350400"},{"name":"永安市","value":"350481","parent":"350400"},{"name":"鲤城区","value":"350502","parent":"350500"},{"name":"丰泽区","value":"350503","parent":"350500"},{"name":"洛江区","value":"350504","parent":"350500"},{"name":"泉港区","value":"350505","parent":"350500"},{"name":"惠安县","value":"350521","parent":"350500"},{"name":"安溪县","value":"350524","parent":"350500"},{"name":"永春县","value":"350525","parent":"350500"},{"name":"德化县","value":"350526","parent":"350500"},{"name":"金门县","value":"350527","parent":"350500"},{"name":"石狮市","value":"350581","parent":"350500"},{"name":"晋江市","value":"350582","parent":"350500"},{"name":"南安市","value":"350583","parent":"350500"},{"name":"芗城区","value":"350602","parent":"350600"},{"name":"龙文区","value":"350603","parent":"350600"},{"name":"云霄县","value":"350622","parent":"350600"},{"name":"漳浦县","value":"350623","parent":"350600"},{"name":"诏安县","value":"350624","parent":"350600"},{"name":"长泰县","value":"350625","parent":"350600"},{"name":"东山县","value":"350626","parent":"350600"},{"name":"南靖县","value":"350627","parent":"350600"},{"name":"平和县","value":"350628","parent":"350600"},{"name":"华安县","value":"350629","parent":"350600"},{"name":"龙海市","value":"350681","parent":"350600"},{"name":"延平区","value":"350702","parent":"350700"},{"name":"建阳区","value":"350703","parent":"350700"},{"name":"顺昌县","value":"350721","parent":"350700"},{"name":"浦城县","value":"350722","parent":"350700"},{"name":"光泽县","value":"350723","parent":"350700"},{"name":"松溪县","value":"350724","parent":"350700"},{"name":"政和县","value":"350725","parent":"350700"},{"name":"邵武市","value":"350781","parent":"350700"},{"name":"武夷山市","value":"350782","parent":"350700"},{"name":"建瓯市","value":"350783","parent":"350700"},{"name":"新罗区","value":"350802","parent":"350800"},{"name":"永定区","value":"350803","parent":"350800"},{"name":"长汀县","value":"350821","parent":"350800"},{"name":"上杭县","value":"350823","parent":"350800"},{"name":"武平县","value":"350824","parent":"350800"},{"name":"连城县","value":"350825","parent":"350800"},{"name":"漳平市","value":"350881","parent":"350800"},{"name":"蕉城区","value":"350902","parent":"350900"},{"name":"霞浦县","value":"350921","parent":"350900"},{"name":"古田县","value":"350922","parent":"350900"},{"name":"屏南县","value":"350923","parent":"350900"},{"name":"寿宁县","value":"350924","parent":"350900"},{"name":"周宁县","value":"350925","parent":"350900"},{"name":"柘荣县","value":"350926","parent":"350900"},{"name":"福安市","value":"350981","parent":"350900"},{"name":"福鼎市","value":"350982","parent":"350900"},{"name":"南昌市","value":"360100","parent":"360000"},{"name":"景德镇市","value":"360200","parent":"360000"},{"name":"萍乡市","value":"360300","parent":"360000"},{"name":"九江市","value":"360400","parent":"360000"},{"name":"新余市","value":"360500","parent":"360000"},{"name":"鹰潭市","value":"360600","parent":"360000"},{"name":"赣州市","value":"360700","parent":"360000"},{"name":"吉安市","value":"360800","parent":"360000"},{"name":"宜春市","value":"360900","parent":"360000"},{"name":"抚州市","value":"361000","parent":"360000"},{"name":"上饶市","value":"361100","parent":"360000"},{"name":"东湖区","value":"360102","parent":"360100"},{"name":"西湖区","value":"360103","parent":"360100"},{"name":"青云谱区","value":"360104","parent":"360100"},{"name":"湾里区","value":"360105","parent":"360100"},{"name":"青山湖区","value":"360111","parent":"360100"},{"name":"新建区","value":"360112","parent":"360100"},{"name":"南昌县","value":"360121","parent":"360100"},{"name":"安义县","value":"360123","parent":"360100"},{"name":"进贤县","value":"360124","parent":"360100"},{"name":"昌江区","value":"360202","parent":"360200"},{"name":"珠山区","value":"360203","parent":"360200"},{"name":"浮梁县","value":"360222","parent":"360200"},{"name":"乐平市","value":"360281","parent":"360200"},{"name":"安源区","value":"360302","parent":"360300"},{"name":"湘东区","value":"360313","parent":"360300"},{"name":"莲花县","value":"360321","parent":"360300"},{"name":"上栗县","value":"360322","parent":"360300"},{"name":"芦溪县","value":"360323","parent":"360300"},{"name":"庐山区","value":"360402","parent":"360400"},{"name":"浔阳区","value":"360403","parent":"360400"},{"name":"九江县","value":"360421","parent":"360400"},{"name":"武宁县","value":"360423","parent":"360400"},{"name":"修水县","value":"360424","parent":"360400"},{"name":"永修县","value":"360425","parent":"360400"},{"name":"德安县","value":"360426","parent":"360400"},{"name":"星子县","value":"360427","parent":"360400"},{"name":"都昌县","value":"360428","parent":"360400"},{"name":"湖口县","value":"360429","parent":"360400"},{"name":"彭泽县","value":"360430","parent":"360400"},{"name":"瑞昌市","value":"360481","parent":"360400"},{"name":"共青城市","value":"360482","parent":"360400"},{"name":"渝水区","value":"360502","parent":"360500"},{"name":"分宜县","value":"360521","parent":"360500"},{"name":"月湖区","value":"360602","parent":"360600"},{"name":"余江县","value":"360622","parent":"360600"},{"name":"贵溪市","value":"360681","parent":"360600"},{"name":"章贡区","value":"360702","parent":"360700"},{"name":"南康区","value":"360703","parent":"360700"},{"name":"赣县","value":"360721","parent":"360700"},{"name":"信丰县","value":"360722","parent":"360700"},{"name":"大余县","value":"360723","parent":"360700"},{"name":"上犹县","value":"360724","parent":"360700"},{"name":"崇义县","value":"360725","parent":"360700"},{"name":"安远县","value":"360726","parent":"360700"},{"name":"龙南县","value":"360727","parent":"360700"},{"name":"定南县","value":"360728","parent":"360700"},{"name":"全南县","value":"360729","parent":"360700"},{"name":"宁都县","value":"360730","parent":"360700"},{"name":"于都县","value":"360731","parent":"360700"},{"name":"兴国县","value":"360732","parent":"360700"},{"name":"会昌县","value":"360733","parent":"360700"},{"name":"寻乌县","value":"360734","parent":"360700"},{"name":"石城县","value":"360735","parent":"360700"},{"name":"瑞金市","value":"360781","parent":"360700"},{"name":"吉州区","value":"360802","parent":"360800"},{"name":"青原区","value":"360803","parent":"360800"},{"name":"吉安县","value":"360821","parent":"360800"},{"name":"吉水县","value":"360822","parent":"360800"},{"name":"峡江县","value":"360823","parent":"360800"},{"name":"新干县","value":"360824","parent":"360800"},{"name":"永丰县","value":"360825","parent":"360800"},{"name":"泰和县","value":"360826","parent":"360800"},{"name":"遂川县","value":"360827","parent":"360800"},{"name":"万安县","value":"360828","parent":"360800"},{"name":"安福县","value":"360829","parent":"360800"},{"name":"永新县","value":"360830","parent":"360800"},{"name":"井冈山市","value":"360881","parent":"360800"},{"name":"袁州区","value":"360902","parent":"360900"},{"name":"奉新县","value":"360921","parent":"360900"},{"name":"万载县","value":"360922","parent":"360900"},{"name":"上高县","value":"360923","parent":"360900"},{"name":"宜丰县","value":"360924","parent":"360900"},{"name":"靖安县","value":"360925","parent":"360900"},{"name":"铜鼓县","value":"360926","parent":"360900"},{"name":"丰城市","value":"360981","parent":"360900"},{"name":"樟树市","value":"360982","parent":"360900"},{"name":"高安市","value":"360983","parent":"360900"},{"name":"临川区","value":"361002","parent":"361000"},{"name":"南城县","value":"361021","parent":"361000"},{"name":"黎川县","value":"361022","parent":"361000"},{"name":"南丰县","value":"361023","parent":"361000"},{"name":"崇仁县","value":"361024","parent":"361000"},{"name":"乐安县","value":"361025","parent":"361000"},{"name":"宜黄县","value":"361026","parent":"361000"},{"name":"金溪县","value":"361027","parent":"361000"},{"name":"资溪县","value":"361028","parent":"361000"},{"name":"东乡县","value":"361029","parent":"361000"},{"name":"广昌县","value":"361030","parent":"361000"},{"name":"信州区","value":"361102","parent":"361100"},{"name":"广丰区","value":"361103","parent":"361100"},{"name":"上饶县","value":"361121","parent":"361100"},{"name":"玉山县","value":"361123","parent":"361100"},{"name":"铅山县","value":"361124","parent":"361100"},{"name":"横峰县","value":"361125","parent":"361100"},{"name":"弋阳县","value":"361126","parent":"361100"},{"name":"余干县","value":"361127","parent":"361100"},{"name":"鄱阳县","value":"361128","parent":"361100"},{"name":"万年县","value":"361129","parent":"361100"},{"name":"婺源县","value":"361130","parent":"361100"},{"name":"德兴市","value":"361181","parent":"361100"},{"name":"济南市","value":"370100","parent":"370000"},{"name":"青岛市","value":"370200","parent":"370000"},{"name":"淄博市","value":"370300","parent":"370000"},{"name":"枣庄市","value":"370400","parent":"370000"},{"name":"东营市","value":"370500","parent":"370000"},{"name":"烟台市","value":"370600","parent":"370000"},{"name":"潍坊市","value":"370700","parent":"370000"},{"name":"济宁市","value":"370800","parent":"370000"},{"name":"泰安市","value":"370900","parent":"370000"},{"name":"威海市","value":"371000","parent":"370000"},{"name":"日照市","value":"371100","parent":"370000"},{"name":"莱芜市","value":"371200","parent":"370000"},{"name":"临沂市","value":"371300","parent":"370000"},{"name":"德州市","value":"371400","parent":"370000"},{"name":"聊城市","value":"371500","parent":"370000"},{"name":"滨州市","value":"371600","parent":"370000"},{"name":"菏泽市","value":"371700","parent":"370000"},{"name":"历下区","value":"370102","parent":"370100"},{"name":"市中区","value":"370103","parent":"370100"},{"name":"槐荫区","value":"370104","parent":"370100"},{"name":"天桥区","value":"370105","parent":"370100"},{"name":"历城区","value":"370112","parent":"370100"},{"name":"长清区","value":"370113","parent":"370100"},{"name":"平阴县","value":"370124","parent":"370100"},{"name":"济阳县","value":"370125","parent":"370100"},{"name":"商河县","value":"370126","parent":"370100"},{"name":"章丘市","value":"370181","parent":"370100"},{"name":"市南区","value":"370202","parent":"370200"},{"name":"市北区","value":"370203","parent":"370200"},{"name":"黄岛区","value":"370211","parent":"370200"},{"name":"崂山区","value":"370212","parent":"370200"},{"name":"李沧区","value":"370213","parent":"370200"},{"name":"城阳区","value":"370214","parent":"370200"},{"name":"胶州市","value":"370281","parent":"370200"},{"name":"即墨市","value":"370282","parent":"370200"},{"name":"平度市","value":"370283","parent":"370200"},{"name":"莱西市","value":"370285","parent":"370200"},{"name":"淄川区","value":"370302","parent":"370300"},{"name":"张店区","value":"370303","parent":"370300"},{"name":"博山区","value":"370304","parent":"370300"},{"name":"临淄区","value":"370305","parent":"370300"},{"name":"周村区","value":"370306","parent":"370300"},{"name":"桓台县","value":"370321","parent":"370300"},{"name":"高青县","value":"370322","parent":"370300"},{"name":"沂源县","value":"370323","parent":"370300"},{"name":"市中区","value":"370402","parent":"370400"},{"name":"薛城区","value":"370403","parent":"370400"},{"name":"峄城区","value":"370404","parent":"370400"},{"name":"台儿庄区","value":"370405","parent":"370400"},{"name":"山亭区","value":"370406","parent":"370400"},{"name":"滕州市","value":"370481","parent":"370400"},{"name":"东营区","value":"370502","parent":"370500"},{"name":"河口区","value":"370503","parent":"370500"},{"name":"垦利县","value":"370521","parent":"370500"},{"name":"利津县","value":"370522","parent":"370500"},{"name":"广饶县","value":"370523","parent":"370500"},{"name":"芝罘区","value":"370602","parent":"370600"},{"name":"福山区","value":"370611","parent":"370600"},{"name":"牟平区","value":"370612","parent":"370600"},{"name":"莱山区","value":"370613","parent":"370600"},{"name":"长岛县","value":"370634","parent":"370600"},{"name":"龙口市","value":"370681","parent":"370600"},{"name":"莱阳市","value":"370682","parent":"370600"},{"name":"莱州市","value":"370683","parent":"370600"},{"name":"蓬莱市","value":"370684","parent":"370600"},{"name":"招远市","value":"370685","parent":"370600"},{"name":"栖霞市","value":"370686","parent":"370600"},{"name":"海阳市","value":"370687","parent":"370600"},{"name":"潍城区","value":"370702","parent":"370700"},{"name":"寒亭区","value":"370703","parent":"370700"},{"name":"坊子区","value":"370704","parent":"370700"},{"name":"奎文区","value":"370705","parent":"370700"},{"name":"临朐县","value":"370724","parent":"370700"},{"name":"昌乐县","value":"370725","parent":"370700"},{"name":"青州市","value":"370781","parent":"370700"},{"name":"诸城市","value":"370782","parent":"370700"},{"name":"寿光市","value":"370783","parent":"370700"},{"name":"安丘市","value":"370784","parent":"370700"},{"name":"高密市","value":"370785","parent":"370700"},{"name":"昌邑市","value":"370786","parent":"370700"},{"name":"任城区","value":"370811","parent":"370800"},{"name":"兖州区","value":"370812","parent":"370800"},{"name":"微山县","value":"370826","parent":"370800"},{"name":"鱼台县","value":"370827","parent":"370800"},{"name":"金乡县","value":"370828","parent":"370800"},{"name":"嘉祥县","value":"370829","parent":"370800"},{"name":"汶上县","value":"370830","parent":"370800"},{"name":"泗水县","value":"370831","parent":"370800"},{"name":"梁山县","value":"370832","parent":"370800"},{"name":"曲阜市","value":"370881","parent":"370800"},{"name":"邹城市","value":"370883","parent":"370800"},{"name":"泰山区","value":"370902","parent":"370900"},{"name":"岱岳区","value":"370911","parent":"370900"},{"name":"宁阳县","value":"370921","parent":"370900"},{"name":"东平县","value":"370923","parent":"370900"},{"name":"新泰市","value":"370982","parent":"370900"},{"name":"肥城市","value":"370983","parent":"370900"},{"name":"环翠区","value":"371002","parent":"371000"},{"name":"文登区","value":"371003","parent":"371000"},{"name":"荣成市","value":"371082","parent":"371000"},{"name":"乳山市","value":"371083","parent":"371000"},{"name":"东港区","value":"371102","parent":"371100"},{"name":"岚山区","value":"371103","parent":"371100"},{"name":"五莲县","value":"371121","parent":"371100"},{"name":"莒县","value":"371122","parent":"371100"},{"name":"莱城区","value":"371202","parent":"371200"},{"name":"钢城区","value":"371203","parent":"371200"},{"name":"兰山区","value":"371302","parent":"371300"},{"name":"罗庄区","value":"371311","parent":"371300"},{"name":"河东区","value":"371312","parent":"371300"},{"name":"沂南县","value":"371321","parent":"371300"},{"name":"郯城县","value":"371322","parent":"371300"},{"name":"沂水县","value":"371323","parent":"371300"},{"name":"兰陵县","value":"371324","parent":"371300"},{"name":"费县","value":"371325","parent":"371300"},{"name":"平邑县","value":"371326","parent":"371300"},{"name":"莒南县","value":"371327","parent":"371300"},{"name":"蒙阴县","value":"371328","parent":"371300"},{"name":"临沭县","value":"371329","parent":"371300"},{"name":"德城区","value":"371402","parent":"371400"},{"name":"陵城区","value":"371403","parent":"371400"},{"name":"宁津县","value":"371422","parent":"371400"},{"name":"庆云县","value":"371423","parent":"371400"},{"name":"临邑县","value":"371424","parent":"371400"},{"name":"齐河县","value":"371425","parent":"371400"},{"name":"平原县","value":"371426","parent":"371400"},{"name":"夏津县","value":"371427","parent":"371400"},{"name":"武城县","value":"371428","parent":"371400"},{"name":"乐陵市","value":"371481","parent":"371400"},{"name":"禹城市","value":"371482","parent":"371400"},{"name":"东昌府区","value":"371502","parent":"371500"},{"name":"阳谷县","value":"371521","parent":"371500"},{"name":"莘县","value":"371522","parent":"371500"},{"name":"茌平县","value":"371523","parent":"371500"},{"name":"东阿县","value":"371524","parent":"371500"},{"name":"冠县","value":"371525","parent":"371500"},{"name":"高唐县","value":"371526","parent":"371500"},{"name":"临清市","value":"371581","parent":"371500"},{"name":"滨城区","value":"371602","parent":"371600"},{"name":"沾化区","value":"371603","parent":"371600"},{"name":"惠民县","value":"371621","parent":"371600"},{"name":"阳信县","value":"371622","parent":"371600"},{"name":"无棣县","value":"371623","parent":"371600"},{"name":"博兴县","value":"371625","parent":"371600"},{"name":"邹平县","value":"371626","parent":"371600"},{"name":"牡丹区","value":"371702","parent":"371700"},{"name":"曹县","value":"371721","parent":"371700"},{"name":"单县","value":"371722","parent":"371700"},{"name":"成武县","value":"371723","parent":"371700"},{"name":"巨野县","value":"371724","parent":"371700"},{"name":"郓城县","value":"371725","parent":"371700"},{"name":"鄄城县","value":"371726","parent":"371700"},{"name":"定陶县","value":"371727","parent":"371700"},{"name":"东明县","value":"371728","parent":"371700"},{"name":"郑州市","value":"410100","parent":"410000"},{"name":"开封市","value":"410200","parent":"410000"},{"name":"洛阳市","value":"410300","parent":"410000"},{"name":"平顶山市","value":"410400","parent":"410000"},{"name":"安阳市","value":"410500","parent":"410000"},{"name":"鹤壁市","value":"410600","parent":"410000"},{"name":"新乡市","value":"410700","parent":"410000"},{"name":"焦作市","value":"410800","parent":"410000"},{"name":"濮阳市","value":"410900","parent":"410000"},{"name":"许昌市","value":"411000","parent":"410000"},{"name":"漯河市","value":"411100","parent":"410000"},{"name":"三门峡市","value":"411200","parent":"410000"},{"name":"南阳市","value":"411300","parent":"410000"},{"name":"商丘市","value":"411400","parent":"410000"},{"name":"信阳市","value":"411500","parent":"410000"},{"name":"周口市","value":"411600","parent":"410000"},{"name":"驻马店市","value":"411700","parent":"410000"},{"name":"济源市","value":"419001","parent":"410000"},{"name":"中原区","value":"410102","parent":"410100"},{"name":"二七区","value":"410103","parent":"410100"},{"name":"管城回族区","value":"410104","parent":"410100"},{"name":"金水区","value":"410105","parent":"410100"},{"name":"上街区","value":"410106","parent":"410100"},{"name":"惠济区","value":"410108","parent":"410100"},{"name":"中牟县","value":"410122","parent":"410100"},{"name":"巩义市","value":"410181","parent":"410100"},{"name":"荥阳市","value":"410182","parent":"410100"},{"name":"新密市","value":"410183","parent":"410100"},{"name":"新郑市","value":"410184","parent":"410100"},{"name":"登封市","value":"410185","parent":"410100"},{"name":"龙亭区","value":"410202","parent":"410200"},{"name":"顺河回族区","value":"410203","parent":"410200"},{"name":"鼓楼区","value":"410204","parent":"410200"},{"name":"禹王台区","value":"410205","parent":"410200"},{"name":"金明区","value":"410211","parent":"410200"},{"name":"祥符区","value":"410212","parent":"410200"},{"name":"杞县","value":"410221","parent":"410200"},{"name":"通许县","value":"410222","parent":"410200"},{"name":"尉氏县","value":"410223","parent":"410200"},{"name":"兰考县","value":"410225","parent":"410200"},{"name":"老城区","value":"410302","parent":"410300"},{"name":"西工区","value":"410303","parent":"410300"},{"name":"瀍河回族区","value":"410304","parent":"410300"},{"name":"涧西区","value":"410305","parent":"410300"},{"name":"吉利区","value":"410306","parent":"410300"},{"name":"洛龙区","value":"410311","parent":"410300"},{"name":"孟津县","value":"410322","parent":"410300"},{"name":"新安县","value":"410323","parent":"410300"},{"name":"栾川县","value":"410324","parent":"410300"},{"name":"嵩县","value":"410325","parent":"410300"},{"name":"汝阳县","value":"410326","parent":"410300"},{"name":"宜阳县","value":"410327","parent":"410300"},{"name":"洛宁县","value":"410328","parent":"410300"},{"name":"伊川县","value":"410329","parent":"410300"},{"name":"偃师市","value":"410381","parent":"410300"},{"name":"新华区","value":"410402","parent":"410400"},{"name":"卫东区","value":"410403","parent":"410400"},{"name":"石龙区","value":"410404","parent":"410400"},{"name":"湛河区","value":"410411","parent":"410400"},{"name":"宝丰县","value":"410421","parent":"410400"},{"name":"叶县","value":"410422","parent":"410400"},{"name":"鲁山县","value":"410423","parent":"410400"},{"name":"郏县","value":"410425","parent":"410400"},{"name":"舞钢市","value":"410481","parent":"410400"},{"name":"汝州市","value":"410482","parent":"410400"},{"name":"文峰区","value":"410502","parent":"410500"},{"name":"北关区","value":"410503","parent":"410500"},{"name":"殷都区","value":"410505","parent":"410500"},{"name":"龙安区","value":"410506","parent":"410500"},{"name":"安阳县","value":"410522","parent":"410500"},{"name":"汤阴县","value":"410523","parent":"410500"},{"name":"滑县","value":"410526","parent":"410500"},{"name":"内黄县","value":"410527","parent":"410500"},{"name":"林州市","value":"410581","parent":"410500"},{"name":"鹤山区","value":"410602","parent":"410600"},{"name":"山城区","value":"410603","parent":"410600"},{"name":"淇滨区","value":"410611","parent":"410600"},{"name":"浚县","value":"410621","parent":"410600"},{"name":"淇县","value":"410622","parent":"410600"},{"name":"红旗区","value":"410702","parent":"410700"},{"name":"卫滨区","value":"410703","parent":"410700"},{"name":"凤泉区","value":"410704","parent":"410700"},{"name":"牧野区","value":"410711","parent":"410700"},{"name":"新乡县","value":"410721","parent":"410700"},{"name":"获嘉县","value":"410724","parent":"410700"},{"name":"原阳县","value":"410725","parent":"410700"},{"name":"延津县","value":"410726","parent":"410700"},{"name":"封丘县","value":"410727","parent":"410700"},{"name":"长垣县","value":"410728","parent":"410700"},{"name":"卫辉市","value":"410781","parent":"410700"},{"name":"辉县市","value":"410782","parent":"410700"},{"name":"解放区","value":"410802","parent":"410800"},{"name":"中站区","value":"410803","parent":"410800"},{"name":"马村区","value":"410804","parent":"410800"},{"name":"山阳区","value":"410811","parent":"410800"},{"name":"修武县","value":"410821","parent":"410800"},{"name":"博爱县","value":"410822","parent":"410800"},{"name":"武陟县","value":"410823","parent":"410800"},{"name":"温县","value":"410825","parent":"410800"},{"name":"沁阳市","value":"410882","parent":"410800"},{"name":"孟州市","value":"410883","parent":"410800"},{"name":"华龙区","value":"410902","parent":"410900"},{"name":"清丰县","value":"410922","parent":"410900"},{"name":"南乐县","value":"410923","parent":"410900"},{"name":"范县","value":"410926","parent":"410900"},{"name":"台前县","value":"410927","parent":"410900"},{"name":"濮阳县","value":"410928","parent":"410900"},{"name":"魏都区","value":"411002","parent":"411000"},{"name":"许昌县","value":"411023","parent":"411000"},{"name":"鄢陵县","value":"411024","parent":"411000"},{"name":"襄城县","value":"411025","parent":"411000"},{"name":"禹州市","value":"411081","parent":"411000"},{"name":"长葛市","value":"411082","parent":"411000"},{"name":"源汇区","value":"411102","parent":"411100"},{"name":"郾城区","value":"411103","parent":"411100"},{"name":"召陵区","value":"411104","parent":"411100"},{"name":"舞阳县","value":"411121","parent":"411100"},{"name":"临颍县","value":"411122","parent":"411100"},{"name":"湖滨区","value":"411202","parent":"411200"},{"name":"渑池县","value":"411221","parent":"411200"},{"name":"陕县","value":"411222","parent":"411200"},{"name":"卢氏县","value":"411224","parent":"411200"},{"name":"义马市","value":"411281","parent":"411200"},{"name":"灵宝市","value":"411282","parent":"411200"},{"name":"宛城区","value":"411302","parent":"411300"},{"name":"卧龙区","value":"411303","parent":"411300"},{"name":"南召县","value":"411321","parent":"411300"},{"name":"方城县","value":"411322","parent":"411300"},{"name":"西峡县","value":"411323","parent":"411300"},{"name":"镇平县","value":"411324","parent":"411300"},{"name":"内乡县","value":"411325","parent":"411300"},{"name":"淅川县","value":"411326","parent":"411300"},{"name":"社旗县","value":"411327","parent":"411300"},{"name":"唐河县","value":"411328","parent":"411300"},{"name":"新野县","value":"411329","parent":"411300"},{"name":"桐柏县","value":"411330","parent":"411300"},{"name":"邓州市","value":"411381","parent":"411300"},{"name":"梁园区","value":"411402","parent":"411400"},{"name":"睢阳区","value":"411403","parent":"411400"},{"name":"民权县","value":"411421","parent":"411400"},{"name":"睢县","value":"411422","parent":"411400"},{"name":"宁陵县","value":"411423","parent":"411400"},{"name":"柘城县","value":"411424","parent":"411400"},{"name":"虞城县","value":"411425","parent":"411400"},{"name":"夏邑县","value":"411426","parent":"411400"},{"name":"永城市","value":"411481","parent":"411400"},{"name":"浉河区","value":"411502","parent":"411500"},{"name":"平桥区","value":"411503","parent":"411500"},{"name":"罗山县","value":"411521","parent":"411500"},{"name":"光山县","value":"411522","parent":"411500"},{"name":"新县","value":"411523","parent":"411500"},{"name":"商城县","value":"411524","parent":"411500"},{"name":"固始县","value":"411525","parent":"411500"},{"name":"潢川县","value":"411526","parent":"411500"},{"name":"淮滨县","value":"411527","parent":"411500"},{"name":"息县","value":"411528","parent":"411500"},{"name":"川汇区","value":"411602","parent":"411600"},{"name":"扶沟县","value":"411621","parent":"411600"},{"name":"西华县","value":"411622","parent":"411600"},{"name":"商水县","value":"411623","parent":"411600"},{"name":"沈丘县","value":"411624","parent":"411600"},{"name":"郸城县","value":"411625","parent":"411600"},{"name":"淮阳县","value":"411626","parent":"411600"},{"name":"太康县","value":"411627","parent":"411600"},{"name":"鹿邑县","value":"411628","parent":"411600"},{"name":"项城市","value":"411681","parent":"411600"},{"name":"驿城区","value":"411702","parent":"411700"},{"name":"西平县","value":"411721","parent":"411700"},{"name":"上蔡县","value":"411722","parent":"411700"},{"name":"平舆县","value":"411723","parent":"411700"},{"name":"正阳县","value":"411724","parent":"411700"},{"name":"确山县","value":"411725","parent":"411700"},{"name":"泌阳县","value":"411726","parent":"411700"},{"name":"汝南县","value":"411727","parent":"411700"},{"name":"遂平县","value":"411728","parent":"411700"},{"name":"新蔡县","value":"411729","parent":"411700"},{"name":"武汉市","value":"420100","parent":"420000"},{"name":"黄石市","value":"420200","parent":"420000"},{"name":"十堰市","value":"420300","parent":"420000"},{"name":"宜昌市","value":"420500","parent":"420000"},{"name":"襄阳市","value":"420600","parent":"420000"},{"name":"鄂州市","value":"420700","parent":"420000"},{"name":"荆门市","value":"420800","parent":"420000"},{"name":"孝感市","value":"420900","parent":"420000"},{"name":"荆州市","value":"421000","parent":"420000"},{"name":"黄冈市","value":"421100","parent":"420000"},{"name":"咸宁市","value":"421200","parent":"420000"},{"name":"随州市","value":"421300","parent":"420000"},{"name":"恩施土家族苗族自治州","value":"422800","parent":"420000"},{"name":"仙桃市","value":"429004","parent":"420000"},{"name":"潜江市","value":"429005","parent":"420000"},{"name":"天门市","value":"429006","parent":"420000"},{"name":"神农架林区","value":"429021","parent":"420000"},{"name":"江岸区","value":"420102","parent":"420100"},{"name":"江汉区","value":"420103","parent":"420100"},{"name":"硚口区","value":"420104","parent":"420100"},{"name":"汉阳区","value":"420105","parent":"420100"},{"name":"武昌区","value":"420106","parent":"420100"},{"name":"青山区","value":"420107","parent":"420100"},{"name":"洪山区","value":"420111","parent":"420100"},{"name":"东西湖区","value":"420112","parent":"420100"},{"name":"汉南区","value":"420113","parent":"420100"},{"name":"蔡甸区","value":"420114","parent":"420100"},{"name":"江夏区","value":"420115","parent":"420100"},{"name":"黄陂区","value":"420116","parent":"420100"},{"name":"新洲区","value":"420117","parent":"420100"},{"name":"黄石港区","value":"420202","parent":"420200"},{"name":"西塞山区","value":"420203","parent":"420200"},{"name":"下陆区","value":"420204","parent":"420200"},{"name":"铁山区","value":"420205","parent":"420200"},{"name":"阳新县","value":"420222","parent":"420200"},{"name":"大冶市","value":"420281","parent":"420200"},{"name":"茅箭区","value":"420302","parent":"420300"},{"name":"张湾区","value":"420303","parent":"420300"},{"name":"郧阳区","value":"420304","parent":"420300"},{"name":"郧西县","value":"420322","parent":"420300"},{"name":"竹山县","value":"420323","parent":"420300"},{"name":"竹溪县","value":"420324","parent":"420300"},{"name":"房县","value":"420325","parent":"420300"},{"name":"丹江口市","value":"420381","parent":"420300"},{"name":"西陵区","value":"420502","parent":"420500"},{"name":"伍家岗区","value":"420503","parent":"420500"},{"name":"点军区","value":"420504","parent":"420500"},{"name":"猇亭区","value":"420505","parent":"420500"},{"name":"夷陵区","value":"420506","parent":"420500"},{"name":"远安县","value":"420525","parent":"420500"},{"name":"兴山县","value":"420526","parent":"420500"},{"name":"秭归县","value":"420527","parent":"420500"},{"name":"长阳土家族自治县","value":"420528","parent":"420500"},{"name":"五峰土家族自治县","value":"420529","parent":"420500"},{"name":"宜都市","value":"420581","parent":"420500"},{"name":"当阳市","value":"420582","parent":"420500"},{"name":"枝江市","value":"420583","parent":"420500"},{"name":"襄城区","value":"420602","parent":"420600"},{"name":"樊城区","value":"420606","parent":"420600"},{"name":"襄州区","value":"420607","parent":"420600"},{"name":"南漳县","value":"420624","parent":"420600"},{"name":"谷城县","value":"420625","parent":"420600"},{"name":"保康县","value":"420626","parent":"420600"},{"name":"老河口市","value":"420682","parent":"420600"},{"name":"枣阳市","value":"420683","parent":"420600"},{"name":"宜城市","value":"420684","parent":"420600"},{"name":"梁子湖区","value":"420702","parent":"420700"},{"name":"华容区","value":"420703","parent":"420700"},{"name":"鄂城区","value":"420704","parent":"420700"},{"name":"东宝区","value":"420802","parent":"420800"},{"name":"掇刀区","value":"420804","parent":"420800"},{"name":"京山县","value":"420821","parent":"420800"},{"name":"沙洋县","value":"420822","parent":"420800"},{"name":"钟祥市","value":"420881","parent":"420800"},{"name":"孝南区","value":"420902","parent":"420900"},{"name":"孝昌县","value":"420921","parent":"420900"},{"name":"大悟县","value":"420922","parent":"420900"},{"name":"云梦县","value":"420923","parent":"420900"},{"name":"应城市","value":"420981","parent":"420900"},{"name":"安陆市","value":"420982","parent":"420900"},{"name":"汉川市","value":"420984","parent":"420900"},{"name":"沙市区","value":"421002","parent":"421000"},{"name":"荆州区","value":"421003","parent":"421000"},{"name":"公安县","value":"421022","parent":"421000"},{"name":"监利县","value":"421023","parent":"421000"},{"name":"江陵县","value":"421024","parent":"421000"},{"name":"石首市","value":"421081","parent":"421000"},{"name":"洪湖市","value":"421083","parent":"421000"},{"name":"松滋市","value":"421087","parent":"421000"},{"name":"黄州区","value":"421102","parent":"421100"},{"name":"团风县","value":"421121","parent":"421100"},{"name":"红安县","value":"421122","parent":"421100"},{"name":"罗田县","value":"421123","parent":"421100"},{"name":"英山县","value":"421124","parent":"421100"},{"name":"浠水县","value":"421125","parent":"421100"},{"name":"蕲春县","value":"421126","parent":"421100"},{"name":"黄梅县","value":"421127","parent":"421100"},{"name":"麻城市","value":"421181","parent":"421100"},{"name":"武穴市","value":"421182","parent":"421100"},{"name":"咸安区","value":"421202","parent":"421200"},{"name":"嘉鱼县","value":"421221","parent":"421200"},{"name":"通城县","value":"421222","parent":"421200"},{"name":"崇阳县","value":"421223","parent":"421200"},{"name":"通山县","value":"421224","parent":"421200"},{"name":"赤壁市","value":"421281","parent":"421200"},{"name":"曾都区","value":"421303","parent":"421300"},{"name":"随县","value":"421321","parent":"421300"},{"name":"广水市","value":"421381","parent":"421300"},{"name":"恩施市","value":"422801","parent":"422800"},{"name":"利川市","value":"422802","parent":"422800"},{"name":"建始县","value":"422822","parent":"422800"},{"name":"巴东县","value":"422823","parent":"422800"},{"name":"宣恩县","value":"422825","parent":"422800"},{"name":"咸丰县","value":"422826","parent":"422800"},{"name":"来凤县","value":"422827","parent":"422800"},{"name":"鹤峰县","value":"422828","parent":"422800"},{"name":"长沙市","value":"430100","parent":"430000"},{"name":"株洲市","value":"430200","parent":"430000"},{"name":"湘潭市","value":"430300","parent":"430000"},{"name":"衡阳市","value":"430400","parent":"430000"},{"name":"邵阳市","value":"430500","parent":"430000"},{"name":"岳阳市","value":"430600","parent":"430000"},{"name":"常德市","value":"430700","parent":"430000"},{"name":"张家界市","value":"430800","parent":"430000"},{"name":"益阳市","value":"430900","parent":"430000"},{"name":"郴州市","value":"431000","parent":"430000"},{"name":"永州市","value":"431100","parent":"430000"},{"name":"怀化市","value":"431200","parent":"430000"},{"name":"娄底市","value":"431300","parent":"430000"},{"name":"湘西土家族苗族自治州","value":"433100","parent":"430000"},{"name":"芙蓉区","value":"430102","parent":"430100"},{"name":"天心区","value":"430103","parent":"430100"},{"name":"岳麓区","value":"430104","parent":"430100"},{"name":"开福区","value":"430105","parent":"430100"},{"name":"雨花区","value":"430111","parent":"430100"},{"name":"望城区","value":"430112","parent":"430100"},{"name":"长沙县","value":"430121","parent":"430100"},{"name":"宁乡县","value":"430124","parent":"430100"},{"name":"浏阳市","value":"430181","parent":"430100"},{"name":"荷塘区","value":"430202","parent":"430200"},{"name":"芦淞区","value":"430203","parent":"430200"},{"name":"石峰区","value":"430204","parent":"430200"},{"name":"天元区","value":"430211","parent":"430200"},{"name":"株洲县","value":"430221","parent":"430200"},{"name":"攸县","value":"430223","parent":"430200"},{"name":"茶陵县","value":"430224","parent":"430200"},{"name":"炎陵县","value":"430225","parent":"430200"},{"name":"醴陵市","value":"430281","parent":"430200"},{"name":"雨湖区","value":"430302","parent":"430300"},{"name":"岳塘区","value":"430304","parent":"430300"},{"name":"湘潭县","value":"430321","parent":"430300"},{"name":"湘乡市","value":"430381","parent":"430300"},{"name":"韶山市","value":"430382","parent":"430300"},{"name":"珠晖区","value":"430405","parent":"430400"},{"name":"雁峰区","value":"430406","parent":"430400"},{"name":"石鼓区","value":"430407","parent":"430400"},{"name":"蒸湘区","value":"430408","parent":"430400"},{"name":"南岳区","value":"430412","parent":"430400"},{"name":"衡阳县","value":"430421","parent":"430400"},{"name":"衡南县","value":"430422","parent":"430400"},{"name":"衡山县","value":"430423","parent":"430400"},{"name":"衡东县","value":"430424","parent":"430400"},{"name":"祁东县","value":"430426","parent":"430400"},{"name":"耒阳市","value":"430481","parent":"430400"},{"name":"常宁市","value":"430482","parent":"430400"},{"name":"双清区","value":"430502","parent":"430500"},{"name":"大祥区","value":"430503","parent":"430500"},{"name":"北塔区","value":"430511","parent":"430500"},{"name":"邵东县","value":"430521","parent":"430500"},{"name":"新邵县","value":"430522","parent":"430500"},{"name":"邵阳县","value":"430523","parent":"430500"},{"name":"隆回县","value":"430524","parent":"430500"},{"name":"洞口县","value":"430525","parent":"430500"},{"name":"绥宁县","value":"430527","parent":"430500"},{"name":"新宁县","value":"430528","parent":"430500"},{"name":"城步苗族自治县","value":"430529","parent":"430500"},{"name":"武冈市","value":"430581","parent":"430500"},{"name":"岳阳楼区","value":"430602","parent":"430600"},{"name":"云溪区","value":"430603","parent":"430600"},{"name":"君山区","value":"430611","parent":"430600"},{"name":"岳阳县","value":"430621","parent":"430600"},{"name":"华容县","value":"430623","parent":"430600"},{"name":"湘阴县","value":"430624","parent":"430600"},{"name":"平江县","value":"430626","parent":"430600"},{"name":"汨罗市","value":"430681","parent":"430600"},{"name":"临湘市","value":"430682","parent":"430600"},{"name":"武陵区","value":"430702","parent":"430700"},{"name":"鼎城区","value":"430703","parent":"430700"},{"name":"安乡县","value":"430721","parent":"430700"},{"name":"汉寿县","value":"430722","parent":"430700"},{"name":"澧县","value":"430723","parent":"430700"},{"name":"临澧县","value":"430724","parent":"430700"},{"name":"桃源县","value":"430725","parent":"430700"},{"name":"石门县","value":"430726","parent":"430700"},{"name":"津市市","value":"430781","parent":"430700"},{"name":"永定区","value":"430802","parent":"430800"},{"name":"武陵源区","value":"430811","parent":"430800"},{"name":"慈利县","value":"430821","parent":"430800"},{"name":"桑植县","value":"430822","parent":"430800"},{"name":"资阳区","value":"430902","parent":"430900"},{"name":"赫山区","value":"430903","parent":"430900"},{"name":"南县","value":"430921","parent":"430900"},{"name":"桃江县","value":"430922","parent":"430900"},{"name":"安化县","value":"430923","parent":"430900"},{"name":"沅江市","value":"430981","parent":"430900"},{"name":"北湖区","value":"431002","parent":"431000"},{"name":"苏仙区","value":"431003","parent":"431000"},{"name":"桂阳县","value":"431021","parent":"431000"},{"name":"宜章县","value":"431022","parent":"431000"},{"name":"永兴县","value":"431023","parent":"431000"},{"name":"嘉禾县","value":"431024","parent":"431000"},{"name":"临武县","value":"431025","parent":"431000"},{"name":"汝城县","value":"431026","parent":"431000"},{"name":"桂东县","value":"431027","parent":"431000"},{"name":"安仁县","value":"431028","parent":"431000"},{"name":"资兴市","value":"431081","parent":"431000"},{"name":"零陵区","value":"431102","parent":"431100"},{"name":"冷水滩区","value":"431103","parent":"431100"},{"name":"祁阳县","value":"431121","parent":"431100"},{"name":"东安县","value":"431122","parent":"431100"},{"name":"双牌县","value":"431123","parent":"431100"},{"name":"道县","value":"431124","parent":"431100"},{"name":"江永县","value":"431125","parent":"431100"},{"name":"宁远县","value":"431126","parent":"431100"},{"name":"蓝山县","value":"431127","parent":"431100"},{"name":"新田县","value":"431128","parent":"431100"},{"name":"江华瑶族自治县","value":"431129","parent":"431100"},{"name":"鹤城区","value":"431202","parent":"431200"},{"name":"中方县","value":"431221","parent":"431200"},{"name":"沅陵县","value":"431222","parent":"431200"},{"name":"辰溪县","value":"431223","parent":"431200"},{"name":"溆浦县","value":"431224","parent":"431200"},{"name":"会同县","value":"431225","parent":"431200"},{"name":"麻阳苗族自治县","value":"431226","parent":"431200"},{"name":"新晃侗族自治县","value":"431227","parent":"431200"},{"name":"芷江侗族自治县","value":"431228","parent":"431200"},{"name":"靖州苗族侗族自治县","value":"431229","parent":"431200"},{"name":"通道侗族自治县","value":"431230","parent":"431200"},{"name":"洪江市","value":"431281","parent":"431200"},{"name":"娄星区","value":"431302","parent":"431300"},{"name":"双峰县","value":"431321","parent":"431300"},{"name":"新化县","value":"431322","parent":"431300"},{"name":"冷水江市","value":"431381","parent":"431300"},{"name":"涟源市","value":"431382","parent":"431300"},{"name":"吉首市","value":"433101","parent":"433100"},{"name":"泸溪县","value":"433122","parent":"433100"},{"name":"凤凰县","value":"433123","parent":"433100"},{"name":"花垣县","value":"433124","parent":"433100"},{"name":"保靖县","value":"433125","parent":"433100"},{"name":"古丈县","value":"433126","parent":"433100"},{"name":"永顺县","value":"433127","parent":"433100"},{"name":"龙山县","value":"433130","parent":"433100"},{"name":"广州市","value":"440100","parent":"440000"},{"name":"韶关市","value":"440200","parent":"440000"},{"name":"深圳市","value":"440300","parent":"440000"},{"name":"珠海市","value":"440400","parent":"440000"},{"name":"汕头市","value":"440500","parent":"440000"},{"name":"佛山市","value":"440600","parent":"440000"},{"name":"江门市","value":"440700","parent":"440000"},{"name":"湛江市","value":"440800","parent":"440000"},{"name":"茂名市","value":"440900","parent":"440000"},{"name":"肇庆市","value":"441200","parent":"440000"},{"name":"惠州市","value":"441300","parent":"440000"},{"name":"梅州市","value":"441400","parent":"440000"},{"name":"汕尾市","value":"441500","parent":"440000"},{"name":"河源市","value":"441600","parent":"440000"},{"name":"阳江市","value":"441700","parent":"440000"},{"name":"清远市","value":"441800","parent":"440000"},{"name":"东莞市","value":"441900","parent":"440000"},{"name":"中山市","value":"442000","parent":"440000"},{"name":"潮州市","value":"445100","parent":"440000"},{"name":"揭阳市","value":"445200","parent":"440000"},{"name":"云浮市","value":"445300","parent":"440000"},{"name":"荔湾区","value":"440103","parent":"440100"},{"name":"越秀区","value":"440104","parent":"440100"},{"name":"海珠区","value":"440105","parent":"440100"},{"name":"天河区","value":"440106","parent":"440100"},{"name":"白云区","value":"440111","parent":"440100"},{"name":"黄埔区","value":"440112","parent":"440100"},{"name":"番禺区","value":"440113","parent":"440100"},{"name":"花都区","value":"440114","parent":"440100"},{"name":"南沙区","value":"440115","parent":"440100"},{"name":"从化区","value":"440117","parent":"440100"},{"name":"增城区","value":"440118","parent":"440100"},{"name":"武江区","value":"440203","parent":"440200"},{"name":"浈江区","value":"440204","parent":"440200"},{"name":"曲江区","value":"440205","parent":"440200"},{"name":"始兴县","value":"440222","parent":"440200"},{"name":"仁化县","value":"440224","parent":"440200"},{"name":"翁源县","value":"440229","parent":"440200"},{"name":"乳源瑶族自治县","value":"440232","parent":"440200"},{"name":"新丰县","value":"440233","parent":"440200"},{"name":"乐昌市","value":"440281","parent":"440200"},{"name":"南雄市","value":"440282","parent":"440200"},{"name":"罗湖区","value":"440303","parent":"440300"},{"name":"福田区","value":"440304","parent":"440300"},{"name":"南山区","value":"440305","parent":"440300"},{"name":"宝安区","value":"440306","parent":"440300"},{"name":"龙岗区","value":"440307","parent":"440300"},{"name":"盐田区","value":"440308","parent":"440300"},{"name":"香洲区","value":"440402","parent":"440400"},{"name":"斗门区","value":"440403","parent":"440400"},{"name":"金湾区","value":"440404","parent":"440400"},{"name":"龙湖区","value":"440507","parent":"440500"},{"name":"金平区","value":"440511","parent":"440500"},{"name":"濠江区","value":"440512","parent":"440500"},{"name":"潮阳区","value":"440513","parent":"440500"},{"name":"潮南区","value":"440514","parent":"440500"},{"name":"澄海区","value":"440515","parent":"440500"},{"name":"南澳县","value":"440523","parent":"440500"},{"name":"禅城区","value":"440604","parent":"440600"},{"name":"南海区","value":"440605","parent":"440600"},{"name":"顺德区","value":"440606","parent":"440600"},{"name":"三水区","value":"440607","parent":"440600"},{"name":"高明区","value":"440608","parent":"440600"},{"name":"蓬江区","value":"440703","parent":"440700"},{"name":"江海区","value":"440704","parent":"440700"},{"name":"新会区","value":"440705","parent":"440700"},{"name":"台山市","value":"440781","parent":"440700"},{"name":"开平市","value":"440783","parent":"440700"},{"name":"鹤山市","value":"440784","parent":"440700"},{"name":"恩平市","value":"440785","parent":"440700"},{"name":"赤坎区","value":"440802","parent":"440800"},{"name":"霞山区","value":"440803","parent":"440800"},{"name":"坡头区","value":"440804","parent":"440800"},{"name":"麻章区","value":"440811","parent":"440800"},{"name":"遂溪县","value":"440823","parent":"440800"},{"name":"徐闻县","value":"440825","parent":"440800"},{"name":"廉江市","value":"440881","parent":"440800"},{"name":"雷州市","value":"440882","parent":"440800"},{"name":"吴川市","value":"440883","parent":"440800"},{"name":"茂南区","value":"440902","parent":"440900"},{"name":"电白区","value":"440904","parent":"440900"},{"name":"高州市","value":"440981","parent":"440900"},{"name":"化州市","value":"440982","parent":"440900"},{"name":"信宜市","value":"440983","parent":"440900"},{"name":"端州区","value":"441202","parent":"441200"},{"name":"鼎湖区","value":"441203","parent":"441200"},{"name":"高要区","value":"441204","parent":"441200"},{"name":"广宁县","value":"441223","parent":"441200"},{"name":"怀集县","value":"441224","parent":"441200"},{"name":"封开县","value":"441225","parent":"441200"},{"name":"德庆县","value":"441226","parent":"441200"},{"name":"四会市","value":"441284","parent":"441200"},{"name":"惠城区","value":"441302","parent":"441300"},{"name":"惠阳区","value":"441303","parent":"441300"},{"name":"博罗县","value":"441322","parent":"441300"},{"name":"惠东县","value":"441323","parent":"441300"},{"name":"龙门县","value":"441324","parent":"441300"},{"name":"梅江区","value":"441402","parent":"441400"},{"name":"梅县区","value":"441403","parent":"441400"},{"name":"大埔县","value":"441422","parent":"441400"},{"name":"丰顺县","value":"441423","parent":"441400"},{"name":"五华县","value":"441424","parent":"441400"},{"name":"平远县","value":"441426","parent":"441400"},{"name":"蕉岭县","value":"441427","parent":"441400"},{"name":"兴宁市","value":"441481","parent":"441400"},{"name":"城区","value":"441502","parent":"441500"},{"name":"海丰县","value":"441521","parent":"441500"},{"name":"陆河县","value":"441523","parent":"441500"},{"name":"陆丰市","value":"441581","parent":"441500"},{"name":"源城区","value":"441602","parent":"441600"},{"name":"紫金县","value":"441621","parent":"441600"},{"name":"龙川县","value":"441622","parent":"441600"},{"name":"连平县","value":"441623","parent":"441600"},{"name":"和平县","value":"441624","parent":"441600"},{"name":"东源县","value":"441625","parent":"441600"},{"name":"江城区","value":"441702","parent":"441700"},{"name":"阳东区","value":"441704","parent":"441700"},{"name":"阳西县","value":"441721","parent":"441700"},{"name":"阳春市","value":"441781","parent":"441700"},{"name":"清城区","value":"441802","parent":"441800"},{"name":"清新区","value":"441803","parent":"441800"},{"name":"佛冈县","value":"441821","parent":"441800"},{"name":"阳山县","value":"441823","parent":"441800"},{"name":"连山壮族瑶族自治县","value":"441825","parent":"441800"},{"name":"连南瑶族自治县","value":"441826","parent":"441800"},{"name":"英德市","value":"441881","parent":"441800"},{"name":"连州市","value":"441882","parent":"441800"},{"name":"湘桥区","value":"445102","parent":"445100"},{"name":"潮安区","value":"445103","parent":"445100"},{"name":"饶平县","value":"445122","parent":"445100"},{"name":"榕城区","value":"445202","parent":"445200"},{"name":"揭东区","value":"445203","parent":"445200"},{"name":"揭西县","value":"445222","parent":"445200"},{"name":"惠来县","value":"445224","parent":"445200"},{"name":"普宁市","value":"445281","parent":"445200"},{"name":"云城区","value":"445302","parent":"445300"},{"name":"云安区","value":"445303","parent":"445300"},{"name":"新兴县","value":"445321","parent":"445300"},{"name":"郁南县","value":"445322","parent":"445300"},{"name":"罗定市","value":"445381","parent":"445300"},{"name":"南宁市","value":"450100","parent":"450000"},{"name":"柳州市","value":"450200","parent":"450000"},{"name":"桂林市","value":"450300","parent":"450000"},{"name":"梧州市","value":"450400","parent":"450000"},{"name":"北海市","value":"450500","parent":"450000"},{"name":"防城港市","value":"450600","parent":"450000"},{"name":"钦州市","value":"450700","parent":"450000"},{"name":"贵港市","value":"450800","parent":"450000"},{"name":"玉林市","value":"450900","parent":"450000"},{"name":"百色市","value":"451000","parent":"450000"},{"name":"贺州市","value":"451100","parent":"450000"},{"name":"河池市","value":"451200","parent":"450000"},{"name":"来宾市","value":"451300","parent":"450000"},{"name":"崇左市","value":"451400","parent":"450000"},{"name":"兴宁区","value":"450102","parent":"450100"},{"name":"青秀区","value":"450103","parent":"450100"},{"name":"江南区","value":"450105","parent":"450100"},{"name":"西乡塘区","value":"450107","parent":"450100"},{"name":"良庆区","value":"450108","parent":"450100"},{"name":"邕宁区","value":"450109","parent":"450100"},{"name":"武鸣区","value":"450110","parent":"450100"},{"name":"隆安县","value":"450123","parent":"450100"},{"name":"马山县","value":"450124","parent":"450100"},{"name":"上林县","value":"450125","parent":"450100"},{"name":"宾阳县","value":"450126","parent":"450100"},{"name":"横县","value":"450127","parent":"450100"},{"name":"城中区","value":"450202","parent":"450200"},{"name":"鱼峰区","value":"450203","parent":"450200"},{"name":"柳南区","value":"450204","parent":"450200"},{"name":"柳北区","value":"450205","parent":"450200"},{"name":"柳江县","value":"450221","parent":"450200"},{"name":"柳城县","value":"450222","parent":"450200"},{"name":"鹿寨县","value":"450223","parent":"450200"},{"name":"融安县","value":"450224","parent":"450200"},{"name":"融水苗族自治县","value":"450225","parent":"450200"},{"name":"三江侗族自治县","value":"450226","parent":"450200"},{"name":"秀峰区","value":"450302","parent":"450300"},{"name":"叠彩区","value":"450303","parent":"450300"},{"name":"象山区","value":"450304","parent":"450300"},{"name":"七星区","value":"450305","parent":"450300"},{"name":"雁山区","value":"450311","parent":"450300"},{"name":"临桂区","value":"450312","parent":"450300"},{"name":"阳朔县","value":"450321","parent":"450300"},{"name":"灵川县","value":"450323","parent":"450300"},{"name":"全州县","value":"450324","parent":"450300"},{"name":"兴安县","value":"450325","parent":"450300"},{"name":"永福县","value":"450326","parent":"450300"},{"name":"灌阳县","value":"450327","parent":"450300"},{"name":"龙胜各族自治县","value":"450328","parent":"450300"},{"name":"资源县","value":"450329","parent":"450300"},{"name":"平乐县","value":"450330","parent":"450300"},{"name":"荔浦县","value":"450331","parent":"450300"},{"name":"恭城瑶族自治县","value":"450332","parent":"450300"},{"name":"万秀区","value":"450403","parent":"450400"},{"name":"长洲区","value":"450405","parent":"450400"},{"name":"龙圩区","value":"450406","parent":"450400"},{"name":"苍梧县","value":"450421","parent":"450400"},{"name":"藤县","value":"450422","parent":"450400"},{"name":"蒙山县","value":"450423","parent":"450400"},{"name":"岑溪市","value":"450481","parent":"450400"},{"name":"海城区","value":"450502","parent":"450500"},{"name":"银海区","value":"450503","parent":"450500"},{"name":"铁山港区","value":"450512","parent":"450500"},{"name":"合浦县","value":"450521","parent":"450500"},{"name":"港口区","value":"450602","parent":"450600"},{"name":"防城区","value":"450603","parent":"450600"},{"name":"上思县","value":"450621","parent":"450600"},{"name":"东兴市","value":"450681","parent":"450600"},{"name":"钦南区","value":"450702","parent":"450700"},{"name":"钦北区","value":"450703","parent":"450700"},{"name":"灵山县","value":"450721","parent":"450700"},{"name":"浦北县","value":"450722","parent":"450700"},{"name":"港北区","value":"450802","parent":"450800"},{"name":"港南区","value":"450803","parent":"450800"},{"name":"覃塘区","value":"450804","parent":"450800"},{"name":"平南县","value":"450821","parent":"450800"},{"name":"桂平市","value":"450881","parent":"450800"},{"name":"玉州区","value":"450902","parent":"450900"},{"name":"福绵区","value":"450903","parent":"450900"},{"name":"容县","value":"450921","parent":"450900"},{"name":"陆川县","value":"450922","parent":"450900"},{"name":"博白县","value":"450923","parent":"450900"},{"name":"兴业县","value":"450924","parent":"450900"},{"name":"北流市","value":"450981","parent":"450900"},{"name":"右江区","value":"451002","parent":"451000"},{"name":"田阳县","value":"451021","parent":"451000"},{"name":"田东县","value":"451022","parent":"451000"},{"name":"平果县","value":"451023","parent":"451000"},{"name":"德保县","value":"451024","parent":"451000"},{"name":"那坡县","value":"451026","parent":"451000"},{"name":"凌云县","value":"451027","parent":"451000"},{"name":"乐业县","value":"451028","parent":"451000"},{"name":"田林县","value":"451029","parent":"451000"},{"name":"西林县","value":"451030","parent":"451000"},{"name":"隆林各族自治县","value":"451031","parent":"451000"},{"name":"靖西市","value":"451081","parent":"451000"},{"name":"八步区","value":"451102","parent":"451100"},{"name":"昭平县","value":"451121","parent":"451100"},{"name":"钟山县","value":"451122","parent":"451100"},{"name":"富川瑶族自治县","value":"451123","parent":"451100"},{"name":"金城江区","value":"451202","parent":"451200"},{"name":"南丹县","value":"451221","parent":"451200"},{"name":"天峨县","value":"451222","parent":"451200"},{"name":"凤山县","value":"451223","parent":"451200"},{"name":"东兰县","value":"451224","parent":"451200"},{"name":"罗城仫佬族自治县","value":"451225","parent":"451200"},{"name":"环江毛南族自治县","value":"451226","parent":"451200"},{"name":"巴马瑶族自治县","value":"451227","parent":"451200"},{"name":"都安瑶族自治县","value":"451228","parent":"451200"},{"name":"大化瑶族自治县","value":"451229","parent":"451200"},{"name":"宜州市","value":"451281","parent":"451200"},{"name":"兴宾区","value":"451302","parent":"451300"},{"name":"忻城县","value":"451321","parent":"451300"},{"name":"象州县","value":"451322","parent":"451300"},{"name":"武宣县","value":"451323","parent":"451300"},{"name":"金秀瑶族自治县","value":"451324","parent":"451300"},{"name":"合山市","value":"451381","parent":"451300"},{"name":"江州区","value":"451402","parent":"451400"},{"name":"扶绥县","value":"451421","parent":"451400"},{"name":"宁明县","value":"451422","parent":"451400"},{"name":"龙州县","value":"451423","parent":"451400"},{"name":"大新县","value":"451424","parent":"451400"},{"name":"天等县","value":"451425","parent":"451400"},{"name":"凭祥市","value":"451481","parent":"451400"},{"name":"海口市","value":"460100","parent":"460000"},{"name":"三亚市","value":"460200","parent":"460000"},{"name":"三沙市","value":"460300","parent":"460000"},{"name":"五指山市","value":"469001","parent":"460000"},{"name":"琼海市","value":"469002","parent":"460000"},{"name":"儋州市","value":"469003","parent":"460000"},{"name":"文昌市","value":"469005","parent":"460000"},{"name":"万宁市","value":"469006","parent":"460000"},{"name":"东方市","value":"469007","parent":"460000"},{"name":"定安县","value":"469021","parent":"460000"},{"name":"屯昌县","value":"469022","parent":"460000"},{"name":"澄迈县","value":"469023","parent":"460000"},{"name":"临高县","value":"469024","parent":"460000"},{"name":"白沙黎族自治县","value":"469025","parent":"460000"},{"name":"昌江黎族自治县","value":"469026","parent":"460000"},{"name":"乐东黎族自治县","value":"469027","parent":"460000"},{"name":"陵水黎族自治县","value":"469028","parent":"460000"},{"name":"保亭黎族苗族自治县","value":"469029","parent":"460000"},{"name":"琼中黎族苗族自治县","value":"469030","parent":"460000"},{"name":"秀英区","value":"460105","parent":"460100"},{"name":"龙华区","value":"460106","parent":"460100"},{"name":"琼山区","value":"460107","parent":"460100"},{"name":"美兰区","value":"460108","parent":"460100"},{"name":"海棠区","value":"460202","parent":"460200"},{"name":"吉阳区","value":"460203","parent":"460200"},{"name":"天涯区","value":"460204","parent":"460200"},{"name":"崖州区","value":"460205","parent":"460200"},{"name":"西沙群岛","value":"460321","parent":"460300"},{"name":"南沙群岛","value":"460322","parent":"460300"},{"name":"中沙群岛的岛礁及其海域","value":"460323","parent":"460300"},{"name":"市辖区","value":"500100","parent":"500000"},{"name":"万州区","value":"500101","parent":"500100"},{"name":"涪陵区","value":"500102","parent":"500100"},{"name":"渝中区","value":"500103","parent":"500100"},{"name":"大渡口区","value":"500104","parent":"500100"},{"name":"江北区","value":"500105","parent":"500100"},{"name":"沙坪坝区","value":"500106","parent":"500100"},{"name":"九龙坡区","value":"500107","parent":"500100"},{"name":"南岸区","value":"500108","parent":"500100"},{"name":"北碚区","value":"500109","parent":"500100"},{"name":"綦江区","value":"500110","parent":"500100"},{"name":"大足区","value":"500111","parent":"500100"},{"name":"渝北区","value":"500112","parent":"500100"},{"name":"巴南区","value":"500113","parent":"500100"},{"name":"黔江区","value":"500114","parent":"500100"},{"name":"长寿区","value":"500115","parent":"500100"},{"name":"江津区","value":"500116","parent":"500100"},{"name":"合川区","value":"500117","parent":"500100"},{"name":"永川区","value":"500118","parent":"500100"},{"name":"南川区","value":"500119","parent":"500100"},{"name":"璧山区","value":"500120","parent":"500100"},{"name":"铜梁区","value":"500151","parent":"500100"},{"name":"潼南区","value":"500152","parent":"500100"},{"name":"荣昌区","value":"500153","parent":"500100"},{"name":"梁平县","value":"500228","parent":"500100"},{"name":"城口县","value":"500229","parent":"500100"},{"name":"丰都县","value":"500230","parent":"500100"},{"name":"垫江县","value":"500231","parent":"500100"},{"name":"武隆县","value":"500232","parent":"500100"},{"name":"忠县","value":"500233","parent":"500100"},{"name":"开县","value":"500234","parent":"500100"},{"name":"云阳县","value":"500235","parent":"500100"},{"name":"奉节县","value":"500236","parent":"500100"},{"name":"巫山县","value":"500237","parent":"500100"},{"name":"巫溪县","value":"500238","parent":"500100"},{"name":"石柱土家族自治县","value":"500240","parent":"500100"},{"name":"秀山土家族苗族自治县","value":"500241","parent":"500100"},{"name":"酉阳土家族苗族自治县","value":"500242","parent":"500100"},{"name":"彭水苗族土家族自治县","value":"500243","parent":"500100"},{"name":"成都市","value":"510100","parent":"510000"},{"name":"自贡市","value":"510300","parent":"510000"},{"name":"攀枝花市","value":"510400","parent":"510000"},{"name":"泸州市","value":"510500","parent":"510000"},{"name":"德阳市","value":"510600","parent":"510000"},{"name":"绵阳市","value":"510700","parent":"510000"},{"name":"广元市","value":"510800","parent":"510000"},{"name":"遂宁市","value":"510900","parent":"510000"},{"name":"内江市","value":"511000","parent":"510000"},{"name":"乐山市","value":"511100","parent":"510000"},{"name":"南充市","value":"511300","parent":"510000"},{"name":"眉山市","value":"511400","parent":"510000"},{"name":"宜宾市","value":"511500","parent":"510000"},{"name":"广安市","value":"511600","parent":"510000"},{"name":"达州市","value":"511700","parent":"510000"},{"name":"雅安市","value":"511800","parent":"510000"},{"name":"巴中市","value":"511900","parent":"510000"},{"name":"资阳市","value":"512000","parent":"510000"},{"name":"阿坝藏族羌族自治州","value":"513200","parent":"510000"},{"name":"甘孜藏族自治州","value":"513300","parent":"510000"},{"name":"凉山彝族自治州","value":"513400","parent":"510000"},{"name":"锦江区","value":"510104","parent":"510100"},{"name":"青羊区","value":"510105","parent":"510100"},{"name":"金牛区","value":"510106","parent":"510100"},{"name":"武侯区","value":"510107","parent":"510100"},{"name":"成华区","value":"510108","parent":"510100"},{"name":"龙泉驿区","value":"510112","parent":"510100"},{"name":"青白江区","value":"510113","parent":"510100"},{"name":"新都区","value":"510114","parent":"510100"},{"name":"温江区","value":"510115","parent":"510100"},{"name":"金堂县","value":"510121","parent":"510100"},{"name":"双流县","value":"510122","parent":"510100"},{"name":"郫县","value":"510124","parent":"510100"},{"name":"大邑县","value":"510129","parent":"510100"},{"name":"蒲江县","value":"510131","parent":"510100"},{"name":"新津县","value":"510132","parent":"510100"},{"name":"都江堰市","value":"510181","parent":"510100"},{"name":"彭州市","value":"510182","parent":"510100"},{"name":"邛崃市","value":"510183","parent":"510100"},{"name":"崇州市","value":"510184","parent":"510100"},{"name":"自流井区","value":"510302","parent":"510300"},{"name":"贡井区","value":"510303","parent":"510300"},{"name":"大安区","value":"510304","parent":"510300"},{"name":"沿滩区","value":"510311","parent":"510300"},{"name":"荣县","value":"510321","parent":"510300"},{"name":"富顺县","value":"510322","parent":"510300"},{"name":"东区","value":"510402","parent":"510400"},{"name":"西区","value":"510403","parent":"510400"},{"name":"仁和区","value":"510411","parent":"510400"},{"name":"米易县","value":"510421","parent":"510400"},{"name":"盐边县","value":"510422","parent":"510400"},{"name":"江阳区","value":"510502","parent":"510500"},{"name":"纳溪区","value":"510503","parent":"510500"},{"name":"龙马潭区","value":"510504","parent":"510500"},{"name":"泸县","value":"510521","parent":"510500"},{"name":"合江县","value":"510522","parent":"510500"},{"name":"叙永县","value":"510524","parent":"510500"},{"name":"古蔺县","value":"510525","parent":"510500"},{"name":"旌阳区","value":"510603","parent":"510600"},{"name":"中江县","value":"510623","parent":"510600"},{"name":"罗江县","value":"510626","parent":"510600"},{"name":"广汉市","value":"510681","parent":"510600"},{"name":"什邡市","value":"510682","parent":"510600"},{"name":"绵竹市","value":"510683","parent":"510600"},{"name":"涪城区","value":"510703","parent":"510700"},{"name":"游仙区","value":"510704","parent":"510700"},{"name":"三台县","value":"510722","parent":"510700"},{"name":"盐亭县","value":"510723","parent":"510700"},{"name":"安县","value":"510724","parent":"510700"},{"name":"梓潼县","value":"510725","parent":"510700"},{"name":"北川羌族自治县","value":"510726","parent":"510700"},{"name":"平武县","value":"510727","parent":"510700"},{"name":"江油市","value":"510781","parent":"510700"},{"name":"利州区","value":"510802","parent":"510800"},{"name":"昭化区","value":"510811","parent":"510800"},{"name":"朝天区","value":"510812","parent":"510800"},{"name":"旺苍县","value":"510821","parent":"510800"},{"name":"青川县","value":"510822","parent":"510800"},{"name":"剑阁县","value":"510823","parent":"510800"},{"name":"苍溪县","value":"510824","parent":"510800"},{"name":"船山区","value":"510903","parent":"510900"},{"name":"安居区","value":"510904","parent":"510900"},{"name":"蓬溪县","value":"510921","parent":"510900"},{"name":"射洪县","value":"510922","parent":"510900"},{"name":"大英县","value":"510923","parent":"510900"},{"name":"市中区","value":"511002","parent":"511000"},{"name":"东兴区","value":"511011","parent":"511000"},{"name":"威远县","value":"511024","parent":"511000"},{"name":"资中县","value":"511025","parent":"511000"},{"name":"隆昌县","value":"511028","parent":"511000"},{"name":"市中区","value":"511102","parent":"511100"},{"name":"沙湾区","value":"511111","parent":"511100"},{"name":"五通桥区","value":"511112","parent":"511100"},{"name":"金口河区","value":"511113","parent":"511100"},{"name":"犍为县","value":"511123","parent":"511100"},{"name":"井研县","value":"511124","parent":"511100"},{"name":"夹江县","value":"511126","parent":"511100"},{"name":"沐川县","value":"511129","parent":"511100"},{"name":"峨边彝族自治县","value":"511132","parent":"511100"},{"name":"马边彝族自治县","value":"511133","parent":"511100"},{"name":"峨眉山市","value":"511181","parent":"511100"},{"name":"顺庆区","value":"511302","parent":"511300"},{"name":"高坪区","value":"511303","parent":"511300"},{"name":"嘉陵区","value":"511304","parent":"511300"},{"name":"南部县","value":"511321","parent":"511300"},{"name":"营山县","value":"511322","parent":"511300"},{"name":"蓬安县","value":"511323","parent":"511300"},{"name":"仪陇县","value":"511324","parent":"511300"},{"name":"西充县","value":"511325","parent":"511300"},{"name":"阆中市","value":"511381","parent":"511300"},{"name":"东坡区","value":"511402","parent":"511400"},{"name":"彭山区","value":"511403","parent":"511400"},{"name":"仁寿县","value":"511421","parent":"511400"},{"name":"洪雅县","value":"511423","parent":"511400"},{"name":"丹棱县","value":"511424","parent":"511400"},{"name":"青神县","value":"511425","parent":"511400"},{"name":"翠屏区","value":"511502","parent":"511500"},{"name":"南溪区","value":"511503","parent":"511500"},{"name":"宜宾县","value":"511521","parent":"511500"},{"name":"江安县","value":"511523","parent":"511500"},{"name":"长宁县","value":"511524","parent":"511500"},{"name":"高县","value":"511525","parent":"511500"},{"name":"珙县","value":"511526","parent":"511500"},{"name":"筠连县","value":"511527","parent":"511500"},{"name":"兴文县","value":"511528","parent":"511500"},{"name":"屏山县","value":"511529","parent":"511500"},{"name":"广安区","value":"511602","parent":"511600"},{"name":"前锋区","value":"511603","parent":"511600"},{"name":"岳池县","value":"511621","parent":"511600"},{"name":"武胜县","value":"511622","parent":"511600"},{"name":"邻水县","value":"511623","parent":"511600"},{"name":"华蓥市","value":"511681","parent":"511600"},{"name":"通川区","value":"511702","parent":"511700"},{"name":"达川区","value":"511703","parent":"511700"},{"name":"宣汉县","value":"511722","parent":"511700"},{"name":"开江县","value":"511723","parent":"511700"},{"name":"大竹县","value":"511724","parent":"511700"},{"name":"渠县","value":"511725","parent":"511700"},{"name":"万源市","value":"511781","parent":"511700"},{"name":"雨城区","value":"511802","parent":"511800"},{"name":"名山区","value":"511803","parent":"511800"},{"name":"荥经县","value":"511822","parent":"511800"},{"name":"汉源县","value":"511823","parent":"511800"},{"name":"石棉县","value":"511824","parent":"511800"},{"name":"天全县","value":"511825","parent":"511800"},{"name":"芦山县","value":"511826","parent":"511800"},{"name":"宝兴县","value":"511827","parent":"511800"},{"name":"巴州区","value":"511902","parent":"511900"},{"name":"恩阳区","value":"511903","parent":"511900"},{"name":"通江县","value":"511921","parent":"511900"},{"name":"南江县","value":"511922","parent":"511900"},{"name":"平昌县","value":"511923","parent":"511900"},{"name":"雁江区","value":"512002","parent":"512000"},{"name":"安岳县","value":"512021","parent":"512000"},{"name":"乐至县","value":"512022","parent":"512000"},{"name":"简阳市","value":"512081","parent":"512000"},{"name":"汶川县","value":"513221","parent":"513200"},{"name":"理县","value":"513222","parent":"513200"},{"name":"茂县","value":"513223","parent":"513200"},{"name":"松潘县","value":"513224","parent":"513200"},{"name":"九寨沟县","value":"513225","parent":"513200"},{"name":"金川县","value":"513226","parent":"513200"},{"name":"小金县","value":"513227","parent":"513200"},{"name":"黑水县","value":"513228","parent":"513200"},{"name":"马尔康县","value":"513229","parent":"513200"},{"name":"壤塘县","value":"513230","parent":"513200"},{"name":"阿坝县","value":"513231","parent":"513200"},{"name":"若尔盖县","value":"513232","parent":"513200"},{"name":"红原县","value":"513233","parent":"513200"},{"name":"康定市","value":"513301","parent":"513300"},{"name":"泸定县","value":"513322","parent":"513300"},{"name":"丹巴县","value":"513323","parent":"513300"},{"name":"九龙县","value":"513324","parent":"513300"},{"name":"雅江县","value":"513325","parent":"513300"},{"name":"道孚县","value":"513326","parent":"513300"},{"name":"炉霍县","value":"513327","parent":"513300"},{"name":"甘孜县","value":"513328","parent":"513300"},{"name":"新龙县","value":"513329","parent":"513300"},{"name":"德格县","value":"513330","parent":"513300"},{"name":"白玉县","value":"513331","parent":"513300"},{"name":"石渠县","value":"513332","parent":"513300"},{"name":"色达县","value":"513333","parent":"513300"},{"name":"理塘县","value":"513334","parent":"513300"},{"name":"巴塘县","value":"513335","parent":"513300"},{"name":"乡城县","value":"513336","parent":"513300"},{"name":"稻城县","value":"513337","parent":"513300"},{"name":"得荣县","value":"513338","parent":"513300"},{"name":"西昌市","value":"513401","parent":"513400"},{"name":"木里藏族自治县","value":"513422","parent":"513400"},{"name":"盐源县","value":"513423","parent":"513400"},{"name":"德昌县","value":"513424","parent":"513400"},{"name":"会理县","value":"513425","parent":"513400"},{"name":"会东县","value":"513426","parent":"513400"},{"name":"宁南县","value":"513427","parent":"513400"},{"name":"普格县","value":"513428","parent":"513400"},{"name":"布拖县","value":"513429","parent":"513400"},{"name":"金阳县","value":"513430","parent":"513400"},{"name":"昭觉县","value":"513431","parent":"513400"},{"name":"喜德县","value":"513432","parent":"513400"},{"name":"冕宁县","value":"513433","parent":"513400"},{"name":"越西县","value":"513434","parent":"513400"},{"name":"甘洛县","value":"513435","parent":"513400"},{"name":"美姑县","value":"513436","parent":"513400"},{"name":"雷波县","value":"513437","parent":"513400"},{"name":"贵阳市","value":"520100","parent":"520000"},{"name":"六盘水市","value":"520200","parent":"520000"},{"name":"遵义市","value":"520300","parent":"520000"},{"name":"安顺市","value":"520400","parent":"520000"},{"name":"毕节市","value":"520500","parent":"520000"},{"name":"铜仁市","value":"520600","parent":"520000"},{"name":"黔西南布依族苗族自治州","value":"522300","parent":"520000"},{"name":"黔东南苗族侗族自治州","value":"522600","parent":"520000"},{"name":"黔南布依族苗族自治州","value":"522700","parent":"520000"},{"name":"南明区","value":"520102","parent":"520100"},{"name":"云岩区","value":"520103","parent":"520100"},{"name":"花溪区","value":"520111","parent":"520100"},{"name":"乌当区","value":"520112","parent":"520100"},{"name":"白云区","value":"520113","parent":"520100"},{"name":"观山湖区","value":"520115","parent":"520100"},{"name":"开阳县","value":"520121","parent":"520100"},{"name":"息烽县","value":"520122","parent":"520100"},{"name":"修文县","value":"520123","parent":"520100"},{"name":"清镇市","value":"520181","parent":"520100"},{"name":"钟山区","value":"520201","parent":"520200"},{"name":"六枝特区","value":"520203","parent":"520200"},{"name":"水城县","value":"520221","parent":"520200"},{"name":"盘县","value":"520222","parent":"520200"},{"name":"红花岗区","value":"520302","parent":"520300"},{"name":"汇川区","value":"520303","parent":"520300"},{"name":"遵义县","value":"520321","parent":"520300"},{"name":"桐梓县","value":"520322","parent":"520300"},{"name":"绥阳县","value":"520323","parent":"520300"},{"name":"正安县","value":"520324","parent":"520300"},{"name":"道真仡佬族苗族自治县","value":"520325","parent":"520300"},{"name":"务川仡佬族苗族自治县","value":"520326","parent":"520300"},{"name":"凤冈县","value":"520327","parent":"520300"},{"name":"湄潭县","value":"520328","parent":"520300"},{"name":"余庆县","value":"520329","parent":"520300"},{"name":"习水县","value":"520330","parent":"520300"},{"name":"赤水市","value":"520381","parent":"520300"},{"name":"仁怀市","value":"520382","parent":"520300"},{"name":"西秀区","value":"520402","parent":"520400"},{"name":"平坝区","value":"520403","parent":"520400"},{"name":"普定县","value":"520422","parent":"520400"},{"name":"镇宁布依族苗族自治县","value":"520423","parent":"520400"},{"name":"关岭布依族苗族自治县","value":"520424","parent":"520400"},{"name":"紫云苗族布依族自治县","value":"520425","parent":"520400"},{"name":"七星关区","value":"520502","parent":"520500"},{"name":"大方县","value":"520521","parent":"520500"},{"name":"黔西县","value":"520522","parent":"520500"},{"name":"金沙县","value":"520523","parent":"520500"},{"name":"织金县","value":"520524","parent":"520500"},{"name":"纳雍县","value":"520525","parent":"520500"},{"name":"威宁彝族回族苗族自治县","value":"520526","parent":"520500"},{"name":"赫章县","value":"520527","parent":"520500"},{"name":"碧江区","value":"520602","parent":"520600"},{"name":"万山区","value":"520603","parent":"520600"},{"name":"江口县","value":"520621","parent":"520600"},{"name":"玉屏侗族自治县","value":"520622","parent":"520600"},{"name":"石阡县","value":"520623","parent":"520600"},{"name":"思南县","value":"520624","parent":"520600"},{"name":"印江土家族苗族自治县","value":"520625","parent":"520600"},{"name":"德江县","value":"520626","parent":"520600"},{"name":"沿河土家族自治县","value":"520627","parent":"520600"},{"name":"松桃苗族自治县","value":"520628","parent":"520600"},{"name":"兴义市","value":"522301","parent":"522300"},{"name":"兴仁县","value":"522322","parent":"522300"},{"name":"普安县","value":"522323","parent":"522300"},{"name":"晴隆县","value":"522324","parent":"522300"},{"name":"贞丰县","value":"522325","parent":"522300"},{"name":"望谟县","value":"522326","parent":"522300"},{"name":"册亨县","value":"522327","parent":"522300"},{"name":"安龙县","value":"522328","parent":"522300"},{"name":"凯里市","value":"522601","parent":"522600"},{"name":"黄平县","value":"522622","parent":"522600"},{"name":"施秉县","value":"522623","parent":"522600"},{"name":"三穗县","value":"522624","parent":"522600"},{"name":"镇远县","value":"522625","parent":"522600"},{"name":"岑巩县","value":"522626","parent":"522600"},{"name":"天柱县","value":"522627","parent":"522600"},{"name":"锦屏县","value":"522628","parent":"522600"},{"name":"剑河县","value":"522629","parent":"522600"},{"name":"台江县","value":"522630","parent":"522600"},{"name":"黎平县","value":"522631","parent":"522600"},{"name":"榕江县","value":"522632","parent":"522600"},{"name":"从江县","value":"522633","parent":"522600"},{"name":"雷山县","value":"522634","parent":"522600"},{"name":"麻江县","value":"522635","parent":"522600"},{"name":"丹寨县","value":"522636","parent":"522600"},{"name":"都匀市","value":"522701","parent":"522700"},{"name":"福泉市","value":"522702","parent":"522700"},{"name":"荔波县","value":"522722","parent":"522700"},{"name":"贵定县","value":"522723","parent":"522700"},{"name":"瓮安县","value":"522725","parent":"522700"},{"name":"独山县","value":"522726","parent":"522700"},{"name":"平塘县","value":"522727","parent":"522700"},{"name":"罗甸县","value":"522728","parent":"522700"},{"name":"长顺县","value":"522729","parent":"522700"},{"name":"龙里县","value":"522730","parent":"522700"},{"name":"惠水县","value":"522731","parent":"522700"},{"name":"三都水族自治县","value":"522732","parent":"522700"},{"name":"昆明市","value":"530100","parent":"530000"},{"name":"曲靖市","value":"530300","parent":"530000"},{"name":"玉溪市","value":"530400","parent":"530000"},{"name":"保山市","value":"530500","parent":"530000"},{"name":"昭通市","value":"530600","parent":"530000"},{"name":"丽江市","value":"530700","parent":"530000"},{"name":"普洱市","value":"530800","parent":"530000"},{"name":"临沧市","value":"530900","parent":"530000"},{"name":"楚雄彝族自治州","value":"532300","parent":"530000"},{"name":"红河哈尼族彝族自治州","value":"532500","parent":"530000"},{"name":"文山壮族苗族自治州","value":"532600","parent":"530000"},{"name":"西双版纳傣族自治州","value":"532800","parent":"530000"},{"name":"大理白族自治州","value":"532900","parent":"530000"},{"name":"德宏傣族景颇族自治州","value":"533100","parent":"530000"},{"name":"怒江傈僳族自治州","value":"533300","parent":"530000"},{"name":"迪庆藏族自治州","value":"533400","parent":"530000"},{"name":"五华区","value":"530102","parent":"530100"},{"name":"盘龙区","value":"530103","parent":"530100"},{"name":"官渡区","value":"530111","parent":"530100"},{"name":"西山区","value":"530112","parent":"530100"},{"name":"东川区","value":"530113","parent":"530100"},{"name":"呈贡区","value":"530114","parent":"530100"},{"name":"晋宁县","value":"530122","parent":"530100"},{"name":"富民县","value":"530124","parent":"530100"},{"name":"宜良县","value":"530125","parent":"530100"},{"name":"石林彝族自治县","value":"530126","parent":"530100"},{"name":"嵩明县","value":"530127","parent":"530100"},{"name":"禄劝彝族苗族自治县","value":"530128","parent":"530100"},{"name":"寻甸回族彝族自治县","value":"530129","parent":"530100"},{"name":"安宁市","value":"530181","parent":"530100"},{"name":"麒麟区","value":"530302","parent":"530300"},{"name":"马龙县","value":"530321","parent":"530300"},{"name":"陆良县","value":"530322","parent":"530300"},{"name":"师宗县","value":"530323","parent":"530300"},{"name":"罗平县","value":"530324","parent":"530300"},{"name":"富源县","value":"530325","parent":"530300"},{"name":"会泽县","value":"530326","parent":"530300"},{"name":"沾益县","value":"530328","parent":"530300"},{"name":"宣威市","value":"530381","parent":"530300"},{"name":"红塔区","value":"530402","parent":"530400"},{"name":"江川县","value":"530421","parent":"530400"},{"name":"澄江县","value":"530422","parent":"530400"},{"name":"通海县","value":"530423","parent":"530400"},{"name":"华宁县","value":"530424","parent":"530400"},{"name":"易门县","value":"530425","parent":"530400"},{"name":"峨山彝族自治县","value":"530426","parent":"530400"},{"name":"新平彝族傣族自治县","value":"530427","parent":"530400"},{"name":"元江哈尼族彝族傣族自治县","value":"530428","parent":"530400"},{"name":"隆阳区","value":"530502","parent":"530500"},{"name":"施甸县","value":"530521","parent":"530500"},{"name":"龙陵县","value":"530523","parent":"530500"},{"name":"昌宁县","value":"530524","parent":"530500"},{"name":"腾冲市","value":"530581","parent":"530500"},{"name":"昭阳区","value":"530602","parent":"530600"},{"name":"鲁甸县","value":"530621","parent":"530600"},{"name":"巧家县","value":"530622","parent":"530600"},{"name":"盐津县","value":"530623","parent":"530600"},{"name":"大关县","value":"530624","parent":"530600"},{"name":"永善县","value":"530625","parent":"530600"},{"name":"绥江县","value":"530626","parent":"530600"},{"name":"镇雄县","value":"530627","parent":"530600"},{"name":"彝良县","value":"530628","parent":"530600"},{"name":"威信县","value":"530629","parent":"530600"},{"name":"水富县","value":"530630","parent":"530600"},{"name":"古城区","value":"530702","parent":"530700"},{"name":"玉龙纳西族自治县","value":"530721","parent":"530700"},{"name":"永胜县","value":"530722","parent":"530700"},{"name":"华坪县","value":"530723","parent":"530700"},{"name":"宁蒗彝族自治县","value":"530724","parent":"530700"},{"name":"思茅区","value":"530802","parent":"530800"},{"name":"宁洱哈尼族彝族自治县","value":"530821","parent":"530800"},{"name":"墨江哈尼族自治县","value":"530822","parent":"530800"},{"name":"景东彝族自治县","value":"530823","parent":"530800"},{"name":"景谷傣族彝族自治县","value":"530824","parent":"530800"},{"name":"镇沅彝族哈尼族拉祜族自治县","value":"530825","parent":"530800"},{"name":"江城哈尼族彝族自治县","value":"530826","parent":"530800"},{"name":"孟连傣族拉祜族佤族自治县","value":"530827","parent":"530800"},{"name":"澜沧拉祜族自治县","value":"530828","parent":"530800"},{"name":"西盟佤族自治县","value":"530829","parent":"530800"},{"name":"临翔区","value":"530902","parent":"530900"},{"name":"凤庆县","value":"530921","parent":"530900"},{"name":"云县","value":"530922","parent":"530900"},{"name":"永德县","value":"530923","parent":"530900"},{"name":"镇康县","value":"530924","parent":"530900"},{"name":"双江拉祜族佤族布朗族傣族自治县","value":"530925","parent":"530900"},{"name":"耿马傣族佤族自治县","value":"530926","parent":"530900"},{"name":"沧源佤族自治县","value":"530927","parent":"530900"},{"name":"楚雄市","value":"532301","parent":"532300"},{"name":"双柏县","value":"532322","parent":"532300"},{"name":"牟定县","value":"532323","parent":"532300"},{"name":"南华县","value":"532324","parent":"532300"},{"name":"姚安县","value":"532325","parent":"532300"},{"name":"大姚县","value":"532326","parent":"532300"},{"name":"永仁县","value":"532327","parent":"532300"},{"name":"元谋县","value":"532328","parent":"532300"},{"name":"武定县","value":"532329","parent":"532300"},{"name":"禄丰县","value":"532331","parent":"532300"},{"name":"个旧市","value":"532501","parent":"532500"},{"name":"开远市","value":"532502","parent":"532500"},{"name":"蒙自市","value":"532503","parent":"532500"},{"name":"弥勒市","value":"532504","parent":"532500"},{"name":"屏边苗族自治县","value":"532523","parent":"532500"},{"name":"建水县","value":"532524","parent":"532500"},{"name":"石屏县","value":"532525","parent":"532500"},{"name":"泸西县","value":"532527","parent":"532500"},{"name":"元阳县","value":"532528","parent":"532500"},{"name":"红河县","value":"532529","parent":"532500"},{"name":"金平苗族瑶族傣族自治县","value":"532530","parent":"532500"},{"name":"绿春县","value":"532531","parent":"532500"},{"name":"河口瑶族自治县","value":"532532","parent":"532500"},{"name":"文山市","value":"532601","parent":"532600"},{"name":"砚山县","value":"532622","parent":"532600"},{"name":"西畴县","value":"532623","parent":"532600"},{"name":"麻栗坡县","value":"532624","parent":"532600"},{"name":"马关县","value":"532625","parent":"532600"},{"name":"丘北县","value":"532626","parent":"532600"},{"name":"广南县","value":"532627","parent":"532600"},{"name":"富宁县","value":"532628","parent":"532600"},{"name":"景洪市","value":"532801","parent":"532800"},{"name":"勐海县","value":"532822","parent":"532800"},{"name":"勐腊县","value":"532823","parent":"532800"},{"name":"大理市","value":"532901","parent":"532900"},{"name":"漾濞彝族自治县","value":"532922","parent":"532900"},{"name":"祥云县","value":"532923","parent":"532900"},{"name":"宾川县","value":"532924","parent":"532900"},{"name":"弥渡县","value":"532925","parent":"532900"},{"name":"南涧彝族自治县","value":"532926","parent":"532900"},{"name":"巍山彝族回族自治县","value":"532927","parent":"532900"},{"name":"永平县","value":"532928","parent":"532900"},{"name":"云龙县","value":"532929","parent":"532900"},{"name":"洱源县","value":"532930","parent":"532900"},{"name":"剑川县","value":"532931","parent":"532900"},{"name":"鹤庆县","value":"532932","parent":"532900"},{"name":"瑞丽市","value":"533102","parent":"533100"},{"name":"芒市","value":"533103","parent":"533100"},{"name":"梁河县","value":"533122","parent":"533100"},{"name":"盈江县","value":"533123","parent":"533100"},{"name":"陇川县","value":"533124","parent":"533100"},{"name":"泸水县","value":"533321","parent":"533300"},{"name":"福贡县","value":"533323","parent":"533300"},{"name":"贡山独龙族怒族自治县","value":"533324","parent":"533300"},{"name":"兰坪白族普米族自治县","value":"533325","parent":"533300"},{"name":"香格里拉市","value":"533401","parent":"533400"},{"name":"德钦县","value":"533422","parent":"533400"},{"name":"维西傈僳族自治县","value":"533423","parent":"533400"},{"name":"拉萨市","value":"540100","parent":"540000"},{"name":"日喀则市","value":"540200","parent":"540000"},{"name":"昌都市","value":"540300","parent":"540000"},{"name":"林芝市","value":"540400","parent":"540000"},{"name":"山南地区","value":"542200","parent":"540000"},{"name":"那曲地区","value":"542400","parent":"540000"},{"name":"阿里地区","value":"542500","parent":"540000"},{"name":"城关区","value":"540102","parent":"540100"},{"name":"林周县","value":"540121","parent":"540100"},{"name":"当雄县","value":"540122","parent":"540100"},{"name":"尼木县","value":"540123","parent":"540100"},{"name":"曲水县","value":"540124","parent":"540100"},{"name":"堆龙德庆县","value":"540125","parent":"540100"},{"name":"达孜县","value":"540126","parent":"540100"},{"name":"墨竹工卡县","value":"540127","parent":"540100"},{"name":"桑珠孜区","value":"540202","parent":"540200"},{"name":"南木林县","value":"540221","parent":"540200"},{"name":"江孜县","value":"540222","parent":"540200"},{"name":"定日县","value":"540223","parent":"540200"},{"name":"萨迦县","value":"540224","parent":"540200"},{"name":"拉孜县","value":"540225","parent":"540200"},{"name":"昂仁县","value":"540226","parent":"540200"},{"name":"谢通门县","value":"540227","parent":"540200"},{"name":"白朗县","value":"540228","parent":"540200"},{"name":"仁布县","value":"540229","parent":"540200"},{"name":"康马县","value":"540230","parent":"540200"},{"name":"定结县","value":"540231","parent":"540200"},{"name":"仲巴县","value":"540232","parent":"540200"},{"name":"亚东县","value":"540233","parent":"540200"},{"name":"吉隆县","value":"540234","parent":"540200"},{"name":"聂拉木县","value":"540235","parent":"540200"},{"name":"萨嘎县","value":"540236","parent":"540200"},{"name":"岗巴县","value":"540237","parent":"540200"},{"name":"卡若区","value":"540302","parent":"540300"},{"name":"江达县","value":"540321","parent":"540300"},{"name":"贡觉县","value":"540322","parent":"540300"},{"name":"类乌齐县","value":"540323","parent":"540300"},{"name":"丁青县","value":"540324","parent":"540300"},{"name":"察雅县","value":"540325","parent":"540300"},{"name":"八宿县","value":"540326","parent":"540300"},{"name":"左贡县","value":"540327","parent":"540300"},{"name":"芒康县","value":"540328","parent":"540300"},{"name":"洛隆县","value":"540329","parent":"540300"},{"name":"边坝县","value":"540330","parent":"540300"},{"name":"巴宜区","value":"540402","parent":"540400"},{"name":"工布江达县","value":"540421","parent":"540400"},{"name":"米林县","value":"540422","parent":"540400"},{"name":"墨脱县","value":"540423","parent":"540400"},{"name":"波密县","value":"540424","parent":"540400"},{"name":"察隅县","value":"540425","parent":"540400"},{"name":"朗县","value":"540426","parent":"540400"},{"name":"乃东县","value":"542221","parent":"542200"},{"name":"扎囊县","value":"542222","parent":"542200"},{"name":"贡嘎县","value":"542223","parent":"542200"},{"name":"桑日县","value":"542224","parent":"542200"},{"name":"琼结县","value":"542225","parent":"542200"},{"name":"曲松县","value":"542226","parent":"542200"},{"name":"措美县","value":"542227","parent":"542200"},{"name":"洛扎县","value":"542228","parent":"542200"},{"name":"加查县","value":"542229","parent":"542200"},{"name":"隆子县","value":"542231","parent":"542200"},{"name":"错那县","value":"542232","parent":"542200"},{"name":"浪卡子县","value":"542233","parent":"542200"},{"name":"那曲县","value":"542421","parent":"542400"},{"name":"嘉黎县","value":"542422","parent":"542400"},{"name":"比如县","value":"542423","parent":"542400"},{"name":"聂荣县","value":"542424","parent":"542400"},{"name":"安多县","value":"542425","parent":"542400"},{"name":"申扎县","value":"542426","parent":"542400"},{"name":"索县","value":"542427","parent":"542400"},{"name":"班戈县","value":"542428","parent":"542400"},{"name":"巴青县","value":"542429","parent":"542400"},{"name":"尼玛县","value":"542430","parent":"542400"},{"name":"双湖县","value":"542431","parent":"542400"},{"name":"普兰县","value":"542521","parent":"542500"},{"name":"札达县","value":"542522","parent":"542500"},{"name":"噶尔县","value":"542523","parent":"542500"},{"name":"日土县","value":"542524","parent":"542500"},{"name":"革吉县","value":"542525","parent":"542500"},{"name":"改则县","value":"542526","parent":"542500"},{"name":"措勤县","value":"542527","parent":"542500"},{"name":"西安市","value":"610100","parent":"610000"},{"name":"铜川市","value":"610200","parent":"610000"},{"name":"宝鸡市","value":"610300","parent":"610000"},{"name":"咸阳市","value":"610400","parent":"610000"},{"name":"渭南市","value":"610500","parent":"610000"},{"name":"延安市","value":"610600","parent":"610000"},{"name":"汉中市","value":"610700","parent":"610000"},{"name":"榆林市","value":"610800","parent":"610000"},{"name":"安康市","value":"610900","parent":"610000"},{"name":"商洛市","value":"611000","parent":"610000"},{"name":"新城区","value":"610102","parent":"610100"},{"name":"碑林区","value":"610103","parent":"610100"},{"name":"莲湖区","value":"610104","parent":"610100"},{"name":"灞桥区","value":"610111","parent":"610100"},{"name":"未央区","value":"610112","parent":"610100"},{"name":"雁塔区","value":"610113","parent":"610100"},{"name":"阎良区","value":"610114","parent":"610100"},{"name":"临潼区","value":"610115","parent":"610100"},{"name":"长安区","value":"610116","parent":"610100"},{"name":"高陵区","value":"610117","parent":"610100"},{"name":"蓝田县","value":"610122","parent":"610100"},{"name":"周至县","value":"610124","parent":"610100"},{"name":"户县","value":"610125","parent":"610100"},{"name":"王益区","value":"610202","parent":"610200"},{"name":"印台区","value":"610203","parent":"610200"},{"name":"耀州区","value":"610204","parent":"610200"},{"name":"宜君县","value":"610222","parent":"610200"},{"name":"渭滨区","value":"610302","parent":"610300"},{"name":"金台区","value":"610303","parent":"610300"},{"name":"陈仓区","value":"610304","parent":"610300"},{"name":"凤翔县","value":"610322","parent":"610300"},{"name":"岐山县","value":"610323","parent":"610300"},{"name":"扶风县","value":"610324","parent":"610300"},{"name":"眉县","value":"610326","parent":"610300"},{"name":"陇县","value":"610327","parent":"610300"},{"name":"千阳县","value":"610328","parent":"610300"},{"name":"麟游县","value":"610329","parent":"610300"},{"name":"凤县","value":"610330","parent":"610300"},{"name":"太白县","value":"610331","parent":"610300"},{"name":"秦都区","value":"610402","parent":"610400"},{"name":"杨陵区","value":"610403","parent":"610400"},{"name":"渭城区","value":"610404","parent":"610400"},{"name":"三原县","value":"610422","parent":"610400"},{"name":"泾阳县","value":"610423","parent":"610400"},{"name":"乾县","value":"610424","parent":"610400"},{"name":"礼泉县","value":"610425","parent":"610400"},{"name":"永寿县","value":"610426","parent":"610400"},{"name":"彬县","value":"610427","parent":"610400"},{"name":"长武县","value":"610428","parent":"610400"},{"name":"旬邑县","value":"610429","parent":"610400"},{"name":"淳化县","value":"610430","parent":"610400"},{"name":"武功县","value":"610431","parent":"610400"},{"name":"兴平市","value":"610481","parent":"610400"},{"name":"临渭区","value":"610502","parent":"610500"},{"name":"华县","value":"610521","parent":"610500"},{"name":"潼关县","value":"610522","parent":"610500"},{"name":"大荔县","value":"610523","parent":"610500"},{"name":"合阳县","value":"610524","parent":"610500"},{"name":"澄城县","value":"610525","parent":"610500"},{"name":"蒲城县","value":"610526","parent":"610500"},{"name":"白水县","value":"610527","parent":"610500"},{"name":"富平县","value":"610528","parent":"610500"},{"name":"韩城市","value":"610581","parent":"610500"},{"name":"华阴市","value":"610582","parent":"610500"},{"name":"宝塔区","value":"610602","parent":"610600"},{"name":"延长县","value":"610621","parent":"610600"},{"name":"延川县","value":"610622","parent":"610600"},{"name":"子长县","value":"610623","parent":"610600"},{"name":"安塞县","value":"610624","parent":"610600"},{"name":"志丹县","value":"610625","parent":"610600"},{"name":"吴起县","value":"610626","parent":"610600"},{"name":"甘泉县","value":"610627","parent":"610600"},{"name":"富县","value":"610628","parent":"610600"},{"name":"洛川县","value":"610629","parent":"610600"},{"name":"宜川县","value":"610630","parent":"610600"},{"name":"黄龙县","value":"610631","parent":"610600"},{"name":"黄陵县","value":"610632","parent":"610600"},{"name":"汉台区","value":"610702","parent":"610700"},{"name":"南郑县","value":"610721","parent":"610700"},{"name":"城固县","value":"610722","parent":"610700"},{"name":"洋县","value":"610723","parent":"610700"},{"name":"西乡县","value":"610724","parent":"610700"},{"name":"勉县","value":"610725","parent":"610700"},{"name":"宁强县","value":"610726","parent":"610700"},{"name":"略阳县","value":"610727","parent":"610700"},{"name":"镇巴县","value":"610728","parent":"610700"},{"name":"留坝县","value":"610729","parent":"610700"},{"name":"佛坪县","value":"610730","parent":"610700"},{"name":"榆阳区","value":"610802","parent":"610800"},{"name":"神木县","value":"610821","parent":"610800"},{"name":"府谷县","value":"610822","parent":"610800"},{"name":"横山县","value":"610823","parent":"610800"},{"name":"靖边县","value":"610824","parent":"610800"},{"name":"定边县","value":"610825","parent":"610800"},{"name":"绥德县","value":"610826","parent":"610800"},{"name":"米脂县","value":"610827","parent":"610800"},{"name":"佳县","value":"610828","parent":"610800"},{"name":"吴堡县","value":"610829","parent":"610800"},{"name":"清涧县","value":"610830","parent":"610800"},{"name":"子洲县","value":"610831","parent":"610800"},{"name":"汉滨区","value":"610902","parent":"610900"},{"name":"汉阴县","value":"610921","parent":"610900"},{"name":"石泉县","value":"610922","parent":"610900"},{"name":"宁陕县","value":"610923","parent":"610900"},{"name":"紫阳县","value":"610924","parent":"610900"},{"name":"岚皋县","value":"610925","parent":"610900"},{"name":"平利县","value":"610926","parent":"610900"},{"name":"镇坪县","value":"610927","parent":"610900"},{"name":"旬阳县","value":"610928","parent":"610900"},{"name":"白河县","value":"610929","parent":"610900"},{"name":"商州区","value":"611002","parent":"611000"},{"name":"洛南县","value":"611021","parent":"611000"},{"name":"丹凤县","value":"611022","parent":"611000"},{"name":"商南县","value":"611023","parent":"611000"},{"name":"山阳县","value":"611024","parent":"611000"},{"name":"镇安县","value":"611025","parent":"611000"},{"name":"柞水县","value":"611026","parent":"611000"},{"name":"兰州市","value":"620100","parent":"620000"},{"name":"嘉峪关市","value":"620200","parent":"620000"},{"name":"金昌市","value":"620300","parent":"620000"},{"name":"白银市","value":"620400","parent":"620000"},{"name":"天水市","value":"620500","parent":"620000"},{"name":"武威市","value":"620600","parent":"620000"},{"name":"张掖市","value":"620700","parent":"620000"},{"name":"平凉市","value":"620800","parent":"620000"},{"name":"酒泉市","value":"620900","parent":"620000"},{"name":"庆阳市","value":"621000","parent":"620000"},{"name":"定西市","value":"621100","parent":"620000"},{"name":"陇南市","value":"621200","parent":"620000"},{"name":"临夏回族自治州","value":"622900","parent":"620000"},{"name":"甘南藏族自治州","value":"623000","parent":"620000"},{"name":"城关区","value":"620102","parent":"620100"},{"name":"七里河区","value":"620103","parent":"620100"},{"name":"西固区","value":"620104","parent":"620100"},{"name":"安宁区","value":"620105","parent":"620100"},{"name":"红古区","value":"620111","parent":"620100"},{"name":"永登县","value":"620121","parent":"620100"},{"name":"皋兰县","value":"620122","parent":"620100"},{"name":"榆中县","value":"620123","parent":"620100"},{"name":"金川区","value":"620302","parent":"620300"},{"name":"永昌县","value":"620321","parent":"620300"},{"name":"白银区","value":"620402","parent":"620400"},{"name":"平川区","value":"620403","parent":"620400"},{"name":"靖远县","value":"620421","parent":"620400"},{"name":"会宁县","value":"620422","parent":"620400"},{"name":"景泰县","value":"620423","parent":"620400"},{"name":"秦州区","value":"620502","parent":"620500"},{"name":"麦积区","value":"620503","parent":"620500"},{"name":"清水县","value":"620521","parent":"620500"},{"name":"秦安县","value":"620522","parent":"620500"},{"name":"甘谷县","value":"620523","parent":"620500"},{"name":"武山县","value":"620524","parent":"620500"},{"name":"张家川回族自治县","value":"620525","parent":"620500"},{"name":"凉州区","value":"620602","parent":"620600"},{"name":"民勤县","value":"620621","parent":"620600"},{"name":"古浪县","value":"620622","parent":"620600"},{"name":"天祝藏族自治县","value":"620623","parent":"620600"},{"name":"甘州区","value":"620702","parent":"620700"},{"name":"肃南裕固族自治县","value":"620721","parent":"620700"},{"name":"民乐县","value":"620722","parent":"620700"},{"name":"临泽县","value":"620723","parent":"620700"},{"name":"高台县","value":"620724","parent":"620700"},{"name":"山丹县","value":"620725","parent":"620700"},{"name":"崆峒区","value":"620802","parent":"620800"},{"name":"泾川县","value":"620821","parent":"620800"},{"name":"灵台县","value":"620822","parent":"620800"},{"name":"崇信县","value":"620823","parent":"620800"},{"name":"华亭县","value":"620824","parent":"620800"},{"name":"庄浪县","value":"620825","parent":"620800"},{"name":"静宁县","value":"620826","parent":"620800"},{"name":"肃州区","value":"620902","parent":"620900"},{"name":"金塔县","value":"620921","parent":"620900"},{"name":"瓜州县","value":"620922","parent":"620900"},{"name":"肃北蒙古族自治县","value":"620923","parent":"620900"},{"name":"阿克塞哈萨克族自治县","value":"620924","parent":"620900"},{"name":"玉门市","value":"620981","parent":"620900"},{"name":"敦煌市","value":"620982","parent":"620900"},{"name":"西峰区","value":"621002","parent":"621000"},{"name":"庆城县","value":"621021","parent":"621000"},{"name":"环县","value":"621022","parent":"621000"},{"name":"华池县","value":"621023","parent":"621000"},{"name":"合水县","value":"621024","parent":"621000"},{"name":"正宁县","value":"621025","parent":"621000"},{"name":"宁县","value":"621026","parent":"621000"},{"name":"镇原县","value":"621027","parent":"621000"},{"name":"安定区","value":"621102","parent":"621100"},{"name":"通渭县","value":"621121","parent":"621100"},{"name":"陇西县","value":"621122","parent":"621100"},{"name":"渭源县","value":"621123","parent":"621100"},{"name":"临洮县","value":"621124","parent":"621100"},{"name":"漳县","value":"621125","parent":"621100"},{"name":"岷县","value":"621126","parent":"621100"},{"name":"武都区","value":"621202","parent":"621200"},{"name":"成县","value":"621221","parent":"621200"},{"name":"文县","value":"621222","parent":"621200"},{"name":"宕昌县","value":"621223","parent":"621200"},{"name":"康县","value":"621224","parent":"621200"},{"name":"西和县","value":"621225","parent":"621200"},{"name":"礼县","value":"621226","parent":"621200"},{"name":"徽县","value":"621227","parent":"621200"},{"name":"两当县","value":"621228","parent":"621200"},{"name":"临夏市","value":"622901","parent":"622900"},{"name":"临夏县","value":"622921","parent":"622900"},{"name":"康乐县","value":"622922","parent":"622900"},{"name":"永靖县","value":"622923","parent":"622900"},{"name":"广河县","value":"622924","parent":"622900"},{"name":"和政县","value":"622925","parent":"622900"},{"name":"东乡族自治县","value":"622926","parent":"622900"},{"name":"积石山保安族东乡族撒拉族自治县","value":"622927","parent":"622900"},{"name":"合作市","value":"623001","parent":"623000"},{"name":"临潭县","value":"623021","parent":"623000"},{"name":"卓尼县","value":"623022","parent":"623000"},{"name":"舟曲县","value":"623023","parent":"623000"},{"name":"迭部县","value":"623024","parent":"623000"},{"name":"玛曲县","value":"623025","parent":"623000"},{"name":"碌曲县","value":"623026","parent":"623000"},{"name":"夏河县","value":"623027","parent":"623000"},{"name":"西宁市","value":"630100","parent":"630000"},{"name":"海东市","value":"630200","parent":"630000"},{"name":"海北藏族自治州","value":"632200","parent":"630000"},{"name":"黄南藏族自治州","value":"632300","parent":"630000"},{"name":"海南藏族自治州","value":"632500","parent":"630000"},{"name":"果洛藏族自治州","value":"632600","parent":"630000"},{"name":"玉树藏族自治州","value":"632700","parent":"630000"},{"name":"海西蒙古族藏族自治州","value":"632800","parent":"630000"},{"name":"城东区","value":"630102","parent":"630100"},{"name":"城中区","value":"630103","parent":"630100"},{"name":"城西区","value":"630104","parent":"630100"},{"name":"城北区","value":"630105","parent":"630100"},{"name":"大通回族土族自治县","value":"630121","parent":"630100"},{"name":"湟中县","value":"630122","parent":"630100"},{"name":"湟源县","value":"630123","parent":"630100"},{"name":"乐都区","value":"630202","parent":"630200"},{"name":"平安区","value":"630203","parent":"630200"},{"name":"民和回族土族自治县","value":"630222","parent":"630200"},{"name":"互助土族自治县","value":"630223","parent":"630200"},{"name":"化隆回族自治县","value":"630224","parent":"630200"},{"name":"循化撒拉族自治县","value":"630225","parent":"630200"},{"name":"门源回族自治县","value":"632221","parent":"632200"},{"name":"祁连县","value":"632222","parent":"632200"},{"name":"海晏县","value":"632223","parent":"632200"},{"name":"刚察县","value":"632224","parent":"632200"},{"name":"同仁县","value":"632321","parent":"632300"},{"name":"尖扎县","value":"632322","parent":"632300"},{"name":"泽库县","value":"632323","parent":"632300"},{"name":"河南蒙古族自治县","value":"632324","parent":"632300"},{"name":"共和县","value":"632521","parent":"632500"},{"name":"同德县","value":"632522","parent":"632500"},{"name":"贵德县","value":"632523","parent":"632500"},{"name":"兴海县","value":"632524","parent":"632500"},{"name":"贵南县","value":"632525","parent":"632500"},{"name":"玛沁县","value":"632621","parent":"632600"},{"name":"班玛县","value":"632622","parent":"632600"},{"name":"甘德县","value":"632623","parent":"632600"},{"name":"达日县","value":"632624","parent":"632600"},{"name":"久治县","value":"632625","parent":"632600"},{"name":"玛多县","value":"632626","parent":"632600"},{"name":"玉树市","value":"632701","parent":"632700"},{"name":"杂多县","value":"632722","parent":"632700"},{"name":"称多县","value":"632723","parent":"632700"},{"name":"治多县","value":"632724","parent":"632700"},{"name":"囊谦县","value":"632725","parent":"632700"},{"name":"曲麻莱县","value":"632726","parent":"632700"},{"name":"格尔木市","value":"632801","parent":"632800"},{"name":"德令哈市","value":"632802","parent":"632800"},{"name":"乌兰县","value":"632821","parent":"632800"},{"name":"都兰县","value":"632822","parent":"632800"},{"name":"天峻县","value":"632823","parent":"632800"},{"name":"银川市","value":"640100","parent":"640000"},{"name":"石嘴山市","value":"640200","parent":"640000"},{"name":"吴忠市","value":"640300","parent":"640000"},{"name":"固原市","value":"640400","parent":"640000"},{"name":"中卫市","value":"640500","parent":"640000"},{"name":"兴庆区","value":"640104","parent":"640100"},{"name":"西夏区","value":"640105","parent":"640100"},{"name":"金凤区","value":"640106","parent":"640100"},{"name":"永宁县","value":"640121","parent":"640100"},{"name":"贺兰县","value":"640122","parent":"640100"},{"name":"灵武市","value":"640181","parent":"640100"},{"name":"大武口区","value":"640202","parent":"640200"},{"name":"惠农区","value":"640205","parent":"640200"},{"name":"平罗县","value":"640221","parent":"640200"},{"name":"利通区","value":"640302","parent":"640300"},{"name":"红寺堡区","value":"640303","parent":"640300"},{"name":"盐池县","value":"640323","parent":"640300"},{"name":"同心县","value":"640324","parent":"640300"},{"name":"青铜峡市","value":"640381","parent":"640300"},{"name":"原州区","value":"640402","parent":"640400"},{"name":"西吉县","value":"640422","parent":"640400"},{"name":"隆德县","value":"640423","parent":"640400"},{"name":"泾源县","value":"640424","parent":"640400"},{"name":"彭阳县","value":"640425","parent":"640400"},{"name":"沙坡头区","value":"640502","parent":"640500"},{"name":"中宁县","value":"640521","parent":"640500"},{"name":"海原县","value":"640522","parent":"640500"},{"name":"乌鲁木齐市","value":"650100","parent":"650000"},{"name":"克拉玛依市","value":"650200","parent":"650000"},{"name":"吐鲁番市","value":"650400","parent":"650000"},{"name":"哈密地区","value":"652200","parent":"650000"},{"name":"昌吉回族自治州","value":"652300","parent":"650000"},{"name":"博尔塔拉蒙古自治州","value":"652700","parent":"650000"},{"name":"巴音郭楞蒙古自治州","value":"652800","parent":"650000"},{"name":"阿克苏地区","value":"652900","parent":"650000"},{"name":"克孜勒苏柯尔克孜自治州","value":"653000","parent":"650000"},{"name":"喀什地区","value":"653100","parent":"650000"},{"name":"和田地区","value":"653200","parent":"650000"},{"name":"伊犁哈萨克自治州","value":"654000","parent":"650000"},{"name":"塔城地区","value":"654200","parent":"650000"},{"name":"阿勒泰地区","value":"654300","parent":"650000"},{"name":"石河子市","value":"659001","parent":"650000"},{"name":"阿拉尔市","value":"659002","parent":"650000"},{"name":"图木舒克市","value":"659003","parent":"650000"},{"name":"五家渠市","value":"659004","parent":"650000"},{"name":"天山区","value":"650102","parent":"650100"},{"name":"沙依巴克区","value":"650103","parent":"650100"},{"name":"新市区","value":"650104","parent":"650100"},{"name":"水磨沟区","value":"650105","parent":"650100"},{"name":"头屯河区","value":"650106","parent":"650100"},{"name":"达坂城区","value":"650107","parent":"650100"},{"name":"米东区","value":"650109","parent":"650100"},{"name":"乌鲁木齐县","value":"650121","parent":"650100"},{"name":"独山子区","value":"650202","parent":"650200"},{"name":"克拉玛依区","value":"650203","parent":"650200"},{"name":"白碱滩区","value":"650204","parent":"650200"},{"name":"乌尔禾区","value":"650205","parent":"650200"},{"name":"高昌区","value":"650402","parent":"650400"},{"name":"鄯善县","value":"650421","parent":"650400"},{"name":"托克逊县","value":"650422","parent":"650400"},{"name":"哈密市","value":"652201","parent":"652200"},{"name":"巴里坤哈萨克自治县","value":"652222","parent":"652200"},{"name":"伊吾县","value":"652223","parent":"652200"},{"name":"昌吉市","value":"652301","parent":"652300"},{"name":"阜康市","value":"652302","parent":"652300"},{"name":"呼图壁县","value":"652323","parent":"652300"},{"name":"玛纳斯县","value":"652324","parent":"652300"},{"name":"奇台县","value":"652325","parent":"652300"},{"name":"吉木萨尔县","value":"652327","parent":"652300"},{"name":"木垒哈萨克自治县","value":"652328","parent":"652300"},{"name":"博乐市","value":"652701","parent":"652700"},{"name":"阿拉山口市","value":"652702","parent":"652700"},{"name":"精河县","value":"652722","parent":"652700"},{"name":"温泉县","value":"652723","parent":"652700"},{"name":"库尔勒市","value":"652801","parent":"652800"},{"name":"轮台县","value":"652822","parent":"652800"},{"name":"尉犁县","value":"652823","parent":"652800"},{"name":"若羌县","value":"652824","parent":"652800"},{"name":"且末县","value":"652825","parent":"652800"},{"name":"焉耆回族自治县","value":"652826","parent":"652800"},{"name":"和静县","value":"652827","parent":"652800"},{"name":"和硕县","value":"652828","parent":"652800"},{"name":"博湖县","value":"652829","parent":"652800"},{"name":"阿克苏市","value":"652901","parent":"652900"},{"name":"温宿县","value":"652922","parent":"652900"},{"name":"库车县","value":"652923","parent":"652900"},{"name":"沙雅县","value":"652924","parent":"652900"},{"name":"新和县","value":"652925","parent":"652900"},{"name":"拜城县","value":"652926","parent":"652900"},{"name":"乌什县","value":"652927","parent":"652900"},{"name":"阿瓦提县","value":"652928","parent":"652900"},{"name":"柯坪县","value":"652929","parent":"652900"},{"name":"阿图什市","value":"653001","parent":"653000"},{"name":"阿克陶县","value":"653022","parent":"653000"},{"name":"阿合奇县","value":"653023","parent":"653000"},{"name":"乌恰县","value":"653024","parent":"653000"},{"name":"喀什市","value":"653101","parent":"653100"},{"name":"疏附县","value":"653121","parent":"653100"},{"name":"疏勒县","value":"653122","parent":"653100"},{"name":"英吉沙县","value":"653123","parent":"653100"},{"name":"泽普县","value":"653124","parent":"653100"},{"name":"莎车县","value":"653125","parent":"653100"},{"name":"叶城县","value":"653126","parent":"653100"},{"name":"麦盖提县","value":"653127","parent":"653100"},{"name":"岳普湖县","value":"653128","parent":"653100"},{"name":"伽师县","value":"653129","parent":"653100"},{"name":"巴楚县","value":"653130","parent":"653100"},{"name":"塔什库尔干塔吉克自治县","value":"653131","parent":"653100"},{"name":"和田市","value":"653201","parent":"653200"},{"name":"和田县","value":"653221","parent":"653200"},{"name":"墨玉县","value":"653222","parent":"653200"},{"name":"皮山县","value":"653223","parent":"653200"},{"name":"洛浦县","value":"653224","parent":"653200"},{"name":"策勒县","value":"653225","parent":"653200"},{"name":"于田县","value":"653226","parent":"653200"},{"name":"民丰县","value":"653227","parent":"653200"},{"name":"伊宁市","value":"654002","parent":"654000"},{"name":"奎屯市","value":"654003","parent":"654000"},{"name":"霍尔果斯市","value":"654004","parent":"654000"},{"name":"伊宁县","value":"654021","parent":"654000"},{"name":"察布查尔锡伯自治县","value":"654022","parent":"654000"},{"name":"霍城县","value":"654023","parent":"654000"},{"name":"巩留县","value":"654024","parent":"654000"},{"name":"新源县","value":"654025","parent":"654000"},{"name":"昭苏县","value":"654026","parent":"654000"},{"name":"特克斯县","value":"654027","parent":"654000"},{"name":"尼勒克县","value":"654028","parent":"654000"},{"name":"塔城市","value":"654201","parent":"654200"},{"name":"乌苏市","value":"654202","parent":"654200"},{"name":"额敏县","value":"654221","parent":"654200"},{"name":"沙湾县","value":"654223","parent":"654200"},{"name":"托里县","value":"654224","parent":"654200"},{"name":"裕民县","value":"654225","parent":"654200"},{"name":"和布克赛尔蒙古自治县","value":"654226","parent":"654200"},{"name":"阿勒泰市","value":"654301","parent":"654300"},{"name":"布尔津县","value":"654321","parent":"654300"},{"name":"富蕴县","value":"654322","parent":"654300"},{"name":"福海县","value":"654323","parent":"654300"},{"name":"哈巴河县","value":"654324","parent":"654300"},{"name":"青河县","value":"654325","parent":"654300"},{"name":"吉木乃县","value":"654326","parent":"654300"},{"name":"中西區","value":"810001","parent":"810000"},{"name":"灣仔區","value":"810002","parent":"810000"},{"name":"東區","value":"810003","parent":"810000"},{"name":"南區","value":"810004","parent":"810000"},{"name":"油尖旺區","value":"810005","parent":"810000"},{"name":"深水埗區","value":"810006","parent":"810000"},{"name":"九龍城區","value":"810007","parent":"810000"},{"name":"黃大仙區","value":"810008","parent":"810000"},{"name":"觀塘區","value":"810009","parent":"810000"},{"name":"荃灣區","value":"810010","parent":"810000"},{"name":"屯門區","value":"810011","parent":"810000"},{"name":"元朗區","value":"810012","parent":"810000"},{"name":"北區","value":"810013","parent":"810000"},{"name":"大埔區","value":"810014","parent":"810000"},{"name":"西貢區","value":"810015","parent":"810000"},{"name":"沙田區","value":"810016","parent":"810000"},{"name":"葵青區","value":"810017","parent":"810000"},{"name":"離島區","value":"810018","parent":"810000"},{"name":"花地瑪堂區","value":"820001","parent":"820000"},{"name":"花王堂區","value":"820002","parent":"820000"},{"name":"望德堂區","value":"820003","parent":"820000"},{"name":"大堂區","value":"820004","parent":"820000"},{"name":"風順堂區","value":"820005","parent":"820000"},{"name":"嘉模堂區","value":"820006","parent":"820000"},{"name":"路氹填海區","value":"820007","parent":"820000"},{"name":"聖方濟各堂區","value":"820008","parent":"820000"},{"name":"--","value":"--","parent":"110200"},{"name":"--","value":"--","parent":"120200"},{"name":"--","value":"--","parent":"139000"},{"name":"--","value":"--","parent":"139001"},{"name":"--","value":"--","parent":"139002"},{"name":"--","value":"--","parent":"310200"},{"name":"--","value":"--","parent":"419000"},{"name":"--","value":"--","parent":"419001"},{"name":"--","value":"--","parent":"429000"},{"name":"--","value":"--","parent":"429004"},{"name":"--","value":"--","parent":"429005"},{"name":"--","value":"--","parent":"429006"},{"name":"--","value":"--","parent":"429021"},{"name":"--","value":"--","parent":"441900"},{"name":"--","value":"--","parent":"442000"},{"name":"--","value":"--","parent":"469000"},{"name":"--","value":"--","parent":"469001"},{"name":"--","value":"--","parent":"469002"},{"name":"--","value":"--","parent":"469003"},{"name":"--","value":"--","parent":"469005"},{"name":"--","value":"--","parent":"469006"},{"name":"--","value":"--","parent":"469007"},{"name":"--","value":"--","parent":"469021"},{"name":"--","value":"--","parent":"469022"},{"name":"--","value":"--","parent":"469023"},{"name":"--","value":"--","parent":"469024"},{"name":"--","value":"--","parent":"469025"},{"name":"--","value":"--","parent":"469026"},{"name":"--","value":"--","parent":"469027"},{"name":"--","value":"--","parent":"469028"},{"name":"--","value":"--","parent":"469029"},{"name":"--","value":"--","parent":"469030"},{"name":"--","value":"--","parent":"500200"},{"name":"--","value":"--","parent":"620200"},{"name":"--","value":"--","parent":"659000"},{"name":"--","value":"--","parent":"659001"},{"name":"--","value":"--","parent":"659002"},{"name":"--","value":"--","parent":"659003"},{"name":"--","value":"--","parent":"659004"}]

/***/ }),
/* 299 */
/***/ (function(module, exports) {

module.exports = [{"name":"北京市","value":"110000"},{"name":"天津市","value":"120000"},{"name":"河北省","value":"130000"},{"name":"山西省","value":"140000"},{"name":"内蒙古自治区","value":"150000"},{"name":"辽宁省","value":"210000"},{"name":"吉林省","value":"220000"},{"name":"黑龙江省","value":"230000"},{"name":"上海市","value":"310000"},{"name":"江苏省","value":"320000"},{"name":"浙江省","value":"330000"},{"name":"安徽省","value":"340000"},{"name":"福建省","value":"350000"},{"name":"江西省","value":"360000"},{"name":"山东省","value":"370000"},{"name":"河南省","value":"410000"},{"name":"湖北省","value":"420000"},{"name":"湖南省","value":"430000"},{"name":"广东省","value":"440000"},{"name":"广西壮族自治区","value":"450000"},{"name":"海南省","value":"460000"},{"name":"重庆市","value":"500000"},{"name":"四川省","value":"510000"},{"name":"贵州省","value":"520000"},{"name":"云南省","value":"530000"},{"name":"西藏自治区","value":"540000"},{"name":"陕西省","value":"610000"},{"name":"甘肃省","value":"620000"},{"name":"青海省","value":"630000"},{"name":"宁夏回族自治区","value":"640000"},{"name":"新疆维吾尔自治区","value":"650000"},{"name":"市辖区","value":"110100","parent":"110000"},{"name":"东城区","value":"110101","parent":"110100"},{"name":"西城区","value":"110102","parent":"110100"},{"name":"朝阳区","value":"110105","parent":"110100"},{"name":"丰台区","value":"110106","parent":"110100"},{"name":"石景山区","value":"110107","parent":"110100"},{"name":"海淀区","value":"110108","parent":"110100"},{"name":"门头沟区","value":"110109","parent":"110100"},{"name":"房山区","value":"110111","parent":"110100"},{"name":"通州区","value":"110112","parent":"110100"},{"name":"顺义区","value":"110113","parent":"110100"},{"name":"昌平区","value":"110114","parent":"110100"},{"name":"大兴区","value":"110115","parent":"110100"},{"name":"怀柔区","value":"110116","parent":"110100"},{"name":"平谷区","value":"110117","parent":"110100"},{"name":"密云区","value":"110118","parent":"110100"},{"name":"延庆区","value":"110119","parent":"110100"},{"name":"市辖区","value":"120100","parent":"120000"},{"name":"和平区","value":"120101","parent":"120100"},{"name":"河东区","value":"120102","parent":"120100"},{"name":"河西区","value":"120103","parent":"120100"},{"name":"南开区","value":"120104","parent":"120100"},{"name":"河北区","value":"120105","parent":"120100"},{"name":"红桥区","value":"120106","parent":"120100"},{"name":"东丽区","value":"120110","parent":"120100"},{"name":"西青区","value":"120111","parent":"120100"},{"name":"津南区","value":"120112","parent":"120100"},{"name":"北辰区","value":"120113","parent":"120100"},{"name":"武清区","value":"120114","parent":"120100"},{"name":"宝坻区","value":"120115","parent":"120100"},{"name":"滨海新区","value":"120116","parent":"120100"},{"name":"宁河区","value":"120117","parent":"120100"},{"name":"静海区","value":"120118","parent":"120100"},{"name":"蓟州区","value":"120119","parent":"120100"},{"name":"石家庄市","value":"130100","parent":"130000"},{"name":"唐山市","value":"130200","parent":"130000"},{"name":"秦皇岛市","value":"130300","parent":"130000"},{"name":"邯郸市","value":"130400","parent":"130000"},{"name":"邢台市","value":"130500","parent":"130000"},{"name":"保定市","value":"130600","parent":"130000"},{"name":"张家口市","value":"130700","parent":"130000"},{"name":"承德市","value":"130800","parent":"130000"},{"name":"沧州市","value":"130900","parent":"130000"},{"name":"廊坊市","value":"131000","parent":"130000"},{"name":"衡水市","value":"131100","parent":"130000"},{"name":"定州市","value":"139001","parent":"130000"},{"name":"辛集市","value":"139002","parent":"130000"},{"name":"长安区","value":"130102","parent":"130100"},{"name":"桥西区","value":"130104","parent":"130100"},{"name":"新华区","value":"130105","parent":"130100"},{"name":"井陉矿区","value":"130107","parent":"130100"},{"name":"裕华区","value":"130108","parent":"130100"},{"name":"藁城区","value":"130109","parent":"130100"},{"name":"鹿泉区","value":"130110","parent":"130100"},{"name":"栾城区","value":"130111","parent":"130100"},{"name":"井陉县","value":"130121","parent":"130100"},{"name":"正定县","value":"130123","parent":"130100"},{"name":"行唐县","value":"130125","parent":"130100"},{"name":"灵寿县","value":"130126","parent":"130100"},{"name":"高邑县","value":"130127","parent":"130100"},{"name":"深泽县","value":"130128","parent":"130100"},{"name":"赞皇县","value":"130129","parent":"130100"},{"name":"无极县","value":"130130","parent":"130100"},{"name":"平山县","value":"130131","parent":"130100"},{"name":"元氏县","value":"130132","parent":"130100"},{"name":"赵县","value":"130133","parent":"130100"},{"name":"晋州市","value":"130183","parent":"130100"},{"name":"新乐市","value":"130184","parent":"130100"},{"name":"路南区","value":"130202","parent":"130200"},{"name":"路北区","value":"130203","parent":"130200"},{"name":"古冶区","value":"130204","parent":"130200"},{"name":"开平区","value":"130205","parent":"130200"},{"name":"丰南区","value":"130207","parent":"130200"},{"name":"丰润区","value":"130208","parent":"130200"},{"name":"曹妃甸区","value":"130209","parent":"130200"},{"name":"滦县","value":"130223","parent":"130200"},{"name":"滦南县","value":"130224","parent":"130200"},{"name":"乐亭县","value":"130225","parent":"130200"},{"name":"迁西县","value":"130227","parent":"130200"},{"name":"玉田县","value":"130229","parent":"130200"},{"name":"遵化市","value":"130281","parent":"130200"},{"name":"迁安市","value":"130283","parent":"130200"},{"name":"海港区","value":"130302","parent":"130300"},{"name":"山海关区","value":"130303","parent":"130300"},{"name":"北戴河区","value":"130304","parent":"130300"},{"name":"抚宁区","value":"130306","parent":"130300"},{"name":"青龙满族自治县","value":"130321","parent":"130300"},{"name":"昌黎县","value":"130322","parent":"130300"},{"name":"卢龙县","value":"130324","parent":"130300"},{"name":"邯山区","value":"130402","parent":"130400"},{"name":"丛台区","value":"130403","parent":"130400"},{"name":"复兴区","value":"130404","parent":"130400"},{"name":"峰峰矿区","value":"130406","parent":"130400"},{"name":"邯郸县","value":"130421","parent":"130400"},{"name":"临漳县","value":"130423","parent":"130400"},{"name":"成安县","value":"130424","parent":"130400"},{"name":"大名县","value":"130425","parent":"130400"},{"name":"涉县","value":"130426","parent":"130400"},{"name":"磁县","value":"130427","parent":"130400"},{"name":"肥乡县","value":"130428","parent":"130400"},{"name":"永年县","value":"130429","parent":"130400"},{"name":"邱县","value":"130430","parent":"130400"},{"name":"鸡泽县","value":"130431","parent":"130400"},{"name":"广平县","value":"130432","parent":"130400"},{"name":"馆陶县","value":"130433","parent":"130400"},{"name":"魏县","value":"130434","parent":"130400"},{"name":"曲周县","value":"130435","parent":"130400"},{"name":"武安市","value":"130481","parent":"130400"},{"name":"桥东区","value":"130502","parent":"130500"},{"name":"桥西区","value":"130503","parent":"130500"},{"name":"邢台县","value":"130521","parent":"130500"},{"name":"临城县","value":"130522","parent":"130500"},{"name":"内丘县","value":"130523","parent":"130500"},{"name":"柏乡县","value":"130524","parent":"130500"},{"name":"隆尧县","value":"130525","parent":"130500"},{"name":"任县","value":"130526","parent":"130500"},{"name":"南和县","value":"130527","parent":"130500"},{"name":"宁晋县","value":"130528","parent":"130500"},{"name":"巨鹿县","value":"130529","parent":"130500"},{"name":"新河县","value":"130530","parent":"130500"},{"name":"广宗县","value":"130531","parent":"130500"},{"name":"平乡县","value":"130532","parent":"130500"},{"name":"威县","value":"130533","parent":"130500"},{"name":"清河县","value":"130534","parent":"130500"},{"name":"临西县","value":"130535","parent":"130500"},{"name":"南宫市","value":"130581","parent":"130500"},{"name":"沙河市","value":"130582","parent":"130500"},{"name":"竞秀区","value":"130602","parent":"130600"},{"name":"莲池区","value":"130606","parent":"130600"},{"name":"满城区","value":"130607","parent":"130600"},{"name":"清苑区","value":"130608","parent":"130600"},{"name":"徐水区","value":"130609","parent":"130600"},{"name":"涞水县","value":"130623","parent":"130600"},{"name":"阜平县","value":"130624","parent":"130600"},{"name":"定兴县","value":"130626","parent":"130600"},{"name":"唐县","value":"130627","parent":"130600"},{"name":"高阳县","value":"130628","parent":"130600"},{"name":"容城县","value":"130629","parent":"130600"},{"name":"涞源县","value":"130630","parent":"130600"},{"name":"望都县","value":"130631","parent":"130600"},{"name":"安新县","value":"130632","parent":"130600"},{"name":"易县","value":"130633","parent":"130600"},{"name":"曲阳县","value":"130634","parent":"130600"},{"name":"蠡县","value":"130635","parent":"130600"},{"name":"顺平县","value":"130636","parent":"130600"},{"name":"博野县","value":"130637","parent":"130600"},{"name":"雄县","value":"130638","parent":"130600"},{"name":"涿州市","value":"130681","parent":"130600"},{"name":"安国市","value":"130683","parent":"130600"},{"name":"高碑店市","value":"130684","parent":"130600"},{"name":"桥东区","value":"130702","parent":"130700"},{"name":"桥西区","value":"130703","parent":"130700"},{"name":"宣化区","value":"130705","parent":"130700"},{"name":"下花园区","value":"130706","parent":"130700"},{"name":"万全区","value":"130708","parent":"130700"},{"name":"崇礼区","value":"130709","parent":"130700"},{"name":"张北县","value":"130722","parent":"130700"},{"name":"康保县","value":"130723","parent":"130700"},{"name":"沽源县","value":"130724","parent":"130700"},{"name":"尚义县","value":"130725","parent":"130700"},{"name":"蔚县","value":"130726","parent":"130700"},{"name":"阳原县","value":"130727","parent":"130700"},{"name":"怀安县","value":"130728","parent":"130700"},{"name":"怀来县","value":"130730","parent":"130700"},{"name":"涿鹿县","value":"130731","parent":"130700"},{"name":"赤城县","value":"130732","parent":"130700"},{"name":"双桥区","value":"130802","parent":"130800"},{"name":"双滦区","value":"130803","parent":"130800"},{"name":"鹰手营子矿区","value":"130804","parent":"130800"},{"name":"承德县","value":"130821","parent":"130800"},{"name":"兴隆县","value":"130822","parent":"130800"},{"name":"平泉县","value":"130823","parent":"130800"},{"name":"滦平县","value":"130824","parent":"130800"},{"name":"隆化县","value":"130825","parent":"130800"},{"name":"丰宁满族自治县","value":"130826","parent":"130800"},{"name":"宽城满族自治县","value":"130827","parent":"130800"},{"name":"围场满族蒙古族自治县","value":"130828","parent":"130800"},{"name":"新华区","value":"130902","parent":"130900"},{"name":"运河区","value":"130903","parent":"130900"},{"name":"沧县","value":"130921","parent":"130900"},{"name":"青县","value":"130922","parent":"130900"},{"name":"东光县","value":"130923","parent":"130900"},{"name":"海兴县","value":"130924","parent":"130900"},{"name":"盐山县","value":"130925","parent":"130900"},{"name":"肃宁县","value":"130926","parent":"130900"},{"name":"南皮县","value":"130927","parent":"130900"},{"name":"吴桥县","value":"130928","parent":"130900"},{"name":"献县","value":"130929","parent":"130900"},{"name":"孟村回族自治县","value":"130930","parent":"130900"},{"name":"泊头市","value":"130981","parent":"130900"},{"name":"任丘市","value":"130982","parent":"130900"},{"name":"黄骅市","value":"130983","parent":"130900"},{"name":"河间市","value":"130984","parent":"130900"},{"name":"安次区","value":"131002","parent":"131000"},{"name":"广阳区","value":"131003","parent":"131000"},{"name":"固安县","value":"131022","parent":"131000"},{"name":"永清县","value":"131023","parent":"131000"},{"name":"香河县","value":"131024","parent":"131000"},{"name":"大城县","value":"131025","parent":"131000"},{"name":"文安县","value":"131026","parent":"131000"},{"name":"大厂回族自治县","value":"131028","parent":"131000"},{"name":"霸州市","value":"131081","parent":"131000"},{"name":"三河市","value":"131082","parent":"131000"},{"name":"桃城区","value":"131102","parent":"131100"},{"name":"冀州区","value":"131103","parent":"131100"},{"name":"枣强县","value":"131121","parent":"131100"},{"name":"武邑县","value":"131122","parent":"131100"},{"name":"武强县","value":"131123","parent":"131100"},{"name":"饶阳县","value":"131124","parent":"131100"},{"name":"安平县","value":"131125","parent":"131100"},{"name":"故城县","value":"131126","parent":"131100"},{"name":"景县","value":"131127","parent":"131100"},{"name":"阜城县","value":"131128","parent":"131100"},{"name":"深州市","value":"131182","parent":"131100"},{"name":"太原市","value":"140100","parent":"140000"},{"name":"大同市","value":"140200","parent":"140000"},{"name":"阳泉市","value":"140300","parent":"140000"},{"name":"长治市","value":"140400","parent":"140000"},{"name":"晋城市","value":"140500","parent":"140000"},{"name":"朔州市","value":"140600","parent":"140000"},{"name":"晋中市","value":"140700","parent":"140000"},{"name":"运城市","value":"140800","parent":"140000"},{"name":"忻州市","value":"140900","parent":"140000"},{"name":"临汾市","value":"141000","parent":"140000"},{"name":"吕梁市","value":"141100","parent":"140000"},{"name":"小店区","value":"140105","parent":"140100"},{"name":"迎泽区","value":"140106","parent":"140100"},{"name":"杏花岭区","value":"140107","parent":"140100"},{"name":"尖草坪区","value":"140108","parent":"140100"},{"name":"万柏林区","value":"140109","parent":"140100"},{"name":"晋源区","value":"140110","parent":"140100"},{"name":"清徐县","value":"140121","parent":"140100"},{"name":"阳曲县","value":"140122","parent":"140100"},{"name":"娄烦县","value":"140123","parent":"140100"},{"name":"古交市","value":"140181","parent":"140100"},{"name":"城区","value":"140202","parent":"140200"},{"name":"矿区","value":"140203","parent":"140200"},{"name":"南郊区","value":"140211","parent":"140200"},{"name":"新荣区","value":"140212","parent":"140200"},{"name":"阳高县","value":"140221","parent":"140200"},{"name":"天镇县","value":"140222","parent":"140200"},{"name":"广灵县","value":"140223","parent":"140200"},{"name":"灵丘县","value":"140224","parent":"140200"},{"name":"浑源县","value":"140225","parent":"140200"},{"name":"左云县","value":"140226","parent":"140200"},{"name":"大同县","value":"140227","parent":"140200"},{"name":"城区","value":"140302","parent":"140300"},{"name":"矿区","value":"140303","parent":"140300"},{"name":"郊区","value":"140311","parent":"140300"},{"name":"平定县","value":"140321","parent":"140300"},{"name":"盂县","value":"140322","parent":"140300"},{"name":"城区","value":"140402","parent":"140400"},{"name":"郊区","value":"140411","parent":"140400"},{"name":"长治县","value":"140421","parent":"140400"},{"name":"襄垣县","value":"140423","parent":"140400"},{"name":"屯留县","value":"140424","parent":"140400"},{"name":"平顺县","value":"140425","parent":"140400"},{"name":"黎城县","value":"140426","parent":"140400"},{"name":"壶关县","value":"140427","parent":"140400"},{"name":"长子县","value":"140428","parent":"140400"},{"name":"武乡县","value":"140429","parent":"140400"},{"name":"沁县","value":"140430","parent":"140400"},{"name":"沁源县","value":"140431","parent":"140400"},{"name":"潞城市","value":"140481","parent":"140400"},{"name":"城区","value":"140502","parent":"140500"},{"name":"沁水县","value":"140521","parent":"140500"},{"name":"阳城县","value":"140522","parent":"140500"},{"name":"陵川县","value":"140524","parent":"140500"},{"name":"泽州县","value":"140525","parent":"140500"},{"name":"高平市","value":"140581","parent":"140500"},{"name":"朔城区","value":"140602","parent":"140600"},{"name":"平鲁区","value":"140603","parent":"140600"},{"name":"山阴县","value":"140621","parent":"140600"},{"name":"应县","value":"140622","parent":"140600"},{"name":"右玉县","value":"140623","parent":"140600"},{"name":"怀仁县","value":"140624","parent":"140600"},{"name":"榆次区","value":"140702","parent":"140700"},{"name":"榆社县","value":"140721","parent":"140700"},{"name":"左权县","value":"140722","parent":"140700"},{"name":"和顺县","value":"140723","parent":"140700"},{"name":"昔阳县","value":"140724","parent":"140700"},{"name":"寿阳县","value":"140725","parent":"140700"},{"name":"太谷县","value":"140726","parent":"140700"},{"name":"祁县","value":"140727","parent":"140700"},{"name":"平遥县","value":"140728","parent":"140700"},{"name":"灵石县","value":"140729","parent":"140700"},{"name":"介休市","value":"140781","parent":"140700"},{"name":"盐湖区","value":"140802","parent":"140800"},{"name":"临猗县","value":"140821","parent":"140800"},{"name":"万荣县","value":"140822","parent":"140800"},{"name":"闻喜县","value":"140823","parent":"140800"},{"name":"稷山县","value":"140824","parent":"140800"},{"name":"新绛县","value":"140825","parent":"140800"},{"name":"绛县","value":"140826","parent":"140800"},{"name":"垣曲县","value":"140827","parent":"140800"},{"name":"夏县","value":"140828","parent":"140800"},{"name":"平陆县","value":"140829","parent":"140800"},{"name":"芮城县","value":"140830","parent":"140800"},{"name":"永济市","value":"140881","parent":"140800"},{"name":"河津市","value":"140882","parent":"140800"},{"name":"忻府区","value":"140902","parent":"140900"},{"name":"定襄县","value":"140921","parent":"140900"},{"name":"五台县","value":"140922","parent":"140900"},{"name":"代县","value":"140923","parent":"140900"},{"name":"繁峙县","value":"140924","parent":"140900"},{"name":"宁武县","value":"140925","parent":"140900"},{"name":"静乐县","value":"140926","parent":"140900"},{"name":"神池县","value":"140927","parent":"140900"},{"name":"五寨县","value":"140928","parent":"140900"},{"name":"岢岚县","value":"140929","parent":"140900"},{"name":"河曲县","value":"140930","parent":"140900"},{"name":"保德县","value":"140931","parent":"140900"},{"name":"偏关县","value":"140932","parent":"140900"},{"name":"原平市","value":"140981","parent":"140900"},{"name":"尧都区","value":"141002","parent":"141000"},{"name":"曲沃县","value":"141021","parent":"141000"},{"name":"翼城县","value":"141022","parent":"141000"},{"name":"襄汾县","value":"141023","parent":"141000"},{"name":"洪洞县","value":"141024","parent":"141000"},{"name":"古县","value":"141025","parent":"141000"},{"name":"安泽县","value":"141026","parent":"141000"},{"name":"浮山县","value":"141027","parent":"141000"},{"name":"吉县","value":"141028","parent":"141000"},{"name":"乡宁县","value":"141029","parent":"141000"},{"name":"大宁县","value":"141030","parent":"141000"},{"name":"隰县","value":"141031","parent":"141000"},{"name":"永和县","value":"141032","parent":"141000"},{"name":"蒲县","value":"141033","parent":"141000"},{"name":"汾西县","value":"141034","parent":"141000"},{"name":"侯马市","value":"141081","parent":"141000"},{"name":"霍州市","value":"141082","parent":"141000"},{"name":"离石区","value":"141102","parent":"141100"},{"name":"文水县","value":"141121","parent":"141100"},{"name":"交城县","value":"141122","parent":"141100"},{"name":"兴县","value":"141123","parent":"141100"},{"name":"临县","value":"141124","parent":"141100"},{"name":"柳林县","value":"141125","parent":"141100"},{"name":"石楼县","value":"141126","parent":"141100"},{"name":"岚县","value":"141127","parent":"141100"},{"name":"方山县","value":"141128","parent":"141100"},{"name":"中阳县","value":"141129","parent":"141100"},{"name":"交口县","value":"141130","parent":"141100"},{"name":"孝义市","value":"141181","parent":"141100"},{"name":"汾阳市","value":"141182","parent":"141100"},{"name":"呼和浩特市","value":"150100","parent":"150000"},{"name":"包头市","value":"150200","parent":"150000"},{"name":"乌海市","value":"150300","parent":"150000"},{"name":"赤峰市","value":"150400","parent":"150000"},{"name":"通辽市","value":"150500","parent":"150000"},{"name":"鄂尔多斯市","value":"150600","parent":"150000"},{"name":"呼伦贝尔市","value":"150700","parent":"150000"},{"name":"巴彦淖尔市","value":"150800","parent":"150000"},{"name":"乌兰察布市","value":"150900","parent":"150000"},{"name":"兴安盟","value":"152200","parent":"150000"},{"name":"锡林郭勒盟","value":"152500","parent":"150000"},{"name":"阿拉善盟","value":"152900","parent":"150000"},{"name":"新城区","value":"150102","parent":"150100"},{"name":"回民区","value":"150103","parent":"150100"},{"name":"玉泉区","value":"150104","parent":"150100"},{"name":"赛罕区","value":"150105","parent":"150100"},{"name":"土默特左旗","value":"150121","parent":"150100"},{"name":"托克托县","value":"150122","parent":"150100"},{"name":"和林格尔县","value":"150123","parent":"150100"},{"name":"清水河县","value":"150124","parent":"150100"},{"name":"武川县","value":"150125","parent":"150100"},{"name":"东河区","value":"150202","parent":"150200"},{"name":"昆都仑区","value":"150203","parent":"150200"},{"name":"青山区","value":"150204","parent":"150200"},{"name":"石拐区","value":"150205","parent":"150200"},{"name":"白云鄂博矿区","value":"150206","parent":"150200"},{"name":"九原区","value":"150207","parent":"150200"},{"name":"土默特右旗","value":"150221","parent":"150200"},{"name":"固阳县","value":"150222","parent":"150200"},{"name":"达尔罕茂明安联合旗","value":"150223","parent":"150200"},{"name":"海勃湾区","value":"150302","parent":"150300"},{"name":"海南区","value":"150303","parent":"150300"},{"name":"乌达区","value":"150304","parent":"150300"},{"name":"红山区","value":"150402","parent":"150400"},{"name":"元宝山区","value":"150403","parent":"150400"},{"name":"松山区","value":"150404","parent":"150400"},{"name":"阿鲁科尔沁旗","value":"150421","parent":"150400"},{"name":"巴林左旗","value":"150422","parent":"150400"},{"name":"巴林右旗","value":"150423","parent":"150400"},{"name":"林西县","value":"150424","parent":"150400"},{"name":"克什克腾旗","value":"150425","parent":"150400"},{"name":"翁牛特旗","value":"150426","parent":"150400"},{"name":"喀喇沁旗","value":"150428","parent":"150400"},{"name":"宁城县","value":"150429","parent":"150400"},{"name":"敖汉旗","value":"150430","parent":"150400"},{"name":"科尔沁区","value":"150502","parent":"150500"},{"name":"科尔沁左翼中旗","value":"150521","parent":"150500"},{"name":"科尔沁左翼后旗","value":"150522","parent":"150500"},{"name":"开鲁县","value":"150523","parent":"150500"},{"name":"库伦旗","value":"150524","parent":"150500"},{"name":"奈曼旗","value":"150525","parent":"150500"},{"name":"扎鲁特旗","value":"150526","parent":"150500"},{"name":"霍林郭勒市","value":"150581","parent":"150500"},{"name":"东胜区","value":"150602","parent":"150600"},{"name":"康巴什区","value":"150603","parent":"150600"},{"name":"达拉特旗","value":"150621","parent":"150600"},{"name":"准格尔旗","value":"150622","parent":"150600"},{"name":"鄂托克前旗","value":"150623","parent":"150600"},{"name":"鄂托克旗","value":"150624","parent":"150600"},{"name":"杭锦旗","value":"150625","parent":"150600"},{"name":"乌审旗","value":"150626","parent":"150600"},{"name":"伊金霍洛旗","value":"150627","parent":"150600"},{"name":"海拉尔区","value":"150702","parent":"150700"},{"name":"扎赉诺尔区","value":"150703","parent":"150700"},{"name":"阿荣旗","value":"150721","parent":"150700"},{"name":"莫力达瓦达斡尔族自治旗","value":"150722","parent":"150700"},{"name":"鄂伦春自治旗","value":"150723","parent":"150700"},{"name":"鄂温克族自治旗","value":"150724","parent":"150700"},{"name":"陈巴尔虎旗","value":"150725","parent":"150700"},{"name":"新巴尔虎左旗","value":"150726","parent":"150700"},{"name":"新巴尔虎右旗","value":"150727","parent":"150700"},{"name":"满洲里市","value":"150781","parent":"150700"},{"name":"牙克石市","value":"150782","parent":"150700"},{"name":"扎兰屯市","value":"150783","parent":"150700"},{"name":"额尔古纳市","value":"150784","parent":"150700"},{"name":"根河市","value":"150785","parent":"150700"},{"name":"临河区","value":"150802","parent":"150800"},{"name":"五原县","value":"150821","parent":"150800"},{"name":"磴口县","value":"150822","parent":"150800"},{"name":"乌拉特前旗","value":"150823","parent":"150800"},{"name":"乌拉特中旗","value":"150824","parent":"150800"},{"name":"乌拉特后旗","value":"150825","parent":"150800"},{"name":"杭锦后旗","value":"150826","parent":"150800"},{"name":"集宁区","value":"150902","parent":"150900"},{"name":"卓资县","value":"150921","parent":"150900"},{"name":"化德县","value":"150922","parent":"150900"},{"name":"商都县","value":"150923","parent":"150900"},{"name":"兴和县","value":"150924","parent":"150900"},{"name":"凉城县","value":"150925","parent":"150900"},{"name":"察哈尔右翼前旗","value":"150926","parent":"150900"},{"name":"察哈尔右翼中旗","value":"150927","parent":"150900"},{"name":"察哈尔右翼后旗","value":"150928","parent":"150900"},{"name":"四子王旗","value":"150929","parent":"150900"},{"name":"丰镇市","value":"150981","parent":"150900"},{"name":"乌兰浩特市","value":"152201","parent":"152200"},{"name":"阿尔山市","value":"152202","parent":"152200"},{"name":"科尔沁右翼前旗","value":"152221","parent":"152200"},{"name":"科尔沁右翼中旗","value":"152222","parent":"152200"},{"name":"扎赉特旗","value":"152223","parent":"152200"},{"name":"突泉县","value":"152224","parent":"152200"},{"name":"二连浩特市","value":"152501","parent":"152500"},{"name":"锡林浩特市","value":"152502","parent":"152500"},{"name":"阿巴嘎旗","value":"152522","parent":"152500"},{"name":"苏尼特左旗","value":"152523","parent":"152500"},{"name":"苏尼特右旗","value":"152524","parent":"152500"},{"name":"东乌珠穆沁旗","value":"152525","parent":"152500"},{"name":"西乌珠穆沁旗","value":"152526","parent":"152500"},{"name":"太仆寺旗","value":"152527","parent":"152500"},{"name":"镶黄旗","value":"152528","parent":"152500"},{"name":"正镶白旗","value":"152529","parent":"152500"},{"name":"正蓝旗","value":"152530","parent":"152500"},{"name":"多伦县","value":"152531","parent":"152500"},{"name":"阿拉善左旗","value":"152921","parent":"152900"},{"name":"阿拉善右旗","value":"152922","parent":"152900"},{"name":"额济纳旗","value":"152923","parent":"152900"},{"name":"沈阳市","value":"210100","parent":"210000"},{"name":"大连市","value":"210200","parent":"210000"},{"name":"鞍山市","value":"210300","parent":"210000"},{"name":"抚顺市","value":"210400","parent":"210000"},{"name":"本溪市","value":"210500","parent":"210000"},{"name":"丹东市","value":"210600","parent":"210000"},{"name":"锦州市","value":"210700","parent":"210000"},{"name":"营口市","value":"210800","parent":"210000"},{"name":"阜新市","value":"210900","parent":"210000"},{"name":"辽阳市","value":"211000","parent":"210000"},{"name":"盘锦市","value":"211100","parent":"210000"},{"name":"铁岭市","value":"211200","parent":"210000"},{"name":"朝阳市","value":"211300","parent":"210000"},{"name":"葫芦岛市","value":"211400","parent":"210000"},{"name":"和平区","value":"210102","parent":"210100"},{"name":"沈河区","value":"210103","parent":"210100"},{"name":"大东区","value":"210104","parent":"210100"},{"name":"皇姑区","value":"210105","parent":"210100"},{"name":"铁西区","value":"210106","parent":"210100"},{"name":"苏家屯区","value":"210111","parent":"210100"},{"name":"浑南区","value":"210112","parent":"210100"},{"name":"沈北新区","value":"210113","parent":"210100"},{"name":"于洪区","value":"210114","parent":"210100"},{"name":"辽中区","value":"210115","parent":"210100"},{"name":"康平县","value":"210123","parent":"210100"},{"name":"法库县","value":"210124","parent":"210100"},{"name":"新民市","value":"210181","parent":"210100"},{"name":"中山区","value":"210202","parent":"210200"},{"name":"西岗区","value":"210203","parent":"210200"},{"name":"沙河口区","value":"210204","parent":"210200"},{"name":"甘井子区","value":"210211","parent":"210200"},{"name":"旅顺口区","value":"210212","parent":"210200"},{"name":"金州区","value":"210213","parent":"210200"},{"name":"普兰店区","value":"210214","parent":"210200"},{"name":"长海县","value":"210224","parent":"210200"},{"name":"瓦房店市","value":"210281","parent":"210200"},{"name":"庄河市","value":"210283","parent":"210200"},{"name":"铁东区","value":"210302","parent":"210300"},{"name":"铁西区","value":"210303","parent":"210300"},{"name":"立山区","value":"210304","parent":"210300"},{"name":"千山区","value":"210311","parent":"210300"},{"name":"台安县","value":"210321","parent":"210300"},{"name":"岫岩满族自治县","value":"210323","parent":"210300"},{"name":"海城市","value":"210381","parent":"210300"},{"name":"新抚区","value":"210402","parent":"210400"},{"name":"东洲区","value":"210403","parent":"210400"},{"name":"望花区","value":"210404","parent":"210400"},{"name":"顺城区","value":"210411","parent":"210400"},{"name":"抚顺县","value":"210421","parent":"210400"},{"name":"新宾满族自治县","value":"210422","parent":"210400"},{"name":"清原满族自治县","value":"210423","parent":"210400"},{"name":"平山区","value":"210502","parent":"210500"},{"name":"溪湖区","value":"210503","parent":"210500"},{"name":"明山区","value":"210504","parent":"210500"},{"name":"南芬区","value":"210505","parent":"210500"},{"name":"本溪满族自治县","value":"210521","parent":"210500"},{"name":"桓仁满族自治县","value":"210522","parent":"210500"},{"name":"元宝区","value":"210602","parent":"210600"},{"name":"振兴区","value":"210603","parent":"210600"},{"name":"振安区","value":"210604","parent":"210600"},{"name":"宽甸满族自治县","value":"210624","parent":"210600"},{"name":"东港市","value":"210681","parent":"210600"},{"name":"凤城市","value":"210682","parent":"210600"},{"name":"古塔区","value":"210702","parent":"210700"},{"name":"凌河区","value":"210703","parent":"210700"},{"name":"太和区","value":"210711","parent":"210700"},{"name":"黑山县","value":"210726","parent":"210700"},{"name":"义县","value":"210727","parent":"210700"},{"name":"凌海市","value":"210781","parent":"210700"},{"name":"北镇市","value":"210782","parent":"210700"},{"name":"站前区","value":"210802","parent":"210800"},{"name":"西市区","value":"210803","parent":"210800"},{"name":"鲅鱼圈区","value":"210804","parent":"210800"},{"name":"老边区","value":"210811","parent":"210800"},{"name":"盖州市","value":"210881","parent":"210800"},{"name":"大石桥市","value":"210882","parent":"210800"},{"name":"海州区","value":"210902","parent":"210900"},{"name":"新邱区","value":"210903","parent":"210900"},{"name":"太平区","value":"210904","parent":"210900"},{"name":"清河门区","value":"210905","parent":"210900"},{"name":"细河区","value":"210911","parent":"210900"},{"name":"阜新蒙古族自治县","value":"210921","parent":"210900"},{"name":"彰武县","value":"210922","parent":"210900"},{"name":"白塔区","value":"211002","parent":"211000"},{"name":"文圣区","value":"211003","parent":"211000"},{"name":"宏伟区","value":"211004","parent":"211000"},{"name":"弓长岭区","value":"211005","parent":"211000"},{"name":"太子河区","value":"211011","parent":"211000"},{"name":"辽阳县","value":"211021","parent":"211000"},{"name":"灯塔市","value":"211081","parent":"211000"},{"name":"双台子区","value":"211102","parent":"211100"},{"name":"兴隆台区","value":"211103","parent":"211100"},{"name":"大洼区","value":"211104","parent":"211100"},{"name":"盘山县","value":"211122","parent":"211100"},{"name":"银州区","value":"211202","parent":"211200"},{"name":"清河区","value":"211204","parent":"211200"},{"name":"铁岭县","value":"211221","parent":"211200"},{"name":"西丰县","value":"211223","parent":"211200"},{"name":"昌图县","value":"211224","parent":"211200"},{"name":"调兵山市","value":"211281","parent":"211200"},{"name":"开原市","value":"211282","parent":"211200"},{"name":"双塔区","value":"211302","parent":"211300"},{"name":"龙城区","value":"211303","parent":"211300"},{"name":"朝阳县","value":"211321","parent":"211300"},{"name":"建平县","value":"211322","parent":"211300"},{"name":"喀喇沁左翼蒙古族自治县","value":"211324","parent":"211300"},{"name":"北票市","value":"211381","parent":"211300"},{"name":"凌源市","value":"211382","parent":"211300"},{"name":"连山区","value":"211402","parent":"211400"},{"name":"龙港区","value":"211403","parent":"211400"},{"name":"南票区","value":"211404","parent":"211400"},{"name":"绥中县","value":"211421","parent":"211400"},{"name":"建昌县","value":"211422","parent":"211400"},{"name":"兴城市","value":"211481","parent":"211400"},{"name":"长春市","value":"220100","parent":"220000"},{"name":"吉林市","value":"220200","parent":"220000"},{"name":"四平市","value":"220300","parent":"220000"},{"name":"辽源市","value":"220400","parent":"220000"},{"name":"通化市","value":"220500","parent":"220000"},{"name":"白山市","value":"220600","parent":"220000"},{"name":"松原市","value":"220700","parent":"220000"},{"name":"白城市","value":"220800","parent":"220000"},{"name":"延边朝鲜族自治州","value":"222400","parent":"220000"},{"name":"南关区","value":"220102","parent":"220100"},{"name":"宽城区","value":"220103","parent":"220100"},{"name":"朝阳区","value":"220104","parent":"220100"},{"name":"二道区","value":"220105","parent":"220100"},{"name":"绿园区","value":"220106","parent":"220100"},{"name":"双阳区","value":"220112","parent":"220100"},{"name":"九台区","value":"220113","parent":"220100"},{"name":"农安县","value":"220122","parent":"220100"},{"name":"榆树市","value":"220182","parent":"220100"},{"name":"德惠市","value":"220183","parent":"220100"},{"name":"昌邑区","value":"220202","parent":"220200"},{"name":"龙潭区","value":"220203","parent":"220200"},{"name":"船营区","value":"220204","parent":"220200"},{"name":"丰满区","value":"220211","parent":"220200"},{"name":"永吉县","value":"220221","parent":"220200"},{"name":"蛟河市","value":"220281","parent":"220200"},{"name":"桦甸市","value":"220282","parent":"220200"},{"name":"舒兰市","value":"220283","parent":"220200"},{"name":"磐石市","value":"220284","parent":"220200"},{"name":"铁西区","value":"220302","parent":"220300"},{"name":"铁东区","value":"220303","parent":"220300"},{"name":"梨树县","value":"220322","parent":"220300"},{"name":"伊通满族自治县","value":"220323","parent":"220300"},{"name":"公主岭市","value":"220381","parent":"220300"},{"name":"双辽市","value":"220382","parent":"220300"},{"name":"龙山区","value":"220402","parent":"220400"},{"name":"西安区","value":"220403","parent":"220400"},{"name":"东丰县","value":"220421","parent":"220400"},{"name":"东辽县","value":"220422","parent":"220400"},{"name":"东昌区","value":"220502","parent":"220500"},{"name":"二道江区","value":"220503","parent":"220500"},{"name":"通化县","value":"220521","parent":"220500"},{"name":"辉南县","value":"220523","parent":"220500"},{"name":"柳河县","value":"220524","parent":"220500"},{"name":"梅河口市","value":"220581","parent":"220500"},{"name":"集安市","value":"220582","parent":"220500"},{"name":"浑江区","value":"220602","parent":"220600"},{"name":"江源区","value":"220605","parent":"220600"},{"name":"抚松县","value":"220621","parent":"220600"},{"name":"靖宇县","value":"220622","parent":"220600"},{"name":"长白朝鲜族自治县","value":"220623","parent":"220600"},{"name":"临江市","value":"220681","parent":"220600"},{"name":"宁江区","value":"220702","parent":"220700"},{"name":"前郭尔罗斯蒙古族自治县","value":"220721","parent":"220700"},{"name":"长岭县","value":"220722","parent":"220700"},{"name":"乾安县","value":"220723","parent":"220700"},{"name":"扶余市","value":"220781","parent":"220700"},{"name":"洮北区","value":"220802","parent":"220800"},{"name":"镇赉县","value":"220821","parent":"220800"},{"name":"通榆县","value":"220822","parent":"220800"},{"name":"洮南市","value":"220881","parent":"220800"},{"name":"大安市","value":"220882","parent":"220800"},{"name":"延吉市","value":"222401","parent":"222400"},{"name":"图们市","value":"222402","parent":"222400"},{"name":"敦化市","value":"222403","parent":"222400"},{"name":"珲春市","value":"222404","parent":"222400"},{"name":"龙井市","value":"222405","parent":"222400"},{"name":"和龙市","value":"222406","parent":"222400"},{"name":"汪清县","value":"222424","parent":"222400"},{"name":"安图县","value":"222426","parent":"222400"},{"name":"哈尔滨市","value":"230100","parent":"230000"},{"name":"齐齐哈尔市","value":"230200","parent":"230000"},{"name":"鸡西市","value":"230300","parent":"230000"},{"name":"鹤岗市","value":"230400","parent":"230000"},{"name":"双鸭山市","value":"230500","parent":"230000"},{"name":"大庆市","value":"230600","parent":"230000"},{"name":"伊春市","value":"230700","parent":"230000"},{"name":"佳木斯市","value":"230800","parent":"230000"},{"name":"七台河市","value":"230900","parent":"230000"},{"name":"牡丹江市","value":"231000","parent":"230000"},{"name":"黑河市","value":"231100","parent":"230000"},{"name":"绥化市","value":"231200","parent":"230000"},{"name":"大兴安岭地区","value":"232700","parent":"230000"},{"name":"道里区","value":"230102","parent":"230100"},{"name":"南岗区","value":"230103","parent":"230100"},{"name":"道外区","value":"230104","parent":"230100"},{"name":"平房区","value":"230108","parent":"230100"},{"name":"松北区","value":"230109","parent":"230100"},{"name":"香坊区","value":"230110","parent":"230100"},{"name":"呼兰区","value":"230111","parent":"230100"},{"name":"阿城区","value":"230112","parent":"230100"},{"name":"双城区","value":"230113","parent":"230100"},{"name":"依兰县","value":"230123","parent":"230100"},{"name":"方正县","value":"230124","parent":"230100"},{"name":"宾县","value":"230125","parent":"230100"},{"name":"巴彦县","value":"230126","parent":"230100"},{"name":"木兰县","value":"230127","parent":"230100"},{"name":"通河县","value":"230128","parent":"230100"},{"name":"延寿县","value":"230129","parent":"230100"},{"name":"尚志市","value":"230183","parent":"230100"},{"name":"五常市","value":"230184","parent":"230100"},{"name":"龙沙区","value":"230202","parent":"230200"},{"name":"建华区","value":"230203","parent":"230200"},{"name":"铁锋区","value":"230204","parent":"230200"},{"name":"昂昂溪区","value":"230205","parent":"230200"},{"name":"富拉尔基区","value":"230206","parent":"230200"},{"name":"碾子山区","value":"230207","parent":"230200"},{"name":"梅里斯达斡尔族区","value":"230208","parent":"230200"},{"name":"龙江县","value":"230221","parent":"230200"},{"name":"依安县","value":"230223","parent":"230200"},{"name":"泰来县","value":"230224","parent":"230200"},{"name":"甘南县","value":"230225","parent":"230200"},{"name":"富裕县","value":"230227","parent":"230200"},{"name":"克山县","value":"230229","parent":"230200"},{"name":"克东县","value":"230230","parent":"230200"},{"name":"拜泉县","value":"230231","parent":"230200"},{"name":"讷河市","value":"230281","parent":"230200"},{"name":"鸡冠区","value":"230302","parent":"230300"},{"name":"恒山区","value":"230303","parent":"230300"},{"name":"滴道区","value":"230304","parent":"230300"},{"name":"梨树区","value":"230305","parent":"230300"},{"name":"城子河区","value":"230306","parent":"230300"},{"name":"麻山区","value":"230307","parent":"230300"},{"name":"鸡东县","value":"230321","parent":"230300"},{"name":"虎林市","value":"230381","parent":"230300"},{"name":"密山市","value":"230382","parent":"230300"},{"name":"向阳区","value":"230402","parent":"230400"},{"name":"工农区","value":"230403","parent":"230400"},{"name":"南山区","value":"230404","parent":"230400"},{"name":"兴安区","value":"230405","parent":"230400"},{"name":"东山区","value":"230406","parent":"230400"},{"name":"兴山区","value":"230407","parent":"230400"},{"name":"萝北县","value":"230421","parent":"230400"},{"name":"绥滨县","value":"230422","parent":"230400"},{"name":"尖山区","value":"230502","parent":"230500"},{"name":"岭东区","value":"230503","parent":"230500"},{"name":"四方台区","value":"230505","parent":"230500"},{"name":"宝山区","value":"230506","parent":"230500"},{"name":"集贤县","value":"230521","parent":"230500"},{"name":"友谊县","value":"230522","parent":"230500"},{"name":"宝清县","value":"230523","parent":"230500"},{"name":"饶河县","value":"230524","parent":"230500"},{"name":"萨尔图区","value":"230602","parent":"230600"},{"name":"龙凤区","value":"230603","parent":"230600"},{"name":"让胡路区","value":"230604","parent":"230600"},{"name":"红岗区","value":"230605","parent":"230600"},{"name":"大同区","value":"230606","parent":"230600"},{"name":"肇州县","value":"230621","parent":"230600"},{"name":"肇源县","value":"230622","parent":"230600"},{"name":"林甸县","value":"230623","parent":"230600"},{"name":"杜尔伯特蒙古族自治县","value":"230624","parent":"230600"},{"name":"伊春区","value":"230702","parent":"230700"},{"name":"南岔区","value":"230703","parent":"230700"},{"name":"友好区","value":"230704","parent":"230700"},{"name":"西林区","value":"230705","parent":"230700"},{"name":"翠峦区","value":"230706","parent":"230700"},{"name":"新青区","value":"230707","parent":"230700"},{"name":"美溪区","value":"230708","parent":"230700"},{"name":"金山屯区","value":"230709","parent":"230700"},{"name":"五营区","value":"230710","parent":"230700"},{"name":"乌马河区","value":"230711","parent":"230700"},{"name":"汤旺河区","value":"230712","parent":"230700"},{"name":"带岭区","value":"230713","parent":"230700"},{"name":"乌伊岭区","value":"230714","parent":"230700"},{"name":"红星区","value":"230715","parent":"230700"},{"name":"上甘岭区","value":"230716","parent":"230700"},{"name":"嘉荫县","value":"230722","parent":"230700"},{"name":"铁力市","value":"230781","parent":"230700"},{"name":"向阳区","value":"230803","parent":"230800"},{"name":"前进区","value":"230804","parent":"230800"},{"name":"东风区","value":"230805","parent":"230800"},{"name":"郊区","value":"230811","parent":"230800"},{"name":"桦南县","value":"230822","parent":"230800"},{"name":"桦川县","value":"230826","parent":"230800"},{"name":"汤原县","value":"230828","parent":"230800"},{"name":"同江市","value":"230881","parent":"230800"},{"name":"富锦市","value":"230882","parent":"230800"},{"name":"抚远市","value":"230883","parent":"230800"},{"name":"新兴区","value":"230902","parent":"230900"},{"name":"桃山区","value":"230903","parent":"230900"},{"name":"茄子河区","value":"230904","parent":"230900"},{"name":"勃利县","value":"230921","parent":"230900"},{"name":"东安区","value":"231002","parent":"231000"},{"name":"阳明区","value":"231003","parent":"231000"},{"name":"爱民区","value":"231004","parent":"231000"},{"name":"西安区","value":"231005","parent":"231000"},{"name":"林口县","value":"231025","parent":"231000"},{"name":"绥芬河市","value":"231081","parent":"231000"},{"name":"海林市","value":"231083","parent":"231000"},{"name":"宁安市","value":"231084","parent":"231000"},{"name":"穆棱市","value":"231085","parent":"231000"},{"name":"东宁市","value":"231086","parent":"231000"},{"name":"爱辉区","value":"231102","parent":"231100"},{"name":"嫩江县","value":"231121","parent":"231100"},{"name":"逊克县","value":"231123","parent":"231100"},{"name":"孙吴县","value":"231124","parent":"231100"},{"name":"北安市","value":"231181","parent":"231100"},{"name":"五大连池市","value":"231182","parent":"231100"},{"name":"北林区","value":"231202","parent":"231200"},{"name":"望奎县","value":"231221","parent":"231200"},{"name":"兰西县","value":"231222","parent":"231200"},{"name":"青冈县","value":"231223","parent":"231200"},{"name":"庆安县","value":"231224","parent":"231200"},{"name":"明水县","value":"231225","parent":"231200"},{"name":"绥棱县","value":"231226","parent":"231200"},{"name":"安达市","value":"231281","parent":"231200"},{"name":"肇东市","value":"231282","parent":"231200"},{"name":"海伦市","value":"231283","parent":"231200"},{"name":"呼玛县","value":"232721","parent":"232700"},{"name":"塔河县","value":"232722","parent":"232700"},{"name":"漠河县","value":"232723","parent":"232700"},{"name":"市辖区","value":"310100","parent":"310000"},{"name":"黄浦区","value":"310101","parent":"310100"},{"name":"徐汇区","value":"310104","parent":"310100"},{"name":"长宁区","value":"310105","parent":"310100"},{"name":"静安区","value":"310106","parent":"310100"},{"name":"普陀区","value":"310107","parent":"310100"},{"name":"虹口区","value":"310109","parent":"310100"},{"name":"杨浦区","value":"310110","parent":"310100"},{"name":"闵行区","value":"310112","parent":"310100"},{"name":"宝山区","value":"310113","parent":"310100"},{"name":"嘉定区","value":"310114","parent":"310100"},{"name":"浦东新区","value":"310115","parent":"310100"},{"name":"金山区","value":"310116","parent":"310100"},{"name":"松江区","value":"310117","parent":"310100"},{"name":"青浦区","value":"310118","parent":"310100"},{"name":"奉贤区","value":"310120","parent":"310100"},{"name":"崇明区","value":"310151","parent":"310100"},{"name":"南京市","value":"320100","parent":"320000"},{"name":"无锡市","value":"320200","parent":"320000"},{"name":"徐州市","value":"320300","parent":"320000"},{"name":"常州市","value":"320400","parent":"320000"},{"name":"苏州市","value":"320500","parent":"320000"},{"name":"南通市","value":"320600","parent":"320000"},{"name":"连云港市","value":"320700","parent":"320000"},{"name":"淮安市","value":"320800","parent":"320000"},{"name":"盐城市","value":"320900","parent":"320000"},{"name":"扬州市","value":"321000","parent":"320000"},{"name":"镇江市","value":"321100","parent":"320000"},{"name":"泰州市","value":"321200","parent":"320000"},{"name":"宿迁市","value":"321300","parent":"320000"},{"name":"玄武区","value":"320102","parent":"320100"},{"name":"秦淮区","value":"320104","parent":"320100"},{"name":"建邺区","value":"320105","parent":"320100"},{"name":"鼓楼区","value":"320106","parent":"320100"},{"name":"浦口区","value":"320111","parent":"320100"},{"name":"栖霞区","value":"320113","parent":"320100"},{"name":"雨花台区","value":"320114","parent":"320100"},{"name":"江宁区","value":"320115","parent":"320100"},{"name":"六合区","value":"320116","parent":"320100"},{"name":"溧水区","value":"320117","parent":"320100"},{"name":"高淳区","value":"320118","parent":"320100"},{"name":"锡山区","value":"320205","parent":"320200"},{"name":"惠山区","value":"320206","parent":"320200"},{"name":"滨湖区","value":"320211","parent":"320200"},{"name":"梁溪区","value":"320213","parent":"320200"},{"name":"新吴区","value":"320214","parent":"320200"},{"name":"江阴市","value":"320281","parent":"320200"},{"name":"宜兴市","value":"320282","parent":"320200"},{"name":"鼓楼区","value":"320302","parent":"320300"},{"name":"云龙区","value":"320303","parent":"320300"},{"name":"贾汪区","value":"320305","parent":"320300"},{"name":"泉山区","value":"320311","parent":"320300"},{"name":"铜山区","value":"320312","parent":"320300"},{"name":"丰县","value":"320321","parent":"320300"},{"name":"沛县","value":"320322","parent":"320300"},{"name":"睢宁县","value":"320324","parent":"320300"},{"name":"新沂市","value":"320381","parent":"320300"},{"name":"邳州市","value":"320382","parent":"320300"},{"name":"天宁区","value":"320402","parent":"320400"},{"name":"钟楼区","value":"320404","parent":"320400"},{"name":"新北区","value":"320411","parent":"320400"},{"name":"武进区","value":"320412","parent":"320400"},{"name":"金坛区","value":"320413","parent":"320400"},{"name":"溧阳市","value":"320481","parent":"320400"},{"name":"虎丘区","value":"320505","parent":"320500"},{"name":"吴中区","value":"320506","parent":"320500"},{"name":"相城区","value":"320507","parent":"320500"},{"name":"姑苏区","value":"320508","parent":"320500"},{"name":"吴江区","value":"320509","parent":"320500"},{"name":"常熟市","value":"320581","parent":"320500"},{"name":"张家港市","value":"320582","parent":"320500"},{"name":"昆山市","value":"320583","parent":"320500"},{"name":"太仓市","value":"320585","parent":"320500"},{"name":"崇川区","value":"320602","parent":"320600"},{"name":"港闸区","value":"320611","parent":"320600"},{"name":"通州区","value":"320612","parent":"320600"},{"name":"海安县","value":"320621","parent":"320600"},{"name":"如东县","value":"320623","parent":"320600"},{"name":"启东市","value":"320681","parent":"320600"},{"name":"如皋市","value":"320682","parent":"320600"},{"name":"海门市","value":"320684","parent":"320600"},{"name":"连云区","value":"320703","parent":"320700"},{"name":"海州区","value":"320706","parent":"320700"},{"name":"赣榆区","value":"320707","parent":"320700"},{"name":"东海县","value":"320722","parent":"320700"},{"name":"灌云县","value":"320723","parent":"320700"},{"name":"灌南县","value":"320724","parent":"320700"},{"name":"淮安区","value":"320803","parent":"320800"},{"name":"淮阴区","value":"320804","parent":"320800"},{"name":"清江浦区","value":"320812","parent":"320800"},{"name":"洪泽区","value":"320813","parent":"320800"},{"name":"涟水县","value":"320826","parent":"320800"},{"name":"盱眙县","value":"320830","parent":"320800"},{"name":"金湖县","value":"320831","parent":"320800"},{"name":"亭湖区","value":"320902","parent":"320900"},{"name":"盐都区","value":"320903","parent":"320900"},{"name":"大丰区","value":"320904","parent":"320900"},{"name":"响水县","value":"320921","parent":"320900"},{"name":"滨海县","value":"320922","parent":"320900"},{"name":"阜宁县","value":"320923","parent":"320900"},{"name":"射阳县","value":"320924","parent":"320900"},{"name":"建湖县","value":"320925","parent":"320900"},{"name":"东台市","value":"320981","parent":"320900"},{"name":"广陵区","value":"321002","parent":"321000"},{"name":"邗江区","value":"321003","parent":"321000"},{"name":"江都区","value":"321012","parent":"321000"},{"name":"宝应县","value":"321023","parent":"321000"},{"name":"仪征市","value":"321081","parent":"321000"},{"name":"高邮市","value":"321084","parent":"321000"},{"name":"京口区","value":"321102","parent":"321100"},{"name":"润州区","value":"321111","parent":"321100"},{"name":"丹徒区","value":"321112","parent":"321100"},{"name":"丹阳市","value":"321181","parent":"321100"},{"name":"扬中市","value":"321182","parent":"321100"},{"name":"句容市","value":"321183","parent":"321100"},{"name":"海陵区","value":"321202","parent":"321200"},{"name":"高港区","value":"321203","parent":"321200"},{"name":"姜堰区","value":"321204","parent":"321200"},{"name":"兴化市","value":"321281","parent":"321200"},{"name":"靖江市","value":"321282","parent":"321200"},{"name":"泰兴市","value":"321283","parent":"321200"},{"name":"宿城区","value":"321302","parent":"321300"},{"name":"宿豫区","value":"321311","parent":"321300"},{"name":"沭阳县","value":"321322","parent":"321300"},{"name":"泗阳县","value":"321323","parent":"321300"},{"name":"泗洪县","value":"321324","parent":"321300"},{"name":"杭州市","value":"330100","parent":"330000"},{"name":"宁波市","value":"330200","parent":"330000"},{"name":"温州市","value":"330300","parent":"330000"},{"name":"嘉兴市","value":"330400","parent":"330000"},{"name":"湖州市","value":"330500","parent":"330000"},{"name":"绍兴市","value":"330600","parent":"330000"},{"name":"金华市","value":"330700","parent":"330000"},{"name":"衢州市","value":"330800","parent":"330000"},{"name":"舟山市","value":"330900","parent":"330000"},{"name":"台州市","value":"331000","parent":"330000"},{"name":"丽水市","value":"331100","parent":"330000"},{"name":"上城区","value":"330102","parent":"330100"},{"name":"下城区","value":"330103","parent":"330100"},{"name":"江干区","value":"330104","parent":"330100"},{"name":"拱墅区","value":"330105","parent":"330100"},{"name":"西湖区","value":"330106","parent":"330100"},{"name":"滨江区","value":"330108","parent":"330100"},{"name":"萧山区","value":"330109","parent":"330100"},{"name":"余杭区","value":"330110","parent":"330100"},{"name":"富阳区","value":"330111","parent":"330100"},{"name":"桐庐县","value":"330122","parent":"330100"},{"name":"淳安县","value":"330127","parent":"330100"},{"name":"建德市","value":"330182","parent":"330100"},{"name":"临安市","value":"330185","parent":"330100"},{"name":"海曙区","value":"330203","parent":"330200"},{"name":"江东区","value":"330204","parent":"330200"},{"name":"江北区","value":"330205","parent":"330200"},{"name":"北仑区","value":"330206","parent":"330200"},{"name":"镇海区","value":"330211","parent":"330200"},{"name":"鄞州区","value":"330212","parent":"330200"},{"name":"象山县","value":"330225","parent":"330200"},{"name":"宁海县","value":"330226","parent":"330200"},{"name":"余姚市","value":"330281","parent":"330200"},{"name":"慈溪市","value":"330282","parent":"330200"},{"name":"奉化市","value":"330283","parent":"330200"},{"name":"鹿城区","value":"330302","parent":"330300"},{"name":"龙湾区","value":"330303","parent":"330300"},{"name":"瓯海区","value":"330304","parent":"330300"},{"name":"洞头区","value":"330305","parent":"330300"},{"name":"永嘉县","value":"330324","parent":"330300"},{"name":"平阳县","value":"330326","parent":"330300"},{"name":"苍南县","value":"330327","parent":"330300"},{"name":"文成县","value":"330328","parent":"330300"},{"name":"泰顺县","value":"330329","parent":"330300"},{"name":"瑞安市","value":"330381","parent":"330300"},{"name":"乐清市","value":"330382","parent":"330300"},{"name":"南湖区","value":"330402","parent":"330400"},{"name":"秀洲区","value":"330411","parent":"330400"},{"name":"嘉善县","value":"330421","parent":"330400"},{"name":"海盐县","value":"330424","parent":"330400"},{"name":"海宁市","value":"330481","parent":"330400"},{"name":"平湖市","value":"330482","parent":"330400"},{"name":"桐乡市","value":"330483","parent":"330400"},{"name":"吴兴区","value":"330502","parent":"330500"},{"name":"南浔区","value":"330503","parent":"330500"},{"name":"德清县","value":"330521","parent":"330500"},{"name":"长兴县","value":"330522","parent":"330500"},{"name":"安吉县","value":"330523","parent":"330500"},{"name":"越城区","value":"330602","parent":"330600"},{"name":"柯桥区","value":"330603","parent":"330600"},{"name":"上虞区","value":"330604","parent":"330600"},{"name":"新昌县","value":"330624","parent":"330600"},{"name":"诸暨市","value":"330681","parent":"330600"},{"name":"嵊州市","value":"330683","parent":"330600"},{"name":"婺城区","value":"330702","parent":"330700"},{"name":"金东区","value":"330703","parent":"330700"},{"name":"武义县","value":"330723","parent":"330700"},{"name":"浦江县","value":"330726","parent":"330700"},{"name":"磐安县","value":"330727","parent":"330700"},{"name":"兰溪市","value":"330781","parent":"330700"},{"name":"义乌市","value":"330782","parent":"330700"},{"name":"东阳市","value":"330783","parent":"330700"},{"name":"永康市","value":"330784","parent":"330700"},{"name":"柯城区","value":"330802","parent":"330800"},{"name":"衢江区","value":"330803","parent":"330800"},{"name":"常山县","value":"330822","parent":"330800"},{"name":"开化县","value":"330824","parent":"330800"},{"name":"龙游县","value":"330825","parent":"330800"},{"name":"江山市","value":"330881","parent":"330800"},{"name":"定海区","value":"330902","parent":"330900"},{"name":"普陀区","value":"330903","parent":"330900"},{"name":"岱山县","value":"330921","parent":"330900"},{"name":"嵊泗县","value":"330922","parent":"330900"},{"name":"椒江区","value":"331002","parent":"331000"},{"name":"黄岩区","value":"331003","parent":"331000"},{"name":"路桥区","value":"331004","parent":"331000"},{"name":"玉环县","value":"331021","parent":"331000"},{"name":"三门县","value":"331022","parent":"331000"},{"name":"天台县","value":"331023","parent":"331000"},{"name":"仙居县","value":"331024","parent":"331000"},{"name":"温岭市","value":"331081","parent":"331000"},{"name":"临海市","value":"331082","parent":"331000"},{"name":"莲都区","value":"331102","parent":"331100"},{"name":"青田县","value":"331121","parent":"331100"},{"name":"缙云县","value":"331122","parent":"331100"},{"name":"遂昌县","value":"331123","parent":"331100"},{"name":"松阳县","value":"331124","parent":"331100"},{"name":"云和县","value":"331125","parent":"331100"},{"name":"庆元县","value":"331126","parent":"331100"},{"name":"景宁畲族自治县","value":"331127","parent":"331100"},{"name":"龙泉市","value":"331181","parent":"331100"},{"name":"合肥市","value":"340100","parent":"340000"},{"name":"芜湖市","value":"340200","parent":"340000"},{"name":"蚌埠市","value":"340300","parent":"340000"},{"name":"淮南市","value":"340400","parent":"340000"},{"name":"马鞍山市","value":"340500","parent":"340000"},{"name":"淮北市","value":"340600","parent":"340000"},{"name":"铜陵市","value":"340700","parent":"340000"},{"name":"安庆市","value":"340800","parent":"340000"},{"name":"黄山市","value":"341000","parent":"340000"},{"name":"滁州市","value":"341100","parent":"340000"},{"name":"阜阳市","value":"341200","parent":"340000"},{"name":"宿州市","value":"341300","parent":"340000"},{"name":"六安市","value":"341500","parent":"340000"},{"name":"亳州市","value":"341600","parent":"340000"},{"name":"池州市","value":"341700","parent":"340000"},{"name":"宣城市","value":"341800","parent":"340000"},{"name":"瑶海区","value":"340102","parent":"340100"},{"name":"庐阳区","value":"340103","parent":"340100"},{"name":"蜀山区","value":"340104","parent":"340100"},{"name":"包河区","value":"340111","parent":"340100"},{"name":"长丰县","value":"340121","parent":"340100"},{"name":"肥东县","value":"340122","parent":"340100"},{"name":"肥西县","value":"340123","parent":"340100"},{"name":"庐江县","value":"340124","parent":"340100"},{"name":"巢湖市","value":"340181","parent":"340100"},{"name":"镜湖区","value":"340202","parent":"340200"},{"name":"弋江区","value":"340203","parent":"340200"},{"name":"鸠江区","value":"340207","parent":"340200"},{"name":"三山区","value":"340208","parent":"340200"},{"name":"芜湖县","value":"340221","parent":"340200"},{"name":"繁昌县","value":"340222","parent":"340200"},{"name":"南陵县","value":"340223","parent":"340200"},{"name":"无为县","value":"340225","parent":"340200"},{"name":"龙子湖区","value":"340302","parent":"340300"},{"name":"蚌山区","value":"340303","parent":"340300"},{"name":"禹会区","value":"340304","parent":"340300"},{"name":"淮上区","value":"340311","parent":"340300"},{"name":"怀远县","value":"340321","parent":"340300"},{"name":"五河县","value":"340322","parent":"340300"},{"name":"固镇县","value":"340323","parent":"340300"},{"name":"大通区","value":"340402","parent":"340400"},{"name":"田家庵区","value":"340403","parent":"340400"},{"name":"谢家集区","value":"340404","parent":"340400"},{"name":"八公山区","value":"340405","parent":"340400"},{"name":"潘集区","value":"340406","parent":"340400"},{"name":"凤台县","value":"340421","parent":"340400"},{"name":"寿县","value":"340422","parent":"340400"},{"name":"花山区","value":"340503","parent":"340500"},{"name":"雨山区","value":"340504","parent":"340500"},{"name":"博望区","value":"340506","parent":"340500"},{"name":"当涂县","value":"340521","parent":"340500"},{"name":"含山县","value":"340522","parent":"340500"},{"name":"和县","value":"340523","parent":"340500"},{"name":"杜集区","value":"340602","parent":"340600"},{"name":"相山区","value":"340603","parent":"340600"},{"name":"烈山区","value":"340604","parent":"340600"},{"name":"濉溪县","value":"340621","parent":"340600"},{"name":"铜官区","value":"340705","parent":"340700"},{"name":"义安区","value":"340706","parent":"340700"},{"name":"郊区","value":"340711","parent":"340700"},{"name":"枞阳县","value":"340722","parent":"340700"},{"name":"迎江区","value":"340802","parent":"340800"},{"name":"大观区","value":"340803","parent":"340800"},{"name":"宜秀区","value":"340811","parent":"340800"},{"name":"怀宁县","value":"340822","parent":"340800"},{"name":"潜山县","value":"340824","parent":"340800"},{"name":"太湖县","value":"340825","parent":"340800"},{"name":"宿松县","value":"340826","parent":"340800"},{"name":"望江县","value":"340827","parent":"340800"},{"name":"岳西县","value":"340828","parent":"340800"},{"name":"桐城市","value":"340881","parent":"340800"},{"name":"屯溪区","value":"341002","parent":"341000"},{"name":"黄山区","value":"341003","parent":"341000"},{"name":"徽州区","value":"341004","parent":"341000"},{"name":"歙县","value":"341021","parent":"341000"},{"name":"休宁县","value":"341022","parent":"341000"},{"name":"黟县","value":"341023","parent":"341000"},{"name":"祁门县","value":"341024","parent":"341000"},{"name":"琅琊区","value":"341102","parent":"341100"},{"name":"南谯区","value":"341103","parent":"341100"},{"name":"来安县","value":"341122","parent":"341100"},{"name":"全椒县","value":"341124","parent":"341100"},{"name":"定远县","value":"341125","parent":"341100"},{"name":"凤阳县","value":"341126","parent":"341100"},{"name":"天长市","value":"341181","parent":"341100"},{"name":"明光市","value":"341182","parent":"341100"},{"name":"颍州区","value":"341202","parent":"341200"},{"name":"颍东区","value":"341203","parent":"341200"},{"name":"颍泉区","value":"341204","parent":"341200"},{"name":"临泉县","value":"341221","parent":"341200"},{"name":"太和县","value":"341222","parent":"341200"},{"name":"阜南县","value":"341225","parent":"341200"},{"name":"颍上县","value":"341226","parent":"341200"},{"name":"界首市","value":"341282","parent":"341200"},{"name":"埇桥区","value":"341302","parent":"341300"},{"name":"砀山县","value":"341321","parent":"341300"},{"name":"萧县","value":"341322","parent":"341300"},{"name":"灵璧县","value":"341323","parent":"341300"},{"name":"泗县","value":"341324","parent":"341300"},{"name":"金安区","value":"341502","parent":"341500"},{"name":"裕安区","value":"341503","parent":"341500"},{"name":"叶集区","value":"341504","parent":"341500"},{"name":"霍邱县","value":"341522","parent":"341500"},{"name":"舒城县","value":"341523","parent":"341500"},{"name":"金寨县","value":"341524","parent":"341500"},{"name":"霍山县","value":"341525","parent":"341500"},{"name":"谯城区","value":"341602","parent":"341600"},{"name":"涡阳县","value":"341621","parent":"341600"},{"name":"蒙城县","value":"341622","parent":"341600"},{"name":"利辛县","value":"341623","parent":"341600"},{"name":"贵池区","value":"341702","parent":"341700"},{"name":"东至县","value":"341721","parent":"341700"},{"name":"石台县","value":"341722","parent":"341700"},{"name":"青阳县","value":"341723","parent":"341700"},{"name":"宣州区","value":"341802","parent":"341800"},{"name":"郎溪县","value":"341821","parent":"341800"},{"name":"广德县","value":"341822","parent":"341800"},{"name":"泾县","value":"341823","parent":"341800"},{"name":"绩溪县","value":"341824","parent":"341800"},{"name":"旌德县","value":"341825","parent":"341800"},{"name":"宁国市","value":"341881","parent":"341800"},{"name":"福州市","value":"350100","parent":"350000"},{"name":"厦门市","value":"350200","parent":"350000"},{"name":"莆田市","value":"350300","parent":"350000"},{"name":"三明市","value":"350400","parent":"350000"},{"name":"泉州市","value":"350500","parent":"350000"},{"name":"漳州市","value":"350600","parent":"350000"},{"name":"南平市","value":"350700","parent":"350000"},{"name":"龙岩市","value":"350800","parent":"350000"},{"name":"宁德市","value":"350900","parent":"350000"},{"name":"鼓楼区","value":"350102","parent":"350100"},{"name":"台江区","value":"350103","parent":"350100"},{"name":"仓山区","value":"350104","parent":"350100"},{"name":"马尾区","value":"350105","parent":"350100"},{"name":"晋安区","value":"350111","parent":"350100"},{"name":"闽侯县","value":"350121","parent":"350100"},{"name":"连江县","value":"350122","parent":"350100"},{"name":"罗源县","value":"350123","parent":"350100"},{"name":"闽清县","value":"350124","parent":"350100"},{"name":"永泰县","value":"350125","parent":"350100"},{"name":"平潭县","value":"350128","parent":"350100"},{"name":"福清市","value":"350181","parent":"350100"},{"name":"长乐市","value":"350182","parent":"350100"},{"name":"思明区","value":"350203","parent":"350200"},{"name":"海沧区","value":"350205","parent":"350200"},{"name":"湖里区","value":"350206","parent":"350200"},{"name":"集美区","value":"350211","parent":"350200"},{"name":"同安区","value":"350212","parent":"350200"},{"name":"翔安区","value":"350213","parent":"350200"},{"name":"城厢区","value":"350302","parent":"350300"},{"name":"涵江区","value":"350303","parent":"350300"},{"name":"荔城区","value":"350304","parent":"350300"},{"name":"秀屿区","value":"350305","parent":"350300"},{"name":"仙游县","value":"350322","parent":"350300"},{"name":"梅列区","value":"350402","parent":"350400"},{"name":"三元区","value":"350403","parent":"350400"},{"name":"明溪县","value":"350421","parent":"350400"},{"name":"清流县","value":"350423","parent":"350400"},{"name":"宁化县","value":"350424","parent":"350400"},{"name":"大田县","value":"350425","parent":"350400"},{"name":"尤溪县","value":"350426","parent":"350400"},{"name":"沙县","value":"350427","parent":"350400"},{"name":"将乐县","value":"350428","parent":"350400"},{"name":"泰宁县","value":"350429","parent":"350400"},{"name":"建宁县","value":"350430","parent":"350400"},{"name":"永安市","value":"350481","parent":"350400"},{"name":"鲤城区","value":"350502","parent":"350500"},{"name":"丰泽区","value":"350503","parent":"350500"},{"name":"洛江区","value":"350504","parent":"350500"},{"name":"泉港区","value":"350505","parent":"350500"},{"name":"惠安县","value":"350521","parent":"350500"},{"name":"安溪县","value":"350524","parent":"350500"},{"name":"永春县","value":"350525","parent":"350500"},{"name":"德化县","value":"350526","parent":"350500"},{"name":"金门县","value":"350527","parent":"350500"},{"name":"石狮市","value":"350581","parent":"350500"},{"name":"晋江市","value":"350582","parent":"350500"},{"name":"南安市","value":"350583","parent":"350500"},{"name":"芗城区","value":"350602","parent":"350600"},{"name":"龙文区","value":"350603","parent":"350600"},{"name":"云霄县","value":"350622","parent":"350600"},{"name":"漳浦县","value":"350623","parent":"350600"},{"name":"诏安县","value":"350624","parent":"350600"},{"name":"长泰县","value":"350625","parent":"350600"},{"name":"东山县","value":"350626","parent":"350600"},{"name":"南靖县","value":"350627","parent":"350600"},{"name":"平和县","value":"350628","parent":"350600"},{"name":"华安县","value":"350629","parent":"350600"},{"name":"龙海市","value":"350681","parent":"350600"},{"name":"延平区","value":"350702","parent":"350700"},{"name":"建阳区","value":"350703","parent":"350700"},{"name":"顺昌县","value":"350721","parent":"350700"},{"name":"浦城县","value":"350722","parent":"350700"},{"name":"光泽县","value":"350723","parent":"350700"},{"name":"松溪县","value":"350724","parent":"350700"},{"name":"政和县","value":"350725","parent":"350700"},{"name":"邵武市","value":"350781","parent":"350700"},{"name":"武夷山市","value":"350782","parent":"350700"},{"name":"建瓯市","value":"350783","parent":"350700"},{"name":"新罗区","value":"350802","parent":"350800"},{"name":"永定区","value":"350803","parent":"350800"},{"name":"长汀县","value":"350821","parent":"350800"},{"name":"上杭县","value":"350823","parent":"350800"},{"name":"武平县","value":"350824","parent":"350800"},{"name":"连城县","value":"350825","parent":"350800"},{"name":"漳平市","value":"350881","parent":"350800"},{"name":"蕉城区","value":"350902","parent":"350900"},{"name":"霞浦县","value":"350921","parent":"350900"},{"name":"古田县","value":"350922","parent":"350900"},{"name":"屏南县","value":"350923","parent":"350900"},{"name":"寿宁县","value":"350924","parent":"350900"},{"name":"周宁县","value":"350925","parent":"350900"},{"name":"柘荣县","value":"350926","parent":"350900"},{"name":"福安市","value":"350981","parent":"350900"},{"name":"福鼎市","value":"350982","parent":"350900"},{"name":"南昌市","value":"360100","parent":"360000"},{"name":"景德镇市","value":"360200","parent":"360000"},{"name":"萍乡市","value":"360300","parent":"360000"},{"name":"九江市","value":"360400","parent":"360000"},{"name":"新余市","value":"360500","parent":"360000"},{"name":"鹰潭市","value":"360600","parent":"360000"},{"name":"赣州市","value":"360700","parent":"360000"},{"name":"吉安市","value":"360800","parent":"360000"},{"name":"宜春市","value":"360900","parent":"360000"},{"name":"抚州市","value":"361000","parent":"360000"},{"name":"上饶市","value":"361100","parent":"360000"},{"name":"东湖区","value":"360102","parent":"360100"},{"name":"西湖区","value":"360103","parent":"360100"},{"name":"青云谱区","value":"360104","parent":"360100"},{"name":"湾里区","value":"360105","parent":"360100"},{"name":"青山湖区","value":"360111","parent":"360100"},{"name":"新建区","value":"360112","parent":"360100"},{"name":"南昌县","value":"360121","parent":"360100"},{"name":"安义县","value":"360123","parent":"360100"},{"name":"进贤县","value":"360124","parent":"360100"},{"name":"昌江区","value":"360202","parent":"360200"},{"name":"珠山区","value":"360203","parent":"360200"},{"name":"浮梁县","value":"360222","parent":"360200"},{"name":"乐平市","value":"360281","parent":"360200"},{"name":"安源区","value":"360302","parent":"360300"},{"name":"湘东区","value":"360313","parent":"360300"},{"name":"莲花县","value":"360321","parent":"360300"},{"name":"上栗县","value":"360322","parent":"360300"},{"name":"芦溪县","value":"360323","parent":"360300"},{"name":"濂溪区","value":"360402","parent":"360400"},{"name":"浔阳区","value":"360403","parent":"360400"},{"name":"九江县","value":"360421","parent":"360400"},{"name":"武宁县","value":"360423","parent":"360400"},{"name":"修水县","value":"360424","parent":"360400"},{"name":"永修县","value":"360425","parent":"360400"},{"name":"德安县","value":"360426","parent":"360400"},{"name":"都昌县","value":"360428","parent":"360400"},{"name":"湖口县","value":"360429","parent":"360400"},{"name":"彭泽县","value":"360430","parent":"360400"},{"name":"瑞昌市","value":"360481","parent":"360400"},{"name":"共青城市","value":"360482","parent":"360400"},{"name":"庐山市","value":"360483","parent":"360400"},{"name":"渝水区","value":"360502","parent":"360500"},{"name":"分宜县","value":"360521","parent":"360500"},{"name":"月湖区","value":"360602","parent":"360600"},{"name":"余江县","value":"360622","parent":"360600"},{"name":"贵溪市","value":"360681","parent":"360600"},{"name":"章贡区","value":"360702","parent":"360700"},{"name":"南康区","value":"360703","parent":"360700"},{"name":"赣县","value":"360721","parent":"360700"},{"name":"信丰县","value":"360722","parent":"360700"},{"name":"大余县","value":"360723","parent":"360700"},{"name":"上犹县","value":"360724","parent":"360700"},{"name":"崇义县","value":"360725","parent":"360700"},{"name":"安远县","value":"360726","parent":"360700"},{"name":"龙南县","value":"360727","parent":"360700"},{"name":"定南县","value":"360728","parent":"360700"},{"name":"全南县","value":"360729","parent":"360700"},{"name":"宁都县","value":"360730","parent":"360700"},{"name":"于都县","value":"360731","parent":"360700"},{"name":"兴国县","value":"360732","parent":"360700"},{"name":"会昌县","value":"360733","parent":"360700"},{"name":"寻乌县","value":"360734","parent":"360700"},{"name":"石城县","value":"360735","parent":"360700"},{"name":"瑞金市","value":"360781","parent":"360700"},{"name":"吉州区","value":"360802","parent":"360800"},{"name":"青原区","value":"360803","parent":"360800"},{"name":"吉安县","value":"360821","parent":"360800"},{"name":"吉水县","value":"360822","parent":"360800"},{"name":"峡江县","value":"360823","parent":"360800"},{"name":"新干县","value":"360824","parent":"360800"},{"name":"永丰县","value":"360825","parent":"360800"},{"name":"泰和县","value":"360826","parent":"360800"},{"name":"遂川县","value":"360827","parent":"360800"},{"name":"万安县","value":"360828","parent":"360800"},{"name":"安福县","value":"360829","parent":"360800"},{"name":"永新县","value":"360830","parent":"360800"},{"name":"井冈山市","value":"360881","parent":"360800"},{"name":"袁州区","value":"360902","parent":"360900"},{"name":"奉新县","value":"360921","parent":"360900"},{"name":"万载县","value":"360922","parent":"360900"},{"name":"上高县","value":"360923","parent":"360900"},{"name":"宜丰县","value":"360924","parent":"360900"},{"name":"靖安县","value":"360925","parent":"360900"},{"name":"铜鼓县","value":"360926","parent":"360900"},{"name":"丰城市","value":"360981","parent":"360900"},{"name":"樟树市","value":"360982","parent":"360900"},{"name":"高安市","value":"360983","parent":"360900"},{"name":"临川区","value":"361002","parent":"361000"},{"name":"南城县","value":"361021","parent":"361000"},{"name":"黎川县","value":"361022","parent":"361000"},{"name":"南丰县","value":"361023","parent":"361000"},{"name":"崇仁县","value":"361024","parent":"361000"},{"name":"乐安县","value":"361025","parent":"361000"},{"name":"宜黄县","value":"361026","parent":"361000"},{"name":"金溪县","value":"361027","parent":"361000"},{"name":"资溪县","value":"361028","parent":"361000"},{"name":"东乡县","value":"361029","parent":"361000"},{"name":"广昌县","value":"361030","parent":"361000"},{"name":"信州区","value":"361102","parent":"361100"},{"name":"广丰区","value":"361103","parent":"361100"},{"name":"上饶县","value":"361121","parent":"361100"},{"name":"玉山县","value":"361123","parent":"361100"},{"name":"铅山县","value":"361124","parent":"361100"},{"name":"横峰县","value":"361125","parent":"361100"},{"name":"弋阳县","value":"361126","parent":"361100"},{"name":"余干县","value":"361127","parent":"361100"},{"name":"鄱阳县","value":"361128","parent":"361100"},{"name":"万年县","value":"361129","parent":"361100"},{"name":"婺源县","value":"361130","parent":"361100"},{"name":"德兴市","value":"361181","parent":"361100"},{"name":"济南市","value":"370100","parent":"370000"},{"name":"青岛市","value":"370200","parent":"370000"},{"name":"淄博市","value":"370300","parent":"370000"},{"name":"枣庄市","value":"370400","parent":"370000"},{"name":"东营市","value":"370500","parent":"370000"},{"name":"烟台市","value":"370600","parent":"370000"},{"name":"潍坊市","value":"370700","parent":"370000"},{"name":"济宁市","value":"370800","parent":"370000"},{"name":"泰安市","value":"370900","parent":"370000"},{"name":"威海市","value":"371000","parent":"370000"},{"name":"日照市","value":"371100","parent":"370000"},{"name":"莱芜市","value":"371200","parent":"370000"},{"name":"临沂市","value":"371300","parent":"370000"},{"name":"德州市","value":"371400","parent":"370000"},{"name":"聊城市","value":"371500","parent":"370000"},{"name":"滨州市","value":"371600","parent":"370000"},{"name":"菏泽市","value":"371700","parent":"370000"},{"name":"历下区","value":"370102","parent":"370100"},{"name":"市中区","value":"370103","parent":"370100"},{"name":"槐荫区","value":"370104","parent":"370100"},{"name":"天桥区","value":"370105","parent":"370100"},{"name":"历城区","value":"370112","parent":"370100"},{"name":"长清区","value":"370113","parent":"370100"},{"name":"平阴县","value":"370124","parent":"370100"},{"name":"济阳县","value":"370125","parent":"370100"},{"name":"商河县","value":"370126","parent":"370100"},{"name":"章丘市","value":"370181","parent":"370100"},{"name":"市南区","value":"370202","parent":"370200"},{"name":"市北区","value":"370203","parent":"370200"},{"name":"黄岛区","value":"370211","parent":"370200"},{"name":"崂山区","value":"370212","parent":"370200"},{"name":"李沧区","value":"370213","parent":"370200"},{"name":"城阳区","value":"370214","parent":"370200"},{"name":"胶州市","value":"370281","parent":"370200"},{"name":"即墨市","value":"370282","parent":"370200"},{"name":"平度市","value":"370283","parent":"370200"},{"name":"莱西市","value":"370285","parent":"370200"},{"name":"淄川区","value":"370302","parent":"370300"},{"name":"张店区","value":"370303","parent":"370300"},{"name":"博山区","value":"370304","parent":"370300"},{"name":"临淄区","value":"370305","parent":"370300"},{"name":"周村区","value":"370306","parent":"370300"},{"name":"桓台县","value":"370321","parent":"370300"},{"name":"高青县","value":"370322","parent":"370300"},{"name":"沂源县","value":"370323","parent":"370300"},{"name":"市中区","value":"370402","parent":"370400"},{"name":"薛城区","value":"370403","parent":"370400"},{"name":"峄城区","value":"370404","parent":"370400"},{"name":"台儿庄区","value":"370405","parent":"370400"},{"name":"山亭区","value":"370406","parent":"370400"},{"name":"滕州市","value":"370481","parent":"370400"},{"name":"东营区","value":"370502","parent":"370500"},{"name":"河口区","value":"370503","parent":"370500"},{"name":"垦利区","value":"370505","parent":"370500"},{"name":"利津县","value":"370522","parent":"370500"},{"name":"广饶县","value":"370523","parent":"370500"},{"name":"芝罘区","value":"370602","parent":"370600"},{"name":"福山区","value":"370611","parent":"370600"},{"name":"牟平区","value":"370612","parent":"370600"},{"name":"莱山区","value":"370613","parent":"370600"},{"name":"长岛县","value":"370634","parent":"370600"},{"name":"龙口市","value":"370681","parent":"370600"},{"name":"莱阳市","value":"370682","parent":"370600"},{"name":"莱州市","value":"370683","parent":"370600"},{"name":"蓬莱市","value":"370684","parent":"370600"},{"name":"招远市","value":"370685","parent":"370600"},{"name":"栖霞市","value":"370686","parent":"370600"},{"name":"海阳市","value":"370687","parent":"370600"},{"name":"潍城区","value":"370702","parent":"370700"},{"name":"寒亭区","value":"370703","parent":"370700"},{"name":"坊子区","value":"370704","parent":"370700"},{"name":"奎文区","value":"370705","parent":"370700"},{"name":"临朐县","value":"370724","parent":"370700"},{"name":"昌乐县","value":"370725","parent":"370700"},{"name":"青州市","value":"370781","parent":"370700"},{"name":"诸城市","value":"370782","parent":"370700"},{"name":"寿光市","value":"370783","parent":"370700"},{"name":"安丘市","value":"370784","parent":"370700"},{"name":"高密市","value":"370785","parent":"370700"},{"name":"昌邑市","value":"370786","parent":"370700"},{"name":"任城区","value":"370811","parent":"370800"},{"name":"兖州区","value":"370812","parent":"370800"},{"name":"微山县","value":"370826","parent":"370800"},{"name":"鱼台县","value":"370827","parent":"370800"},{"name":"金乡县","value":"370828","parent":"370800"},{"name":"嘉祥县","value":"370829","parent":"370800"},{"name":"汶上县","value":"370830","parent":"370800"},{"name":"泗水县","value":"370831","parent":"370800"},{"name":"梁山县","value":"370832","parent":"370800"},{"name":"曲阜市","value":"370881","parent":"370800"},{"name":"邹城市","value":"370883","parent":"370800"},{"name":"泰山区","value":"370902","parent":"370900"},{"name":"岱岳区","value":"370911","parent":"370900"},{"name":"宁阳县","value":"370921","parent":"370900"},{"name":"东平县","value":"370923","parent":"370900"},{"name":"新泰市","value":"370982","parent":"370900"},{"name":"肥城市","value":"370983","parent":"370900"},{"name":"环翠区","value":"371002","parent":"371000"},{"name":"文登区","value":"371003","parent":"371000"},{"name":"荣成市","value":"371082","parent":"371000"},{"name":"乳山市","value":"371083","parent":"371000"},{"name":"东港区","value":"371102","parent":"371100"},{"name":"岚山区","value":"371103","parent":"371100"},{"name":"五莲县","value":"371121","parent":"371100"},{"name":"莒县","value":"371122","parent":"371100"},{"name":"莱城区","value":"371202","parent":"371200"},{"name":"钢城区","value":"371203","parent":"371200"},{"name":"兰山区","value":"371302","parent":"371300"},{"name":"罗庄区","value":"371311","parent":"371300"},{"name":"河东区","value":"371312","parent":"371300"},{"name":"沂南县","value":"371321","parent":"371300"},{"name":"郯城县","value":"371322","parent":"371300"},{"name":"沂水县","value":"371323","parent":"371300"},{"name":"兰陵县","value":"371324","parent":"371300"},{"name":"费县","value":"371325","parent":"371300"},{"name":"平邑县","value":"371326","parent":"371300"},{"name":"莒南县","value":"371327","parent":"371300"},{"name":"蒙阴县","value":"371328","parent":"371300"},{"name":"临沭县","value":"371329","parent":"371300"},{"name":"德城区","value":"371402","parent":"371400"},{"name":"陵城区","value":"371403","parent":"371400"},{"name":"宁津县","value":"371422","parent":"371400"},{"name":"庆云县","value":"371423","parent":"371400"},{"name":"临邑县","value":"371424","parent":"371400"},{"name":"齐河县","value":"371425","parent":"371400"},{"name":"平原县","value":"371426","parent":"371400"},{"name":"夏津县","value":"371427","parent":"371400"},{"name":"武城县","value":"371428","parent":"371400"},{"name":"乐陵市","value":"371481","parent":"371400"},{"name":"禹城市","value":"371482","parent":"371400"},{"name":"东昌府区","value":"371502","parent":"371500"},{"name":"阳谷县","value":"371521","parent":"371500"},{"name":"莘县","value":"371522","parent":"371500"},{"name":"茌平县","value":"371523","parent":"371500"},{"name":"东阿县","value":"371524","parent":"371500"},{"name":"冠县","value":"371525","parent":"371500"},{"name":"高唐县","value":"371526","parent":"371500"},{"name":"临清市","value":"371581","parent":"371500"},{"name":"滨城区","value":"371602","parent":"371600"},{"name":"沾化区","value":"371603","parent":"371600"},{"name":"惠民县","value":"371621","parent":"371600"},{"name":"阳信县","value":"371622","parent":"371600"},{"name":"无棣县","value":"371623","parent":"371600"},{"name":"博兴县","value":"371625","parent":"371600"},{"name":"邹平县","value":"371626","parent":"371600"},{"name":"牡丹区","value":"371702","parent":"371700"},{"name":"定陶区","value":"371703","parent":"371700"},{"name":"曹县","value":"371721","parent":"371700"},{"name":"单县","value":"371722","parent":"371700"},{"name":"成武县","value":"371723","parent":"371700"},{"name":"巨野县","value":"371724","parent":"371700"},{"name":"郓城县","value":"371725","parent":"371700"},{"name":"鄄城县","value":"371726","parent":"371700"},{"name":"东明县","value":"371728","parent":"371700"},{"name":"郑州市","value":"410100","parent":"410000"},{"name":"开封市","value":"410200","parent":"410000"},{"name":"洛阳市","value":"410300","parent":"410000"},{"name":"平顶山市","value":"410400","parent":"410000"},{"name":"安阳市","value":"410500","parent":"410000"},{"name":"鹤壁市","value":"410600","parent":"410000"},{"name":"新乡市","value":"410700","parent":"410000"},{"name":"焦作市","value":"410800","parent":"410000"},{"name":"濮阳市","value":"410900","parent":"410000"},{"name":"许昌市","value":"411000","parent":"410000"},{"name":"漯河市","value":"411100","parent":"410000"},{"name":"三门峡市","value":"411200","parent":"410000"},{"name":"南阳市","value":"411300","parent":"410000"},{"name":"商丘市","value":"411400","parent":"410000"},{"name":"信阳市","value":"411500","parent":"410000"},{"name":"周口市","value":"411600","parent":"410000"},{"name":"驻马店市","value":"411700","parent":"410000"},{"name":"济源市","value":"419001","parent":"410000"},{"name":"中原区","value":"410102","parent":"410100"},{"name":"二七区","value":"410103","parent":"410100"},{"name":"管城回族区","value":"410104","parent":"410100"},{"name":"金水区","value":"410105","parent":"410100"},{"name":"上街区","value":"410106","parent":"410100"},{"name":"惠济区","value":"410108","parent":"410100"},{"name":"中牟县","value":"410122","parent":"410100"},{"name":"巩义市","value":"410181","parent":"410100"},{"name":"荥阳市","value":"410182","parent":"410100"},{"name":"新密市","value":"410183","parent":"410100"},{"name":"新郑市","value":"410184","parent":"410100"},{"name":"登封市","value":"410185","parent":"410100"},{"name":"龙亭区","value":"410202","parent":"410200"},{"name":"顺河回族区","value":"410203","parent":"410200"},{"name":"鼓楼区","value":"410204","parent":"410200"},{"name":"禹王台区","value":"410205","parent":"410200"},{"name":"金明区","value":"410211","parent":"410200"},{"name":"祥符区","value":"410212","parent":"410200"},{"name":"杞县","value":"410221","parent":"410200"},{"name":"通许县","value":"410222","parent":"410200"},{"name":"尉氏县","value":"410223","parent":"410200"},{"name":"兰考县","value":"410225","parent":"410200"},{"name":"老城区","value":"410302","parent":"410300"},{"name":"西工区","value":"410303","parent":"410300"},{"name":"瀍河回族区","value":"410304","parent":"410300"},{"name":"涧西区","value":"410305","parent":"410300"},{"name":"吉利区","value":"410306","parent":"410300"},{"name":"洛龙区","value":"410311","parent":"410300"},{"name":"孟津县","value":"410322","parent":"410300"},{"name":"新安县","value":"410323","parent":"410300"},{"name":"栾川县","value":"410324","parent":"410300"},{"name":"嵩县","value":"410325","parent":"410300"},{"name":"汝阳县","value":"410326","parent":"410300"},{"name":"宜阳县","value":"410327","parent":"410300"},{"name":"洛宁县","value":"410328","parent":"410300"},{"name":"伊川县","value":"410329","parent":"410300"},{"name":"偃师市","value":"410381","parent":"410300"},{"name":"新华区","value":"410402","parent":"410400"},{"name":"卫东区","value":"410403","parent":"410400"},{"name":"石龙区","value":"410404","parent":"410400"},{"name":"湛河区","value":"410411","parent":"410400"},{"name":"宝丰县","value":"410421","parent":"410400"},{"name":"叶县","value":"410422","parent":"410400"},{"name":"鲁山县","value":"410423","parent":"410400"},{"name":"郏县","value":"410425","parent":"410400"},{"name":"舞钢市","value":"410481","parent":"410400"},{"name":"汝州市","value":"410482","parent":"410400"},{"name":"文峰区","value":"410502","parent":"410500"},{"name":"北关区","value":"410503","parent":"410500"},{"name":"殷都区","value":"410505","parent":"410500"},{"name":"龙安区","value":"410506","parent":"410500"},{"name":"安阳县","value":"410522","parent":"410500"},{"name":"汤阴县","value":"410523","parent":"410500"},{"name":"滑县","value":"410526","parent":"410500"},{"name":"内黄县","value":"410527","parent":"410500"},{"name":"林州市","value":"410581","parent":"410500"},{"name":"鹤山区","value":"410602","parent":"410600"},{"name":"山城区","value":"410603","parent":"410600"},{"name":"淇滨区","value":"410611","parent":"410600"},{"name":"浚县","value":"410621","parent":"410600"},{"name":"淇县","value":"410622","parent":"410600"},{"name":"红旗区","value":"410702","parent":"410700"},{"name":"卫滨区","value":"410703","parent":"410700"},{"name":"凤泉区","value":"410704","parent":"410700"},{"name":"牧野区","value":"410711","parent":"410700"},{"name":"新乡县","value":"410721","parent":"410700"},{"name":"获嘉县","value":"410724","parent":"410700"},{"name":"原阳县","value":"410725","parent":"410700"},{"name":"延津县","value":"410726","parent":"410700"},{"name":"封丘县","value":"410727","parent":"410700"},{"name":"长垣县","value":"410728","parent":"410700"},{"name":"卫辉市","value":"410781","parent":"410700"},{"name":"辉县市","value":"410782","parent":"410700"},{"name":"解放区","value":"410802","parent":"410800"},{"name":"中站区","value":"410803","parent":"410800"},{"name":"马村区","value":"410804","parent":"410800"},{"name":"山阳区","value":"410811","parent":"410800"},{"name":"修武县","value":"410821","parent":"410800"},{"name":"博爱县","value":"410822","parent":"410800"},{"name":"武陟县","value":"410823","parent":"410800"},{"name":"温县","value":"410825","parent":"410800"},{"name":"沁阳市","value":"410882","parent":"410800"},{"name":"孟州市","value":"410883","parent":"410800"},{"name":"华龙区","value":"410902","parent":"410900"},{"name":"清丰县","value":"410922","parent":"410900"},{"name":"南乐县","value":"410923","parent":"410900"},{"name":"范县","value":"410926","parent":"410900"},{"name":"台前县","value":"410927","parent":"410900"},{"name":"濮阳县","value":"410928","parent":"410900"},{"name":"魏都区","value":"411002","parent":"411000"},{"name":"许昌县","value":"411023","parent":"411000"},{"name":"鄢陵县","value":"411024","parent":"411000"},{"name":"襄城县","value":"411025","parent":"411000"},{"name":"禹州市","value":"411081","parent":"411000"},{"name":"长葛市","value":"411082","parent":"411000"},{"name":"源汇区","value":"411102","parent":"411100"},{"name":"郾城区","value":"411103","parent":"411100"},{"name":"召陵区","value":"411104","parent":"411100"},{"name":"舞阳县","value":"411121","parent":"411100"},{"name":"临颍县","value":"411122","parent":"411100"},{"name":"湖滨区","value":"411202","parent":"411200"},{"name":"陕州区","value":"411203","parent":"411200"},{"name":"渑池县","value":"411221","parent":"411200"},{"name":"卢氏县","value":"411224","parent":"411200"},{"name":"义马市","value":"411281","parent":"411200"},{"name":"灵宝市","value":"411282","parent":"411200"},{"name":"宛城区","value":"411302","parent":"411300"},{"name":"卧龙区","value":"411303","parent":"411300"},{"name":"南召县","value":"411321","parent":"411300"},{"name":"方城县","value":"411322","parent":"411300"},{"name":"西峡县","value":"411323","parent":"411300"},{"name":"镇平县","value":"411324","parent":"411300"},{"name":"内乡县","value":"411325","parent":"411300"},{"name":"淅川县","value":"411326","parent":"411300"},{"name":"社旗县","value":"411327","parent":"411300"},{"name":"唐河县","value":"411328","parent":"411300"},{"name":"新野县","value":"411329","parent":"411300"},{"name":"桐柏县","value":"411330","parent":"411300"},{"name":"邓州市","value":"411381","parent":"411300"},{"name":"梁园区","value":"411402","parent":"411400"},{"name":"睢阳区","value":"411403","parent":"411400"},{"name":"民权县","value":"411421","parent":"411400"},{"name":"睢县","value":"411422","parent":"411400"},{"name":"宁陵县","value":"411423","parent":"411400"},{"name":"柘城县","value":"411424","parent":"411400"},{"name":"虞城县","value":"411425","parent":"411400"},{"name":"夏邑县","value":"411426","parent":"411400"},{"name":"永城市","value":"411481","parent":"411400"},{"name":"浉河区","value":"411502","parent":"411500"},{"name":"平桥区","value":"411503","parent":"411500"},{"name":"罗山县","value":"411521","parent":"411500"},{"name":"光山县","value":"411522","parent":"411500"},{"name":"新县","value":"411523","parent":"411500"},{"name":"商城县","value":"411524","parent":"411500"},{"name":"固始县","value":"411525","parent":"411500"},{"name":"潢川县","value":"411526","parent":"411500"},{"name":"淮滨县","value":"411527","parent":"411500"},{"name":"息县","value":"411528","parent":"411500"},{"name":"川汇区","value":"411602","parent":"411600"},{"name":"扶沟县","value":"411621","parent":"411600"},{"name":"西华县","value":"411622","parent":"411600"},{"name":"商水县","value":"411623","parent":"411600"},{"name":"沈丘县","value":"411624","parent":"411600"},{"name":"郸城县","value":"411625","parent":"411600"},{"name":"淮阳县","value":"411626","parent":"411600"},{"name":"太康县","value":"411627","parent":"411600"},{"name":"鹿邑县","value":"411628","parent":"411600"},{"name":"项城市","value":"411681","parent":"411600"},{"name":"驿城区","value":"411702","parent":"411700"},{"name":"西平县","value":"411721","parent":"411700"},{"name":"上蔡县","value":"411722","parent":"411700"},{"name":"平舆县","value":"411723","parent":"411700"},{"name":"正阳县","value":"411724","parent":"411700"},{"name":"确山县","value":"411725","parent":"411700"},{"name":"泌阳县","value":"411726","parent":"411700"},{"name":"汝南县","value":"411727","parent":"411700"},{"name":"遂平县","value":"411728","parent":"411700"},{"name":"新蔡县","value":"411729","parent":"411700"},{"name":"武汉市","value":"420100","parent":"420000"},{"name":"黄石市","value":"420200","parent":"420000"},{"name":"十堰市","value":"420300","parent":"420000"},{"name":"宜昌市","value":"420500","parent":"420000"},{"name":"襄阳市","value":"420600","parent":"420000"},{"name":"鄂州市","value":"420700","parent":"420000"},{"name":"荆门市","value":"420800","parent":"420000"},{"name":"孝感市","value":"420900","parent":"420000"},{"name":"荆州市","value":"421000","parent":"420000"},{"name":"黄冈市","value":"421100","parent":"420000"},{"name":"咸宁市","value":"421200","parent":"420000"},{"name":"随州市","value":"421300","parent":"420000"},{"name":"恩施土家族苗族自治州","value":"422800","parent":"420000"},{"name":"仙桃市","value":"429004","parent":"420000"},{"name":"潜江市","value":"429005","parent":"420000"},{"name":"天门市","value":"429006","parent":"420000"},{"name":"神农架林区","value":"429021","parent":"420000"},{"name":"江岸区","value":"420102","parent":"420100"},{"name":"江汉区","value":"420103","parent":"420100"},{"name":"硚口区","value":"420104","parent":"420100"},{"name":"汉阳区","value":"420105","parent":"420100"},{"name":"武昌区","value":"420106","parent":"420100"},{"name":"青山区","value":"420107","parent":"420100"},{"name":"洪山区","value":"420111","parent":"420100"},{"name":"东西湖区","value":"420112","parent":"420100"},{"name":"汉南区","value":"420113","parent":"420100"},{"name":"蔡甸区","value":"420114","parent":"420100"},{"name":"江夏区","value":"420115","parent":"420100"},{"name":"黄陂区","value":"420116","parent":"420100"},{"name":"新洲区","value":"420117","parent":"420100"},{"name":"黄石港区","value":"420202","parent":"420200"},{"name":"西塞山区","value":"420203","parent":"420200"},{"name":"下陆区","value":"420204","parent":"420200"},{"name":"铁山区","value":"420205","parent":"420200"},{"name":"阳新县","value":"420222","parent":"420200"},{"name":"大冶市","value":"420281","parent":"420200"},{"name":"茅箭区","value":"420302","parent":"420300"},{"name":"张湾区","value":"420303","parent":"420300"},{"name":"郧阳区","value":"420304","parent":"420300"},{"name":"郧西县","value":"420322","parent":"420300"},{"name":"竹山县","value":"420323","parent":"420300"},{"name":"竹溪县","value":"420324","parent":"420300"},{"name":"房县","value":"420325","parent":"420300"},{"name":"丹江口市","value":"420381","parent":"420300"},{"name":"西陵区","value":"420502","parent":"420500"},{"name":"伍家岗区","value":"420503","parent":"420500"},{"name":"点军区","value":"420504","parent":"420500"},{"name":"猇亭区","value":"420505","parent":"420500"},{"name":"夷陵区","value":"420506","parent":"420500"},{"name":"远安县","value":"420525","parent":"420500"},{"name":"兴山县","value":"420526","parent":"420500"},{"name":"秭归县","value":"420527","parent":"420500"},{"name":"长阳土家族自治县","value":"420528","parent":"420500"},{"name":"五峰土家族自治县","value":"420529","parent":"420500"},{"name":"宜都市","value":"420581","parent":"420500"},{"name":"当阳市","value":"420582","parent":"420500"},{"name":"枝江市","value":"420583","parent":"420500"},{"name":"襄城区","value":"420602","parent":"420600"},{"name":"樊城区","value":"420606","parent":"420600"},{"name":"襄州区","value":"420607","parent":"420600"},{"name":"南漳县","value":"420624","parent":"420600"},{"name":"谷城县","value":"420625","parent":"420600"},{"name":"保康县","value":"420626","parent":"420600"},{"name":"老河口市","value":"420682","parent":"420600"},{"name":"枣阳市","value":"420683","parent":"420600"},{"name":"宜城市","value":"420684","parent":"420600"},{"name":"梁子湖区","value":"420702","parent":"420700"},{"name":"华容区","value":"420703","parent":"420700"},{"name":"鄂城区","value":"420704","parent":"420700"},{"name":"东宝区","value":"420802","parent":"420800"},{"name":"掇刀区","value":"420804","parent":"420800"},{"name":"京山县","value":"420821","parent":"420800"},{"name":"沙洋县","value":"420822","parent":"420800"},{"name":"钟祥市","value":"420881","parent":"420800"},{"name":"孝南区","value":"420902","parent":"420900"},{"name":"孝昌县","value":"420921","parent":"420900"},{"name":"大悟县","value":"420922","parent":"420900"},{"name":"云梦县","value":"420923","parent":"420900"},{"name":"应城市","value":"420981","parent":"420900"},{"name":"安陆市","value":"420982","parent":"420900"},{"name":"汉川市","value":"420984","parent":"420900"},{"name":"沙市区","value":"421002","parent":"421000"},{"name":"荆州区","value":"421003","parent":"421000"},{"name":"公安县","value":"421022","parent":"421000"},{"name":"监利县","value":"421023","parent":"421000"},{"name":"江陵县","value":"421024","parent":"421000"},{"name":"石首市","value":"421081","parent":"421000"},{"name":"洪湖市","value":"421083","parent":"421000"},{"name":"松滋市","value":"421087","parent":"421000"},{"name":"黄州区","value":"421102","parent":"421100"},{"name":"团风县","value":"421121","parent":"421100"},{"name":"红安县","value":"421122","parent":"421100"},{"name":"罗田县","value":"421123","parent":"421100"},{"name":"英山县","value":"421124","parent":"421100"},{"name":"浠水县","value":"421125","parent":"421100"},{"name":"蕲春县","value":"421126","parent":"421100"},{"name":"黄梅县","value":"421127","parent":"421100"},{"name":"麻城市","value":"421181","parent":"421100"},{"name":"武穴市","value":"421182","parent":"421100"},{"name":"咸安区","value":"421202","parent":"421200"},{"name":"嘉鱼县","value":"421221","parent":"421200"},{"name":"通城县","value":"421222","parent":"421200"},{"name":"崇阳县","value":"421223","parent":"421200"},{"name":"通山县","value":"421224","parent":"421200"},{"name":"赤壁市","value":"421281","parent":"421200"},{"name":"曾都区","value":"421303","parent":"421300"},{"name":"随县","value":"421321","parent":"421300"},{"name":"广水市","value":"421381","parent":"421300"},{"name":"恩施市","value":"422801","parent":"422800"},{"name":"利川市","value":"422802","parent":"422800"},{"name":"建始县","value":"422822","parent":"422800"},{"name":"巴东县","value":"422823","parent":"422800"},{"name":"宣恩县","value":"422825","parent":"422800"},{"name":"咸丰县","value":"422826","parent":"422800"},{"name":"来凤县","value":"422827","parent":"422800"},{"name":"鹤峰县","value":"422828","parent":"422800"},{"name":"长沙市","value":"430100","parent":"430000"},{"name":"株洲市","value":"430200","parent":"430000"},{"name":"湘潭市","value":"430300","parent":"430000"},{"name":"衡阳市","value":"430400","parent":"430000"},{"name":"邵阳市","value":"430500","parent":"430000"},{"name":"岳阳市","value":"430600","parent":"430000"},{"name":"常德市","value":"430700","parent":"430000"},{"name":"张家界市","value":"430800","parent":"430000"},{"name":"益阳市","value":"430900","parent":"430000"},{"name":"郴州市","value":"431000","parent":"430000"},{"name":"永州市","value":"431100","parent":"430000"},{"name":"怀化市","value":"431200","parent":"430000"},{"name":"娄底市","value":"431300","parent":"430000"},{"name":"湘西土家族苗族自治州","value":"433100","parent":"430000"},{"name":"芙蓉区","value":"430102","parent":"430100"},{"name":"天心区","value":"430103","parent":"430100"},{"name":"岳麓区","value":"430104","parent":"430100"},{"name":"开福区","value":"430105","parent":"430100"},{"name":"雨花区","value":"430111","parent":"430100"},{"name":"望城区","value":"430112","parent":"430100"},{"name":"长沙县","value":"430121","parent":"430100"},{"name":"宁乡县","value":"430124","parent":"430100"},{"name":"浏阳市","value":"430181","parent":"430100"},{"name":"荷塘区","value":"430202","parent":"430200"},{"name":"芦淞区","value":"430203","parent":"430200"},{"name":"石峰区","value":"430204","parent":"430200"},{"name":"天元区","value":"430211","parent":"430200"},{"name":"株洲县","value":"430221","parent":"430200"},{"name":"攸县","value":"430223","parent":"430200"},{"name":"茶陵县","value":"430224","parent":"430200"},{"name":"炎陵县","value":"430225","parent":"430200"},{"name":"醴陵市","value":"430281","parent":"430200"},{"name":"雨湖区","value":"430302","parent":"430300"},{"name":"岳塘区","value":"430304","parent":"430300"},{"name":"湘潭县","value":"430321","parent":"430300"},{"name":"湘乡市","value":"430381","parent":"430300"},{"name":"韶山市","value":"430382","parent":"430300"},{"name":"珠晖区","value":"430405","parent":"430400"},{"name":"雁峰区","value":"430406","parent":"430400"},{"name":"石鼓区","value":"430407","parent":"430400"},{"name":"蒸湘区","value":"430408","parent":"430400"},{"name":"南岳区","value":"430412","parent":"430400"},{"name":"衡阳县","value":"430421","parent":"430400"},{"name":"衡南县","value":"430422","parent":"430400"},{"name":"衡山县","value":"430423","parent":"430400"},{"name":"衡东县","value":"430424","parent":"430400"},{"name":"祁东县","value":"430426","parent":"430400"},{"name":"耒阳市","value":"430481","parent":"430400"},{"name":"常宁市","value":"430482","parent":"430400"},{"name":"双清区","value":"430502","parent":"430500"},{"name":"大祥区","value":"430503","parent":"430500"},{"name":"北塔区","value":"430511","parent":"430500"},{"name":"邵东县","value":"430521","parent":"430500"},{"name":"新邵县","value":"430522","parent":"430500"},{"name":"邵阳县","value":"430523","parent":"430500"},{"name":"隆回县","value":"430524","parent":"430500"},{"name":"洞口县","value":"430525","parent":"430500"},{"name":"绥宁县","value":"430527","parent":"430500"},{"name":"新宁县","value":"430528","parent":"430500"},{"name":"城步苗族自治县","value":"430529","parent":"430500"},{"name":"武冈市","value":"430581","parent":"430500"},{"name":"岳阳楼区","value":"430602","parent":"430600"},{"name":"云溪区","value":"430603","parent":"430600"},{"name":"君山区","value":"430611","parent":"430600"},{"name":"岳阳县","value":"430621","parent":"430600"},{"name":"华容县","value":"430623","parent":"430600"},{"name":"湘阴县","value":"430624","parent":"430600"},{"name":"平江县","value":"430626","parent":"430600"},{"name":"汨罗市","value":"430681","parent":"430600"},{"name":"临湘市","value":"430682","parent":"430600"},{"name":"武陵区","value":"430702","parent":"430700"},{"name":"鼎城区","value":"430703","parent":"430700"},{"name":"安乡县","value":"430721","parent":"430700"},{"name":"汉寿县","value":"430722","parent":"430700"},{"name":"澧县","value":"430723","parent":"430700"},{"name":"临澧县","value":"430724","parent":"430700"},{"name":"桃源县","value":"430725","parent":"430700"},{"name":"石门县","value":"430726","parent":"430700"},{"name":"津市市","value":"430781","parent":"430700"},{"name":"永定区","value":"430802","parent":"430800"},{"name":"武陵源区","value":"430811","parent":"430800"},{"name":"慈利县","value":"430821","parent":"430800"},{"name":"桑植县","value":"430822","parent":"430800"},{"name":"资阳区","value":"430902","parent":"430900"},{"name":"赫山区","value":"430903","parent":"430900"},{"name":"南县","value":"430921","parent":"430900"},{"name":"桃江县","value":"430922","parent":"430900"},{"name":"安化县","value":"430923","parent":"430900"},{"name":"沅江市","value":"430981","parent":"430900"},{"name":"北湖区","value":"431002","parent":"431000"},{"name":"苏仙区","value":"431003","parent":"431000"},{"name":"桂阳县","value":"431021","parent":"431000"},{"name":"宜章县","value":"431022","parent":"431000"},{"name":"永兴县","value":"431023","parent":"431000"},{"name":"嘉禾县","value":"431024","parent":"431000"},{"name":"临武县","value":"431025","parent":"431000"},{"name":"汝城县","value":"431026","parent":"431000"},{"name":"桂东县","value":"431027","parent":"431000"},{"name":"安仁县","value":"431028","parent":"431000"},{"name":"资兴市","value":"431081","parent":"431000"},{"name":"零陵区","value":"431102","parent":"431100"},{"name":"冷水滩区","value":"431103","parent":"431100"},{"name":"祁阳县","value":"431121","parent":"431100"},{"name":"东安县","value":"431122","parent":"431100"},{"name":"双牌县","value":"431123","parent":"431100"},{"name":"道县","value":"431124","parent":"431100"},{"name":"江永县","value":"431125","parent":"431100"},{"name":"宁远县","value":"431126","parent":"431100"},{"name":"蓝山县","value":"431127","parent":"431100"},{"name":"新田县","value":"431128","parent":"431100"},{"name":"江华瑶族自治县","value":"431129","parent":"431100"},{"name":"鹤城区","value":"431202","parent":"431200"},{"name":"中方县","value":"431221","parent":"431200"},{"name":"沅陵县","value":"431222","parent":"431200"},{"name":"辰溪县","value":"431223","parent":"431200"},{"name":"溆浦县","value":"431224","parent":"431200"},{"name":"会同县","value":"431225","parent":"431200"},{"name":"麻阳苗族自治县","value":"431226","parent":"431200"},{"name":"新晃侗族自治县","value":"431227","parent":"431200"},{"name":"芷江侗族自治县","value":"431228","parent":"431200"},{"name":"靖州苗族侗族自治县","value":"431229","parent":"431200"},{"name":"通道侗族自治县","value":"431230","parent":"431200"},{"name":"洪江市","value":"431281","parent":"431200"},{"name":"娄星区","value":"431302","parent":"431300"},{"name":"双峰县","value":"431321","parent":"431300"},{"name":"新化县","value":"431322","parent":"431300"},{"name":"冷水江市","value":"431381","parent":"431300"},{"name":"涟源市","value":"431382","parent":"431300"},{"name":"吉首市","value":"433101","parent":"433100"},{"name":"泸溪县","value":"433122","parent":"433100"},{"name":"凤凰县","value":"433123","parent":"433100"},{"name":"花垣县","value":"433124","parent":"433100"},{"name":"保靖县","value":"433125","parent":"433100"},{"name":"古丈县","value":"433126","parent":"433100"},{"name":"永顺县","value":"433127","parent":"433100"},{"name":"龙山县","value":"433130","parent":"433100"},{"name":"广州市","value":"440100","parent":"440000"},{"name":"韶关市","value":"440200","parent":"440000"},{"name":"深圳市","value":"440300","parent":"440000"},{"name":"珠海市","value":"440400","parent":"440000"},{"name":"汕头市","value":"440500","parent":"440000"},{"name":"佛山市","value":"440600","parent":"440000"},{"name":"江门市","value":"440700","parent":"440000"},{"name":"湛江市","value":"440800","parent":"440000"},{"name":"茂名市","value":"440900","parent":"440000"},{"name":"肇庆市","value":"441200","parent":"440000"},{"name":"惠州市","value":"441300","parent":"440000"},{"name":"梅州市","value":"441400","parent":"440000"},{"name":"汕尾市","value":"441500","parent":"440000"},{"name":"河源市","value":"441600","parent":"440000"},{"name":"阳江市","value":"441700","parent":"440000"},{"name":"清远市","value":"441800","parent":"440000"},{"name":"东莞市","value":"441900","parent":"440000"},{"name":"中山市","value":"442000","parent":"440000"},{"name":"潮州市","value":"445100","parent":"440000"},{"name":"揭阳市","value":"445200","parent":"440000"},{"name":"云浮市","value":"445300","parent":"440000"},{"name":"荔湾区","value":"440103","parent":"440100"},{"name":"越秀区","value":"440104","parent":"440100"},{"name":"海珠区","value":"440105","parent":"440100"},{"name":"天河区","value":"440106","parent":"440100"},{"name":"白云区","value":"440111","parent":"440100"},{"name":"黄埔区","value":"440112","parent":"440100"},{"name":"番禺区","value":"440113","parent":"440100"},{"name":"花都区","value":"440114","parent":"440100"},{"name":"南沙区","value":"440115","parent":"440100"},{"name":"从化区","value":"440117","parent":"440100"},{"name":"增城区","value":"440118","parent":"440100"},{"name":"武江区","value":"440203","parent":"440200"},{"name":"浈江区","value":"440204","parent":"440200"},{"name":"曲江区","value":"440205","parent":"440200"},{"name":"始兴县","value":"440222","parent":"440200"},{"name":"仁化县","value":"440224","parent":"440200"},{"name":"翁源县","value":"440229","parent":"440200"},{"name":"乳源瑶族自治县","value":"440232","parent":"440200"},{"name":"新丰县","value":"440233","parent":"440200"},{"name":"乐昌市","value":"440281","parent":"440200"},{"name":"南雄市","value":"440282","parent":"440200"},{"name":"罗湖区","value":"440303","parent":"440300"},{"name":"福田区","value":"440304","parent":"440300"},{"name":"南山区","value":"440305","parent":"440300"},{"name":"宝安区","value":"440306","parent":"440300"},{"name":"龙岗区","value":"440307","parent":"440300"},{"name":"盐田区","value":"440308","parent":"440300"},{"name":"香洲区","value":"440402","parent":"440400"},{"name":"斗门区","value":"440403","parent":"440400"},{"name":"金湾区","value":"440404","parent":"440400"},{"name":"龙湖区","value":"440507","parent":"440500"},{"name":"金平区","value":"440511","parent":"440500"},{"name":"濠江区","value":"440512","parent":"440500"},{"name":"潮阳区","value":"440513","parent":"440500"},{"name":"潮南区","value":"440514","parent":"440500"},{"name":"澄海区","value":"440515","parent":"440500"},{"name":"南澳县","value":"440523","parent":"440500"},{"name":"禅城区","value":"440604","parent":"440600"},{"name":"南海区","value":"440605","parent":"440600"},{"name":"顺德区","value":"440606","parent":"440600"},{"name":"三水区","value":"440607","parent":"440600"},{"name":"高明区","value":"440608","parent":"440600"},{"name":"蓬江区","value":"440703","parent":"440700"},{"name":"江海区","value":"440704","parent":"440700"},{"name":"新会区","value":"440705","parent":"440700"},{"name":"台山市","value":"440781","parent":"440700"},{"name":"开平市","value":"440783","parent":"440700"},{"name":"鹤山市","value":"440784","parent":"440700"},{"name":"恩平市","value":"440785","parent":"440700"},{"name":"赤坎区","value":"440802","parent":"440800"},{"name":"霞山区","value":"440803","parent":"440800"},{"name":"坡头区","value":"440804","parent":"440800"},{"name":"麻章区","value":"440811","parent":"440800"},{"name":"遂溪县","value":"440823","parent":"440800"},{"name":"徐闻县","value":"440825","parent":"440800"},{"name":"廉江市","value":"440881","parent":"440800"},{"name":"雷州市","value":"440882","parent":"440800"},{"name":"吴川市","value":"440883","parent":"440800"},{"name":"茂南区","value":"440902","parent":"440900"},{"name":"电白区","value":"440904","parent":"440900"},{"name":"高州市","value":"440981","parent":"440900"},{"name":"化州市","value":"440982","parent":"440900"},{"name":"信宜市","value":"440983","parent":"440900"},{"name":"端州区","value":"441202","parent":"441200"},{"name":"鼎湖区","value":"441203","parent":"441200"},{"name":"高要区","value":"441204","parent":"441200"},{"name":"广宁县","value":"441223","parent":"441200"},{"name":"怀集县","value":"441224","parent":"441200"},{"name":"封开县","value":"441225","parent":"441200"},{"name":"德庆县","value":"441226","parent":"441200"},{"name":"四会市","value":"441284","parent":"441200"},{"name":"惠城区","value":"441302","parent":"441300"},{"name":"惠阳区","value":"441303","parent":"441300"},{"name":"博罗县","value":"441322","parent":"441300"},{"name":"惠东县","value":"441323","parent":"441300"},{"name":"龙门县","value":"441324","parent":"441300"},{"name":"梅江区","value":"441402","parent":"441400"},{"name":"梅县区","value":"441403","parent":"441400"},{"name":"大埔县","value":"441422","parent":"441400"},{"name":"丰顺县","value":"441423","parent":"441400"},{"name":"五华县","value":"441424","parent":"441400"},{"name":"平远县","value":"441426","parent":"441400"},{"name":"蕉岭县","value":"441427","parent":"441400"},{"name":"兴宁市","value":"441481","parent":"441400"},{"name":"城区","value":"441502","parent":"441500"},{"name":"海丰县","value":"441521","parent":"441500"},{"name":"陆河县","value":"441523","parent":"441500"},{"name":"陆丰市","value":"441581","parent":"441500"},{"name":"源城区","value":"441602","parent":"441600"},{"name":"紫金县","value":"441621","parent":"441600"},{"name":"龙川县","value":"441622","parent":"441600"},{"name":"连平县","value":"441623","parent":"441600"},{"name":"和平县","value":"441624","parent":"441600"},{"name":"东源县","value":"441625","parent":"441600"},{"name":"江城区","value":"441702","parent":"441700"},{"name":"阳东区","value":"441704","parent":"441700"},{"name":"阳西县","value":"441721","parent":"441700"},{"name":"阳春市","value":"441781","parent":"441700"},{"name":"清城区","value":"441802","parent":"441800"},{"name":"清新区","value":"441803","parent":"441800"},{"name":"佛冈县","value":"441821","parent":"441800"},{"name":"阳山县","value":"441823","parent":"441800"},{"name":"连山壮族瑶族自治县","value":"441825","parent":"441800"},{"name":"连南瑶族自治县","value":"441826","parent":"441800"},{"name":"英德市","value":"441881","parent":"441800"},{"name":"连州市","value":"441882","parent":"441800"},{"name":"湘桥区","value":"445102","parent":"445100"},{"name":"潮安区","value":"445103","parent":"445100"},{"name":"饶平县","value":"445122","parent":"445100"},{"name":"榕城区","value":"445202","parent":"445200"},{"name":"揭东区","value":"445203","parent":"445200"},{"name":"揭西县","value":"445222","parent":"445200"},{"name":"惠来县","value":"445224","parent":"445200"},{"name":"普宁市","value":"445281","parent":"445200"},{"name":"云城区","value":"445302","parent":"445300"},{"name":"云安区","value":"445303","parent":"445300"},{"name":"新兴县","value":"445321","parent":"445300"},{"name":"郁南县","value":"445322","parent":"445300"},{"name":"罗定市","value":"445381","parent":"445300"},{"name":"南宁市","value":"450100","parent":"450000"},{"name":"柳州市","value":"450200","parent":"450000"},{"name":"桂林市","value":"450300","parent":"450000"},{"name":"梧州市","value":"450400","parent":"450000"},{"name":"北海市","value":"450500","parent":"450000"},{"name":"防城港市","value":"450600","parent":"450000"},{"name":"钦州市","value":"450700","parent":"450000"},{"name":"贵港市","value":"450800","parent":"450000"},{"name":"玉林市","value":"450900","parent":"450000"},{"name":"百色市","value":"451000","parent":"450000"},{"name":"贺州市","value":"451100","parent":"450000"},{"name":"河池市","value":"451200","parent":"450000"},{"name":"来宾市","value":"451300","parent":"450000"},{"name":"崇左市","value":"451400","parent":"450000"},{"name":"兴宁区","value":"450102","parent":"450100"},{"name":"青秀区","value":"450103","parent":"450100"},{"name":"江南区","value":"450105","parent":"450100"},{"name":"西乡塘区","value":"450107","parent":"450100"},{"name":"良庆区","value":"450108","parent":"450100"},{"name":"邕宁区","value":"450109","parent":"450100"},{"name":"武鸣区","value":"450110","parent":"450100"},{"name":"隆安县","value":"450123","parent":"450100"},{"name":"马山县","value":"450124","parent":"450100"},{"name":"上林县","value":"450125","parent":"450100"},{"name":"宾阳县","value":"450126","parent":"450100"},{"name":"横县","value":"450127","parent":"450100"},{"name":"城中区","value":"450202","parent":"450200"},{"name":"鱼峰区","value":"450203","parent":"450200"},{"name":"柳南区","value":"450204","parent":"450200"},{"name":"柳北区","value":"450205","parent":"450200"},{"name":"柳江区","value":"450206","parent":"450200"},{"name":"柳城县","value":"450222","parent":"450200"},{"name":"鹿寨县","value":"450223","parent":"450200"},{"name":"融安县","value":"450224","parent":"450200"},{"name":"融水苗族自治县","value":"450225","parent":"450200"},{"name":"三江侗族自治县","value":"450226","parent":"450200"},{"name":"秀峰区","value":"450302","parent":"450300"},{"name":"叠彩区","value":"450303","parent":"450300"},{"name":"象山区","value":"450304","parent":"450300"},{"name":"七星区","value":"450305","parent":"450300"},{"name":"雁山区","value":"450311","parent":"450300"},{"name":"临桂区","value":"450312","parent":"450300"},{"name":"阳朔县","value":"450321","parent":"450300"},{"name":"灵川县","value":"450323","parent":"450300"},{"name":"全州县","value":"450324","parent":"450300"},{"name":"兴安县","value":"450325","parent":"450300"},{"name":"永福县","value":"450326","parent":"450300"},{"name":"灌阳县","value":"450327","parent":"450300"},{"name":"龙胜各族自治县","value":"450328","parent":"450300"},{"name":"资源县","value":"450329","parent":"450300"},{"name":"平乐县","value":"450330","parent":"450300"},{"name":"荔浦县","value":"450331","parent":"450300"},{"name":"恭城瑶族自治县","value":"450332","parent":"450300"},{"name":"万秀区","value":"450403","parent":"450400"},{"name":"长洲区","value":"450405","parent":"450400"},{"name":"龙圩区","value":"450406","parent":"450400"},{"name":"苍梧县","value":"450421","parent":"450400"},{"name":"藤县","value":"450422","parent":"450400"},{"name":"蒙山县","value":"450423","parent":"450400"},{"name":"岑溪市","value":"450481","parent":"450400"},{"name":"海城区","value":"450502","parent":"450500"},{"name":"银海区","value":"450503","parent":"450500"},{"name":"铁山港区","value":"450512","parent":"450500"},{"name":"合浦县","value":"450521","parent":"450500"},{"name":"港口区","value":"450602","parent":"450600"},{"name":"防城区","value":"450603","parent":"450600"},{"name":"上思县","value":"450621","parent":"450600"},{"name":"东兴市","value":"450681","parent":"450600"},{"name":"钦南区","value":"450702","parent":"450700"},{"name":"钦北区","value":"450703","parent":"450700"},{"name":"灵山县","value":"450721","parent":"450700"},{"name":"浦北县","value":"450722","parent":"450700"},{"name":"港北区","value":"450802","parent":"450800"},{"name":"港南区","value":"450803","parent":"450800"},{"name":"覃塘区","value":"450804","parent":"450800"},{"name":"平南县","value":"450821","parent":"450800"},{"name":"桂平市","value":"450881","parent":"450800"},{"name":"玉州区","value":"450902","parent":"450900"},{"name":"福绵区","value":"450903","parent":"450900"},{"name":"容县","value":"450921","parent":"450900"},{"name":"陆川县","value":"450922","parent":"450900"},{"name":"博白县","value":"450923","parent":"450900"},{"name":"兴业县","value":"450924","parent":"450900"},{"name":"北流市","value":"450981","parent":"450900"},{"name":"右江区","value":"451002","parent":"451000"},{"name":"田阳县","value":"451021","parent":"451000"},{"name":"田东县","value":"451022","parent":"451000"},{"name":"平果县","value":"451023","parent":"451000"},{"name":"德保县","value":"451024","parent":"451000"},{"name":"那坡县","value":"451026","parent":"451000"},{"name":"凌云县","value":"451027","parent":"451000"},{"name":"乐业县","value":"451028","parent":"451000"},{"name":"田林县","value":"451029","parent":"451000"},{"name":"西林县","value":"451030","parent":"451000"},{"name":"隆林各族自治县","value":"451031","parent":"451000"},{"name":"靖西市","value":"451081","parent":"451000"},{"name":"八步区","value":"451102","parent":"451100"},{"name":"平桂区","value":"451103","parent":"451100"},{"name":"昭平县","value":"451121","parent":"451100"},{"name":"钟山县","value":"451122","parent":"451100"},{"name":"富川瑶族自治县","value":"451123","parent":"451100"},{"name":"金城江区","value":"451202","parent":"451200"},{"name":"南丹县","value":"451221","parent":"451200"},{"name":"天峨县","value":"451222","parent":"451200"},{"name":"凤山县","value":"451223","parent":"451200"},{"name":"东兰县","value":"451224","parent":"451200"},{"name":"罗城仫佬族自治县","value":"451225","parent":"451200"},{"name":"环江毛南族自治县","value":"451226","parent":"451200"},{"name":"巴马瑶族自治县","value":"451227","parent":"451200"},{"name":"都安瑶族自治县","value":"451228","parent":"451200"},{"name":"大化瑶族自治县","value":"451229","parent":"451200"},{"name":"宜州市","value":"451281","parent":"451200"},{"name":"兴宾区","value":"451302","parent":"451300"},{"name":"忻城县","value":"451321","parent":"451300"},{"name":"象州县","value":"451322","parent":"451300"},{"name":"武宣县","value":"451323","parent":"451300"},{"name":"金秀瑶族自治县","value":"451324","parent":"451300"},{"name":"合山市","value":"451381","parent":"451300"},{"name":"江州区","value":"451402","parent":"451400"},{"name":"扶绥县","value":"451421","parent":"451400"},{"name":"宁明县","value":"451422","parent":"451400"},{"name":"龙州县","value":"451423","parent":"451400"},{"name":"大新县","value":"451424","parent":"451400"},{"name":"天等县","value":"451425","parent":"451400"},{"name":"凭祥市","value":"451481","parent":"451400"},{"name":"海口市","value":"460100","parent":"460000"},{"name":"三亚市","value":"460200","parent":"460000"},{"name":"三沙市","value":"460300","parent":"460000"},{"name":"儋州市","value":"460400","parent":"460000"},{"name":"五指山市","value":"469001","parent":"460000"},{"name":"琼海市","value":"469002","parent":"460000"},{"name":"文昌市","value":"469005","parent":"460000"},{"name":"万宁市","value":"469006","parent":"460000"},{"name":"东方市","value":"469007","parent":"460000"},{"name":"定安县","value":"469021","parent":"460000"},{"name":"屯昌县","value":"469022","parent":"460000"},{"name":"澄迈县","value":"469023","parent":"460000"},{"name":"临高县","value":"469024","parent":"460000"},{"name":"白沙黎族自治县","value":"469025","parent":"460000"},{"name":"昌江黎族自治县","value":"469026","parent":"460000"},{"name":"乐东黎族自治县","value":"469027","parent":"460000"},{"name":"陵水黎族自治县","value":"469028","parent":"460000"},{"name":"保亭黎族苗族自治县","value":"469029","parent":"460000"},{"name":"琼中黎族苗族自治县","value":"469030","parent":"460000"},{"name":"秀英区","value":"460105","parent":"460100"},{"name":"龙华区","value":"460106","parent":"460100"},{"name":"琼山区","value":"460107","parent":"460100"},{"name":"美兰区","value":"460108","parent":"460100"},{"name":"海棠区","value":"460202","parent":"460200"},{"name":"吉阳区","value":"460203","parent":"460200"},{"name":"天涯区","value":"460204","parent":"460200"},{"name":"崖州区","value":"460205","parent":"460200"},{"name":"市辖区","value":"500100","parent":"500000"},{"name":"县","value":"500200","parent":"500000"},{"name":"万州区","value":"500101","parent":"500100"},{"name":"涪陵区","value":"500102","parent":"500100"},{"name":"渝中区","value":"500103","parent":"500100"},{"name":"大渡口区","value":"500104","parent":"500100"},{"name":"江北区","value":"500105","parent":"500100"},{"name":"沙坪坝区","value":"500106","parent":"500100"},{"name":"九龙坡区","value":"500107","parent":"500100"},{"name":"南岸区","value":"500108","parent":"500100"},{"name":"北碚区","value":"500109","parent":"500100"},{"name":"綦江区","value":"500110","parent":"500100"},{"name":"大足区","value":"500111","parent":"500100"},{"name":"渝北区","value":"500112","parent":"500100"},{"name":"巴南区","value":"500113","parent":"500100"},{"name":"黔江区","value":"500114","parent":"500100"},{"name":"长寿区","value":"500115","parent":"500100"},{"name":"江津区","value":"500116","parent":"500100"},{"name":"合川区","value":"500117","parent":"500100"},{"name":"永川区","value":"500118","parent":"500100"},{"name":"南川区","value":"500119","parent":"500100"},{"name":"璧山区","value":"500120","parent":"500100"},{"name":"铜梁区","value":"500151","parent":"500100"},{"name":"潼南区","value":"500152","parent":"500100"},{"name":"荣昌区","value":"500153","parent":"500100"},{"name":"开州区","value":"500154","parent":"500100"},{"name":"梁平县","value":"500228","parent":"500200"},{"name":"城口县","value":"500229","parent":"500200"},{"name":"丰都县","value":"500230","parent":"500200"},{"name":"垫江县","value":"500231","parent":"500200"},{"name":"武隆县","value":"500232","parent":"500200"},{"name":"忠县","value":"500233","parent":"500200"},{"name":"云阳县","value":"500235","parent":"500200"},{"name":"奉节县","value":"500236","parent":"500200"},{"name":"巫山县","value":"500237","parent":"500200"},{"name":"巫溪县","value":"500238","parent":"500200"},{"name":"石柱土家族自治县","value":"500240","parent":"500200"},{"name":"秀山土家族苗族自治县","value":"500241","parent":"500200"},{"name":"酉阳土家族苗族自治县","value":"500242","parent":"500200"},{"name":"彭水苗族土家族自治县","value":"500243","parent":"500200"},{"name":"成都市","value":"510100","parent":"510000"},{"name":"自贡市","value":"510300","parent":"510000"},{"name":"攀枝花市","value":"510400","parent":"510000"},{"name":"泸州市","value":"510500","parent":"510000"},{"name":"德阳市","value":"510600","parent":"510000"},{"name":"绵阳市","value":"510700","parent":"510000"},{"name":"广元市","value":"510800","parent":"510000"},{"name":"遂宁市","value":"510900","parent":"510000"},{"name":"内江市","value":"511000","parent":"510000"},{"name":"乐山市","value":"511100","parent":"510000"},{"name":"南充市","value":"511300","parent":"510000"},{"name":"眉山市","value":"511400","parent":"510000"},{"name":"宜宾市","value":"511500","parent":"510000"},{"name":"广安市","value":"511600","parent":"510000"},{"name":"达州市","value":"511700","parent":"510000"},{"name":"雅安市","value":"511800","parent":"510000"},{"name":"巴中市","value":"511900","parent":"510000"},{"name":"资阳市","value":"512000","parent":"510000"},{"name":"阿坝藏族羌族自治州","value":"513200","parent":"510000"},{"name":"甘孜藏族自治州","value":"513300","parent":"510000"},{"name":"凉山彝族自治州","value":"513400","parent":"510000"},{"name":"锦江区","value":"510104","parent":"510100"},{"name":"青羊区","value":"510105","parent":"510100"},{"name":"金牛区","value":"510106","parent":"510100"},{"name":"武侯区","value":"510107","parent":"510100"},{"name":"成华区","value":"510108","parent":"510100"},{"name":"龙泉驿区","value":"510112","parent":"510100"},{"name":"青白江区","value":"510113","parent":"510100"},{"name":"新都区","value":"510114","parent":"510100"},{"name":"温江区","value":"510115","parent":"510100"},{"name":"双流区","value":"510116","parent":"510100"},{"name":"金堂县","value":"510121","parent":"510100"},{"name":"郫县","value":"510124","parent":"510100"},{"name":"大邑县","value":"510129","parent":"510100"},{"name":"蒲江县","value":"510131","parent":"510100"},{"name":"新津县","value":"510132","parent":"510100"},{"name":"都江堰市","value":"510181","parent":"510100"},{"name":"彭州市","value":"510182","parent":"510100"},{"name":"邛崃市","value":"510183","parent":"510100"},{"name":"崇州市","value":"510184","parent":"510100"},{"name":"简阳市","value":"510185","parent":"510100"},{"name":"自流井区","value":"510302","parent":"510300"},{"name":"贡井区","value":"510303","parent":"510300"},{"name":"大安区","value":"510304","parent":"510300"},{"name":"沿滩区","value":"510311","parent":"510300"},{"name":"荣县","value":"510321","parent":"510300"},{"name":"富顺县","value":"510322","parent":"510300"},{"name":"东区","value":"510402","parent":"510400"},{"name":"西区","value":"510403","parent":"510400"},{"name":"仁和区","value":"510411","parent":"510400"},{"name":"米易县","value":"510421","parent":"510400"},{"name":"盐边县","value":"510422","parent":"510400"},{"name":"江阳区","value":"510502","parent":"510500"},{"name":"纳溪区","value":"510503","parent":"510500"},{"name":"龙马潭区","value":"510504","parent":"510500"},{"name":"泸县","value":"510521","parent":"510500"},{"name":"合江县","value":"510522","parent":"510500"},{"name":"叙永县","value":"510524","parent":"510500"},{"name":"古蔺县","value":"510525","parent":"510500"},{"name":"旌阳区","value":"510603","parent":"510600"},{"name":"中江县","value":"510623","parent":"510600"},{"name":"罗江县","value":"510626","parent":"510600"},{"name":"广汉市","value":"510681","parent":"510600"},{"name":"什邡市","value":"510682","parent":"510600"},{"name":"绵竹市","value":"510683","parent":"510600"},{"name":"涪城区","value":"510703","parent":"510700"},{"name":"游仙区","value":"510704","parent":"510700"},{"name":"安州区","value":"510705","parent":"510700"},{"name":"三台县","value":"510722","parent":"510700"},{"name":"盐亭县","value":"510723","parent":"510700"},{"name":"梓潼县","value":"510725","parent":"510700"},{"name":"北川羌族自治县","value":"510726","parent":"510700"},{"name":"平武县","value":"510727","parent":"510700"},{"name":"江油市","value":"510781","parent":"510700"},{"name":"利州区","value":"510802","parent":"510800"},{"name":"昭化区","value":"510811","parent":"510800"},{"name":"朝天区","value":"510812","parent":"510800"},{"name":"旺苍县","value":"510821","parent":"510800"},{"name":"青川县","value":"510822","parent":"510800"},{"name":"剑阁县","value":"510823","parent":"510800"},{"name":"苍溪县","value":"510824","parent":"510800"},{"name":"船山区","value":"510903","parent":"510900"},{"name":"安居区","value":"510904","parent":"510900"},{"name":"蓬溪县","value":"510921","parent":"510900"},{"name":"射洪县","value":"510922","parent":"510900"},{"name":"大英县","value":"510923","parent":"510900"},{"name":"市中区","value":"511002","parent":"511000"},{"name":"东兴区","value":"511011","parent":"511000"},{"name":"威远县","value":"511024","parent":"511000"},{"name":"资中县","value":"511025","parent":"511000"},{"name":"隆昌县","value":"511028","parent":"511000"},{"name":"市中区","value":"511102","parent":"511100"},{"name":"沙湾区","value":"511111","parent":"511100"},{"name":"五通桥区","value":"511112","parent":"511100"},{"name":"金口河区","value":"511113","parent":"511100"},{"name":"犍为县","value":"511123","parent":"511100"},{"name":"井研县","value":"511124","parent":"511100"},{"name":"夹江县","value":"511126","parent":"511100"},{"name":"沐川县","value":"511129","parent":"511100"},{"name":"峨边彝族自治县","value":"511132","parent":"511100"},{"name":"马边彝族自治县","value":"511133","parent":"511100"},{"name":"峨眉山市","value":"511181","parent":"511100"},{"name":"顺庆区","value":"511302","parent":"511300"},{"name":"高坪区","value":"511303","parent":"511300"},{"name":"嘉陵区","value":"511304","parent":"511300"},{"name":"南部县","value":"511321","parent":"511300"},{"name":"营山县","value":"511322","parent":"511300"},{"name":"蓬安县","value":"511323","parent":"511300"},{"name":"仪陇县","value":"511324","parent":"511300"},{"name":"西充县","value":"511325","parent":"511300"},{"name":"阆中市","value":"511381","parent":"511300"},{"name":"东坡区","value":"511402","parent":"511400"},{"name":"彭山区","value":"511403","parent":"511400"},{"name":"仁寿县","value":"511421","parent":"511400"},{"name":"洪雅县","value":"511423","parent":"511400"},{"name":"丹棱县","value":"511424","parent":"511400"},{"name":"青神县","value":"511425","parent":"511400"},{"name":"翠屏区","value":"511502","parent":"511500"},{"name":"南溪区","value":"511503","parent":"511500"},{"name":"宜宾县","value":"511521","parent":"511500"},{"name":"江安县","value":"511523","parent":"511500"},{"name":"长宁县","value":"511524","parent":"511500"},{"name":"高县","value":"511525","parent":"511500"},{"name":"珙县","value":"511526","parent":"511500"},{"name":"筠连县","value":"511527","parent":"511500"},{"name":"兴文县","value":"511528","parent":"511500"},{"name":"屏山县","value":"511529","parent":"511500"},{"name":"广安区","value":"511602","parent":"511600"},{"name":"前锋区","value":"511603","parent":"511600"},{"name":"岳池县","value":"511621","parent":"511600"},{"name":"武胜县","value":"511622","parent":"511600"},{"name":"邻水县","value":"511623","parent":"511600"},{"name":"华蓥市","value":"511681","parent":"511600"},{"name":"通川区","value":"511702","parent":"511700"},{"name":"达川区","value":"511703","parent":"511700"},{"name":"宣汉县","value":"511722","parent":"511700"},{"name":"开江县","value":"511723","parent":"511700"},{"name":"大竹县","value":"511724","parent":"511700"},{"name":"渠县","value":"511725","parent":"511700"},{"name":"万源市","value":"511781","parent":"511700"},{"name":"雨城区","value":"511802","parent":"511800"},{"name":"名山区","value":"511803","parent":"511800"},{"name":"荥经县","value":"511822","parent":"511800"},{"name":"汉源县","value":"511823","parent":"511800"},{"name":"石棉县","value":"511824","parent":"511800"},{"name":"天全县","value":"511825","parent":"511800"},{"name":"芦山县","value":"511826","parent":"511800"},{"name":"宝兴县","value":"511827","parent":"511800"},{"name":"巴州区","value":"511902","parent":"511900"},{"name":"恩阳区","value":"511903","parent":"511900"},{"name":"通江县","value":"511921","parent":"511900"},{"name":"南江县","value":"511922","parent":"511900"},{"name":"平昌县","value":"511923","parent":"511900"},{"name":"雁江区","value":"512002","parent":"512000"},{"name":"安岳县","value":"512021","parent":"512000"},{"name":"乐至县","value":"512022","parent":"512000"},{"name":"马尔康市","value":"513201","parent":"513200"},{"name":"汶川县","value":"513221","parent":"513200"},{"name":"理县","value":"513222","parent":"513200"},{"name":"茂县","value":"513223","parent":"513200"},{"name":"松潘县","value":"513224","parent":"513200"},{"name":"九寨沟县","value":"513225","parent":"513200"},{"name":"金川县","value":"513226","parent":"513200"},{"name":"小金县","value":"513227","parent":"513200"},{"name":"黑水县","value":"513228","parent":"513200"},{"name":"壤塘县","value":"513230","parent":"513200"},{"name":"阿坝县","value":"513231","parent":"513200"},{"name":"若尔盖县","value":"513232","parent":"513200"},{"name":"红原县","value":"513233","parent":"513200"},{"name":"康定市","value":"513301","parent":"513300"},{"name":"泸定县","value":"513322","parent":"513300"},{"name":"丹巴县","value":"513323","parent":"513300"},{"name":"九龙县","value":"513324","parent":"513300"},{"name":"雅江县","value":"513325","parent":"513300"},{"name":"道孚县","value":"513326","parent":"513300"},{"name":"炉霍县","value":"513327","parent":"513300"},{"name":"甘孜县","value":"513328","parent":"513300"},{"name":"新龙县","value":"513329","parent":"513300"},{"name":"德格县","value":"513330","parent":"513300"},{"name":"白玉县","value":"513331","parent":"513300"},{"name":"石渠县","value":"513332","parent":"513300"},{"name":"色达县","value":"513333","parent":"513300"},{"name":"理塘县","value":"513334","parent":"513300"},{"name":"巴塘县","value":"513335","parent":"513300"},{"name":"乡城县","value":"513336","parent":"513300"},{"name":"稻城县","value":"513337","parent":"513300"},{"name":"得荣县","value":"513338","parent":"513300"},{"name":"西昌市","value":"513401","parent":"513400"},{"name":"木里藏族自治县","value":"513422","parent":"513400"},{"name":"盐源县","value":"513423","parent":"513400"},{"name":"德昌县","value":"513424","parent":"513400"},{"name":"会理县","value":"513425","parent":"513400"},{"name":"会东县","value":"513426","parent":"513400"},{"name":"宁南县","value":"513427","parent":"513400"},{"name":"普格县","value":"513428","parent":"513400"},{"name":"布拖县","value":"513429","parent":"513400"},{"name":"金阳县","value":"513430","parent":"513400"},{"name":"昭觉县","value":"513431","parent":"513400"},{"name":"喜德县","value":"513432","parent":"513400"},{"name":"冕宁县","value":"513433","parent":"513400"},{"name":"越西县","value":"513434","parent":"513400"},{"name":"甘洛县","value":"513435","parent":"513400"},{"name":"美姑县","value":"513436","parent":"513400"},{"name":"雷波县","value":"513437","parent":"513400"},{"name":"贵阳市","value":"520100","parent":"520000"},{"name":"六盘水市","value":"520200","parent":"520000"},{"name":"遵义市","value":"520300","parent":"520000"},{"name":"安顺市","value":"520400","parent":"520000"},{"name":"毕节市","value":"520500","parent":"520000"},{"name":"铜仁市","value":"520600","parent":"520000"},{"name":"黔西南布依族苗族自治州","value":"522300","parent":"520000"},{"name":"黔东南苗族侗族自治州","value":"522600","parent":"520000"},{"name":"黔南布依族苗族自治州","value":"522700","parent":"520000"},{"name":"南明区","value":"520102","parent":"520100"},{"name":"云岩区","value":"520103","parent":"520100"},{"name":"花溪区","value":"520111","parent":"520100"},{"name":"乌当区","value":"520112","parent":"520100"},{"name":"白云区","value":"520113","parent":"520100"},{"name":"观山湖区","value":"520115","parent":"520100"},{"name":"开阳县","value":"520121","parent":"520100"},{"name":"息烽县","value":"520122","parent":"520100"},{"name":"修文县","value":"520123","parent":"520100"},{"name":"清镇市","value":"520181","parent":"520100"},{"name":"钟山区","value":"520201","parent":"520200"},{"name":"六枝特区","value":"520203","parent":"520200"},{"name":"水城县","value":"520221","parent":"520200"},{"name":"盘县","value":"520222","parent":"520200"},{"name":"红花岗区","value":"520302","parent":"520300"},{"name":"汇川区","value":"520303","parent":"520300"},{"name":"播州区","value":"520304","parent":"520300"},{"name":"桐梓县","value":"520322","parent":"520300"},{"name":"绥阳县","value":"520323","parent":"520300"},{"name":"正安县","value":"520324","parent":"520300"},{"name":"道真仡佬族苗族自治县","value":"520325","parent":"520300"},{"name":"务川仡佬族苗族自治县","value":"520326","parent":"520300"},{"name":"凤冈县","value":"520327","parent":"520300"},{"name":"湄潭县","value":"520328","parent":"520300"},{"name":"余庆县","value":"520329","parent":"520300"},{"name":"习水县","value":"520330","parent":"520300"},{"name":"赤水市","value":"520381","parent":"520300"},{"name":"仁怀市","value":"520382","parent":"520300"},{"name":"西秀区","value":"520402","parent":"520400"},{"name":"平坝区","value":"520403","parent":"520400"},{"name":"普定县","value":"520422","parent":"520400"},{"name":"镇宁布依族苗族自治县","value":"520423","parent":"520400"},{"name":"关岭布依族苗族自治县","value":"520424","parent":"520400"},{"name":"紫云苗族布依族自治县","value":"520425","parent":"520400"},{"name":"七星关区","value":"520502","parent":"520500"},{"name":"大方县","value":"520521","parent":"520500"},{"name":"黔西县","value":"520522","parent":"520500"},{"name":"金沙县","value":"520523","parent":"520500"},{"name":"织金县","value":"520524","parent":"520500"},{"name":"纳雍县","value":"520525","parent":"520500"},{"name":"威宁彝族回族苗族自治县","value":"520526","parent":"520500"},{"name":"赫章县","value":"520527","parent":"520500"},{"name":"碧江区","value":"520602","parent":"520600"},{"name":"万山区","value":"520603","parent":"520600"},{"name":"江口县","value":"520621","parent":"520600"},{"name":"玉屏侗族自治县","value":"520622","parent":"520600"},{"name":"石阡县","value":"520623","parent":"520600"},{"name":"思南县","value":"520624","parent":"520600"},{"name":"印江土家族苗族自治县","value":"520625","parent":"520600"},{"name":"德江县","value":"520626","parent":"520600"},{"name":"沿河土家族自治县","value":"520627","parent":"520600"},{"name":"松桃苗族自治县","value":"520628","parent":"520600"},{"name":"兴义市","value":"522301","parent":"522300"},{"name":"兴仁县","value":"522322","parent":"522300"},{"name":"普安县","value":"522323","parent":"522300"},{"name":"晴隆县","value":"522324","parent":"522300"},{"name":"贞丰县","value":"522325","parent":"522300"},{"name":"望谟县","value":"522326","parent":"522300"},{"name":"册亨县","value":"522327","parent":"522300"},{"name":"安龙县","value":"522328","parent":"522300"},{"name":"凯里市","value":"522601","parent":"522600"},{"name":"黄平县","value":"522622","parent":"522600"},{"name":"施秉县","value":"522623","parent":"522600"},{"name":"三穗县","value":"522624","parent":"522600"},{"name":"镇远县","value":"522625","parent":"522600"},{"name":"岑巩县","value":"522626","parent":"522600"},{"name":"天柱县","value":"522627","parent":"522600"},{"name":"锦屏县","value":"522628","parent":"522600"},{"name":"剑河县","value":"522629","parent":"522600"},{"name":"台江县","value":"522630","parent":"522600"},{"name":"黎平县","value":"522631","parent":"522600"},{"name":"榕江县","value":"522632","parent":"522600"},{"name":"从江县","value":"522633","parent":"522600"},{"name":"雷山县","value":"522634","parent":"522600"},{"name":"麻江县","value":"522635","parent":"522600"},{"name":"丹寨县","value":"522636","parent":"522600"},{"name":"都匀市","value":"522701","parent":"522700"},{"name":"福泉市","value":"522702","parent":"522700"},{"name":"荔波县","value":"522722","parent":"522700"},{"name":"贵定县","value":"522723","parent":"522700"},{"name":"瓮安县","value":"522725","parent":"522700"},{"name":"独山县","value":"522726","parent":"522700"},{"name":"平塘县","value":"522727","parent":"522700"},{"name":"罗甸县","value":"522728","parent":"522700"},{"name":"长顺县","value":"522729","parent":"522700"},{"name":"龙里县","value":"522730","parent":"522700"},{"name":"惠水县","value":"522731","parent":"522700"},{"name":"三都水族自治县","value":"522732","parent":"522700"},{"name":"昆明市","value":"530100","parent":"530000"},{"name":"曲靖市","value":"530300","parent":"530000"},{"name":"玉溪市","value":"530400","parent":"530000"},{"name":"保山市","value":"530500","parent":"530000"},{"name":"昭通市","value":"530600","parent":"530000"},{"name":"丽江市","value":"530700","parent":"530000"},{"name":"普洱市","value":"530800","parent":"530000"},{"name":"临沧市","value":"530900","parent":"530000"},{"name":"楚雄彝族自治州","value":"532300","parent":"530000"},{"name":"红河哈尼族彝族自治州","value":"532500","parent":"530000"},{"name":"文山壮族苗族自治州","value":"532600","parent":"530000"},{"name":"西双版纳傣族自治州","value":"532800","parent":"530000"},{"name":"大理白族自治州","value":"532900","parent":"530000"},{"name":"德宏傣族景颇族自治州","value":"533100","parent":"530000"},{"name":"怒江傈僳族自治州","value":"533300","parent":"530000"},{"name":"迪庆藏族自治州","value":"533400","parent":"530000"},{"name":"五华区","value":"530102","parent":"530100"},{"name":"盘龙区","value":"530103","parent":"530100"},{"name":"官渡区","value":"530111","parent":"530100"},{"name":"西山区","value":"530112","parent":"530100"},{"name":"东川区","value":"530113","parent":"530100"},{"name":"呈贡区","value":"530114","parent":"530100"},{"name":"晋宁县","value":"530122","parent":"530100"},{"name":"富民县","value":"530124","parent":"530100"},{"name":"宜良县","value":"530125","parent":"530100"},{"name":"石林彝族自治县","value":"530126","parent":"530100"},{"name":"嵩明县","value":"530127","parent":"530100"},{"name":"禄劝彝族苗族自治县","value":"530128","parent":"530100"},{"name":"寻甸回族彝族自治县","value":"530129","parent":"530100"},{"name":"安宁市","value":"530181","parent":"530100"},{"name":"麒麟区","value":"530302","parent":"530300"},{"name":"沾益区","value":"530303","parent":"530300"},{"name":"马龙县","value":"530321","parent":"530300"},{"name":"陆良县","value":"530322","parent":"530300"},{"name":"师宗县","value":"530323","parent":"530300"},{"name":"罗平县","value":"530324","parent":"530300"},{"name":"富源县","value":"530325","parent":"530300"},{"name":"会泽县","value":"530326","parent":"530300"},{"name":"宣威市","value":"530381","parent":"530300"},{"name":"红塔区","value":"530402","parent":"530400"},{"name":"江川区","value":"530403","parent":"530400"},{"name":"澄江县","value":"530422","parent":"530400"},{"name":"通海县","value":"530423","parent":"530400"},{"name":"华宁县","value":"530424","parent":"530400"},{"name":"易门县","value":"530425","parent":"530400"},{"name":"峨山彝族自治县","value":"530426","parent":"530400"},{"name":"新平彝族傣族自治县","value":"530427","parent":"530400"},{"name":"元江哈尼族彝族傣族自治县","value":"530428","parent":"530400"},{"name":"隆阳区","value":"530502","parent":"530500"},{"name":"施甸县","value":"530521","parent":"530500"},{"name":"龙陵县","value":"530523","parent":"530500"},{"name":"昌宁县","value":"530524","parent":"530500"},{"name":"腾冲市","value":"530581","parent":"530500"},{"name":"昭阳区","value":"530602","parent":"530600"},{"name":"鲁甸县","value":"530621","parent":"530600"},{"name":"巧家县","value":"530622","parent":"530600"},{"name":"盐津县","value":"530623","parent":"530600"},{"name":"大关县","value":"530624","parent":"530600"},{"name":"永善县","value":"530625","parent":"530600"},{"name":"绥江县","value":"530626","parent":"530600"},{"name":"镇雄县","value":"530627","parent":"530600"},{"name":"彝良县","value":"530628","parent":"530600"},{"name":"威信县","value":"530629","parent":"530600"},{"name":"水富县","value":"530630","parent":"530600"},{"name":"古城区","value":"530702","parent":"530700"},{"name":"玉龙纳西族自治县","value":"530721","parent":"530700"},{"name":"永胜县","value":"530722","parent":"530700"},{"name":"华坪县","value":"530723","parent":"530700"},{"name":"宁蒗彝族自治县","value":"530724","parent":"530700"},{"name":"思茅区","value":"530802","parent":"530800"},{"name":"宁洱哈尼族彝族自治县","value":"530821","parent":"530800"},{"name":"墨江哈尼族自治县","value":"530822","parent":"530800"},{"name":"景东彝族自治县","value":"530823","parent":"530800"},{"name":"景谷傣族彝族自治县","value":"530824","parent":"530800"},{"name":"镇沅彝族哈尼族拉祜族自治县","value":"530825","parent":"530800"},{"name":"江城哈尼族彝族自治县","value":"530826","parent":"530800"},{"name":"孟连傣族拉祜族佤族自治县","value":"530827","parent":"530800"},{"name":"澜沧拉祜族自治县","value":"530828","parent":"530800"},{"name":"西盟佤族自治县","value":"530829","parent":"530800"},{"name":"临翔区","value":"530902","parent":"530900"},{"name":"凤庆县","value":"530921","parent":"530900"},{"name":"云县","value":"530922","parent":"530900"},{"name":"永德县","value":"530923","parent":"530900"},{"name":"镇康县","value":"530924","parent":"530900"},{"name":"双江拉祜族佤族布朗族傣族自治县","value":"530925","parent":"530900"},{"name":"耿马傣族佤族自治县","value":"530926","parent":"530900"},{"name":"沧源佤族自治县","value":"530927","parent":"530900"},{"name":"楚雄市","value":"532301","parent":"532300"},{"name":"双柏县","value":"532322","parent":"532300"},{"name":"牟定县","value":"532323","parent":"532300"},{"name":"南华县","value":"532324","parent":"532300"},{"name":"姚安县","value":"532325","parent":"532300"},{"name":"大姚县","value":"532326","parent":"532300"},{"name":"永仁县","value":"532327","parent":"532300"},{"name":"元谋县","value":"532328","parent":"532300"},{"name":"武定县","value":"532329","parent":"532300"},{"name":"禄丰县","value":"532331","parent":"532300"},{"name":"个旧市","value":"532501","parent":"532500"},{"name":"开远市","value":"532502","parent":"532500"},{"name":"蒙自市","value":"532503","parent":"532500"},{"name":"弥勒市","value":"532504","parent":"532500"},{"name":"屏边苗族自治县","value":"532523","parent":"532500"},{"name":"建水县","value":"532524","parent":"532500"},{"name":"石屏县","value":"532525","parent":"532500"},{"name":"泸西县","value":"532527","parent":"532500"},{"name":"元阳县","value":"532528","parent":"532500"},{"name":"红河县","value":"532529","parent":"532500"},{"name":"金平苗族瑶族傣族自治县","value":"532530","parent":"532500"},{"name":"绿春县","value":"532531","parent":"532500"},{"name":"河口瑶族自治县","value":"532532","parent":"532500"},{"name":"文山市","value":"532601","parent":"532600"},{"name":"砚山县","value":"532622","parent":"532600"},{"name":"西畴县","value":"532623","parent":"532600"},{"name":"麻栗坡县","value":"532624","parent":"532600"},{"name":"马关县","value":"532625","parent":"532600"},{"name":"丘北县","value":"532626","parent":"532600"},{"name":"广南县","value":"532627","parent":"532600"},{"name":"富宁县","value":"532628","parent":"532600"},{"name":"景洪市","value":"532801","parent":"532800"},{"name":"勐海县","value":"532822","parent":"532800"},{"name":"勐腊县","value":"532823","parent":"532800"},{"name":"大理市","value":"532901","parent":"532900"},{"name":"漾濞彝族自治县","value":"532922","parent":"532900"},{"name":"祥云县","value":"532923","parent":"532900"},{"name":"宾川县","value":"532924","parent":"532900"},{"name":"弥渡县","value":"532925","parent":"532900"},{"name":"南涧彝族自治县","value":"532926","parent":"532900"},{"name":"巍山彝族回族自治县","value":"532927","parent":"532900"},{"name":"永平县","value":"532928","parent":"532900"},{"name":"云龙县","value":"532929","parent":"532900"},{"name":"洱源县","value":"532930","parent":"532900"},{"name":"剑川县","value":"532931","parent":"532900"},{"name":"鹤庆县","value":"532932","parent":"532900"},{"name":"瑞丽市","value":"533102","parent":"533100"},{"name":"芒市","value":"533103","parent":"533100"},{"name":"梁河县","value":"533122","parent":"533100"},{"name":"盈江县","value":"533123","parent":"533100"},{"name":"陇川县","value":"533124","parent":"533100"},{"name":"泸水市","value":"533301","parent":"533300"},{"name":"福贡县","value":"533323","parent":"533300"},{"name":"贡山独龙族怒族自治县","value":"533324","parent":"533300"},{"name":"兰坪白族普米族自治县","value":"533325","parent":"533300"},{"name":"香格里拉市","value":"533401","parent":"533400"},{"name":"德钦县","value":"533422","parent":"533400"},{"name":"维西傈僳族自治县","value":"533423","parent":"533400"},{"name":"拉萨市","value":"540100","parent":"540000"},{"name":"日喀则市","value":"540200","parent":"540000"},{"name":"昌都市","value":"540300","parent":"540000"},{"name":"林芝市","value":"540400","parent":"540000"},{"name":"山南市","value":"540500","parent":"540000"},{"name":"那曲地区","value":"542400","parent":"540000"},{"name":"阿里地区","value":"542500","parent":"540000"},{"name":"城关区","value":"540102","parent":"540100"},{"name":"堆龙德庆区","value":"540103","parent":"540100"},{"name":"林周县","value":"540121","parent":"540100"},{"name":"当雄县","value":"540122","parent":"540100"},{"name":"尼木县","value":"540123","parent":"540100"},{"name":"曲水县","value":"540124","parent":"540100"},{"name":"达孜县","value":"540126","parent":"540100"},{"name":"墨竹工卡县","value":"540127","parent":"540100"},{"name":"桑珠孜区","value":"540202","parent":"540200"},{"name":"南木林县","value":"540221","parent":"540200"},{"name":"江孜县","value":"540222","parent":"540200"},{"name":"定日县","value":"540223","parent":"540200"},{"name":"萨迦县","value":"540224","parent":"540200"},{"name":"拉孜县","value":"540225","parent":"540200"},{"name":"昂仁县","value":"540226","parent":"540200"},{"name":"谢通门县","value":"540227","parent":"540200"},{"name":"白朗县","value":"540228","parent":"540200"},{"name":"仁布县","value":"540229","parent":"540200"},{"name":"康马县","value":"540230","parent":"540200"},{"name":"定结县","value":"540231","parent":"540200"},{"name":"仲巴县","value":"540232","parent":"540200"},{"name":"亚东县","value":"540233","parent":"540200"},{"name":"吉隆县","value":"540234","parent":"540200"},{"name":"聂拉木县","value":"540235","parent":"540200"},{"name":"萨嘎县","value":"540236","parent":"540200"},{"name":"岗巴县","value":"540237","parent":"540200"},{"name":"卡若区","value":"540302","parent":"540300"},{"name":"江达县","value":"540321","parent":"540300"},{"name":"贡觉县","value":"540322","parent":"540300"},{"name":"类乌齐县","value":"540323","parent":"540300"},{"name":"丁青县","value":"540324","parent":"540300"},{"name":"察雅县","value":"540325","parent":"540300"},{"name":"八宿县","value":"540326","parent":"540300"},{"name":"左贡县","value":"540327","parent":"540300"},{"name":"芒康县","value":"540328","parent":"540300"},{"name":"洛隆县","value":"540329","parent":"540300"},{"name":"边坝县","value":"540330","parent":"540300"},{"name":"巴宜区","value":"540402","parent":"540400"},{"name":"工布江达县","value":"540421","parent":"540400"},{"name":"米林县","value":"540422","parent":"540400"},{"name":"墨脱县","value":"540423","parent":"540400"},{"name":"波密县","value":"540424","parent":"540400"},{"name":"察隅县","value":"540425","parent":"540400"},{"name":"朗县","value":"540426","parent":"540400"},{"name":"乃东区","value":"540502","parent":"540500"},{"name":"扎囊县","value":"540521","parent":"540500"},{"name":"贡嘎县","value":"540522","parent":"540500"},{"name":"桑日县","value":"540523","parent":"540500"},{"name":"琼结县","value":"540524","parent":"540500"},{"name":"曲松县","value":"540525","parent":"540500"},{"name":"措美县","value":"540526","parent":"540500"},{"name":"洛扎县","value":"540527","parent":"540500"},{"name":"加查县","value":"540528","parent":"540500"},{"name":"隆子县","value":"540529","parent":"540500"},{"name":"错那县","value":"540530","parent":"540500"},{"name":"浪卡子县","value":"540531","parent":"540500"},{"name":"那曲县","value":"542421","parent":"542400"},{"name":"嘉黎县","value":"542422","parent":"542400"},{"name":"比如县","value":"542423","parent":"542400"},{"name":"聂荣县","value":"542424","parent":"542400"},{"name":"安多县","value":"542425","parent":"542400"},{"name":"申扎县","value":"542426","parent":"542400"},{"name":"索县","value":"542427","parent":"542400"},{"name":"班戈县","value":"542428","parent":"542400"},{"name":"巴青县","value":"542429","parent":"542400"},{"name":"尼玛县","value":"542430","parent":"542400"},{"name":"双湖县","value":"542431","parent":"542400"},{"name":"普兰县","value":"542521","parent":"542500"},{"name":"札达县","value":"542522","parent":"542500"},{"name":"噶尔县","value":"542523","parent":"542500"},{"name":"日土县","value":"542524","parent":"542500"},{"name":"革吉县","value":"542525","parent":"542500"},{"name":"改则县","value":"542526","parent":"542500"},{"name":"措勤县","value":"542527","parent":"542500"},{"name":"西安市","value":"610100","parent":"610000"},{"name":"铜川市","value":"610200","parent":"610000"},{"name":"宝鸡市","value":"610300","parent":"610000"},{"name":"咸阳市","value":"610400","parent":"610000"},{"name":"渭南市","value":"610500","parent":"610000"},{"name":"延安市","value":"610600","parent":"610000"},{"name":"汉中市","value":"610700","parent":"610000"},{"name":"榆林市","value":"610800","parent":"610000"},{"name":"安康市","value":"610900","parent":"610000"},{"name":"商洛市","value":"611000","parent":"610000"},{"name":"新城区","value":"610102","parent":"610100"},{"name":"碑林区","value":"610103","parent":"610100"},{"name":"莲湖区","value":"610104","parent":"610100"},{"name":"灞桥区","value":"610111","parent":"610100"},{"name":"未央区","value":"610112","parent":"610100"},{"name":"雁塔区","value":"610113","parent":"610100"},{"name":"阎良区","value":"610114","parent":"610100"},{"name":"临潼区","value":"610115","parent":"610100"},{"name":"长安区","value":"610116","parent":"610100"},{"name":"高陵区","value":"610117","parent":"610100"},{"name":"蓝田县","value":"610122","parent":"610100"},{"name":"周至县","value":"610124","parent":"610100"},{"name":"户县","value":"610125","parent":"610100"},{"name":"王益区","value":"610202","parent":"610200"},{"name":"印台区","value":"610203","parent":"610200"},{"name":"耀州区","value":"610204","parent":"610200"},{"name":"宜君县","value":"610222","parent":"610200"},{"name":"渭滨区","value":"610302","parent":"610300"},{"name":"金台区","value":"610303","parent":"610300"},{"name":"陈仓区","value":"610304","parent":"610300"},{"name":"凤翔县","value":"610322","parent":"610300"},{"name":"岐山县","value":"610323","parent":"610300"},{"name":"扶风县","value":"610324","parent":"610300"},{"name":"眉县","value":"610326","parent":"610300"},{"name":"陇县","value":"610327","parent":"610300"},{"name":"千阳县","value":"610328","parent":"610300"},{"name":"麟游县","value":"610329","parent":"610300"},{"name":"凤县","value":"610330","parent":"610300"},{"name":"太白县","value":"610331","parent":"610300"},{"name":"秦都区","value":"610402","parent":"610400"},{"name":"杨陵区","value":"610403","parent":"610400"},{"name":"渭城区","value":"610404","parent":"610400"},{"name":"三原县","value":"610422","parent":"610400"},{"name":"泾阳县","value":"610423","parent":"610400"},{"name":"乾县","value":"610424","parent":"610400"},{"name":"礼泉县","value":"610425","parent":"610400"},{"name":"永寿县","value":"610426","parent":"610400"},{"name":"彬县","value":"610427","parent":"610400"},{"name":"长武县","value":"610428","parent":"610400"},{"name":"旬邑县","value":"610429","parent":"610400"},{"name":"淳化县","value":"610430","parent":"610400"},{"name":"武功县","value":"610431","parent":"610400"},{"name":"兴平市","value":"610481","parent":"610400"},{"name":"临渭区","value":"610502","parent":"610500"},{"name":"华州区","value":"610503","parent":"610500"},{"name":"潼关县","value":"610522","parent":"610500"},{"name":"大荔县","value":"610523","parent":"610500"},{"name":"合阳县","value":"610524","parent":"610500"},{"name":"澄城县","value":"610525","parent":"610500"},{"name":"蒲城县","value":"610526","parent":"610500"},{"name":"白水县","value":"610527","parent":"610500"},{"name":"富平县","value":"610528","parent":"610500"},{"name":"韩城市","value":"610581","parent":"610500"},{"name":"华阴市","value":"610582","parent":"610500"},{"name":"宝塔区","value":"610602","parent":"610600"},{"name":"安塞区","value":"610603","parent":"610600"},{"name":"延长县","value":"610621","parent":"610600"},{"name":"延川县","value":"610622","parent":"610600"},{"name":"子长县","value":"610623","parent":"610600"},{"name":"志丹县","value":"610625","parent":"610600"},{"name":"吴起县","value":"610626","parent":"610600"},{"name":"甘泉县","value":"610627","parent":"610600"},{"name":"富县","value":"610628","parent":"610600"},{"name":"洛川县","value":"610629","parent":"610600"},{"name":"宜川县","value":"610630","parent":"610600"},{"name":"黄龙县","value":"610631","parent":"610600"},{"name":"黄陵县","value":"610632","parent":"610600"},{"name":"汉台区","value":"610702","parent":"610700"},{"name":"南郑县","value":"610721","parent":"610700"},{"name":"城固县","value":"610722","parent":"610700"},{"name":"洋县","value":"610723","parent":"610700"},{"name":"西乡县","value":"610724","parent":"610700"},{"name":"勉县","value":"610725","parent":"610700"},{"name":"宁强县","value":"610726","parent":"610700"},{"name":"略阳县","value":"610727","parent":"610700"},{"name":"镇巴县","value":"610728","parent":"610700"},{"name":"留坝县","value":"610729","parent":"610700"},{"name":"佛坪县","value":"610730","parent":"610700"},{"name":"榆阳区","value":"610802","parent":"610800"},{"name":"横山区","value":"610803","parent":"610800"},{"name":"神木县","value":"610821","parent":"610800"},{"name":"府谷县","value":"610822","parent":"610800"},{"name":"靖边县","value":"610824","parent":"610800"},{"name":"定边县","value":"610825","parent":"610800"},{"name":"绥德县","value":"610826","parent":"610800"},{"name":"米脂县","value":"610827","parent":"610800"},{"name":"佳县","value":"610828","parent":"610800"},{"name":"吴堡县","value":"610829","parent":"610800"},{"name":"清涧县","value":"610830","parent":"610800"},{"name":"子洲县","value":"610831","parent":"610800"},{"name":"汉滨区","value":"610902","parent":"610900"},{"name":"汉阴县","value":"610921","parent":"610900"},{"name":"石泉县","value":"610922","parent":"610900"},{"name":"宁陕县","value":"610923","parent":"610900"},{"name":"紫阳县","value":"610924","parent":"610900"},{"name":"岚皋县","value":"610925","parent":"610900"},{"name":"平利县","value":"610926","parent":"610900"},{"name":"镇坪县","value":"610927","parent":"610900"},{"name":"旬阳县","value":"610928","parent":"610900"},{"name":"白河县","value":"610929","parent":"610900"},{"name":"商州区","value":"611002","parent":"611000"},{"name":"洛南县","value":"611021","parent":"611000"},{"name":"丹凤县","value":"611022","parent":"611000"},{"name":"商南县","value":"611023","parent":"611000"},{"name":"山阳县","value":"611024","parent":"611000"},{"name":"镇安县","value":"611025","parent":"611000"},{"name":"柞水县","value":"611026","parent":"611000"},{"name":"兰州市","value":"620100","parent":"620000"},{"name":"嘉峪关市","value":"620200","parent":"620000"},{"name":"金昌市","value":"620300","parent":"620000"},{"name":"白银市","value":"620400","parent":"620000"},{"name":"天水市","value":"620500","parent":"620000"},{"name":"武威市","value":"620600","parent":"620000"},{"name":"张掖市","value":"620700","parent":"620000"},{"name":"平凉市","value":"620800","parent":"620000"},{"name":"酒泉市","value":"620900","parent":"620000"},{"name":"庆阳市","value":"621000","parent":"620000"},{"name":"定西市","value":"621100","parent":"620000"},{"name":"陇南市","value":"621200","parent":"620000"},{"name":"临夏回族自治州","value":"622900","parent":"620000"},{"name":"甘南藏族自治州","value":"623000","parent":"620000"},{"name":"城关区","value":"620102","parent":"620100"},{"name":"七里河区","value":"620103","parent":"620100"},{"name":"西固区","value":"620104","parent":"620100"},{"name":"安宁区","value":"620105","parent":"620100"},{"name":"红古区","value":"620111","parent":"620100"},{"name":"永登县","value":"620121","parent":"620100"},{"name":"皋兰县","value":"620122","parent":"620100"},{"name":"榆中县","value":"620123","parent":"620100"},{"name":"金川区","value":"620302","parent":"620300"},{"name":"永昌县","value":"620321","parent":"620300"},{"name":"白银区","value":"620402","parent":"620400"},{"name":"平川区","value":"620403","parent":"620400"},{"name":"靖远县","value":"620421","parent":"620400"},{"name":"会宁县","value":"620422","parent":"620400"},{"name":"景泰县","value":"620423","parent":"620400"},{"name":"秦州区","value":"620502","parent":"620500"},{"name":"麦积区","value":"620503","parent":"620500"},{"name":"清水县","value":"620521","parent":"620500"},{"name":"秦安县","value":"620522","parent":"620500"},{"name":"甘谷县","value":"620523","parent":"620500"},{"name":"武山县","value":"620524","parent":"620500"},{"name":"张家川回族自治县","value":"620525","parent":"620500"},{"name":"凉州区","value":"620602","parent":"620600"},{"name":"民勤县","value":"620621","parent":"620600"},{"name":"古浪县","value":"620622","parent":"620600"},{"name":"天祝藏族自治县","value":"620623","parent":"620600"},{"name":"甘州区","value":"620702","parent":"620700"},{"name":"肃南裕固族自治县","value":"620721","parent":"620700"},{"name":"民乐县","value":"620722","parent":"620700"},{"name":"临泽县","value":"620723","parent":"620700"},{"name":"高台县","value":"620724","parent":"620700"},{"name":"山丹县","value":"620725","parent":"620700"},{"name":"崆峒区","value":"620802","parent":"620800"},{"name":"泾川县","value":"620821","parent":"620800"},{"name":"灵台县","value":"620822","parent":"620800"},{"name":"崇信县","value":"620823","parent":"620800"},{"name":"华亭县","value":"620824","parent":"620800"},{"name":"庄浪县","value":"620825","parent":"620800"},{"name":"静宁县","value":"620826","parent":"620800"},{"name":"肃州区","value":"620902","parent":"620900"},{"name":"金塔县","value":"620921","parent":"620900"},{"name":"瓜州县","value":"620922","parent":"620900"},{"name":"肃北蒙古族自治县","value":"620923","parent":"620900"},{"name":"阿克塞哈萨克族自治县","value":"620924","parent":"620900"},{"name":"玉门市","value":"620981","parent":"620900"},{"name":"敦煌市","value":"620982","parent":"620900"},{"name":"西峰区","value":"621002","parent":"621000"},{"name":"庆城县","value":"621021","parent":"621000"},{"name":"环县","value":"621022","parent":"621000"},{"name":"华池县","value":"621023","parent":"621000"},{"name":"合水县","value":"621024","parent":"621000"},{"name":"正宁县","value":"621025","parent":"621000"},{"name":"宁县","value":"621026","parent":"621000"},{"name":"镇原县","value":"621027","parent":"621000"},{"name":"安定区","value":"621102","parent":"621100"},{"name":"通渭县","value":"621121","parent":"621100"},{"name":"陇西县","value":"621122","parent":"621100"},{"name":"渭源县","value":"621123","parent":"621100"},{"name":"临洮县","value":"621124","parent":"621100"},{"name":"漳县","value":"621125","parent":"621100"},{"name":"岷县","value":"621126","parent":"621100"},{"name":"武都区","value":"621202","parent":"621200"},{"name":"成县","value":"621221","parent":"621200"},{"name":"文县","value":"621222","parent":"621200"},{"name":"宕昌县","value":"621223","parent":"621200"},{"name":"康县","value":"621224","parent":"621200"},{"name":"西和县","value":"621225","parent":"621200"},{"name":"礼县","value":"621226","parent":"621200"},{"name":"徽县","value":"621227","parent":"621200"},{"name":"两当县","value":"621228","parent":"621200"},{"name":"临夏市","value":"622901","parent":"622900"},{"name":"临夏县","value":"622921","parent":"622900"},{"name":"康乐县","value":"622922","parent":"622900"},{"name":"永靖县","value":"622923","parent":"622900"},{"name":"广河县","value":"622924","parent":"622900"},{"name":"和政县","value":"622925","parent":"622900"},{"name":"东乡族自治县","value":"622926","parent":"622900"},{"name":"积石山保安族东乡族撒拉族自治县","value":"622927","parent":"622900"},{"name":"合作市","value":"623001","parent":"623000"},{"name":"临潭县","value":"623021","parent":"623000"},{"name":"卓尼县","value":"623022","parent":"623000"},{"name":"舟曲县","value":"623023","parent":"623000"},{"name":"迭部县","value":"623024","parent":"623000"},{"name":"玛曲县","value":"623025","parent":"623000"},{"name":"碌曲县","value":"623026","parent":"623000"},{"name":"夏河县","value":"623027","parent":"623000"},{"name":"西宁市","value":"630100","parent":"630000"},{"name":"海东市","value":"630200","parent":"630000"},{"name":"海北藏族自治州","value":"632200","parent":"630000"},{"name":"黄南藏族自治州","value":"632300","parent":"630000"},{"name":"海南藏族自治州","value":"632500","parent":"630000"},{"name":"果洛藏族自治州","value":"632600","parent":"630000"},{"name":"玉树藏族自治州","value":"632700","parent":"630000"},{"name":"海西蒙古族藏族自治州","value":"632800","parent":"630000"},{"name":"城东区","value":"630102","parent":"630100"},{"name":"城中区","value":"630103","parent":"630100"},{"name":"城西区","value":"630104","parent":"630100"},{"name":"城北区","value":"630105","parent":"630100"},{"name":"大通回族土族自治县","value":"630121","parent":"630100"},{"name":"湟中县","value":"630122","parent":"630100"},{"name":"湟源县","value":"630123","parent":"630100"},{"name":"乐都区","value":"630202","parent":"630200"},{"name":"平安区","value":"630203","parent":"630200"},{"name":"民和回族土族自治县","value":"630222","parent":"630200"},{"name":"互助土族自治县","value":"630223","parent":"630200"},{"name":"化隆回族自治县","value":"630224","parent":"630200"},{"name":"循化撒拉族自治县","value":"630225","parent":"630200"},{"name":"门源回族自治县","value":"632221","parent":"632200"},{"name":"祁连县","value":"632222","parent":"632200"},{"name":"海晏县","value":"632223","parent":"632200"},{"name":"刚察县","value":"632224","parent":"632200"},{"name":"同仁县","value":"632321","parent":"632300"},{"name":"尖扎县","value":"632322","parent":"632300"},{"name":"泽库县","value":"632323","parent":"632300"},{"name":"河南蒙古族自治县","value":"632324","parent":"632300"},{"name":"共和县","value":"632521","parent":"632500"},{"name":"同德县","value":"632522","parent":"632500"},{"name":"贵德县","value":"632523","parent":"632500"},{"name":"兴海县","value":"632524","parent":"632500"},{"name":"贵南县","value":"632525","parent":"632500"},{"name":"玛沁县","value":"632621","parent":"632600"},{"name":"班玛县","value":"632622","parent":"632600"},{"name":"甘德县","value":"632623","parent":"632600"},{"name":"达日县","value":"632624","parent":"632600"},{"name":"久治县","value":"632625","parent":"632600"},{"name":"玛多县","value":"632626","parent":"632600"},{"name":"玉树市","value":"632701","parent":"632700"},{"name":"杂多县","value":"632722","parent":"632700"},{"name":"称多县","value":"632723","parent":"632700"},{"name":"治多县","value":"632724","parent":"632700"},{"name":"囊谦县","value":"632725","parent":"632700"},{"name":"曲麻莱县","value":"632726","parent":"632700"},{"name":"格尔木市","value":"632801","parent":"632800"},{"name":"德令哈市","value":"632802","parent":"632800"},{"name":"乌兰县","value":"632821","parent":"632800"},{"name":"都兰县","value":"632822","parent":"632800"},{"name":"天峻县","value":"632823","parent":"632800"},{"name":"银川市","value":"640100","parent":"640000"},{"name":"石嘴山市","value":"640200","parent":"640000"},{"name":"吴忠市","value":"640300","parent":"640000"},{"name":"固原市","value":"640400","parent":"640000"},{"name":"中卫市","value":"640500","parent":"640000"},{"name":"兴庆区","value":"640104","parent":"640100"},{"name":"西夏区","value":"640105","parent":"640100"},{"name":"金凤区","value":"640106","parent":"640100"},{"name":"永宁县","value":"640121","parent":"640100"},{"name":"贺兰县","value":"640122","parent":"640100"},{"name":"灵武市","value":"640181","parent":"640100"},{"name":"大武口区","value":"640202","parent":"640200"},{"name":"惠农区","value":"640205","parent":"640200"},{"name":"平罗县","value":"640221","parent":"640200"},{"name":"利通区","value":"640302","parent":"640300"},{"name":"红寺堡区","value":"640303","parent":"640300"},{"name":"盐池县","value":"640323","parent":"640300"},{"name":"同心县","value":"640324","parent":"640300"},{"name":"青铜峡市","value":"640381","parent":"640300"},{"name":"原州区","value":"640402","parent":"640400"},{"name":"西吉县","value":"640422","parent":"640400"},{"name":"隆德县","value":"640423","parent":"640400"},{"name":"泾源县","value":"640424","parent":"640400"},{"name":"彭阳县","value":"640425","parent":"640400"},{"name":"沙坡头区","value":"640502","parent":"640500"},{"name":"中宁县","value":"640521","parent":"640500"},{"name":"海原县","value":"640522","parent":"640500"},{"name":"乌鲁木齐市","value":"650100","parent":"650000"},{"name":"克拉玛依市","value":"650200","parent":"650000"},{"name":"吐鲁番市","value":"650400","parent":"650000"},{"name":"哈密市","value":"650500","parent":"650000"},{"name":"昌吉回族自治州","value":"652300","parent":"650000"},{"name":"博尔塔拉蒙古自治州","value":"652700","parent":"650000"},{"name":"巴音郭楞蒙古自治州","value":"652800","parent":"650000"},{"name":"阿克苏地区","value":"652900","parent":"650000"},{"name":"克孜勒苏柯尔克孜自治州","value":"653000","parent":"650000"},{"name":"喀什地区","value":"653100","parent":"650000"},{"name":"和田地区","value":"653200","parent":"650000"},{"name":"伊犁哈萨克自治州","value":"654000","parent":"650000"},{"name":"塔城地区","value":"654200","parent":"650000"},{"name":"阿勒泰地区","value":"654300","parent":"650000"},{"name":"石河子市","value":"659001","parent":"650000"},{"name":"阿拉尔市","value":"659002","parent":"650000"},{"name":"图木舒克市","value":"659003","parent":"650000"},{"name":"五家渠市","value":"659004","parent":"650000"},{"name":"铁门关市","value":"659006","parent":"650000"},{"name":"天山区","value":"650102","parent":"650100"},{"name":"沙依巴克区","value":"650103","parent":"650100"},{"name":"新市区","value":"650104","parent":"650100"},{"name":"水磨沟区","value":"650105","parent":"650100"},{"name":"头屯河区","value":"650106","parent":"650100"},{"name":"达坂城区","value":"650107","parent":"650100"},{"name":"米东区","value":"650109","parent":"650100"},{"name":"乌鲁木齐县","value":"650121","parent":"650100"},{"name":"独山子区","value":"650202","parent":"650200"},{"name":"克拉玛依区","value":"650203","parent":"650200"},{"name":"白碱滩区","value":"650204","parent":"650200"},{"name":"乌尔禾区","value":"650205","parent":"650200"},{"name":"高昌区","value":"650402","parent":"650400"},{"name":"鄯善县","value":"650421","parent":"650400"},{"name":"托克逊县","value":"650422","parent":"650400"},{"name":"伊州区","value":"650502","parent":"650500"},{"name":"巴里坤哈萨克自治县","value":"650521","parent":"650500"},{"name":"伊吾县","value":"650522","parent":"650500"},{"name":"昌吉市","value":"652301","parent":"652300"},{"name":"阜康市","value":"652302","parent":"652300"},{"name":"呼图壁县","value":"652323","parent":"652300"},{"name":"玛纳斯县","value":"652324","parent":"652300"},{"name":"奇台县","value":"652325","parent":"652300"},{"name":"吉木萨尔县","value":"652327","parent":"652300"},{"name":"木垒哈萨克自治县","value":"652328","parent":"652300"},{"name":"博乐市","value":"652701","parent":"652700"},{"name":"阿拉山口市","value":"652702","parent":"652700"},{"name":"精河县","value":"652722","parent":"652700"},{"name":"温泉县","value":"652723","parent":"652700"},{"name":"库尔勒市","value":"652801","parent":"652800"},{"name":"轮台县","value":"652822","parent":"652800"},{"name":"尉犁县","value":"652823","parent":"652800"},{"name":"若羌县","value":"652824","parent":"652800"},{"name":"且末县","value":"652825","parent":"652800"},{"name":"焉耆回族自治县","value":"652826","parent":"652800"},{"name":"和静县","value":"652827","parent":"652800"},{"name":"和硕县","value":"652828","parent":"652800"},{"name":"博湖县","value":"652829","parent":"652800"},{"name":"阿克苏市","value":"652901","parent":"652900"},{"name":"温宿县","value":"652922","parent":"652900"},{"name":"库车县","value":"652923","parent":"652900"},{"name":"沙雅县","value":"652924","parent":"652900"},{"name":"新和县","value":"652925","parent":"652900"},{"name":"拜城县","value":"652926","parent":"652900"},{"name":"乌什县","value":"652927","parent":"652900"},{"name":"阿瓦提县","value":"652928","parent":"652900"},{"name":"柯坪县","value":"652929","parent":"652900"},{"name":"阿图什市","value":"653001","parent":"653000"},{"name":"阿克陶县","value":"653022","parent":"653000"},{"name":"阿合奇县","value":"653023","parent":"653000"},{"name":"乌恰县","value":"653024","parent":"653000"},{"name":"喀什市","value":"653101","parent":"653100"},{"name":"疏附县","value":"653121","parent":"653100"},{"name":"疏勒县","value":"653122","parent":"653100"},{"name":"英吉沙县","value":"653123","parent":"653100"},{"name":"泽普县","value":"653124","parent":"653100"},{"name":"莎车县","value":"653125","parent":"653100"},{"name":"叶城县","value":"653126","parent":"653100"},{"name":"麦盖提县","value":"653127","parent":"653100"},{"name":"岳普湖县","value":"653128","parent":"653100"},{"name":"伽师县","value":"653129","parent":"653100"},{"name":"巴楚县","value":"653130","parent":"653100"},{"name":"塔什库尔干塔吉克自治县","value":"653131","parent":"653100"},{"name":"和田市","value":"653201","parent":"653200"},{"name":"和田县","value":"653221","parent":"653200"},{"name":"墨玉县","value":"653222","parent":"653200"},{"name":"皮山县","value":"653223","parent":"653200"},{"name":"洛浦县","value":"653224","parent":"653200"},{"name":"策勒县","value":"653225","parent":"653200"},{"name":"于田县","value":"653226","parent":"653200"},{"name":"民丰县","value":"653227","parent":"653200"},{"name":"伊宁市","value":"654002","parent":"654000"},{"name":"奎屯市","value":"654003","parent":"654000"},{"name":"霍尔果斯市","value":"654004","parent":"654000"},{"name":"伊宁县","value":"654021","parent":"654000"},{"name":"察布查尔锡伯自治县","value":"654022","parent":"654000"},{"name":"霍城县","value":"654023","parent":"654000"},{"name":"巩留县","value":"654024","parent":"654000"},{"name":"新源县","value":"654025","parent":"654000"},{"name":"昭苏县","value":"654026","parent":"654000"},{"name":"特克斯县","value":"654027","parent":"654000"},{"name":"尼勒克县","value":"654028","parent":"654000"},{"name":"塔城市","value":"654201","parent":"654200"},{"name":"乌苏市","value":"654202","parent":"654200"},{"name":"额敏县","value":"654221","parent":"654200"},{"name":"沙湾县","value":"654223","parent":"654200"},{"name":"托里县","value":"654224","parent":"654200"},{"name":"裕民县","value":"654225","parent":"654200"},{"name":"和布克赛尔蒙古自治县","value":"654226","parent":"654200"},{"name":"阿勒泰市","value":"654301","parent":"654300"},{"name":"布尔津县","value":"654321","parent":"654300"},{"name":"富蕴县","value":"654322","parent":"654300"},{"name":"福海县","value":"654323","parent":"654300"},{"name":"哈巴河县","value":"654324","parent":"654300"},{"name":"青河县","value":"654325","parent":"654300"},{"name":"吉木乃县","value":"654326","parent":"654300"},{"name":"中西區","value":"810001","parent":"810000"},{"name":"灣仔區","value":"810002","parent":"810000"},{"name":"東區","value":"810003","parent":"810000"},{"name":"南區","value":"810004","parent":"810000"},{"name":"油尖旺區","value":"810005","parent":"810000"},{"name":"深水埗區","value":"810006","parent":"810000"},{"name":"九龍城區","value":"810007","parent":"810000"},{"name":"黃大仙區","value":"810008","parent":"810000"},{"name":"觀塘區","value":"810009","parent":"810000"},{"name":"荃灣區","value":"810010","parent":"810000"},{"name":"屯門區","value":"810011","parent":"810000"},{"name":"元朗區","value":"810012","parent":"810000"},{"name":"北區","value":"810013","parent":"810000"},{"name":"大埔區","value":"810014","parent":"810000"},{"name":"西貢區","value":"810015","parent":"810000"},{"name":"沙田區","value":"810016","parent":"810000"},{"name":"葵青區","value":"810017","parent":"810000"},{"name":"離島區","value":"810018","parent":"810000"},{"name":"花地瑪堂區","value":"820001","parent":"820000"},{"name":"花王堂區","value":"820002","parent":"820000"},{"name":"望德堂區","value":"820003","parent":"820000"},{"name":"大堂區","value":"820004","parent":"820000"},{"name":"風順堂區","value":"820005","parent":"820000"},{"name":"嘉模堂區","value":"820006","parent":"820000"},{"name":"路氹填海區","value":"820007","parent":"820000"},{"name":"聖方濟各堂區","value":"820008","parent":"820000"},{"name":"--","value":"--","parent":"139000"},{"name":"--","value":"--","parent":"139001"},{"name":"--","value":"--","parent":"139002"},{"name":"--","value":"--","parent":"419000"},{"name":"--","value":"--","parent":"419001"},{"name":"--","value":"--","parent":"429000"},{"name":"--","value":"--","parent":"429004"},{"name":"--","value":"--","parent":"429005"},{"name":"--","value":"--","parent":"429006"},{"name":"--","value":"--","parent":"429021"},{"name":"--","value":"--","parent":"441900"},{"name":"--","value":"--","parent":"442000"},{"name":"--","value":"--","parent":"460300"},{"name":"--","value":"--","parent":"460400"},{"name":"--","value":"--","parent":"469000"},{"name":"--","value":"--","parent":"469001"},{"name":"--","value":"--","parent":"469002"},{"name":"--","value":"--","parent":"469005"},{"name":"--","value":"--","parent":"469006"},{"name":"--","value":"--","parent":"469007"},{"name":"--","value":"--","parent":"469021"},{"name":"--","value":"--","parent":"469022"},{"name":"--","value":"--","parent":"469023"},{"name":"--","value":"--","parent":"469024"},{"name":"--","value":"--","parent":"469025"},{"name":"--","value":"--","parent":"469026"},{"name":"--","value":"--","parent":"469027"},{"name":"--","value":"--","parent":"469028"},{"name":"--","value":"--","parent":"469029"},{"name":"--","value":"--","parent":"469030"},{"name":"--","value":"--","parent":"620200"},{"name":"--","value":"--","parent":"659000"},{"name":"--","value":"--","parent":"659001"},{"name":"--","value":"--","parent":"659002"},{"name":"--","value":"--","parent":"659003"},{"name":"--","value":"--","parent":"659004"},{"name":"--","value":"--","parent":"659006"}]

/***/ }),
/* 300 */
/***/ (function(module, exports) {

module.exports = [{"name":"北京市","value":"110000"},{"name":"天津市","value":"120000"},{"name":"河北省","value":"130000"},{"name":"山西省","value":"140000"},{"name":"内蒙古自治区","value":"150000"},{"name":"辽宁省","value":"210000"},{"name":"吉林省","value":"220000"},{"name":"黑龙江省","value":"230000"},{"name":"上海市","value":"310000"},{"name":"江苏省","value":"320000"},{"name":"浙江省","value":"330000"},{"name":"安徽省","value":"340000"},{"name":"福建省","value":"350000"},{"name":"江西省","value":"360000"},{"name":"山东省","value":"370000"},{"name":"河南省","value":"410000"},{"name":"湖北省","value":"420000"},{"name":"湖南省","value":"430000"},{"name":"广东省","value":"440000"},{"name":"广西壮族自治区","value":"450000"},{"name":"海南省","value":"460000"},{"name":"重庆市","value":"500000"},{"name":"四川省","value":"510000"},{"name":"贵州省","value":"520000"},{"name":"云南省","value":"530000"},{"name":"西藏自治区","value":"540000"},{"name":"陕西省","value":"610000"},{"name":"甘肃省","value":"620000"},{"name":"青海省","value":"630000"},{"name":"宁夏回族自治区","value":"640000"},{"name":"新疆维吾尔自治区","value":"650000"},{"name":"市辖区","value":"110100","parent":"110000"},{"name":"东城区","value":"110101","parent":"110100"},{"name":"西城区","value":"110102","parent":"110100"},{"name":"朝阳区","value":"110105","parent":"110100"},{"name":"丰台区","value":"110106","parent":"110100"},{"name":"石景山区","value":"110107","parent":"110100"},{"name":"海淀区","value":"110108","parent":"110100"},{"name":"门头沟区","value":"110109","parent":"110100"},{"name":"房山区","value":"110111","parent":"110100"},{"name":"通州区","value":"110112","parent":"110100"},{"name":"顺义区","value":"110113","parent":"110100"},{"name":"昌平区","value":"110114","parent":"110100"},{"name":"大兴区","value":"110115","parent":"110100"},{"name":"怀柔区","value":"110116","parent":"110100"},{"name":"平谷区","value":"110117","parent":"110100"},{"name":"密云区","value":"110118","parent":"110100"},{"name":"延庆区","value":"110119","parent":"110100"},{"name":"市辖区","value":"120100","parent":"120000"},{"name":"和平区","value":"120101","parent":"120100"},{"name":"河东区","value":"120102","parent":"120100"},{"name":"河西区","value":"120103","parent":"120100"},{"name":"南开区","value":"120104","parent":"120100"},{"name":"河北区","value":"120105","parent":"120100"},{"name":"红桥区","value":"120106","parent":"120100"},{"name":"东丽区","value":"120110","parent":"120100"},{"name":"西青区","value":"120111","parent":"120100"},{"name":"津南区","value":"120112","parent":"120100"},{"name":"北辰区","value":"120113","parent":"120100"},{"name":"武清区","value":"120114","parent":"120100"},{"name":"宝坻区","value":"120115","parent":"120100"},{"name":"滨海新区","value":"120116","parent":"120100"},{"name":"宁河区","value":"120117","parent":"120100"},{"name":"静海区","value":"120118","parent":"120100"},{"name":"蓟州区","value":"120119","parent":"120100"},{"name":"石家庄市","value":"130100","parent":"130000"},{"name":"唐山市","value":"130200","parent":"130000"},{"name":"秦皇岛市","value":"130300","parent":"130000"},{"name":"邯郸市","value":"130400","parent":"130000"},{"name":"邢台市","value":"130500","parent":"130000"},{"name":"保定市","value":"130600","parent":"130000"},{"name":"张家口市","value":"130700","parent":"130000"},{"name":"承德市","value":"130800","parent":"130000"},{"name":"沧州市","value":"130900","parent":"130000"},{"name":"廊坊市","value":"131000","parent":"130000"},{"name":"衡水市","value":"131100","parent":"130000"},{"name":"定州市","value":"139001","parent":"130000"},{"name":"辛集市","value":"139002","parent":"130000"},{"name":"长安区","value":"130102","parent":"130100"},{"name":"桥西区","value":"130104","parent":"130100"},{"name":"新华区","value":"130105","parent":"130100"},{"name":"井陉矿区","value":"130107","parent":"130100"},{"name":"裕华区","value":"130108","parent":"130100"},{"name":"藁城区","value":"130109","parent":"130100"},{"name":"鹿泉区","value":"130110","parent":"130100"},{"name":"栾城区","value":"130111","parent":"130100"},{"name":"井陉县","value":"130121","parent":"130100"},{"name":"正定县","value":"130123","parent":"130100"},{"name":"行唐县","value":"130125","parent":"130100"},{"name":"灵寿县","value":"130126","parent":"130100"},{"name":"高邑县","value":"130127","parent":"130100"},{"name":"深泽县","value":"130128","parent":"130100"},{"name":"赞皇县","value":"130129","parent":"130100"},{"name":"无极县","value":"130130","parent":"130100"},{"name":"平山县","value":"130131","parent":"130100"},{"name":"元氏县","value":"130132","parent":"130100"},{"name":"赵县","value":"130133","parent":"130100"},{"name":"晋州市","value":"130183","parent":"130100"},{"name":"新乐市","value":"130184","parent":"130100"},{"name":"路南区","value":"130202","parent":"130200"},{"name":"路北区","value":"130203","parent":"130200"},{"name":"古冶区","value":"130204","parent":"130200"},{"name":"开平区","value":"130205","parent":"130200"},{"name":"丰南区","value":"130207","parent":"130200"},{"name":"丰润区","value":"130208","parent":"130200"},{"name":"曹妃甸区","value":"130209","parent":"130200"},{"name":"滦县","value":"130223","parent":"130200"},{"name":"滦南县","value":"130224","parent":"130200"},{"name":"乐亭县","value":"130225","parent":"130200"},{"name":"迁西县","value":"130227","parent":"130200"},{"name":"玉田县","value":"130229","parent":"130200"},{"name":"遵化市","value":"130281","parent":"130200"},{"name":"迁安市","value":"130283","parent":"130200"},{"name":"海港区","value":"130302","parent":"130300"},{"name":"山海关区","value":"130303","parent":"130300"},{"name":"北戴河区","value":"130304","parent":"130300"},{"name":"抚宁区","value":"130306","parent":"130300"},{"name":"青龙满族自治县","value":"130321","parent":"130300"},{"name":"昌黎县","value":"130322","parent":"130300"},{"name":"卢龙县","value":"130324","parent":"130300"},{"name":"邯山区","value":"130402","parent":"130400"},{"name":"丛台区","value":"130403","parent":"130400"},{"name":"复兴区","value":"130404","parent":"130400"},{"name":"峰峰矿区","value":"130406","parent":"130400"},{"name":"邯郸县","value":"130421","parent":"130400"},{"name":"临漳县","value":"130423","parent":"130400"},{"name":"成安县","value":"130424","parent":"130400"},{"name":"大名县","value":"130425","parent":"130400"},{"name":"涉县","value":"130426","parent":"130400"},{"name":"磁县","value":"130427","parent":"130400"},{"name":"肥乡县","value":"130428","parent":"130400"},{"name":"永年县","value":"130429","parent":"130400"},{"name":"邱县","value":"130430","parent":"130400"},{"name":"鸡泽县","value":"130431","parent":"130400"},{"name":"广平县","value":"130432","parent":"130400"},{"name":"馆陶县","value":"130433","parent":"130400"},{"name":"魏县","value":"130434","parent":"130400"},{"name":"曲周县","value":"130435","parent":"130400"},{"name":"武安市","value":"130481","parent":"130400"},{"name":"桥东区","value":"130502","parent":"130500"},{"name":"桥西区","value":"130503","parent":"130500"},{"name":"邢台县","value":"130521","parent":"130500"},{"name":"临城县","value":"130522","parent":"130500"},{"name":"内丘县","value":"130523","parent":"130500"},{"name":"柏乡县","value":"130524","parent":"130500"},{"name":"隆尧县","value":"130525","parent":"130500"},{"name":"任县","value":"130526","parent":"130500"},{"name":"南和县","value":"130527","parent":"130500"},{"name":"宁晋县","value":"130528","parent":"130500"},{"name":"巨鹿县","value":"130529","parent":"130500"},{"name":"新河县","value":"130530","parent":"130500"},{"name":"广宗县","value":"130531","parent":"130500"},{"name":"平乡县","value":"130532","parent":"130500"},{"name":"威县","value":"130533","parent":"130500"},{"name":"清河县","value":"130534","parent":"130500"},{"name":"临西县","value":"130535","parent":"130500"},{"name":"南宫市","value":"130581","parent":"130500"},{"name":"沙河市","value":"130582","parent":"130500"},{"name":"竞秀区","value":"130602","parent":"130600"},{"name":"莲池区","value":"130606","parent":"130600"},{"name":"满城区","value":"130607","parent":"130600"},{"name":"清苑区","value":"130608","parent":"130600"},{"name":"徐水区","value":"130609","parent":"130600"},{"name":"涞水县","value":"130623","parent":"130600"},{"name":"阜平县","value":"130624","parent":"130600"},{"name":"定兴县","value":"130626","parent":"130600"},{"name":"唐县","value":"130627","parent":"130600"},{"name":"高阳县","value":"130628","parent":"130600"},{"name":"容城县","value":"130629","parent":"130600"},{"name":"涞源县","value":"130630","parent":"130600"},{"name":"望都县","value":"130631","parent":"130600"},{"name":"安新县","value":"130632","parent":"130600"},{"name":"易县","value":"130633","parent":"130600"},{"name":"曲阳县","value":"130634","parent":"130600"},{"name":"蠡县","value":"130635","parent":"130600"},{"name":"顺平县","value":"130636","parent":"130600"},{"name":"博野县","value":"130637","parent":"130600"},{"name":"雄县","value":"130638","parent":"130600"},{"name":"涿州市","value":"130681","parent":"130600"},{"name":"安国市","value":"130683","parent":"130600"},{"name":"高碑店市","value":"130684","parent":"130600"},{"name":"桥东区","value":"130702","parent":"130700"},{"name":"桥西区","value":"130703","parent":"130700"},{"name":"宣化区","value":"130705","parent":"130700"},{"name":"下花园区","value":"130706","parent":"130700"},{"name":"万全区","value":"130708","parent":"130700"},{"name":"崇礼区","value":"130709","parent":"130700"},{"name":"张北县","value":"130722","parent":"130700"},{"name":"康保县","value":"130723","parent":"130700"},{"name":"沽源县","value":"130724","parent":"130700"},{"name":"尚义县","value":"130725","parent":"130700"},{"name":"蔚县","value":"130726","parent":"130700"},{"name":"阳原县","value":"130727","parent":"130700"},{"name":"怀安县","value":"130728","parent":"130700"},{"name":"怀来县","value":"130730","parent":"130700"},{"name":"涿鹿县","value":"130731","parent":"130700"},{"name":"赤城县","value":"130732","parent":"130700"},{"name":"双桥区","value":"130802","parent":"130800"},{"name":"双滦区","value":"130803","parent":"130800"},{"name":"鹰手营子矿区","value":"130804","parent":"130800"},{"name":"承德县","value":"130821","parent":"130800"},{"name":"兴隆县","value":"130822","parent":"130800"},{"name":"平泉县","value":"130823","parent":"130800"},{"name":"滦平县","value":"130824","parent":"130800"},{"name":"隆化县","value":"130825","parent":"130800"},{"name":"丰宁满族自治县","value":"130826","parent":"130800"},{"name":"宽城满族自治县","value":"130827","parent":"130800"},{"name":"围场满族蒙古族自治县","value":"130828","parent":"130800"},{"name":"新华区","value":"130902","parent":"130900"},{"name":"运河区","value":"130903","parent":"130900"},{"name":"沧县","value":"130921","parent":"130900"},{"name":"青县","value":"130922","parent":"130900"},{"name":"东光县","value":"130923","parent":"130900"},{"name":"海兴县","value":"130924","parent":"130900"},{"name":"盐山县","value":"130925","parent":"130900"},{"name":"肃宁县","value":"130926","parent":"130900"},{"name":"南皮县","value":"130927","parent":"130900"},{"name":"吴桥县","value":"130928","parent":"130900"},{"name":"献县","value":"130929","parent":"130900"},{"name":"孟村回族自治县","value":"130930","parent":"130900"},{"name":"泊头市","value":"130981","parent":"130900"},{"name":"任丘市","value":"130982","parent":"130900"},{"name":"黄骅市","value":"130983","parent":"130900"},{"name":"河间市","value":"130984","parent":"130900"},{"name":"安次区","value":"131002","parent":"131000"},{"name":"广阳区","value":"131003","parent":"131000"},{"name":"固安县","value":"131022","parent":"131000"},{"name":"永清县","value":"131023","parent":"131000"},{"name":"香河县","value":"131024","parent":"131000"},{"name":"大城县","value":"131025","parent":"131000"},{"name":"文安县","value":"131026","parent":"131000"},{"name":"大厂回族自治县","value":"131028","parent":"131000"},{"name":"霸州市","value":"131081","parent":"131000"},{"name":"三河市","value":"131082","parent":"131000"},{"name":"桃城区","value":"131102","parent":"131100"},{"name":"冀州区","value":"131103","parent":"131100"},{"name":"枣强县","value":"131121","parent":"131100"},{"name":"武邑县","value":"131122","parent":"131100"},{"name":"武强县","value":"131123","parent":"131100"},{"name":"饶阳县","value":"131124","parent":"131100"},{"name":"安平县","value":"131125","parent":"131100"},{"name":"故城县","value":"131126","parent":"131100"},{"name":"景县","value":"131127","parent":"131100"},{"name":"阜城县","value":"131128","parent":"131100"},{"name":"深州市","value":"131182","parent":"131100"},{"name":"太原市","value":"140100","parent":"140000"},{"name":"大同市","value":"140200","parent":"140000"},{"name":"阳泉市","value":"140300","parent":"140000"},{"name":"长治市","value":"140400","parent":"140000"},{"name":"晋城市","value":"140500","parent":"140000"},{"name":"朔州市","value":"140600","parent":"140000"},{"name":"晋中市","value":"140700","parent":"140000"},{"name":"运城市","value":"140800","parent":"140000"},{"name":"忻州市","value":"140900","parent":"140000"},{"name":"临汾市","value":"141000","parent":"140000"},{"name":"吕梁市","value":"141100","parent":"140000"},{"name":"小店区","value":"140105","parent":"140100"},{"name":"迎泽区","value":"140106","parent":"140100"},{"name":"杏花岭区","value":"140107","parent":"140100"},{"name":"尖草坪区","value":"140108","parent":"140100"},{"name":"万柏林区","value":"140109","parent":"140100"},{"name":"晋源区","value":"140110","parent":"140100"},{"name":"清徐县","value":"140121","parent":"140100"},{"name":"阳曲县","value":"140122","parent":"140100"},{"name":"娄烦县","value":"140123","parent":"140100"},{"name":"古交市","value":"140181","parent":"140100"},{"name":"城区","value":"140202","parent":"140200"},{"name":"矿区","value":"140203","parent":"140200"},{"name":"南郊区","value":"140211","parent":"140200"},{"name":"新荣区","value":"140212","parent":"140200"},{"name":"阳高县","value":"140221","parent":"140200"},{"name":"天镇县","value":"140222","parent":"140200"},{"name":"广灵县","value":"140223","parent":"140200"},{"name":"灵丘县","value":"140224","parent":"140200"},{"name":"浑源县","value":"140225","parent":"140200"},{"name":"左云县","value":"140226","parent":"140200"},{"name":"大同县","value":"140227","parent":"140200"},{"name":"城区","value":"140302","parent":"140300"},{"name":"矿区","value":"140303","parent":"140300"},{"name":"郊区","value":"140311","parent":"140300"},{"name":"平定县","value":"140321","parent":"140300"},{"name":"盂县","value":"140322","parent":"140300"},{"name":"城区","value":"140402","parent":"140400"},{"name":"郊区","value":"140411","parent":"140400"},{"name":"长治县","value":"140421","parent":"140400"},{"name":"襄垣县","value":"140423","parent":"140400"},{"name":"屯留县","value":"140424","parent":"140400"},{"name":"平顺县","value":"140425","parent":"140400"},{"name":"黎城县","value":"140426","parent":"140400"},{"name":"壶关县","value":"140427","parent":"140400"},{"name":"长子县","value":"140428","parent":"140400"},{"name":"武乡县","value":"140429","parent":"140400"},{"name":"沁县","value":"140430","parent":"140400"},{"name":"沁源县","value":"140431","parent":"140400"},{"name":"潞城市","value":"140481","parent":"140400"},{"name":"城区","value":"140502","parent":"140500"},{"name":"沁水县","value":"140521","parent":"140500"},{"name":"阳城县","value":"140522","parent":"140500"},{"name":"陵川县","value":"140524","parent":"140500"},{"name":"泽州县","value":"140525","parent":"140500"},{"name":"高平市","value":"140581","parent":"140500"},{"name":"朔城区","value":"140602","parent":"140600"},{"name":"平鲁区","value":"140603","parent":"140600"},{"name":"山阴县","value":"140621","parent":"140600"},{"name":"应县","value":"140622","parent":"140600"},{"name":"右玉县","value":"140623","parent":"140600"},{"name":"怀仁县","value":"140624","parent":"140600"},{"name":"榆次区","value":"140702","parent":"140700"},{"name":"榆社县","value":"140721","parent":"140700"},{"name":"左权县","value":"140722","parent":"140700"},{"name":"和顺县","value":"140723","parent":"140700"},{"name":"昔阳县","value":"140724","parent":"140700"},{"name":"寿阳县","value":"140725","parent":"140700"},{"name":"太谷县","value":"140726","parent":"140700"},{"name":"祁县","value":"140727","parent":"140700"},{"name":"平遥县","value":"140728","parent":"140700"},{"name":"灵石县","value":"140729","parent":"140700"},{"name":"介休市","value":"140781","parent":"140700"},{"name":"盐湖区","value":"140802","parent":"140800"},{"name":"临猗县","value":"140821","parent":"140800"},{"name":"万荣县","value":"140822","parent":"140800"},{"name":"闻喜县","value":"140823","parent":"140800"},{"name":"稷山县","value":"140824","parent":"140800"},{"name":"新绛县","value":"140825","parent":"140800"},{"name":"绛县","value":"140826","parent":"140800"},{"name":"垣曲县","value":"140827","parent":"140800"},{"name":"夏县","value":"140828","parent":"140800"},{"name":"平陆县","value":"140829","parent":"140800"},{"name":"芮城县","value":"140830","parent":"140800"},{"name":"永济市","value":"140881","parent":"140800"},{"name":"河津市","value":"140882","parent":"140800"},{"name":"忻府区","value":"140902","parent":"140900"},{"name":"定襄县","value":"140921","parent":"140900"},{"name":"五台县","value":"140922","parent":"140900"},{"name":"代县","value":"140923","parent":"140900"},{"name":"繁峙县","value":"140924","parent":"140900"},{"name":"宁武县","value":"140925","parent":"140900"},{"name":"静乐县","value":"140926","parent":"140900"},{"name":"神池县","value":"140927","parent":"140900"},{"name":"五寨县","value":"140928","parent":"140900"},{"name":"岢岚县","value":"140929","parent":"140900"},{"name":"河曲县","value":"140930","parent":"140900"},{"name":"保德县","value":"140931","parent":"140900"},{"name":"偏关县","value":"140932","parent":"140900"},{"name":"原平市","value":"140981","parent":"140900"},{"name":"尧都区","value":"141002","parent":"141000"},{"name":"曲沃县","value":"141021","parent":"141000"},{"name":"翼城县","value":"141022","parent":"141000"},{"name":"襄汾县","value":"141023","parent":"141000"},{"name":"洪洞县","value":"141024","parent":"141000"},{"name":"古县","value":"141025","parent":"141000"},{"name":"安泽县","value":"141026","parent":"141000"},{"name":"浮山县","value":"141027","parent":"141000"},{"name":"吉县","value":"141028","parent":"141000"},{"name":"乡宁县","value":"141029","parent":"141000"},{"name":"大宁县","value":"141030","parent":"141000"},{"name":"隰县","value":"141031","parent":"141000"},{"name":"永和县","value":"141032","parent":"141000"},{"name":"蒲县","value":"141033","parent":"141000"},{"name":"汾西县","value":"141034","parent":"141000"},{"name":"侯马市","value":"141081","parent":"141000"},{"name":"霍州市","value":"141082","parent":"141000"},{"name":"离石区","value":"141102","parent":"141100"},{"name":"文水县","value":"141121","parent":"141100"},{"name":"交城县","value":"141122","parent":"141100"},{"name":"兴县","value":"141123","parent":"141100"},{"name":"临县","value":"141124","parent":"141100"},{"name":"柳林县","value":"141125","parent":"141100"},{"name":"石楼县","value":"141126","parent":"141100"},{"name":"岚县","value":"141127","parent":"141100"},{"name":"方山县","value":"141128","parent":"141100"},{"name":"中阳县","value":"141129","parent":"141100"},{"name":"交口县","value":"141130","parent":"141100"},{"name":"孝义市","value":"141181","parent":"141100"},{"name":"汾阳市","value":"141182","parent":"141100"},{"name":"呼和浩特市","value":"150100","parent":"150000"},{"name":"包头市","value":"150200","parent":"150000"},{"name":"乌海市","value":"150300","parent":"150000"},{"name":"赤峰市","value":"150400","parent":"150000"},{"name":"通辽市","value":"150500","parent":"150000"},{"name":"鄂尔多斯市","value":"150600","parent":"150000"},{"name":"呼伦贝尔市","value":"150700","parent":"150000"},{"name":"巴彦淖尔市","value":"150800","parent":"150000"},{"name":"乌兰察布市","value":"150900","parent":"150000"},{"name":"兴安盟","value":"152200","parent":"150000"},{"name":"锡林郭勒盟","value":"152500","parent":"150000"},{"name":"阿拉善盟","value":"152900","parent":"150000"},{"name":"新城区","value":"150102","parent":"150100"},{"name":"回民区","value":"150103","parent":"150100"},{"name":"玉泉区","value":"150104","parent":"150100"},{"name":"赛罕区","value":"150105","parent":"150100"},{"name":"土默特左旗","value":"150121","parent":"150100"},{"name":"托克托县","value":"150122","parent":"150100"},{"name":"和林格尔县","value":"150123","parent":"150100"},{"name":"清水河县","value":"150124","parent":"150100"},{"name":"武川县","value":"150125","parent":"150100"},{"name":"东河区","value":"150202","parent":"150200"},{"name":"昆都仑区","value":"150203","parent":"150200"},{"name":"青山区","value":"150204","parent":"150200"},{"name":"石拐区","value":"150205","parent":"150200"},{"name":"白云鄂博矿区","value":"150206","parent":"150200"},{"name":"九原区","value":"150207","parent":"150200"},{"name":"土默特右旗","value":"150221","parent":"150200"},{"name":"固阳县","value":"150222","parent":"150200"},{"name":"达尔罕茂明安联合旗","value":"150223","parent":"150200"},{"name":"海勃湾区","value":"150302","parent":"150300"},{"name":"海南区","value":"150303","parent":"150300"},{"name":"乌达区","value":"150304","parent":"150300"},{"name":"红山区","value":"150402","parent":"150400"},{"name":"元宝山区","value":"150403","parent":"150400"},{"name":"松山区","value":"150404","parent":"150400"},{"name":"阿鲁科尔沁旗","value":"150421","parent":"150400"},{"name":"巴林左旗","value":"150422","parent":"150400"},{"name":"巴林右旗","value":"150423","parent":"150400"},{"name":"林西县","value":"150424","parent":"150400"},{"name":"克什克腾旗","value":"150425","parent":"150400"},{"name":"翁牛特旗","value":"150426","parent":"150400"},{"name":"喀喇沁旗","value":"150428","parent":"150400"},{"name":"宁城县","value":"150429","parent":"150400"},{"name":"敖汉旗","value":"150430","parent":"150400"},{"name":"科尔沁区","value":"150502","parent":"150500"},{"name":"科尔沁左翼中旗","value":"150521","parent":"150500"},{"name":"科尔沁左翼后旗","value":"150522","parent":"150500"},{"name":"开鲁县","value":"150523","parent":"150500"},{"name":"库伦旗","value":"150524","parent":"150500"},{"name":"奈曼旗","value":"150525","parent":"150500"},{"name":"扎鲁特旗","value":"150526","parent":"150500"},{"name":"霍林郭勒市","value":"150581","parent":"150500"},{"name":"东胜区","value":"150602","parent":"150600"},{"name":"康巴什区","value":"150603","parent":"150600"},{"name":"达拉特旗","value":"150621","parent":"150600"},{"name":"准格尔旗","value":"150622","parent":"150600"},{"name":"鄂托克前旗","value":"150623","parent":"150600"},{"name":"鄂托克旗","value":"150624","parent":"150600"},{"name":"杭锦旗","value":"150625","parent":"150600"},{"name":"乌审旗","value":"150626","parent":"150600"},{"name":"伊金霍洛旗","value":"150627","parent":"150600"},{"name":"海拉尔区","value":"150702","parent":"150700"},{"name":"扎赉诺尔区","value":"150703","parent":"150700"},{"name":"阿荣旗","value":"150721","parent":"150700"},{"name":"莫力达瓦达斡尔族自治旗","value":"150722","parent":"150700"},{"name":"鄂伦春自治旗","value":"150723","parent":"150700"},{"name":"鄂温克族自治旗","value":"150724","parent":"150700"},{"name":"陈巴尔虎旗","value":"150725","parent":"150700"},{"name":"新巴尔虎左旗","value":"150726","parent":"150700"},{"name":"新巴尔虎右旗","value":"150727","parent":"150700"},{"name":"满洲里市","value":"150781","parent":"150700"},{"name":"牙克石市","value":"150782","parent":"150700"},{"name":"扎兰屯市","value":"150783","parent":"150700"},{"name":"额尔古纳市","value":"150784","parent":"150700"},{"name":"根河市","value":"150785","parent":"150700"},{"name":"临河区","value":"150802","parent":"150800"},{"name":"五原县","value":"150821","parent":"150800"},{"name":"磴口县","value":"150822","parent":"150800"},{"name":"乌拉特前旗","value":"150823","parent":"150800"},{"name":"乌拉特中旗","value":"150824","parent":"150800"},{"name":"乌拉特后旗","value":"150825","parent":"150800"},{"name":"杭锦后旗","value":"150826","parent":"150800"},{"name":"集宁区","value":"150902","parent":"150900"},{"name":"卓资县","value":"150921","parent":"150900"},{"name":"化德县","value":"150922","parent":"150900"},{"name":"商都县","value":"150923","parent":"150900"},{"name":"兴和县","value":"150924","parent":"150900"},{"name":"凉城县","value":"150925","parent":"150900"},{"name":"察哈尔右翼前旗","value":"150926","parent":"150900"},{"name":"察哈尔右翼中旗","value":"150927","parent":"150900"},{"name":"察哈尔右翼后旗","value":"150928","parent":"150900"},{"name":"四子王旗","value":"150929","parent":"150900"},{"name":"丰镇市","value":"150981","parent":"150900"},{"name":"乌兰浩特市","value":"152201","parent":"152200"},{"name":"阿尔山市","value":"152202","parent":"152200"},{"name":"科尔沁右翼前旗","value":"152221","parent":"152200"},{"name":"科尔沁右翼中旗","value":"152222","parent":"152200"},{"name":"扎赉特旗","value":"152223","parent":"152200"},{"name":"突泉县","value":"152224","parent":"152200"},{"name":"二连浩特市","value":"152501","parent":"152500"},{"name":"锡林浩特市","value":"152502","parent":"152500"},{"name":"阿巴嘎旗","value":"152522","parent":"152500"},{"name":"苏尼特左旗","value":"152523","parent":"152500"},{"name":"苏尼特右旗","value":"152524","parent":"152500"},{"name":"东乌珠穆沁旗","value":"152525","parent":"152500"},{"name":"西乌珠穆沁旗","value":"152526","parent":"152500"},{"name":"太仆寺旗","value":"152527","parent":"152500"},{"name":"镶黄旗","value":"152528","parent":"152500"},{"name":"正镶白旗","value":"152529","parent":"152500"},{"name":"正蓝旗","value":"152530","parent":"152500"},{"name":"多伦县","value":"152531","parent":"152500"},{"name":"阿拉善左旗","value":"152921","parent":"152900"},{"name":"阿拉善右旗","value":"152922","parent":"152900"},{"name":"额济纳旗","value":"152923","parent":"152900"},{"name":"沈阳市","value":"210100","parent":"210000"},{"name":"大连市","value":"210200","parent":"210000"},{"name":"鞍山市","value":"210300","parent":"210000"},{"name":"抚顺市","value":"210400","parent":"210000"},{"name":"本溪市","value":"210500","parent":"210000"},{"name":"丹东市","value":"210600","parent":"210000"},{"name":"锦州市","value":"210700","parent":"210000"},{"name":"营口市","value":"210800","parent":"210000"},{"name":"阜新市","value":"210900","parent":"210000"},{"name":"辽阳市","value":"211000","parent":"210000"},{"name":"盘锦市","value":"211100","parent":"210000"},{"name":"铁岭市","value":"211200","parent":"210000"},{"name":"朝阳市","value":"211300","parent":"210000"},{"name":"葫芦岛市","value":"211400","parent":"210000"},{"name":"和平区","value":"210102","parent":"210100"},{"name":"沈河区","value":"210103","parent":"210100"},{"name":"大东区","value":"210104","parent":"210100"},{"name":"皇姑区","value":"210105","parent":"210100"},{"name":"铁西区","value":"210106","parent":"210100"},{"name":"苏家屯区","value":"210111","parent":"210100"},{"name":"浑南区","value":"210112","parent":"210100"},{"name":"沈北新区","value":"210113","parent":"210100"},{"name":"于洪区","value":"210114","parent":"210100"},{"name":"辽中区","value":"210115","parent":"210100"},{"name":"康平县","value":"210123","parent":"210100"},{"name":"法库县","value":"210124","parent":"210100"},{"name":"新民市","value":"210181","parent":"210100"},{"name":"中山区","value":"210202","parent":"210200"},{"name":"西岗区","value":"210203","parent":"210200"},{"name":"沙河口区","value":"210204","parent":"210200"},{"name":"甘井子区","value":"210211","parent":"210200"},{"name":"旅顺口区","value":"210212","parent":"210200"},{"name":"金州区","value":"210213","parent":"210200"},{"name":"普兰店区","value":"210214","parent":"210200"},{"name":"长海县","value":"210224","parent":"210200"},{"name":"瓦房店市","value":"210281","parent":"210200"},{"name":"庄河市","value":"210283","parent":"210200"},{"name":"铁东区","value":"210302","parent":"210300"},{"name":"铁西区","value":"210303","parent":"210300"},{"name":"立山区","value":"210304","parent":"210300"},{"name":"千山区","value":"210311","parent":"210300"},{"name":"台安县","value":"210321","parent":"210300"},{"name":"岫岩满族自治县","value":"210323","parent":"210300"},{"name":"海城市","value":"210381","parent":"210300"},{"name":"新抚区","value":"210402","parent":"210400"},{"name":"东洲区","value":"210403","parent":"210400"},{"name":"望花区","value":"210404","parent":"210400"},{"name":"顺城区","value":"210411","parent":"210400"},{"name":"抚顺县","value":"210421","parent":"210400"},{"name":"新宾满族自治县","value":"210422","parent":"210400"},{"name":"清原满族自治县","value":"210423","parent":"210400"},{"name":"平山区","value":"210502","parent":"210500"},{"name":"溪湖区","value":"210503","parent":"210500"},{"name":"明山区","value":"210504","parent":"210500"},{"name":"南芬区","value":"210505","parent":"210500"},{"name":"本溪满族自治县","value":"210521","parent":"210500"},{"name":"桓仁满族自治县","value":"210522","parent":"210500"},{"name":"元宝区","value":"210602","parent":"210600"},{"name":"振兴区","value":"210603","parent":"210600"},{"name":"振安区","value":"210604","parent":"210600"},{"name":"宽甸满族自治县","value":"210624","parent":"210600"},{"name":"东港市","value":"210681","parent":"210600"},{"name":"凤城市","value":"210682","parent":"210600"},{"name":"古塔区","value":"210702","parent":"210700"},{"name":"凌河区","value":"210703","parent":"210700"},{"name":"太和区","value":"210711","parent":"210700"},{"name":"黑山县","value":"210726","parent":"210700"},{"name":"义县","value":"210727","parent":"210700"},{"name":"凌海市","value":"210781","parent":"210700"},{"name":"北镇市","value":"210782","parent":"210700"},{"name":"站前区","value":"210802","parent":"210800"},{"name":"西市区","value":"210803","parent":"210800"},{"name":"鲅鱼圈区","value":"210804","parent":"210800"},{"name":"老边区","value":"210811","parent":"210800"},{"name":"盖州市","value":"210881","parent":"210800"},{"name":"大石桥市","value":"210882","parent":"210800"},{"name":"海州区","value":"210902","parent":"210900"},{"name":"新邱区","value":"210903","parent":"210900"},{"name":"太平区","value":"210904","parent":"210900"},{"name":"清河门区","value":"210905","parent":"210900"},{"name":"细河区","value":"210911","parent":"210900"},{"name":"阜新蒙古族自治县","value":"210921","parent":"210900"},{"name":"彰武县","value":"210922","parent":"210900"},{"name":"白塔区","value":"211002","parent":"211000"},{"name":"文圣区","value":"211003","parent":"211000"},{"name":"宏伟区","value":"211004","parent":"211000"},{"name":"弓长岭区","value":"211005","parent":"211000"},{"name":"太子河区","value":"211011","parent":"211000"},{"name":"辽阳县","value":"211021","parent":"211000"},{"name":"灯塔市","value":"211081","parent":"211000"},{"name":"双台子区","value":"211102","parent":"211100"},{"name":"兴隆台区","value":"211103","parent":"211100"},{"name":"大洼区","value":"211104","parent":"211100"},{"name":"盘山县","value":"211122","parent":"211100"},{"name":"银州区","value":"211202","parent":"211200"},{"name":"清河区","value":"211204","parent":"211200"},{"name":"铁岭县","value":"211221","parent":"211200"},{"name":"西丰县","value":"211223","parent":"211200"},{"name":"昌图县","value":"211224","parent":"211200"},{"name":"调兵山市","value":"211281","parent":"211200"},{"name":"开原市","value":"211282","parent":"211200"},{"name":"双塔区","value":"211302","parent":"211300"},{"name":"龙城区","value":"211303","parent":"211300"},{"name":"朝阳县","value":"211321","parent":"211300"},{"name":"建平县","value":"211322","parent":"211300"},{"name":"喀喇沁左翼蒙古族自治县","value":"211324","parent":"211300"},{"name":"北票市","value":"211381","parent":"211300"},{"name":"凌源市","value":"211382","parent":"211300"},{"name":"连山区","value":"211402","parent":"211400"},{"name":"龙港区","value":"211403","parent":"211400"},{"name":"南票区","value":"211404","parent":"211400"},{"name":"绥中县","value":"211421","parent":"211400"},{"name":"建昌县","value":"211422","parent":"211400"},{"name":"兴城市","value":"211481","parent":"211400"},{"name":"长春市","value":"220100","parent":"220000"},{"name":"吉林市","value":"220200","parent":"220000"},{"name":"四平市","value":"220300","parent":"220000"},{"name":"辽源市","value":"220400","parent":"220000"},{"name":"通化市","value":"220500","parent":"220000"},{"name":"白山市","value":"220600","parent":"220000"},{"name":"松原市","value":"220700","parent":"220000"},{"name":"白城市","value":"220800","parent":"220000"},{"name":"延边朝鲜族自治州","value":"222400","parent":"220000"},{"name":"南关区","value":"220102","parent":"220100"},{"name":"宽城区","value":"220103","parent":"220100"},{"name":"朝阳区","value":"220104","parent":"220100"},{"name":"二道区","value":"220105","parent":"220100"},{"name":"绿园区","value":"220106","parent":"220100"},{"name":"双阳区","value":"220112","parent":"220100"},{"name":"九台区","value":"220113","parent":"220100"},{"name":"农安县","value":"220122","parent":"220100"},{"name":"榆树市","value":"220182","parent":"220100"},{"name":"德惠市","value":"220183","parent":"220100"},{"name":"昌邑区","value":"220202","parent":"220200"},{"name":"龙潭区","value":"220203","parent":"220200"},{"name":"船营区","value":"220204","parent":"220200"},{"name":"丰满区","value":"220211","parent":"220200"},{"name":"永吉县","value":"220221","parent":"220200"},{"name":"蛟河市","value":"220281","parent":"220200"},{"name":"桦甸市","value":"220282","parent":"220200"},{"name":"舒兰市","value":"220283","parent":"220200"},{"name":"磐石市","value":"220284","parent":"220200"},{"name":"铁西区","value":"220302","parent":"220300"},{"name":"铁东区","value":"220303","parent":"220300"},{"name":"梨树县","value":"220322","parent":"220300"},{"name":"伊通满族自治县","value":"220323","parent":"220300"},{"name":"公主岭市","value":"220381","parent":"220300"},{"name":"双辽市","value":"220382","parent":"220300"},{"name":"龙山区","value":"220402","parent":"220400"},{"name":"西安区","value":"220403","parent":"220400"},{"name":"东丰县","value":"220421","parent":"220400"},{"name":"东辽县","value":"220422","parent":"220400"},{"name":"东昌区","value":"220502","parent":"220500"},{"name":"二道江区","value":"220503","parent":"220500"},{"name":"通化县","value":"220521","parent":"220500"},{"name":"辉南县","value":"220523","parent":"220500"},{"name":"柳河县","value":"220524","parent":"220500"},{"name":"梅河口市","value":"220581","parent":"220500"},{"name":"集安市","value":"220582","parent":"220500"},{"name":"浑江区","value":"220602","parent":"220600"},{"name":"江源区","value":"220605","parent":"220600"},{"name":"抚松县","value":"220621","parent":"220600"},{"name":"靖宇县","value":"220622","parent":"220600"},{"name":"长白朝鲜族自治县","value":"220623","parent":"220600"},{"name":"临江市","value":"220681","parent":"220600"},{"name":"宁江区","value":"220702","parent":"220700"},{"name":"前郭尔罗斯蒙古族自治县","value":"220721","parent":"220700"},{"name":"长岭县","value":"220722","parent":"220700"},{"name":"乾安县","value":"220723","parent":"220700"},{"name":"扶余市","value":"220781","parent":"220700"},{"name":"洮北区","value":"220802","parent":"220800"},{"name":"镇赉县","value":"220821","parent":"220800"},{"name":"通榆县","value":"220822","parent":"220800"},{"name":"洮南市","value":"220881","parent":"220800"},{"name":"大安市","value":"220882","parent":"220800"},{"name":"延吉市","value":"222401","parent":"222400"},{"name":"图们市","value":"222402","parent":"222400"},{"name":"敦化市","value":"222403","parent":"222400"},{"name":"珲春市","value":"222404","parent":"222400"},{"name":"龙井市","value":"222405","parent":"222400"},{"name":"和龙市","value":"222406","parent":"222400"},{"name":"汪清县","value":"222424","parent":"222400"},{"name":"安图县","value":"222426","parent":"222400"},{"name":"哈尔滨市","value":"230100","parent":"230000"},{"name":"齐齐哈尔市","value":"230200","parent":"230000"},{"name":"鸡西市","value":"230300","parent":"230000"},{"name":"鹤岗市","value":"230400","parent":"230000"},{"name":"双鸭山市","value":"230500","parent":"230000"},{"name":"大庆市","value":"230600","parent":"230000"},{"name":"伊春市","value":"230700","parent":"230000"},{"name":"佳木斯市","value":"230800","parent":"230000"},{"name":"七台河市","value":"230900","parent":"230000"},{"name":"牡丹江市","value":"231000","parent":"230000"},{"name":"黑河市","value":"231100","parent":"230000"},{"name":"绥化市","value":"231200","parent":"230000"},{"name":"大兴安岭地区","value":"232700","parent":"230000"},{"name":"道里区","value":"230102","parent":"230100"},{"name":"南岗区","value":"230103","parent":"230100"},{"name":"道外区","value":"230104","parent":"230100"},{"name":"平房区","value":"230108","parent":"230100"},{"name":"松北区","value":"230109","parent":"230100"},{"name":"香坊区","value":"230110","parent":"230100"},{"name":"呼兰区","value":"230111","parent":"230100"},{"name":"阿城区","value":"230112","parent":"230100"},{"name":"双城区","value":"230113","parent":"230100"},{"name":"依兰县","value":"230123","parent":"230100"},{"name":"方正县","value":"230124","parent":"230100"},{"name":"宾县","value":"230125","parent":"230100"},{"name":"巴彦县","value":"230126","parent":"230100"},{"name":"木兰县","value":"230127","parent":"230100"},{"name":"通河县","value":"230128","parent":"230100"},{"name":"延寿县","value":"230129","parent":"230100"},{"name":"尚志市","value":"230183","parent":"230100"},{"name":"五常市","value":"230184","parent":"230100"},{"name":"龙沙区","value":"230202","parent":"230200"},{"name":"建华区","value":"230203","parent":"230200"},{"name":"铁锋区","value":"230204","parent":"230200"},{"name":"昂昂溪区","value":"230205","parent":"230200"},{"name":"富拉尔基区","value":"230206","parent":"230200"},{"name":"碾子山区","value":"230207","parent":"230200"},{"name":"梅里斯达斡尔族区","value":"230208","parent":"230200"},{"name":"龙江县","value":"230221","parent":"230200"},{"name":"依安县","value":"230223","parent":"230200"},{"name":"泰来县","value":"230224","parent":"230200"},{"name":"甘南县","value":"230225","parent":"230200"},{"name":"富裕县","value":"230227","parent":"230200"},{"name":"克山县","value":"230229","parent":"230200"},{"name":"克东县","value":"230230","parent":"230200"},{"name":"拜泉县","value":"230231","parent":"230200"},{"name":"讷河市","value":"230281","parent":"230200"},{"name":"鸡冠区","value":"230302","parent":"230300"},{"name":"恒山区","value":"230303","parent":"230300"},{"name":"滴道区","value":"230304","parent":"230300"},{"name":"梨树区","value":"230305","parent":"230300"},{"name":"城子河区","value":"230306","parent":"230300"},{"name":"麻山区","value":"230307","parent":"230300"},{"name":"鸡东县","value":"230321","parent":"230300"},{"name":"虎林市","value":"230381","parent":"230300"},{"name":"密山市","value":"230382","parent":"230300"},{"name":"向阳区","value":"230402","parent":"230400"},{"name":"工农区","value":"230403","parent":"230400"},{"name":"南山区","value":"230404","parent":"230400"},{"name":"兴安区","value":"230405","parent":"230400"},{"name":"东山区","value":"230406","parent":"230400"},{"name":"兴山区","value":"230407","parent":"230400"},{"name":"萝北县","value":"230421","parent":"230400"},{"name":"绥滨县","value":"230422","parent":"230400"},{"name":"尖山区","value":"230502","parent":"230500"},{"name":"岭东区","value":"230503","parent":"230500"},{"name":"四方台区","value":"230505","parent":"230500"},{"name":"宝山区","value":"230506","parent":"230500"},{"name":"集贤县","value":"230521","parent":"230500"},{"name":"友谊县","value":"230522","parent":"230500"},{"name":"宝清县","value":"230523","parent":"230500"},{"name":"饶河县","value":"230524","parent":"230500"},{"name":"萨尔图区","value":"230602","parent":"230600"},{"name":"龙凤区","value":"230603","parent":"230600"},{"name":"让胡路区","value":"230604","parent":"230600"},{"name":"红岗区","value":"230605","parent":"230600"},{"name":"大同区","value":"230606","parent":"230600"},{"name":"肇州县","value":"230621","parent":"230600"},{"name":"肇源县","value":"230622","parent":"230600"},{"name":"林甸县","value":"230623","parent":"230600"},{"name":"杜尔伯特蒙古族自治县","value":"230624","parent":"230600"},{"name":"伊春区","value":"230702","parent":"230700"},{"name":"南岔区","value":"230703","parent":"230700"},{"name":"友好区","value":"230704","parent":"230700"},{"name":"西林区","value":"230705","parent":"230700"},{"name":"翠峦区","value":"230706","parent":"230700"},{"name":"新青区","value":"230707","parent":"230700"},{"name":"美溪区","value":"230708","parent":"230700"},{"name":"金山屯区","value":"230709","parent":"230700"},{"name":"五营区","value":"230710","parent":"230700"},{"name":"乌马河区","value":"230711","parent":"230700"},{"name":"汤旺河区","value":"230712","parent":"230700"},{"name":"带岭区","value":"230713","parent":"230700"},{"name":"乌伊岭区","value":"230714","parent":"230700"},{"name":"红星区","value":"230715","parent":"230700"},{"name":"上甘岭区","value":"230716","parent":"230700"},{"name":"嘉荫县","value":"230722","parent":"230700"},{"name":"铁力市","value":"230781","parent":"230700"},{"name":"向阳区","value":"230803","parent":"230800"},{"name":"前进区","value":"230804","parent":"230800"},{"name":"东风区","value":"230805","parent":"230800"},{"name":"郊区","value":"230811","parent":"230800"},{"name":"桦南县","value":"230822","parent":"230800"},{"name":"桦川县","value":"230826","parent":"230800"},{"name":"汤原县","value":"230828","parent":"230800"},{"name":"同江市","value":"230881","parent":"230800"},{"name":"富锦市","value":"230882","parent":"230800"},{"name":"抚远市","value":"230883","parent":"230800"},{"name":"新兴区","value":"230902","parent":"230900"},{"name":"桃山区","value":"230903","parent":"230900"},{"name":"茄子河区","value":"230904","parent":"230900"},{"name":"勃利县","value":"230921","parent":"230900"},{"name":"东安区","value":"231002","parent":"231000"},{"name":"阳明区","value":"231003","parent":"231000"},{"name":"爱民区","value":"231004","parent":"231000"},{"name":"西安区","value":"231005","parent":"231000"},{"name":"林口县","value":"231025","parent":"231000"},{"name":"绥芬河市","value":"231081","parent":"231000"},{"name":"海林市","value":"231083","parent":"231000"},{"name":"宁安市","value":"231084","parent":"231000"},{"name":"穆棱市","value":"231085","parent":"231000"},{"name":"东宁市","value":"231086","parent":"231000"},{"name":"爱辉区","value":"231102","parent":"231100"},{"name":"嫩江县","value":"231121","parent":"231100"},{"name":"逊克县","value":"231123","parent":"231100"},{"name":"孙吴县","value":"231124","parent":"231100"},{"name":"北安市","value":"231181","parent":"231100"},{"name":"五大连池市","value":"231182","parent":"231100"},{"name":"北林区","value":"231202","parent":"231200"},{"name":"望奎县","value":"231221","parent":"231200"},{"name":"兰西县","value":"231222","parent":"231200"},{"name":"青冈县","value":"231223","parent":"231200"},{"name":"庆安县","value":"231224","parent":"231200"},{"name":"明水县","value":"231225","parent":"231200"},{"name":"绥棱县","value":"231226","parent":"231200"},{"name":"安达市","value":"231281","parent":"231200"},{"name":"肇东市","value":"231282","parent":"231200"},{"name":"海伦市","value":"231283","parent":"231200"},{"name":"呼玛县","value":"232721","parent":"232700"},{"name":"塔河县","value":"232722","parent":"232700"},{"name":"漠河县","value":"232723","parent":"232700"},{"name":"市辖区","value":"310100","parent":"310000"},{"name":"黄浦区","value":"310101","parent":"310100"},{"name":"徐汇区","value":"310104","parent":"310100"},{"name":"长宁区","value":"310105","parent":"310100"},{"name":"静安区","value":"310106","parent":"310100"},{"name":"普陀区","value":"310107","parent":"310100"},{"name":"虹口区","value":"310109","parent":"310100"},{"name":"杨浦区","value":"310110","parent":"310100"},{"name":"闵行区","value":"310112","parent":"310100"},{"name":"宝山区","value":"310113","parent":"310100"},{"name":"嘉定区","value":"310114","parent":"310100"},{"name":"浦东新区","value":"310115","parent":"310100"},{"name":"金山区","value":"310116","parent":"310100"},{"name":"松江区","value":"310117","parent":"310100"},{"name":"青浦区","value":"310118","parent":"310100"},{"name":"奉贤区","value":"310120","parent":"310100"},{"name":"崇明区","value":"310151","parent":"310100"},{"name":"南京市","value":"320100","parent":"320000"},{"name":"无锡市","value":"320200","parent":"320000"},{"name":"徐州市","value":"320300","parent":"320000"},{"name":"常州市","value":"320400","parent":"320000"},{"name":"苏州市","value":"320500","parent":"320000"},{"name":"南通市","value":"320600","parent":"320000"},{"name":"连云港市","value":"320700","parent":"320000"},{"name":"淮安市","value":"320800","parent":"320000"},{"name":"盐城市","value":"320900","parent":"320000"},{"name":"扬州市","value":"321000","parent":"320000"},{"name":"镇江市","value":"321100","parent":"320000"},{"name":"泰州市","value":"321200","parent":"320000"},{"name":"宿迁市","value":"321300","parent":"320000"},{"name":"玄武区","value":"320102","parent":"320100"},{"name":"秦淮区","value":"320104","parent":"320100"},{"name":"建邺区","value":"320105","parent":"320100"},{"name":"鼓楼区","value":"320106","parent":"320100"},{"name":"浦口区","value":"320111","parent":"320100"},{"name":"栖霞区","value":"320113","parent":"320100"},{"name":"雨花台区","value":"320114","parent":"320100"},{"name":"江宁区","value":"320115","parent":"320100"},{"name":"六合区","value":"320116","parent":"320100"},{"name":"溧水区","value":"320117","parent":"320100"},{"name":"高淳区","value":"320118","parent":"320100"},{"name":"锡山区","value":"320205","parent":"320200"},{"name":"惠山区","value":"320206","parent":"320200"},{"name":"滨湖区","value":"320211","parent":"320200"},{"name":"梁溪区","value":"320213","parent":"320200"},{"name":"新吴区","value":"320214","parent":"320200"},{"name":"江阴市","value":"320281","parent":"320200"},{"name":"宜兴市","value":"320282","parent":"320200"},{"name":"鼓楼区","value":"320302","parent":"320300"},{"name":"云龙区","value":"320303","parent":"320300"},{"name":"贾汪区","value":"320305","parent":"320300"},{"name":"泉山区","value":"320311","parent":"320300"},{"name":"铜山区","value":"320312","parent":"320300"},{"name":"丰县","value":"320321","parent":"320300"},{"name":"沛县","value":"320322","parent":"320300"},{"name":"睢宁县","value":"320324","parent":"320300"},{"name":"新沂市","value":"320381","parent":"320300"},{"name":"邳州市","value":"320382","parent":"320300"},{"name":"天宁区","value":"320402","parent":"320400"},{"name":"钟楼区","value":"320404","parent":"320400"},{"name":"新北区","value":"320411","parent":"320400"},{"name":"武进区","value":"320412","parent":"320400"},{"name":"金坛区","value":"320413","parent":"320400"},{"name":"溧阳市","value":"320481","parent":"320400"},{"name":"虎丘区","value":"320505","parent":"320500"},{"name":"吴中区","value":"320506","parent":"320500"},{"name":"相城区","value":"320507","parent":"320500"},{"name":"姑苏区","value":"320508","parent":"320500"},{"name":"吴江区","value":"320509","parent":"320500"},{"name":"常熟市","value":"320581","parent":"320500"},{"name":"张家港市","value":"320582","parent":"320500"},{"name":"昆山市","value":"320583","parent":"320500"},{"name":"太仓市","value":"320585","parent":"320500"},{"name":"崇川区","value":"320602","parent":"320600"},{"name":"港闸区","value":"320611","parent":"320600"},{"name":"通州区","value":"320612","parent":"320600"},{"name":"海安县","value":"320621","parent":"320600"},{"name":"如东县","value":"320623","parent":"320600"},{"name":"启东市","value":"320681","parent":"320600"},{"name":"如皋市","value":"320682","parent":"320600"},{"name":"海门市","value":"320684","parent":"320600"},{"name":"连云区","value":"320703","parent":"320700"},{"name":"海州区","value":"320706","parent":"320700"},{"name":"赣榆区","value":"320707","parent":"320700"},{"name":"东海县","value":"320722","parent":"320700"},{"name":"灌云县","value":"320723","parent":"320700"},{"name":"灌南县","value":"320724","parent":"320700"},{"name":"淮安区","value":"320803","parent":"320800"},{"name":"淮阴区","value":"320804","parent":"320800"},{"name":"清江浦区","value":"320812","parent":"320800"},{"name":"洪泽区","value":"320813","parent":"320800"},{"name":"涟水县","value":"320826","parent":"320800"},{"name":"盱眙县","value":"320830","parent":"320800"},{"name":"金湖县","value":"320831","parent":"320800"},{"name":"亭湖区","value":"320902","parent":"320900"},{"name":"盐都区","value":"320903","parent":"320900"},{"name":"大丰区","value":"320904","parent":"320900"},{"name":"响水县","value":"320921","parent":"320900"},{"name":"滨海县","value":"320922","parent":"320900"},{"name":"阜宁县","value":"320923","parent":"320900"},{"name":"射阳县","value":"320924","parent":"320900"},{"name":"建湖县","value":"320925","parent":"320900"},{"name":"东台市","value":"320981","parent":"320900"},{"name":"广陵区","value":"321002","parent":"321000"},{"name":"邗江区","value":"321003","parent":"321000"},{"name":"江都区","value":"321012","parent":"321000"},{"name":"宝应县","value":"321023","parent":"321000"},{"name":"仪征市","value":"321081","parent":"321000"},{"name":"高邮市","value":"321084","parent":"321000"},{"name":"京口区","value":"321102","parent":"321100"},{"name":"润州区","value":"321111","parent":"321100"},{"name":"丹徒区","value":"321112","parent":"321100"},{"name":"丹阳市","value":"321181","parent":"321100"},{"name":"扬中市","value":"321182","parent":"321100"},{"name":"句容市","value":"321183","parent":"321100"},{"name":"海陵区","value":"321202","parent":"321200"},{"name":"高港区","value":"321203","parent":"321200"},{"name":"姜堰区","value":"321204","parent":"321200"},{"name":"兴化市","value":"321281","parent":"321200"},{"name":"靖江市","value":"321282","parent":"321200"},{"name":"泰兴市","value":"321283","parent":"321200"},{"name":"宿城区","value":"321302","parent":"321300"},{"name":"宿豫区","value":"321311","parent":"321300"},{"name":"沭阳县","value":"321322","parent":"321300"},{"name":"泗阳县","value":"321323","parent":"321300"},{"name":"泗洪县","value":"321324","parent":"321300"},{"name":"杭州市","value":"330100","parent":"330000"},{"name":"宁波市","value":"330200","parent":"330000"},{"name":"温州市","value":"330300","parent":"330000"},{"name":"嘉兴市","value":"330400","parent":"330000"},{"name":"湖州市","value":"330500","parent":"330000"},{"name":"绍兴市","value":"330600","parent":"330000"},{"name":"金华市","value":"330700","parent":"330000"},{"name":"衢州市","value":"330800","parent":"330000"},{"name":"舟山市","value":"330900","parent":"330000"},{"name":"台州市","value":"331000","parent":"330000"},{"name":"丽水市","value":"331100","parent":"330000"},{"name":"上城区","value":"330102","parent":"330100"},{"name":"下城区","value":"330103","parent":"330100"},{"name":"江干区","value":"330104","parent":"330100"},{"name":"拱墅区","value":"330105","parent":"330100"},{"name":"西湖区","value":"330106","parent":"330100"},{"name":"滨江区","value":"330108","parent":"330100"},{"name":"萧山区","value":"330109","parent":"330100"},{"name":"余杭区","value":"330110","parent":"330100"},{"name":"富阳区","value":"330111","parent":"330100"},{"name":"桐庐县","value":"330122","parent":"330100"},{"name":"淳安县","value":"330127","parent":"330100"},{"name":"建德市","value":"330182","parent":"330100"},{"name":"临安市","value":"330185","parent":"330100"},{"name":"海曙区","value":"330203","parent":"330200"},{"name":"江东区","value":"330204","parent":"330200"},{"name":"江北区","value":"330205","parent":"330200"},{"name":"北仑区","value":"330206","parent":"330200"},{"name":"镇海区","value":"330211","parent":"330200"},{"name":"鄞州区","value":"330212","parent":"330200"},{"name":"象山县","value":"330225","parent":"330200"},{"name":"宁海县","value":"330226","parent":"330200"},{"name":"余姚市","value":"330281","parent":"330200"},{"name":"慈溪市","value":"330282","parent":"330200"},{"name":"奉化市","value":"330283","parent":"330200"},{"name":"鹿城区","value":"330302","parent":"330300"},{"name":"龙湾区","value":"330303","parent":"330300"},{"name":"瓯海区","value":"330304","parent":"330300"},{"name":"洞头区","value":"330305","parent":"330300"},{"name":"永嘉县","value":"330324","parent":"330300"},{"name":"平阳县","value":"330326","parent":"330300"},{"name":"苍南县","value":"330327","parent":"330300"},{"name":"文成县","value":"330328","parent":"330300"},{"name":"泰顺县","value":"330329","parent":"330300"},{"name":"瑞安市","value":"330381","parent":"330300"},{"name":"乐清市","value":"330382","parent":"330300"},{"name":"南湖区","value":"330402","parent":"330400"},{"name":"秀洲区","value":"330411","parent":"330400"},{"name":"嘉善县","value":"330421","parent":"330400"},{"name":"海盐县","value":"330424","parent":"330400"},{"name":"海宁市","value":"330481","parent":"330400"},{"name":"平湖市","value":"330482","parent":"330400"},{"name":"桐乡市","value":"330483","parent":"330400"},{"name":"吴兴区","value":"330502","parent":"330500"},{"name":"南浔区","value":"330503","parent":"330500"},{"name":"德清县","value":"330521","parent":"330500"},{"name":"长兴县","value":"330522","parent":"330500"},{"name":"安吉县","value":"330523","parent":"330500"},{"name":"越城区","value":"330602","parent":"330600"},{"name":"柯桥区","value":"330603","parent":"330600"},{"name":"上虞区","value":"330604","parent":"330600"},{"name":"新昌县","value":"330624","parent":"330600"},{"name":"诸暨市","value":"330681","parent":"330600"},{"name":"嵊州市","value":"330683","parent":"330600"},{"name":"婺城区","value":"330702","parent":"330700"},{"name":"金东区","value":"330703","parent":"330700"},{"name":"武义县","value":"330723","parent":"330700"},{"name":"浦江县","value":"330726","parent":"330700"},{"name":"磐安县","value":"330727","parent":"330700"},{"name":"兰溪市","value":"330781","parent":"330700"},{"name":"义乌市","value":"330782","parent":"330700"},{"name":"东阳市","value":"330783","parent":"330700"},{"name":"永康市","value":"330784","parent":"330700"},{"name":"柯城区","value":"330802","parent":"330800"},{"name":"衢江区","value":"330803","parent":"330800"},{"name":"常山县","value":"330822","parent":"330800"},{"name":"开化县","value":"330824","parent":"330800"},{"name":"龙游县","value":"330825","parent":"330800"},{"name":"江山市","value":"330881","parent":"330800"},{"name":"定海区","value":"330902","parent":"330900"},{"name":"普陀区","value":"330903","parent":"330900"},{"name":"岱山县","value":"330921","parent":"330900"},{"name":"嵊泗县","value":"330922","parent":"330900"},{"name":"椒江区","value":"331002","parent":"331000"},{"name":"黄岩区","value":"331003","parent":"331000"},{"name":"路桥区","value":"331004","parent":"331000"},{"name":"玉环县","value":"331021","parent":"331000"},{"name":"三门县","value":"331022","parent":"331000"},{"name":"天台县","value":"331023","parent":"331000"},{"name":"仙居县","value":"331024","parent":"331000"},{"name":"温岭市","value":"331081","parent":"331000"},{"name":"临海市","value":"331082","parent":"331000"},{"name":"莲都区","value":"331102","parent":"331100"},{"name":"青田县","value":"331121","parent":"331100"},{"name":"缙云县","value":"331122","parent":"331100"},{"name":"遂昌县","value":"331123","parent":"331100"},{"name":"松阳县","value":"331124","parent":"331100"},{"name":"云和县","value":"331125","parent":"331100"},{"name":"庆元县","value":"331126","parent":"331100"},{"name":"景宁畲族自治县","value":"331127","parent":"331100"},{"name":"龙泉市","value":"331181","parent":"331100"},{"name":"合肥市","value":"340100","parent":"340000"},{"name":"芜湖市","value":"340200","parent":"340000"},{"name":"蚌埠市","value":"340300","parent":"340000"},{"name":"淮南市","value":"340400","parent":"340000"},{"name":"马鞍山市","value":"340500","parent":"340000"},{"name":"淮北市","value":"340600","parent":"340000"},{"name":"铜陵市","value":"340700","parent":"340000"},{"name":"安庆市","value":"340800","parent":"340000"},{"name":"黄山市","value":"341000","parent":"340000"},{"name":"滁州市","value":"341100","parent":"340000"},{"name":"阜阳市","value":"341200","parent":"340000"},{"name":"宿州市","value":"341300","parent":"340000"},{"name":"六安市","value":"341500","parent":"340000"},{"name":"亳州市","value":"341600","parent":"340000"},{"name":"池州市","value":"341700","parent":"340000"},{"name":"宣城市","value":"341800","parent":"340000"},{"name":"瑶海区","value":"340102","parent":"340100"},{"name":"庐阳区","value":"340103","parent":"340100"},{"name":"蜀山区","value":"340104","parent":"340100"},{"name":"包河区","value":"340111","parent":"340100"},{"name":"长丰县","value":"340121","parent":"340100"},{"name":"肥东县","value":"340122","parent":"340100"},{"name":"肥西县","value":"340123","parent":"340100"},{"name":"庐江县","value":"340124","parent":"340100"},{"name":"巢湖市","value":"340181","parent":"340100"},{"name":"镜湖区","value":"340202","parent":"340200"},{"name":"弋江区","value":"340203","parent":"340200"},{"name":"鸠江区","value":"340207","parent":"340200"},{"name":"三山区","value":"340208","parent":"340200"},{"name":"芜湖县","value":"340221","parent":"340200"},{"name":"繁昌县","value":"340222","parent":"340200"},{"name":"南陵县","value":"340223","parent":"340200"},{"name":"无为县","value":"340225","parent":"340200"},{"name":"龙子湖区","value":"340302","parent":"340300"},{"name":"蚌山区","value":"340303","parent":"340300"},{"name":"禹会区","value":"340304","parent":"340300"},{"name":"淮上区","value":"340311","parent":"340300"},{"name":"怀远县","value":"340321","parent":"340300"},{"name":"五河县","value":"340322","parent":"340300"},{"name":"固镇县","value":"340323","parent":"340300"},{"name":"大通区","value":"340402","parent":"340400"},{"name":"田家庵区","value":"340403","parent":"340400"},{"name":"谢家集区","value":"340404","parent":"340400"},{"name":"八公山区","value":"340405","parent":"340400"},{"name":"潘集区","value":"340406","parent":"340400"},{"name":"凤台县","value":"340421","parent":"340400"},{"name":"寿县","value":"340422","parent":"340400"},{"name":"花山区","value":"340503","parent":"340500"},{"name":"雨山区","value":"340504","parent":"340500"},{"name":"博望区","value":"340506","parent":"340500"},{"name":"当涂县","value":"340521","parent":"340500"},{"name":"含山县","value":"340522","parent":"340500"},{"name":"和县","value":"340523","parent":"340500"},{"name":"杜集区","value":"340602","parent":"340600"},{"name":"相山区","value":"340603","parent":"340600"},{"name":"烈山区","value":"340604","parent":"340600"},{"name":"濉溪县","value":"340621","parent":"340600"},{"name":"铜官区","value":"340705","parent":"340700"},{"name":"义安区","value":"340706","parent":"340700"},{"name":"郊区","value":"340711","parent":"340700"},{"name":"枞阳县","value":"340722","parent":"340700"},{"name":"迎江区","value":"340802","parent":"340800"},{"name":"大观区","value":"340803","parent":"340800"},{"name":"宜秀区","value":"340811","parent":"340800"},{"name":"怀宁县","value":"340822","parent":"340800"},{"name":"潜山县","value":"340824","parent":"340800"},{"name":"太湖县","value":"340825","parent":"340800"},{"name":"宿松县","value":"340826","parent":"340800"},{"name":"望江县","value":"340827","parent":"340800"},{"name":"岳西县","value":"340828","parent":"340800"},{"name":"桐城市","value":"340881","parent":"340800"},{"name":"屯溪区","value":"341002","parent":"341000"},{"name":"黄山区","value":"341003","parent":"341000"},{"name":"徽州区","value":"341004","parent":"341000"},{"name":"歙县","value":"341021","parent":"341000"},{"name":"休宁县","value":"341022","parent":"341000"},{"name":"黟县","value":"341023","parent":"341000"},{"name":"祁门县","value":"341024","parent":"341000"},{"name":"琅琊区","value":"341102","parent":"341100"},{"name":"南谯区","value":"341103","parent":"341100"},{"name":"来安县","value":"341122","parent":"341100"},{"name":"全椒县","value":"341124","parent":"341100"},{"name":"定远县","value":"341125","parent":"341100"},{"name":"凤阳县","value":"341126","parent":"341100"},{"name":"天长市","value":"341181","parent":"341100"},{"name":"明光市","value":"341182","parent":"341100"},{"name":"颍州区","value":"341202","parent":"341200"},{"name":"颍东区","value":"341203","parent":"341200"},{"name":"颍泉区","value":"341204","parent":"341200"},{"name":"临泉县","value":"341221","parent":"341200"},{"name":"太和县","value":"341222","parent":"341200"},{"name":"阜南县","value":"341225","parent":"341200"},{"name":"颍上县","value":"341226","parent":"341200"},{"name":"界首市","value":"341282","parent":"341200"},{"name":"埇桥区","value":"341302","parent":"341300"},{"name":"砀山县","value":"341321","parent":"341300"},{"name":"萧县","value":"341322","parent":"341300"},{"name":"灵璧县","value":"341323","parent":"341300"},{"name":"泗县","value":"341324","parent":"341300"},{"name":"金安区","value":"341502","parent":"341500"},{"name":"裕安区","value":"341503","parent":"341500"},{"name":"叶集区","value":"341504","parent":"341500"},{"name":"霍邱县","value":"341522","parent":"341500"},{"name":"舒城县","value":"341523","parent":"341500"},{"name":"金寨县","value":"341524","parent":"341500"},{"name":"霍山县","value":"341525","parent":"341500"},{"name":"谯城区","value":"341602","parent":"341600"},{"name":"涡阳县","value":"341621","parent":"341600"},{"name":"蒙城县","value":"341622","parent":"341600"},{"name":"利辛县","value":"341623","parent":"341600"},{"name":"贵池区","value":"341702","parent":"341700"},{"name":"东至县","value":"341721","parent":"341700"},{"name":"石台县","value":"341722","parent":"341700"},{"name":"青阳县","value":"341723","parent":"341700"},{"name":"宣州区","value":"341802","parent":"341800"},{"name":"郎溪县","value":"341821","parent":"341800"},{"name":"广德县","value":"341822","parent":"341800"},{"name":"泾县","value":"341823","parent":"341800"},{"name":"绩溪县","value":"341824","parent":"341800"},{"name":"旌德县","value":"341825","parent":"341800"},{"name":"宁国市","value":"341881","parent":"341800"},{"name":"福州市","value":"350100","parent":"350000"},{"name":"厦门市","value":"350200","parent":"350000"},{"name":"莆田市","value":"350300","parent":"350000"},{"name":"三明市","value":"350400","parent":"350000"},{"name":"泉州市","value":"350500","parent":"350000"},{"name":"漳州市","value":"350600","parent":"350000"},{"name":"南平市","value":"350700","parent":"350000"},{"name":"龙岩市","value":"350800","parent":"350000"},{"name":"宁德市","value":"350900","parent":"350000"},{"name":"鼓楼区","value":"350102","parent":"350100"},{"name":"台江区","value":"350103","parent":"350100"},{"name":"仓山区","value":"350104","parent":"350100"},{"name":"马尾区","value":"350105","parent":"350100"},{"name":"晋安区","value":"350111","parent":"350100"},{"name":"闽侯县","value":"350121","parent":"350100"},{"name":"连江县","value":"350122","parent":"350100"},{"name":"罗源县","value":"350123","parent":"350100"},{"name":"闽清县","value":"350124","parent":"350100"},{"name":"永泰县","value":"350125","parent":"350100"},{"name":"平潭县","value":"350128","parent":"350100"},{"name":"福清市","value":"350181","parent":"350100"},{"name":"长乐市","value":"350182","parent":"350100"},{"name":"思明区","value":"350203","parent":"350200"},{"name":"海沧区","value":"350205","parent":"350200"},{"name":"湖里区","value":"350206","parent":"350200"},{"name":"集美区","value":"350211","parent":"350200"},{"name":"同安区","value":"350212","parent":"350200"},{"name":"翔安区","value":"350213","parent":"350200"},{"name":"城厢区","value":"350302","parent":"350300"},{"name":"涵江区","value":"350303","parent":"350300"},{"name":"荔城区","value":"350304","parent":"350300"},{"name":"秀屿区","value":"350305","parent":"350300"},{"name":"仙游县","value":"350322","parent":"350300"},{"name":"梅列区","value":"350402","parent":"350400"},{"name":"三元区","value":"350403","parent":"350400"},{"name":"明溪县","value":"350421","parent":"350400"},{"name":"清流县","value":"350423","parent":"350400"},{"name":"宁化县","value":"350424","parent":"350400"},{"name":"大田县","value":"350425","parent":"350400"},{"name":"尤溪县","value":"350426","parent":"350400"},{"name":"沙县","value":"350427","parent":"350400"},{"name":"将乐县","value":"350428","parent":"350400"},{"name":"泰宁县","value":"350429","parent":"350400"},{"name":"建宁县","value":"350430","parent":"350400"},{"name":"永安市","value":"350481","parent":"350400"},{"name":"鲤城区","value":"350502","parent":"350500"},{"name":"丰泽区","value":"350503","parent":"350500"},{"name":"洛江区","value":"350504","parent":"350500"},{"name":"泉港区","value":"350505","parent":"350500"},{"name":"惠安县","value":"350521","parent":"350500"},{"name":"安溪县","value":"350524","parent":"350500"},{"name":"永春县","value":"350525","parent":"350500"},{"name":"德化县","value":"350526","parent":"350500"},{"name":"金门县","value":"350527","parent":"350500"},{"name":"石狮市","value":"350581","parent":"350500"},{"name":"晋江市","value":"350582","parent":"350500"},{"name":"南安市","value":"350583","parent":"350500"},{"name":"芗城区","value":"350602","parent":"350600"},{"name":"龙文区","value":"350603","parent":"350600"},{"name":"云霄县","value":"350622","parent":"350600"},{"name":"漳浦县","value":"350623","parent":"350600"},{"name":"诏安县","value":"350624","parent":"350600"},{"name":"长泰县","value":"350625","parent":"350600"},{"name":"东山县","value":"350626","parent":"350600"},{"name":"南靖县","value":"350627","parent":"350600"},{"name":"平和县","value":"350628","parent":"350600"},{"name":"华安县","value":"350629","parent":"350600"},{"name":"龙海市","value":"350681","parent":"350600"},{"name":"延平区","value":"350702","parent":"350700"},{"name":"建阳区","value":"350703","parent":"350700"},{"name":"顺昌县","value":"350721","parent":"350700"},{"name":"浦城县","value":"350722","parent":"350700"},{"name":"光泽县","value":"350723","parent":"350700"},{"name":"松溪县","value":"350724","parent":"350700"},{"name":"政和县","value":"350725","parent":"350700"},{"name":"邵武市","value":"350781","parent":"350700"},{"name":"武夷山市","value":"350782","parent":"350700"},{"name":"建瓯市","value":"350783","parent":"350700"},{"name":"新罗区","value":"350802","parent":"350800"},{"name":"永定区","value":"350803","parent":"350800"},{"name":"长汀县","value":"350821","parent":"350800"},{"name":"上杭县","value":"350823","parent":"350800"},{"name":"武平县","value":"350824","parent":"350800"},{"name":"连城县","value":"350825","parent":"350800"},{"name":"漳平市","value":"350881","parent":"350800"},{"name":"蕉城区","value":"350902","parent":"350900"},{"name":"霞浦县","value":"350921","parent":"350900"},{"name":"古田县","value":"350922","parent":"350900"},{"name":"屏南县","value":"350923","parent":"350900"},{"name":"寿宁县","value":"350924","parent":"350900"},{"name":"周宁县","value":"350925","parent":"350900"},{"name":"柘荣县","value":"350926","parent":"350900"},{"name":"福安市","value":"350981","parent":"350900"},{"name":"福鼎市","value":"350982","parent":"350900"},{"name":"南昌市","value":"360100","parent":"360000"},{"name":"景德镇市","value":"360200","parent":"360000"},{"name":"萍乡市","value":"360300","parent":"360000"},{"name":"九江市","value":"360400","parent":"360000"},{"name":"新余市","value":"360500","parent":"360000"},{"name":"鹰潭市","value":"360600","parent":"360000"},{"name":"赣州市","value":"360700","parent":"360000"},{"name":"吉安市","value":"360800","parent":"360000"},{"name":"宜春市","value":"360900","parent":"360000"},{"name":"抚州市","value":"361000","parent":"360000"},{"name":"上饶市","value":"361100","parent":"360000"},{"name":"东湖区","value":"360102","parent":"360100"},{"name":"西湖区","value":"360103","parent":"360100"},{"name":"青云谱区","value":"360104","parent":"360100"},{"name":"湾里区","value":"360105","parent":"360100"},{"name":"青山湖区","value":"360111","parent":"360100"},{"name":"新建区","value":"360112","parent":"360100"},{"name":"南昌县","value":"360121","parent":"360100"},{"name":"安义县","value":"360123","parent":"360100"},{"name":"进贤县","value":"360124","parent":"360100"},{"name":"昌江区","value":"360202","parent":"360200"},{"name":"珠山区","value":"360203","parent":"360200"},{"name":"浮梁县","value":"360222","parent":"360200"},{"name":"乐平市","value":"360281","parent":"360200"},{"name":"安源区","value":"360302","parent":"360300"},{"name":"湘东区","value":"360313","parent":"360300"},{"name":"莲花县","value":"360321","parent":"360300"},{"name":"上栗县","value":"360322","parent":"360300"},{"name":"芦溪县","value":"360323","parent":"360300"},{"name":"濂溪区","value":"360402","parent":"360400"},{"name":"浔阳区","value":"360403","parent":"360400"},{"name":"九江县","value":"360421","parent":"360400"},{"name":"武宁县","value":"360423","parent":"360400"},{"name":"修水县","value":"360424","parent":"360400"},{"name":"永修县","value":"360425","parent":"360400"},{"name":"德安县","value":"360426","parent":"360400"},{"name":"都昌县","value":"360428","parent":"360400"},{"name":"湖口县","value":"360429","parent":"360400"},{"name":"彭泽县","value":"360430","parent":"360400"},{"name":"瑞昌市","value":"360481","parent":"360400"},{"name":"共青城市","value":"360482","parent":"360400"},{"name":"庐山市","value":"360483","parent":"360400"},{"name":"渝水区","value":"360502","parent":"360500"},{"name":"分宜县","value":"360521","parent":"360500"},{"name":"月湖区","value":"360602","parent":"360600"},{"name":"余江县","value":"360622","parent":"360600"},{"name":"贵溪市","value":"360681","parent":"360600"},{"name":"章贡区","value":"360702","parent":"360700"},{"name":"南康区","value":"360703","parent":"360700"},{"name":"赣县","value":"360721","parent":"360700"},{"name":"信丰县","value":"360722","parent":"360700"},{"name":"大余县","value":"360723","parent":"360700"},{"name":"上犹县","value":"360724","parent":"360700"},{"name":"崇义县","value":"360725","parent":"360700"},{"name":"安远县","value":"360726","parent":"360700"},{"name":"龙南县","value":"360727","parent":"360700"},{"name":"定南县","value":"360728","parent":"360700"},{"name":"全南县","value":"360729","parent":"360700"},{"name":"宁都县","value":"360730","parent":"360700"},{"name":"于都县","value":"360731","parent":"360700"},{"name":"兴国县","value":"360732","parent":"360700"},{"name":"会昌县","value":"360733","parent":"360700"},{"name":"寻乌县","value":"360734","parent":"360700"},{"name":"石城县","value":"360735","parent":"360700"},{"name":"瑞金市","value":"360781","parent":"360700"},{"name":"吉州区","value":"360802","parent":"360800"},{"name":"青原区","value":"360803","parent":"360800"},{"name":"吉安县","value":"360821","parent":"360800"},{"name":"吉水县","value":"360822","parent":"360800"},{"name":"峡江县","value":"360823","parent":"360800"},{"name":"新干县","value":"360824","parent":"360800"},{"name":"永丰县","value":"360825","parent":"360800"},{"name":"泰和县","value":"360826","parent":"360800"},{"name":"遂川县","value":"360827","parent":"360800"},{"name":"万安县","value":"360828","parent":"360800"},{"name":"安福县","value":"360829","parent":"360800"},{"name":"永新县","value":"360830","parent":"360800"},{"name":"井冈山市","value":"360881","parent":"360800"},{"name":"袁州区","value":"360902","parent":"360900"},{"name":"奉新县","value":"360921","parent":"360900"},{"name":"万载县","value":"360922","parent":"360900"},{"name":"上高县","value":"360923","parent":"360900"},{"name":"宜丰县","value":"360924","parent":"360900"},{"name":"靖安县","value":"360925","parent":"360900"},{"name":"铜鼓县","value":"360926","parent":"360900"},{"name":"丰城市","value":"360981","parent":"360900"},{"name":"樟树市","value":"360982","parent":"360900"},{"name":"高安市","value":"360983","parent":"360900"},{"name":"临川区","value":"361002","parent":"361000"},{"name":"南城县","value":"361021","parent":"361000"},{"name":"黎川县","value":"361022","parent":"361000"},{"name":"南丰县","value":"361023","parent":"361000"},{"name":"崇仁县","value":"361024","parent":"361000"},{"name":"乐安县","value":"361025","parent":"361000"},{"name":"宜黄县","value":"361026","parent":"361000"},{"name":"金溪县","value":"361027","parent":"361000"},{"name":"资溪县","value":"361028","parent":"361000"},{"name":"东乡县","value":"361029","parent":"361000"},{"name":"广昌县","value":"361030","parent":"361000"},{"name":"信州区","value":"361102","parent":"361100"},{"name":"广丰区","value":"361103","parent":"361100"},{"name":"上饶县","value":"361121","parent":"361100"},{"name":"玉山县","value":"361123","parent":"361100"},{"name":"铅山县","value":"361124","parent":"361100"},{"name":"横峰县","value":"361125","parent":"361100"},{"name":"弋阳县","value":"361126","parent":"361100"},{"name":"余干县","value":"361127","parent":"361100"},{"name":"鄱阳县","value":"361128","parent":"361100"},{"name":"万年县","value":"361129","parent":"361100"},{"name":"婺源县","value":"361130","parent":"361100"},{"name":"德兴市","value":"361181","parent":"361100"},{"name":"济南市","value":"370100","parent":"370000"},{"name":"青岛市","value":"370200","parent":"370000"},{"name":"淄博市","value":"370300","parent":"370000"},{"name":"枣庄市","value":"370400","parent":"370000"},{"name":"东营市","value":"370500","parent":"370000"},{"name":"烟台市","value":"370600","parent":"370000"},{"name":"潍坊市","value":"370700","parent":"370000"},{"name":"济宁市","value":"370800","parent":"370000"},{"name":"泰安市","value":"370900","parent":"370000"},{"name":"威海市","value":"371000","parent":"370000"},{"name":"日照市","value":"371100","parent":"370000"},{"name":"莱芜市","value":"371200","parent":"370000"},{"name":"临沂市","value":"371300","parent":"370000"},{"name":"德州市","value":"371400","parent":"370000"},{"name":"聊城市","value":"371500","parent":"370000"},{"name":"滨州市","value":"371600","parent":"370000"},{"name":"菏泽市","value":"371700","parent":"370000"},{"name":"历下区","value":"370102","parent":"370100"},{"name":"市中区","value":"370103","parent":"370100"},{"name":"槐荫区","value":"370104","parent":"370100"},{"name":"天桥区","value":"370105","parent":"370100"},{"name":"历城区","value":"370112","parent":"370100"},{"name":"长清区","value":"370113","parent":"370100"},{"name":"平阴县","value":"370124","parent":"370100"},{"name":"济阳县","value":"370125","parent":"370100"},{"name":"商河县","value":"370126","parent":"370100"},{"name":"章丘市","value":"370181","parent":"370100"},{"name":"市南区","value":"370202","parent":"370200"},{"name":"市北区","value":"370203","parent":"370200"},{"name":"黄岛区","value":"370211","parent":"370200"},{"name":"崂山区","value":"370212","parent":"370200"},{"name":"李沧区","value":"370213","parent":"370200"},{"name":"城阳区","value":"370214","parent":"370200"},{"name":"胶州市","value":"370281","parent":"370200"},{"name":"即墨市","value":"370282","parent":"370200"},{"name":"平度市","value":"370283","parent":"370200"},{"name":"莱西市","value":"370285","parent":"370200"},{"name":"淄川区","value":"370302","parent":"370300"},{"name":"张店区","value":"370303","parent":"370300"},{"name":"博山区","value":"370304","parent":"370300"},{"name":"临淄区","value":"370305","parent":"370300"},{"name":"周村区","value":"370306","parent":"370300"},{"name":"桓台县","value":"370321","parent":"370300"},{"name":"高青县","value":"370322","parent":"370300"},{"name":"沂源县","value":"370323","parent":"370300"},{"name":"市中区","value":"370402","parent":"370400"},{"name":"薛城区","value":"370403","parent":"370400"},{"name":"峄城区","value":"370404","parent":"370400"},{"name":"台儿庄区","value":"370405","parent":"370400"},{"name":"山亭区","value":"370406","parent":"370400"},{"name":"滕州市","value":"370481","parent":"370400"},{"name":"东营区","value":"370502","parent":"370500"},{"name":"河口区","value":"370503","parent":"370500"},{"name":"垦利区","value":"370505","parent":"370500"},{"name":"利津县","value":"370522","parent":"370500"},{"name":"广饶县","value":"370523","parent":"370500"},{"name":"芝罘区","value":"370602","parent":"370600"},{"name":"福山区","value":"370611","parent":"370600"},{"name":"牟平区","value":"370612","parent":"370600"},{"name":"莱山区","value":"370613","parent":"370600"},{"name":"长岛县","value":"370634","parent":"370600"},{"name":"龙口市","value":"370681","parent":"370600"},{"name":"莱阳市","value":"370682","parent":"370600"},{"name":"莱州市","value":"370683","parent":"370600"},{"name":"蓬莱市","value":"370684","parent":"370600"},{"name":"招远市","value":"370685","parent":"370600"},{"name":"栖霞市","value":"370686","parent":"370600"},{"name":"海阳市","value":"370687","parent":"370600"},{"name":"潍城区","value":"370702","parent":"370700"},{"name":"寒亭区","value":"370703","parent":"370700"},{"name":"坊子区","value":"370704","parent":"370700"},{"name":"奎文区","value":"370705","parent":"370700"},{"name":"临朐县","value":"370724","parent":"370700"},{"name":"昌乐县","value":"370725","parent":"370700"},{"name":"青州市","value":"370781","parent":"370700"},{"name":"诸城市","value":"370782","parent":"370700"},{"name":"寿光市","value":"370783","parent":"370700"},{"name":"安丘市","value":"370784","parent":"370700"},{"name":"高密市","value":"370785","parent":"370700"},{"name":"昌邑市","value":"370786","parent":"370700"},{"name":"任城区","value":"370811","parent":"370800"},{"name":"兖州区","value":"370812","parent":"370800"},{"name":"微山县","value":"370826","parent":"370800"},{"name":"鱼台县","value":"370827","parent":"370800"},{"name":"金乡县","value":"370828","parent":"370800"},{"name":"嘉祥县","value":"370829","parent":"370800"},{"name":"汶上县","value":"370830","parent":"370800"},{"name":"泗水县","value":"370831","parent":"370800"},{"name":"梁山县","value":"370832","parent":"370800"},{"name":"曲阜市","value":"370881","parent":"370800"},{"name":"邹城市","value":"370883","parent":"370800"},{"name":"泰山区","value":"370902","parent":"370900"},{"name":"岱岳区","value":"370911","parent":"370900"},{"name":"宁阳县","value":"370921","parent":"370900"},{"name":"东平县","value":"370923","parent":"370900"},{"name":"新泰市","value":"370982","parent":"370900"},{"name":"肥城市","value":"370983","parent":"370900"},{"name":"环翠区","value":"371002","parent":"371000"},{"name":"文登区","value":"371003","parent":"371000"},{"name":"荣成市","value":"371082","parent":"371000"},{"name":"乳山市","value":"371083","parent":"371000"},{"name":"东港区","value":"371102","parent":"371100"},{"name":"岚山区","value":"371103","parent":"371100"},{"name":"五莲县","value":"371121","parent":"371100"},{"name":"莒县","value":"371122","parent":"371100"},{"name":"莱城区","value":"371202","parent":"371200"},{"name":"钢城区","value":"371203","parent":"371200"},{"name":"兰山区","value":"371302","parent":"371300"},{"name":"罗庄区","value":"371311","parent":"371300"},{"name":"河东区","value":"371312","parent":"371300"},{"name":"沂南县","value":"371321","parent":"371300"},{"name":"郯城县","value":"371322","parent":"371300"},{"name":"沂水县","value":"371323","parent":"371300"},{"name":"兰陵县","value":"371324","parent":"371300"},{"name":"费县","value":"371325","parent":"371300"},{"name":"平邑县","value":"371326","parent":"371300"},{"name":"莒南县","value":"371327","parent":"371300"},{"name":"蒙阴县","value":"371328","parent":"371300"},{"name":"临沭县","value":"371329","parent":"371300"},{"name":"德城区","value":"371402","parent":"371400"},{"name":"陵城区","value":"371403","parent":"371400"},{"name":"宁津县","value":"371422","parent":"371400"},{"name":"庆云县","value":"371423","parent":"371400"},{"name":"临邑县","value":"371424","parent":"371400"},{"name":"齐河县","value":"371425","parent":"371400"},{"name":"平原县","value":"371426","parent":"371400"},{"name":"夏津县","value":"371427","parent":"371400"},{"name":"武城县","value":"371428","parent":"371400"},{"name":"乐陵市","value":"371481","parent":"371400"},{"name":"禹城市","value":"371482","parent":"371400"},{"name":"东昌府区","value":"371502","parent":"371500"},{"name":"阳谷县","value":"371521","parent":"371500"},{"name":"莘县","value":"371522","parent":"371500"},{"name":"茌平县","value":"371523","parent":"371500"},{"name":"东阿县","value":"371524","parent":"371500"},{"name":"冠县","value":"371525","parent":"371500"},{"name":"高唐县","value":"371526","parent":"371500"},{"name":"临清市","value":"371581","parent":"371500"},{"name":"滨城区","value":"371602","parent":"371600"},{"name":"沾化区","value":"371603","parent":"371600"},{"name":"惠民县","value":"371621","parent":"371600"},{"name":"阳信县","value":"371622","parent":"371600"},{"name":"无棣县","value":"371623","parent":"371600"},{"name":"博兴县","value":"371625","parent":"371600"},{"name":"邹平县","value":"371626","parent":"371600"},{"name":"牡丹区","value":"371702","parent":"371700"},{"name":"定陶区","value":"371703","parent":"371700"},{"name":"曹县","value":"371721","parent":"371700"},{"name":"单县","value":"371722","parent":"371700"},{"name":"成武县","value":"371723","parent":"371700"},{"name":"巨野县","value":"371724","parent":"371700"},{"name":"郓城县","value":"371725","parent":"371700"},{"name":"鄄城县","value":"371726","parent":"371700"},{"name":"东明县","value":"371728","parent":"371700"},{"name":"郑州市","value":"410100","parent":"410000"},{"name":"开封市","value":"410200","parent":"410000"},{"name":"洛阳市","value":"410300","parent":"410000"},{"name":"平顶山市","value":"410400","parent":"410000"},{"name":"安阳市","value":"410500","parent":"410000"},{"name":"鹤壁市","value":"410600","parent":"410000"},{"name":"新乡市","value":"410700","parent":"410000"},{"name":"焦作市","value":"410800","parent":"410000"},{"name":"濮阳市","value":"410900","parent":"410000"},{"name":"许昌市","value":"411000","parent":"410000"},{"name":"漯河市","value":"411100","parent":"410000"},{"name":"三门峡市","value":"411200","parent":"410000"},{"name":"南阳市","value":"411300","parent":"410000"},{"name":"商丘市","value":"411400","parent":"410000"},{"name":"信阳市","value":"411500","parent":"410000"},{"name":"周口市","value":"411600","parent":"410000"},{"name":"驻马店市","value":"411700","parent":"410000"},{"name":"济源市","value":"419001","parent":"410000"},{"name":"中原区","value":"410102","parent":"410100"},{"name":"二七区","value":"410103","parent":"410100"},{"name":"管城回族区","value":"410104","parent":"410100"},{"name":"金水区","value":"410105","parent":"410100"},{"name":"上街区","value":"410106","parent":"410100"},{"name":"惠济区","value":"410108","parent":"410100"},{"name":"中牟县","value":"410122","parent":"410100"},{"name":"巩义市","value":"410181","parent":"410100"},{"name":"荥阳市","value":"410182","parent":"410100"},{"name":"新密市","value":"410183","parent":"410100"},{"name":"新郑市","value":"410184","parent":"410100"},{"name":"登封市","value":"410185","parent":"410100"},{"name":"龙亭区","value":"410202","parent":"410200"},{"name":"顺河回族区","value":"410203","parent":"410200"},{"name":"鼓楼区","value":"410204","parent":"410200"},{"name":"禹王台区","value":"410205","parent":"410200"},{"name":"金明区","value":"410211","parent":"410200"},{"name":"祥符区","value":"410212","parent":"410200"},{"name":"杞县","value":"410221","parent":"410200"},{"name":"通许县","value":"410222","parent":"410200"},{"name":"尉氏县","value":"410223","parent":"410200"},{"name":"兰考县","value":"410225","parent":"410200"},{"name":"老城区","value":"410302","parent":"410300"},{"name":"西工区","value":"410303","parent":"410300"},{"name":"瀍河回族区","value":"410304","parent":"410300"},{"name":"涧西区","value":"410305","parent":"410300"},{"name":"吉利区","value":"410306","parent":"410300"},{"name":"洛龙区","value":"410311","parent":"410300"},{"name":"孟津县","value":"410322","parent":"410300"},{"name":"新安县","value":"410323","parent":"410300"},{"name":"栾川县","value":"410324","parent":"410300"},{"name":"嵩县","value":"410325","parent":"410300"},{"name":"汝阳县","value":"410326","parent":"410300"},{"name":"宜阳县","value":"410327","parent":"410300"},{"name":"洛宁县","value":"410328","parent":"410300"},{"name":"伊川县","value":"410329","parent":"410300"},{"name":"偃师市","value":"410381","parent":"410300"},{"name":"新华区","value":"410402","parent":"410400"},{"name":"卫东区","value":"410403","parent":"410400"},{"name":"石龙区","value":"410404","parent":"410400"},{"name":"湛河区","value":"410411","parent":"410400"},{"name":"宝丰县","value":"410421","parent":"410400"},{"name":"叶县","value":"410422","parent":"410400"},{"name":"鲁山县","value":"410423","parent":"410400"},{"name":"郏县","value":"410425","parent":"410400"},{"name":"舞钢市","value":"410481","parent":"410400"},{"name":"汝州市","value":"410482","parent":"410400"},{"name":"文峰区","value":"410502","parent":"410500"},{"name":"北关区","value":"410503","parent":"410500"},{"name":"殷都区","value":"410505","parent":"410500"},{"name":"龙安区","value":"410506","parent":"410500"},{"name":"安阳县","value":"410522","parent":"410500"},{"name":"汤阴县","value":"410523","parent":"410500"},{"name":"滑县","value":"410526","parent":"410500"},{"name":"内黄县","value":"410527","parent":"410500"},{"name":"林州市","value":"410581","parent":"410500"},{"name":"鹤山区","value":"410602","parent":"410600"},{"name":"山城区","value":"410603","parent":"410600"},{"name":"淇滨区","value":"410611","parent":"410600"},{"name":"浚县","value":"410621","parent":"410600"},{"name":"淇县","value":"410622","parent":"410600"},{"name":"红旗区","value":"410702","parent":"410700"},{"name":"卫滨区","value":"410703","parent":"410700"},{"name":"凤泉区","value":"410704","parent":"410700"},{"name":"牧野区","value":"410711","parent":"410700"},{"name":"新乡县","value":"410721","parent":"410700"},{"name":"获嘉县","value":"410724","parent":"410700"},{"name":"原阳县","value":"410725","parent":"410700"},{"name":"延津县","value":"410726","parent":"410700"},{"name":"封丘县","value":"410727","parent":"410700"},{"name":"长垣县","value":"410728","parent":"410700"},{"name":"卫辉市","value":"410781","parent":"410700"},{"name":"辉县市","value":"410782","parent":"410700"},{"name":"解放区","value":"410802","parent":"410800"},{"name":"中站区","value":"410803","parent":"410800"},{"name":"马村区","value":"410804","parent":"410800"},{"name":"山阳区","value":"410811","parent":"410800"},{"name":"修武县","value":"410821","parent":"410800"},{"name":"博爱县","value":"410822","parent":"410800"},{"name":"武陟县","value":"410823","parent":"410800"},{"name":"温县","value":"410825","parent":"410800"},{"name":"沁阳市","value":"410882","parent":"410800"},{"name":"孟州市","value":"410883","parent":"410800"},{"name":"华龙区","value":"410902","parent":"410900"},{"name":"清丰县","value":"410922","parent":"410900"},{"name":"南乐县","value":"410923","parent":"410900"},{"name":"范县","value":"410926","parent":"410900"},{"name":"台前县","value":"410927","parent":"410900"},{"name":"濮阳县","value":"410928","parent":"410900"},{"name":"魏都区","value":"411002","parent":"411000"},{"name":"许昌县","value":"411023","parent":"411000"},{"name":"鄢陵县","value":"411024","parent":"411000"},{"name":"襄城县","value":"411025","parent":"411000"},{"name":"禹州市","value":"411081","parent":"411000"},{"name":"长葛市","value":"411082","parent":"411000"},{"name":"源汇区","value":"411102","parent":"411100"},{"name":"郾城区","value":"411103","parent":"411100"},{"name":"召陵区","value":"411104","parent":"411100"},{"name":"舞阳县","value":"411121","parent":"411100"},{"name":"临颍县","value":"411122","parent":"411100"},{"name":"湖滨区","value":"411202","parent":"411200"},{"name":"陕州区","value":"411203","parent":"411200"},{"name":"渑池县","value":"411221","parent":"411200"},{"name":"卢氏县","value":"411224","parent":"411200"},{"name":"义马市","value":"411281","parent":"411200"},{"name":"灵宝市","value":"411282","parent":"411200"},{"name":"宛城区","value":"411302","parent":"411300"},{"name":"卧龙区","value":"411303","parent":"411300"},{"name":"南召县","value":"411321","parent":"411300"},{"name":"方城县","value":"411322","parent":"411300"},{"name":"西峡县","value":"411323","parent":"411300"},{"name":"镇平县","value":"411324","parent":"411300"},{"name":"内乡县","value":"411325","parent":"411300"},{"name":"淅川县","value":"411326","parent":"411300"},{"name":"社旗县","value":"411327","parent":"411300"},{"name":"唐河县","value":"411328","parent":"411300"},{"name":"新野县","value":"411329","parent":"411300"},{"name":"桐柏县","value":"411330","parent":"411300"},{"name":"邓州市","value":"411381","parent":"411300"},{"name":"梁园区","value":"411402","parent":"411400"},{"name":"睢阳区","value":"411403","parent":"411400"},{"name":"民权县","value":"411421","parent":"411400"},{"name":"睢县","value":"411422","parent":"411400"},{"name":"宁陵县","value":"411423","parent":"411400"},{"name":"柘城县","value":"411424","parent":"411400"},{"name":"虞城县","value":"411425","parent":"411400"},{"name":"夏邑县","value":"411426","parent":"411400"},{"name":"永城市","value":"411481","parent":"411400"},{"name":"浉河区","value":"411502","parent":"411500"},{"name":"平桥区","value":"411503","parent":"411500"},{"name":"罗山县","value":"411521","parent":"411500"},{"name":"光山县","value":"411522","parent":"411500"},{"name":"新县","value":"411523","parent":"411500"},{"name":"商城县","value":"411524","parent":"411500"},{"name":"固始县","value":"411525","parent":"411500"},{"name":"潢川县","value":"411526","parent":"411500"},{"name":"淮滨县","value":"411527","parent":"411500"},{"name":"息县","value":"411528","parent":"411500"},{"name":"川汇区","value":"411602","parent":"411600"},{"name":"扶沟县","value":"411621","parent":"411600"},{"name":"西华县","value":"411622","parent":"411600"},{"name":"商水县","value":"411623","parent":"411600"},{"name":"沈丘县","value":"411624","parent":"411600"},{"name":"郸城县","value":"411625","parent":"411600"},{"name":"淮阳县","value":"411626","parent":"411600"},{"name":"太康县","value":"411627","parent":"411600"},{"name":"鹿邑县","value":"411628","parent":"411600"},{"name":"项城市","value":"411681","parent":"411600"},{"name":"驿城区","value":"411702","parent":"411700"},{"name":"西平县","value":"411721","parent":"411700"},{"name":"上蔡县","value":"411722","parent":"411700"},{"name":"平舆县","value":"411723","parent":"411700"},{"name":"正阳县","value":"411724","parent":"411700"},{"name":"确山县","value":"411725","parent":"411700"},{"name":"泌阳县","value":"411726","parent":"411700"},{"name":"汝南县","value":"411727","parent":"411700"},{"name":"遂平县","value":"411728","parent":"411700"},{"name":"新蔡县","value":"411729","parent":"411700"},{"name":"武汉市","value":"420100","parent":"420000"},{"name":"黄石市","value":"420200","parent":"420000"},{"name":"十堰市","value":"420300","parent":"420000"},{"name":"宜昌市","value":"420500","parent":"420000"},{"name":"襄阳市","value":"420600","parent":"420000"},{"name":"鄂州市","value":"420700","parent":"420000"},{"name":"荆门市","value":"420800","parent":"420000"},{"name":"孝感市","value":"420900","parent":"420000"},{"name":"荆州市","value":"421000","parent":"420000"},{"name":"黄冈市","value":"421100","parent":"420000"},{"name":"咸宁市","value":"421200","parent":"420000"},{"name":"随州市","value":"421300","parent":"420000"},{"name":"恩施土家族苗族自治州","value":"422800","parent":"420000"},{"name":"仙桃市","value":"429004","parent":"420000"},{"name":"潜江市","value":"429005","parent":"420000"},{"name":"天门市","value":"429006","parent":"420000"},{"name":"神农架林区","value":"429021","parent":"420000"},{"name":"江岸区","value":"420102","parent":"420100"},{"name":"江汉区","value":"420103","parent":"420100"},{"name":"硚口区","value":"420104","parent":"420100"},{"name":"汉阳区","value":"420105","parent":"420100"},{"name":"武昌区","value":"420106","parent":"420100"},{"name":"青山区","value":"420107","parent":"420100"},{"name":"洪山区","value":"420111","parent":"420100"},{"name":"东西湖区","value":"420112","parent":"420100"},{"name":"汉南区","value":"420113","parent":"420100"},{"name":"蔡甸区","value":"420114","parent":"420100"},{"name":"江夏区","value":"420115","parent":"420100"},{"name":"黄陂区","value":"420116","parent":"420100"},{"name":"新洲区","value":"420117","parent":"420100"},{"name":"黄石港区","value":"420202","parent":"420200"},{"name":"西塞山区","value":"420203","parent":"420200"},{"name":"下陆区","value":"420204","parent":"420200"},{"name":"铁山区","value":"420205","parent":"420200"},{"name":"阳新县","value":"420222","parent":"420200"},{"name":"大冶市","value":"420281","parent":"420200"},{"name":"茅箭区","value":"420302","parent":"420300"},{"name":"张湾区","value":"420303","parent":"420300"},{"name":"郧阳区","value":"420304","parent":"420300"},{"name":"郧西县","value":"420322","parent":"420300"},{"name":"竹山县","value":"420323","parent":"420300"},{"name":"竹溪县","value":"420324","parent":"420300"},{"name":"房县","value":"420325","parent":"420300"},{"name":"丹江口市","value":"420381","parent":"420300"},{"name":"西陵区","value":"420502","parent":"420500"},{"name":"伍家岗区","value":"420503","parent":"420500"},{"name":"点军区","value":"420504","parent":"420500"},{"name":"猇亭区","value":"420505","parent":"420500"},{"name":"夷陵区","value":"420506","parent":"420500"},{"name":"远安县","value":"420525","parent":"420500"},{"name":"兴山县","value":"420526","parent":"420500"},{"name":"秭归县","value":"420527","parent":"420500"},{"name":"长阳土家族自治县","value":"420528","parent":"420500"},{"name":"五峰土家族自治县","value":"420529","parent":"420500"},{"name":"宜都市","value":"420581","parent":"420500"},{"name":"当阳市","value":"420582","parent":"420500"},{"name":"枝江市","value":"420583","parent":"420500"},{"name":"襄城区","value":"420602","parent":"420600"},{"name":"樊城区","value":"420606","parent":"420600"},{"name":"襄州区","value":"420607","parent":"420600"},{"name":"南漳县","value":"420624","parent":"420600"},{"name":"谷城县","value":"420625","parent":"420600"},{"name":"保康县","value":"420626","parent":"420600"},{"name":"老河口市","value":"420682","parent":"420600"},{"name":"枣阳市","value":"420683","parent":"420600"},{"name":"宜城市","value":"420684","parent":"420600"},{"name":"梁子湖区","value":"420702","parent":"420700"},{"name":"华容区","value":"420703","parent":"420700"},{"name":"鄂城区","value":"420704","parent":"420700"},{"name":"东宝区","value":"420802","parent":"420800"},{"name":"掇刀区","value":"420804","parent":"420800"},{"name":"京山县","value":"420821","parent":"420800"},{"name":"沙洋县","value":"420822","parent":"420800"},{"name":"钟祥市","value":"420881","parent":"420800"},{"name":"孝南区","value":"420902","parent":"420900"},{"name":"孝昌县","value":"420921","parent":"420900"},{"name":"大悟县","value":"420922","parent":"420900"},{"name":"云梦县","value":"420923","parent":"420900"},{"name":"应城市","value":"420981","parent":"420900"},{"name":"安陆市","value":"420982","parent":"420900"},{"name":"汉川市","value":"420984","parent":"420900"},{"name":"沙市区","value":"421002","parent":"421000"},{"name":"荆州区","value":"421003","parent":"421000"},{"name":"公安县","value":"421022","parent":"421000"},{"name":"监利县","value":"421023","parent":"421000"},{"name":"江陵县","value":"421024","parent":"421000"},{"name":"石首市","value":"421081","parent":"421000"},{"name":"洪湖市","value":"421083","parent":"421000"},{"name":"松滋市","value":"421087","parent":"421000"},{"name":"黄州区","value":"421102","parent":"421100"},{"name":"团风县","value":"421121","parent":"421100"},{"name":"红安县","value":"421122","parent":"421100"},{"name":"罗田县","value":"421123","parent":"421100"},{"name":"英山县","value":"421124","parent":"421100"},{"name":"浠水县","value":"421125","parent":"421100"},{"name":"蕲春县","value":"421126","parent":"421100"},{"name":"黄梅县","value":"421127","parent":"421100"},{"name":"麻城市","value":"421181","parent":"421100"},{"name":"武穴市","value":"421182","parent":"421100"},{"name":"咸安区","value":"421202","parent":"421200"},{"name":"嘉鱼县","value":"421221","parent":"421200"},{"name":"通城县","value":"421222","parent":"421200"},{"name":"崇阳县","value":"421223","parent":"421200"},{"name":"通山县","value":"421224","parent":"421200"},{"name":"赤壁市","value":"421281","parent":"421200"},{"name":"曾都区","value":"421303","parent":"421300"},{"name":"随县","value":"421321","parent":"421300"},{"name":"广水市","value":"421381","parent":"421300"},{"name":"恩施市","value":"422801","parent":"422800"},{"name":"利川市","value":"422802","parent":"422800"},{"name":"建始县","value":"422822","parent":"422800"},{"name":"巴东县","value":"422823","parent":"422800"},{"name":"宣恩县","value":"422825","parent":"422800"},{"name":"咸丰县","value":"422826","parent":"422800"},{"name":"来凤县","value":"422827","parent":"422800"},{"name":"鹤峰县","value":"422828","parent":"422800"},{"name":"长沙市","value":"430100","parent":"430000"},{"name":"株洲市","value":"430200","parent":"430000"},{"name":"湘潭市","value":"430300","parent":"430000"},{"name":"衡阳市","value":"430400","parent":"430000"},{"name":"邵阳市","value":"430500","parent":"430000"},{"name":"岳阳市","value":"430600","parent":"430000"},{"name":"常德市","value":"430700","parent":"430000"},{"name":"张家界市","value":"430800","parent":"430000"},{"name":"益阳市","value":"430900","parent":"430000"},{"name":"郴州市","value":"431000","parent":"430000"},{"name":"永州市","value":"431100","parent":"430000"},{"name":"怀化市","value":"431200","parent":"430000"},{"name":"娄底市","value":"431300","parent":"430000"},{"name":"湘西土家族苗族自治州","value":"433100","parent":"430000"},{"name":"芙蓉区","value":"430102","parent":"430100"},{"name":"天心区","value":"430103","parent":"430100"},{"name":"岳麓区","value":"430104","parent":"430100"},{"name":"开福区","value":"430105","parent":"430100"},{"name":"雨花区","value":"430111","parent":"430100"},{"name":"望城区","value":"430112","parent":"430100"},{"name":"长沙县","value":"430121","parent":"430100"},{"name":"宁乡县","value":"430124","parent":"430100"},{"name":"浏阳市","value":"430181","parent":"430100"},{"name":"荷塘区","value":"430202","parent":"430200"},{"name":"芦淞区","value":"430203","parent":"430200"},{"name":"石峰区","value":"430204","parent":"430200"},{"name":"天元区","value":"430211","parent":"430200"},{"name":"株洲县","value":"430221","parent":"430200"},{"name":"攸县","value":"430223","parent":"430200"},{"name":"茶陵县","value":"430224","parent":"430200"},{"name":"炎陵县","value":"430225","parent":"430200"},{"name":"醴陵市","value":"430281","parent":"430200"},{"name":"雨湖区","value":"430302","parent":"430300"},{"name":"岳塘区","value":"430304","parent":"430300"},{"name":"湘潭县","value":"430321","parent":"430300"},{"name":"湘乡市","value":"430381","parent":"430300"},{"name":"韶山市","value":"430382","parent":"430300"},{"name":"珠晖区","value":"430405","parent":"430400"},{"name":"雁峰区","value":"430406","parent":"430400"},{"name":"石鼓区","value":"430407","parent":"430400"},{"name":"蒸湘区","value":"430408","parent":"430400"},{"name":"南岳区","value":"430412","parent":"430400"},{"name":"衡阳县","value":"430421","parent":"430400"},{"name":"衡南县","value":"430422","parent":"430400"},{"name":"衡山县","value":"430423","parent":"430400"},{"name":"衡东县","value":"430424","parent":"430400"},{"name":"祁东县","value":"430426","parent":"430400"},{"name":"耒阳市","value":"430481","parent":"430400"},{"name":"常宁市","value":"430482","parent":"430400"},{"name":"双清区","value":"430502","parent":"430500"},{"name":"大祥区","value":"430503","parent":"430500"},{"name":"北塔区","value":"430511","parent":"430500"},{"name":"邵东县","value":"430521","parent":"430500"},{"name":"新邵县","value":"430522","parent":"430500"},{"name":"邵阳县","value":"430523","parent":"430500"},{"name":"隆回县","value":"430524","parent":"430500"},{"name":"洞口县","value":"430525","parent":"430500"},{"name":"绥宁县","value":"430527","parent":"430500"},{"name":"新宁县","value":"430528","parent":"430500"},{"name":"城步苗族自治县","value":"430529","parent":"430500"},{"name":"武冈市","value":"430581","parent":"430500"},{"name":"岳阳楼区","value":"430602","parent":"430600"},{"name":"云溪区","value":"430603","parent":"430600"},{"name":"君山区","value":"430611","parent":"430600"},{"name":"岳阳县","value":"430621","parent":"430600"},{"name":"华容县","value":"430623","parent":"430600"},{"name":"湘阴县","value":"430624","parent":"430600"},{"name":"平江县","value":"430626","parent":"430600"},{"name":"汨罗市","value":"430681","parent":"430600"},{"name":"临湘市","value":"430682","parent":"430600"},{"name":"武陵区","value":"430702","parent":"430700"},{"name":"鼎城区","value":"430703","parent":"430700"},{"name":"安乡县","value":"430721","parent":"430700"},{"name":"汉寿县","value":"430722","parent":"430700"},{"name":"澧县","value":"430723","parent":"430700"},{"name":"临澧县","value":"430724","parent":"430700"},{"name":"桃源县","value":"430725","parent":"430700"},{"name":"石门县","value":"430726","parent":"430700"},{"name":"津市市","value":"430781","parent":"430700"},{"name":"永定区","value":"430802","parent":"430800"},{"name":"武陵源区","value":"430811","parent":"430800"},{"name":"慈利县","value":"430821","parent":"430800"},{"name":"桑植县","value":"430822","parent":"430800"},{"name":"资阳区","value":"430902","parent":"430900"},{"name":"赫山区","value":"430903","parent":"430900"},{"name":"南县","value":"430921","parent":"430900"},{"name":"桃江县","value":"430922","parent":"430900"},{"name":"安化县","value":"430923","parent":"430900"},{"name":"沅江市","value":"430981","parent":"430900"},{"name":"北湖区","value":"431002","parent":"431000"},{"name":"苏仙区","value":"431003","parent":"431000"},{"name":"桂阳县","value":"431021","parent":"431000"},{"name":"宜章县","value":"431022","parent":"431000"},{"name":"永兴县","value":"431023","parent":"431000"},{"name":"嘉禾县","value":"431024","parent":"431000"},{"name":"临武县","value":"431025","parent":"431000"},{"name":"汝城县","value":"431026","parent":"431000"},{"name":"桂东县","value":"431027","parent":"431000"},{"name":"安仁县","value":"431028","parent":"431000"},{"name":"资兴市","value":"431081","parent":"431000"},{"name":"零陵区","value":"431102","parent":"431100"},{"name":"冷水滩区","value":"431103","parent":"431100"},{"name":"祁阳县","value":"431121","parent":"431100"},{"name":"东安县","value":"431122","parent":"431100"},{"name":"双牌县","value":"431123","parent":"431100"},{"name":"道县","value":"431124","parent":"431100"},{"name":"江永县","value":"431125","parent":"431100"},{"name":"宁远县","value":"431126","parent":"431100"},{"name":"蓝山县","value":"431127","parent":"431100"},{"name":"新田县","value":"431128","parent":"431100"},{"name":"江华瑶族自治县","value":"431129","parent":"431100"},{"name":"鹤城区","value":"431202","parent":"431200"},{"name":"中方县","value":"431221","parent":"431200"},{"name":"沅陵县","value":"431222","parent":"431200"},{"name":"辰溪县","value":"431223","parent":"431200"},{"name":"溆浦县","value":"431224","parent":"431200"},{"name":"会同县","value":"431225","parent":"431200"},{"name":"麻阳苗族自治县","value":"431226","parent":"431200"},{"name":"新晃侗族自治县","value":"431227","parent":"431200"},{"name":"芷江侗族自治县","value":"431228","parent":"431200"},{"name":"靖州苗族侗族自治县","value":"431229","parent":"431200"},{"name":"通道侗族自治县","value":"431230","parent":"431200"},{"name":"洪江市","value":"431281","parent":"431200"},{"name":"娄星区","value":"431302","parent":"431300"},{"name":"双峰县","value":"431321","parent":"431300"},{"name":"新化县","value":"431322","parent":"431300"},{"name":"冷水江市","value":"431381","parent":"431300"},{"name":"涟源市","value":"431382","parent":"431300"},{"name":"吉首市","value":"433101","parent":"433100"},{"name":"泸溪县","value":"433122","parent":"433100"},{"name":"凤凰县","value":"433123","parent":"433100"},{"name":"花垣县","value":"433124","parent":"433100"},{"name":"保靖县","value":"433125","parent":"433100"},{"name":"古丈县","value":"433126","parent":"433100"},{"name":"永顺县","value":"433127","parent":"433100"},{"name":"龙山县","value":"433130","parent":"433100"},{"name":"广州市","value":"440100","parent":"440000"},{"name":"韶关市","value":"440200","parent":"440000"},{"name":"深圳市","value":"440300","parent":"440000"},{"name":"珠海市","value":"440400","parent":"440000"},{"name":"汕头市","value":"440500","parent":"440000"},{"name":"佛山市","value":"440600","parent":"440000"},{"name":"江门市","value":"440700","parent":"440000"},{"name":"湛江市","value":"440800","parent":"440000"},{"name":"茂名市","value":"440900","parent":"440000"},{"name":"肇庆市","value":"441200","parent":"440000"},{"name":"惠州市","value":"441300","parent":"440000"},{"name":"梅州市","value":"441400","parent":"440000"},{"name":"汕尾市","value":"441500","parent":"440000"},{"name":"河源市","value":"441600","parent":"440000"},{"name":"阳江市","value":"441700","parent":"440000"},{"name":"清远市","value":"441800","parent":"440000"},{"name":"东莞市","value":"441900","parent":"440000"},{"name":"中山市","value":"442000","parent":"440000"},{"name":"潮州市","value":"445100","parent":"440000"},{"name":"揭阳市","value":"445200","parent":"440000"},{"name":"云浮市","value":"445300","parent":"440000"},{"name":"荔湾区","value":"440103","parent":"440100"},{"name":"越秀区","value":"440104","parent":"440100"},{"name":"海珠区","value":"440105","parent":"440100"},{"name":"天河区","value":"440106","parent":"440100"},{"name":"白云区","value":"440111","parent":"440100"},{"name":"黄埔区","value":"440112","parent":"440100"},{"name":"番禺区","value":"440113","parent":"440100"},{"name":"花都区","value":"440114","parent":"440100"},{"name":"南沙区","value":"440115","parent":"440100"},{"name":"从化区","value":"440117","parent":"440100"},{"name":"增城区","value":"440118","parent":"440100"},{"name":"武江区","value":"440203","parent":"440200"},{"name":"浈江区","value":"440204","parent":"440200"},{"name":"曲江区","value":"440205","parent":"440200"},{"name":"始兴县","value":"440222","parent":"440200"},{"name":"仁化县","value":"440224","parent":"440200"},{"name":"翁源县","value":"440229","parent":"440200"},{"name":"乳源瑶族自治县","value":"440232","parent":"440200"},{"name":"新丰县","value":"440233","parent":"440200"},{"name":"乐昌市","value":"440281","parent":"440200"},{"name":"南雄市","value":"440282","parent":"440200"},{"name":"罗湖区","value":"440303","parent":"440300"},{"name":"福田区","value":"440304","parent":"440300"},{"name":"南山区","value":"440305","parent":"440300"},{"name":"宝安区","value":"440306","parent":"440300"},{"name":"龙岗区","value":"440307","parent":"440300"},{"name":"盐田区","value":"440308","parent":"440300"},{"name":"香洲区","value":"440402","parent":"440400"},{"name":"斗门区","value":"440403","parent":"440400"},{"name":"金湾区","value":"440404","parent":"440400"},{"name":"龙湖区","value":"440507","parent":"440500"},{"name":"金平区","value":"440511","parent":"440500"},{"name":"濠江区","value":"440512","parent":"440500"},{"name":"潮阳区","value":"440513","parent":"440500"},{"name":"潮南区","value":"440514","parent":"440500"},{"name":"澄海区","value":"440515","parent":"440500"},{"name":"南澳县","value":"440523","parent":"440500"},{"name":"禅城区","value":"440604","parent":"440600"},{"name":"南海区","value":"440605","parent":"440600"},{"name":"顺德区","value":"440606","parent":"440600"},{"name":"三水区","value":"440607","parent":"440600"},{"name":"高明区","value":"440608","parent":"440600"},{"name":"蓬江区","value":"440703","parent":"440700"},{"name":"江海区","value":"440704","parent":"440700"},{"name":"新会区","value":"440705","parent":"440700"},{"name":"台山市","value":"440781","parent":"440700"},{"name":"开平市","value":"440783","parent":"440700"},{"name":"鹤山市","value":"440784","parent":"440700"},{"name":"恩平市","value":"440785","parent":"440700"},{"name":"赤坎区","value":"440802","parent":"440800"},{"name":"霞山区","value":"440803","parent":"440800"},{"name":"坡头区","value":"440804","parent":"440800"},{"name":"麻章区","value":"440811","parent":"440800"},{"name":"遂溪县","value":"440823","parent":"440800"},{"name":"徐闻县","value":"440825","parent":"440800"},{"name":"廉江市","value":"440881","parent":"440800"},{"name":"雷州市","value":"440882","parent":"440800"},{"name":"吴川市","value":"440883","parent":"440800"},{"name":"茂南区","value":"440902","parent":"440900"},{"name":"电白区","value":"440904","parent":"440900"},{"name":"高州市","value":"440981","parent":"440900"},{"name":"化州市","value":"440982","parent":"440900"},{"name":"信宜市","value":"440983","parent":"440900"},{"name":"端州区","value":"441202","parent":"441200"},{"name":"鼎湖区","value":"441203","parent":"441200"},{"name":"高要区","value":"441204","parent":"441200"},{"name":"广宁县","value":"441223","parent":"441200"},{"name":"怀集县","value":"441224","parent":"441200"},{"name":"封开县","value":"441225","parent":"441200"},{"name":"德庆县","value":"441226","parent":"441200"},{"name":"四会市","value":"441284","parent":"441200"},{"name":"惠城区","value":"441302","parent":"441300"},{"name":"惠阳区","value":"441303","parent":"441300"},{"name":"博罗县","value":"441322","parent":"441300"},{"name":"惠东县","value":"441323","parent":"441300"},{"name":"龙门县","value":"441324","parent":"441300"},{"name":"梅江区","value":"441402","parent":"441400"},{"name":"梅县区","value":"441403","parent":"441400"},{"name":"大埔县","value":"441422","parent":"441400"},{"name":"丰顺县","value":"441423","parent":"441400"},{"name":"五华县","value":"441424","parent":"441400"},{"name":"平远县","value":"441426","parent":"441400"},{"name":"蕉岭县","value":"441427","parent":"441400"},{"name":"兴宁市","value":"441481","parent":"441400"},{"name":"城区","value":"441502","parent":"441500"},{"name":"海丰县","value":"441521","parent":"441500"},{"name":"陆河县","value":"441523","parent":"441500"},{"name":"陆丰市","value":"441581","parent":"441500"},{"name":"源城区","value":"441602","parent":"441600"},{"name":"紫金县","value":"441621","parent":"441600"},{"name":"龙川县","value":"441622","parent":"441600"},{"name":"连平县","value":"441623","parent":"441600"},{"name":"和平县","value":"441624","parent":"441600"},{"name":"东源县","value":"441625","parent":"441600"},{"name":"江城区","value":"441702","parent":"441700"},{"name":"阳东区","value":"441704","parent":"441700"},{"name":"阳西县","value":"441721","parent":"441700"},{"name":"阳春市","value":"441781","parent":"441700"},{"name":"清城区","value":"441802","parent":"441800"},{"name":"清新区","value":"441803","parent":"441800"},{"name":"佛冈县","value":"441821","parent":"441800"},{"name":"阳山县","value":"441823","parent":"441800"},{"name":"连山壮族瑶族自治县","value":"441825","parent":"441800"},{"name":"连南瑶族自治县","value":"441826","parent":"441800"},{"name":"英德市","value":"441881","parent":"441800"},{"name":"连州市","value":"441882","parent":"441800"},{"name":"湘桥区","value":"445102","parent":"445100"},{"name":"潮安区","value":"445103","parent":"445100"},{"name":"饶平县","value":"445122","parent":"445100"},{"name":"榕城区","value":"445202","parent":"445200"},{"name":"揭东区","value":"445203","parent":"445200"},{"name":"揭西县","value":"445222","parent":"445200"},{"name":"惠来县","value":"445224","parent":"445200"},{"name":"普宁市","value":"445281","parent":"445200"},{"name":"云城区","value":"445302","parent":"445300"},{"name":"云安区","value":"445303","parent":"445300"},{"name":"新兴县","value":"445321","parent":"445300"},{"name":"郁南县","value":"445322","parent":"445300"},{"name":"罗定市","value":"445381","parent":"445300"},{"name":"南宁市","value":"450100","parent":"450000"},{"name":"柳州市","value":"450200","parent":"450000"},{"name":"桂林市","value":"450300","parent":"450000"},{"name":"梧州市","value":"450400","parent":"450000"},{"name":"北海市","value":"450500","parent":"450000"},{"name":"防城港市","value":"450600","parent":"450000"},{"name":"钦州市","value":"450700","parent":"450000"},{"name":"贵港市","value":"450800","parent":"450000"},{"name":"玉林市","value":"450900","parent":"450000"},{"name":"百色市","value":"451000","parent":"450000"},{"name":"贺州市","value":"451100","parent":"450000"},{"name":"河池市","value":"451200","parent":"450000"},{"name":"来宾市","value":"451300","parent":"450000"},{"name":"崇左市","value":"451400","parent":"450000"},{"name":"兴宁区","value":"450102","parent":"450100"},{"name":"青秀区","value":"450103","parent":"450100"},{"name":"江南区","value":"450105","parent":"450100"},{"name":"西乡塘区","value":"450107","parent":"450100"},{"name":"良庆区","value":"450108","parent":"450100"},{"name":"邕宁区","value":"450109","parent":"450100"},{"name":"武鸣区","value":"450110","parent":"450100"},{"name":"隆安县","value":"450123","parent":"450100"},{"name":"马山县","value":"450124","parent":"450100"},{"name":"上林县","value":"450125","parent":"450100"},{"name":"宾阳县","value":"450126","parent":"450100"},{"name":"横县","value":"450127","parent":"450100"},{"name":"城中区","value":"450202","parent":"450200"},{"name":"鱼峰区","value":"450203","parent":"450200"},{"name":"柳南区","value":"450204","parent":"450200"},{"name":"柳北区","value":"450205","parent":"450200"},{"name":"柳江区","value":"450206","parent":"450200"},{"name":"柳城县","value":"450222","parent":"450200"},{"name":"鹿寨县","value":"450223","parent":"450200"},{"name":"融安县","value":"450224","parent":"450200"},{"name":"融水苗族自治县","value":"450225","parent":"450200"},{"name":"三江侗族自治县","value":"450226","parent":"450200"},{"name":"秀峰区","value":"450302","parent":"450300"},{"name":"叠彩区","value":"450303","parent":"450300"},{"name":"象山区","value":"450304","parent":"450300"},{"name":"七星区","value":"450305","parent":"450300"},{"name":"雁山区","value":"450311","parent":"450300"},{"name":"临桂区","value":"450312","parent":"450300"},{"name":"阳朔县","value":"450321","parent":"450300"},{"name":"灵川县","value":"450323","parent":"450300"},{"name":"全州县","value":"450324","parent":"450300"},{"name":"兴安县","value":"450325","parent":"450300"},{"name":"永福县","value":"450326","parent":"450300"},{"name":"灌阳县","value":"450327","parent":"450300"},{"name":"龙胜各族自治县","value":"450328","parent":"450300"},{"name":"资源县","value":"450329","parent":"450300"},{"name":"平乐县","value":"450330","parent":"450300"},{"name":"荔浦县","value":"450331","parent":"450300"},{"name":"恭城瑶族自治县","value":"450332","parent":"450300"},{"name":"万秀区","value":"450403","parent":"450400"},{"name":"长洲区","value":"450405","parent":"450400"},{"name":"龙圩区","value":"450406","parent":"450400"},{"name":"苍梧县","value":"450421","parent":"450400"},{"name":"藤县","value":"450422","parent":"450400"},{"name":"蒙山县","value":"450423","parent":"450400"},{"name":"岑溪市","value":"450481","parent":"450400"},{"name":"海城区","value":"450502","parent":"450500"},{"name":"银海区","value":"450503","parent":"450500"},{"name":"铁山港区","value":"450512","parent":"450500"},{"name":"合浦县","value":"450521","parent":"450500"},{"name":"港口区","value":"450602","parent":"450600"},{"name":"防城区","value":"450603","parent":"450600"},{"name":"上思县","value":"450621","parent":"450600"},{"name":"东兴市","value":"450681","parent":"450600"},{"name":"钦南区","value":"450702","parent":"450700"},{"name":"钦北区","value":"450703","parent":"450700"},{"name":"灵山县","value":"450721","parent":"450700"},{"name":"浦北县","value":"450722","parent":"450700"},{"name":"港北区","value":"450802","parent":"450800"},{"name":"港南区","value":"450803","parent":"450800"},{"name":"覃塘区","value":"450804","parent":"450800"},{"name":"平南县","value":"450821","parent":"450800"},{"name":"桂平市","value":"450881","parent":"450800"},{"name":"玉州区","value":"450902","parent":"450900"},{"name":"福绵区","value":"450903","parent":"450900"},{"name":"容县","value":"450921","parent":"450900"},{"name":"陆川县","value":"450922","parent":"450900"},{"name":"博白县","value":"450923","parent":"450900"},{"name":"兴业县","value":"450924","parent":"450900"},{"name":"北流市","value":"450981","parent":"450900"},{"name":"右江区","value":"451002","parent":"451000"},{"name":"田阳县","value":"451021","parent":"451000"},{"name":"田东县","value":"451022","parent":"451000"},{"name":"平果县","value":"451023","parent":"451000"},{"name":"德保县","value":"451024","parent":"451000"},{"name":"那坡县","value":"451026","parent":"451000"},{"name":"凌云县","value":"451027","parent":"451000"},{"name":"乐业县","value":"451028","parent":"451000"},{"name":"田林县","value":"451029","parent":"451000"},{"name":"西林县","value":"451030","parent":"451000"},{"name":"隆林各族自治县","value":"451031","parent":"451000"},{"name":"靖西市","value":"451081","parent":"451000"},{"name":"八步区","value":"451102","parent":"451100"},{"name":"平桂区","value":"451103","parent":"451100"},{"name":"昭平县","value":"451121","parent":"451100"},{"name":"钟山县","value":"451122","parent":"451100"},{"name":"富川瑶族自治县","value":"451123","parent":"451100"},{"name":"金城江区","value":"451202","parent":"451200"},{"name":"南丹县","value":"451221","parent":"451200"},{"name":"天峨县","value":"451222","parent":"451200"},{"name":"凤山县","value":"451223","parent":"451200"},{"name":"东兰县","value":"451224","parent":"451200"},{"name":"罗城仫佬族自治县","value":"451225","parent":"451200"},{"name":"环江毛南族自治县","value":"451226","parent":"451200"},{"name":"巴马瑶族自治县","value":"451227","parent":"451200"},{"name":"都安瑶族自治县","value":"451228","parent":"451200"},{"name":"大化瑶族自治县","value":"451229","parent":"451200"},{"name":"宜州市","value":"451281","parent":"451200"},{"name":"兴宾区","value":"451302","parent":"451300"},{"name":"忻城县","value":"451321","parent":"451300"},{"name":"象州县","value":"451322","parent":"451300"},{"name":"武宣县","value":"451323","parent":"451300"},{"name":"金秀瑶族自治县","value":"451324","parent":"451300"},{"name":"合山市","value":"451381","parent":"451300"},{"name":"江州区","value":"451402","parent":"451400"},{"name":"扶绥县","value":"451421","parent":"451400"},{"name":"宁明县","value":"451422","parent":"451400"},{"name":"龙州县","value":"451423","parent":"451400"},{"name":"大新县","value":"451424","parent":"451400"},{"name":"天等县","value":"451425","parent":"451400"},{"name":"凭祥市","value":"451481","parent":"451400"},{"name":"海口市","value":"460100","parent":"460000"},{"name":"三亚市","value":"460200","parent":"460000"},{"name":"三沙市","value":"460300","parent":"460000"},{"name":"儋州市","value":"460400","parent":"460000"},{"name":"五指山市","value":"469001","parent":"460000"},{"name":"琼海市","value":"469002","parent":"460000"},{"name":"文昌市","value":"469005","parent":"460000"},{"name":"万宁市","value":"469006","parent":"460000"},{"name":"东方市","value":"469007","parent":"460000"},{"name":"定安县","value":"469021","parent":"460000"},{"name":"屯昌县","value":"469022","parent":"460000"},{"name":"澄迈县","value":"469023","parent":"460000"},{"name":"临高县","value":"469024","parent":"460000"},{"name":"白沙黎族自治县","value":"469025","parent":"460000"},{"name":"昌江黎族自治县","value":"469026","parent":"460000"},{"name":"乐东黎族自治县","value":"469027","parent":"460000"},{"name":"陵水黎族自治县","value":"469028","parent":"460000"},{"name":"保亭黎族苗族自治县","value":"469029","parent":"460000"},{"name":"琼中黎族苗族自治县","value":"469030","parent":"460000"},{"name":"秀英区","value":"460105","parent":"460100"},{"name":"龙华区","value":"460106","parent":"460100"},{"name":"琼山区","value":"460107","parent":"460100"},{"name":"美兰区","value":"460108","parent":"460100"},{"name":"海棠区","value":"460202","parent":"460200"},{"name":"吉阳区","value":"460203","parent":"460200"},{"name":"天涯区","value":"460204","parent":"460200"},{"name":"崖州区","value":"460205","parent":"460200"},{"name":"市辖区","value":"500100","parent":"500000"},{"name":"县","value":"500200","parent":"500000"},{"name":"万州区","value":"500101","parent":"500100"},{"name":"涪陵区","value":"500102","parent":"500100"},{"name":"渝中区","value":"500103","parent":"500100"},{"name":"大渡口区","value":"500104","parent":"500100"},{"name":"江北区","value":"500105","parent":"500100"},{"name":"沙坪坝区","value":"500106","parent":"500100"},{"name":"九龙坡区","value":"500107","parent":"500100"},{"name":"南岸区","value":"500108","parent":"500100"},{"name":"北碚区","value":"500109","parent":"500100"},{"name":"綦江区","value":"500110","parent":"500100"},{"name":"大足区","value":"500111","parent":"500100"},{"name":"渝北区","value":"500112","parent":"500100"},{"name":"巴南区","value":"500113","parent":"500100"},{"name":"黔江区","value":"500114","parent":"500100"},{"name":"长寿区","value":"500115","parent":"500100"},{"name":"江津区","value":"500116","parent":"500100"},{"name":"合川区","value":"500117","parent":"500100"},{"name":"永川区","value":"500118","parent":"500100"},{"name":"南川区","value":"500119","parent":"500100"},{"name":"璧山区","value":"500120","parent":"500100"},{"name":"铜梁区","value":"500151","parent":"500100"},{"name":"潼南区","value":"500152","parent":"500100"},{"name":"荣昌区","value":"500153","parent":"500100"},{"name":"开州区","value":"500154","parent":"500100"},{"name":"梁平县","value":"500228","parent":"500200"},{"name":"城口县","value":"500229","parent":"500200"},{"name":"丰都县","value":"500230","parent":"500200"},{"name":"垫江县","value":"500231","parent":"500200"},{"name":"武隆县","value":"500232","parent":"500200"},{"name":"忠县","value":"500233","parent":"500200"},{"name":"云阳县","value":"500235","parent":"500200"},{"name":"奉节县","value":"500236","parent":"500200"},{"name":"巫山县","value":"500237","parent":"500200"},{"name":"巫溪县","value":"500238","parent":"500200"},{"name":"石柱土家族自治县","value":"500240","parent":"500200"},{"name":"秀山土家族苗族自治县","value":"500241","parent":"500200"},{"name":"酉阳土家族苗族自治县","value":"500242","parent":"500200"},{"name":"彭水苗族土家族自治县","value":"500243","parent":"500200"},{"name":"成都市","value":"510100","parent":"510000"},{"name":"自贡市","value":"510300","parent":"510000"},{"name":"攀枝花市","value":"510400","parent":"510000"},{"name":"泸州市","value":"510500","parent":"510000"},{"name":"德阳市","value":"510600","parent":"510000"},{"name":"绵阳市","value":"510700","parent":"510000"},{"name":"广元市","value":"510800","parent":"510000"},{"name":"遂宁市","value":"510900","parent":"510000"},{"name":"内江市","value":"511000","parent":"510000"},{"name":"乐山市","value":"511100","parent":"510000"},{"name":"南充市","value":"511300","parent":"510000"},{"name":"眉山市","value":"511400","parent":"510000"},{"name":"宜宾市","value":"511500","parent":"510000"},{"name":"广安市","value":"511600","parent":"510000"},{"name":"达州市","value":"511700","parent":"510000"},{"name":"雅安市","value":"511800","parent":"510000"},{"name":"巴中市","value":"511900","parent":"510000"},{"name":"资阳市","value":"512000","parent":"510000"},{"name":"阿坝藏族羌族自治州","value":"513200","parent":"510000"},{"name":"甘孜藏族自治州","value":"513300","parent":"510000"},{"name":"凉山彝族自治州","value":"513400","parent":"510000"},{"name":"锦江区","value":"510104","parent":"510100"},{"name":"青羊区","value":"510105","parent":"510100"},{"name":"金牛区","value":"510106","parent":"510100"},{"name":"武侯区","value":"510107","parent":"510100"},{"name":"成华区","value":"510108","parent":"510100"},{"name":"龙泉驿区","value":"510112","parent":"510100"},{"name":"青白江区","value":"510113","parent":"510100"},{"name":"新都区","value":"510114","parent":"510100"},{"name":"温江区","value":"510115","parent":"510100"},{"name":"双流区","value":"510116","parent":"510100"},{"name":"金堂县","value":"510121","parent":"510100"},{"name":"郫县","value":"510124","parent":"510100"},{"name":"大邑县","value":"510129","parent":"510100"},{"name":"蒲江县","value":"510131","parent":"510100"},{"name":"新津县","value":"510132","parent":"510100"},{"name":"都江堰市","value":"510181","parent":"510100"},{"name":"彭州市","value":"510182","parent":"510100"},{"name":"邛崃市","value":"510183","parent":"510100"},{"name":"崇州市","value":"510184","parent":"510100"},{"name":"简阳市","value":"510185","parent":"510100"},{"name":"自流井区","value":"510302","parent":"510300"},{"name":"贡井区","value":"510303","parent":"510300"},{"name":"大安区","value":"510304","parent":"510300"},{"name":"沿滩区","value":"510311","parent":"510300"},{"name":"荣县","value":"510321","parent":"510300"},{"name":"富顺县","value":"510322","parent":"510300"},{"name":"东区","value":"510402","parent":"510400"},{"name":"西区","value":"510403","parent":"510400"},{"name":"仁和区","value":"510411","parent":"510400"},{"name":"米易县","value":"510421","parent":"510400"},{"name":"盐边县","value":"510422","parent":"510400"},{"name":"江阳区","value":"510502","parent":"510500"},{"name":"纳溪区","value":"510503","parent":"510500"},{"name":"龙马潭区","value":"510504","parent":"510500"},{"name":"泸县","value":"510521","parent":"510500"},{"name":"合江县","value":"510522","parent":"510500"},{"name":"叙永县","value":"510524","parent":"510500"},{"name":"古蔺县","value":"510525","parent":"510500"},{"name":"旌阳区","value":"510603","parent":"510600"},{"name":"中江县","value":"510623","parent":"510600"},{"name":"罗江县","value":"510626","parent":"510600"},{"name":"广汉市","value":"510681","parent":"510600"},{"name":"什邡市","value":"510682","parent":"510600"},{"name":"绵竹市","value":"510683","parent":"510600"},{"name":"涪城区","value":"510703","parent":"510700"},{"name":"游仙区","value":"510704","parent":"510700"},{"name":"安州区","value":"510705","parent":"510700"},{"name":"三台县","value":"510722","parent":"510700"},{"name":"盐亭县","value":"510723","parent":"510700"},{"name":"梓潼县","value":"510725","parent":"510700"},{"name":"北川羌族自治县","value":"510726","parent":"510700"},{"name":"平武县","value":"510727","parent":"510700"},{"name":"江油市","value":"510781","parent":"510700"},{"name":"利州区","value":"510802","parent":"510800"},{"name":"昭化区","value":"510811","parent":"510800"},{"name":"朝天区","value":"510812","parent":"510800"},{"name":"旺苍县","value":"510821","parent":"510800"},{"name":"青川县","value":"510822","parent":"510800"},{"name":"剑阁县","value":"510823","parent":"510800"},{"name":"苍溪县","value":"510824","parent":"510800"},{"name":"船山区","value":"510903","parent":"510900"},{"name":"安居区","value":"510904","parent":"510900"},{"name":"蓬溪县","value":"510921","parent":"510900"},{"name":"射洪县","value":"510922","parent":"510900"},{"name":"大英县","value":"510923","parent":"510900"},{"name":"市中区","value":"511002","parent":"511000"},{"name":"东兴区","value":"511011","parent":"511000"},{"name":"威远县","value":"511024","parent":"511000"},{"name":"资中县","value":"511025","parent":"511000"},{"name":"隆昌县","value":"511028","parent":"511000"},{"name":"市中区","value":"511102","parent":"511100"},{"name":"沙湾区","value":"511111","parent":"511100"},{"name":"五通桥区","value":"511112","parent":"511100"},{"name":"金口河区","value":"511113","parent":"511100"},{"name":"犍为县","value":"511123","parent":"511100"},{"name":"井研县","value":"511124","parent":"511100"},{"name":"夹江县","value":"511126","parent":"511100"},{"name":"沐川县","value":"511129","parent":"511100"},{"name":"峨边彝族自治县","value":"511132","parent":"511100"},{"name":"马边彝族自治县","value":"511133","parent":"511100"},{"name":"峨眉山市","value":"511181","parent":"511100"},{"name":"顺庆区","value":"511302","parent":"511300"},{"name":"高坪区","value":"511303","parent":"511300"},{"name":"嘉陵区","value":"511304","parent":"511300"},{"name":"南部县","value":"511321","parent":"511300"},{"name":"营山县","value":"511322","parent":"511300"},{"name":"蓬安县","value":"511323","parent":"511300"},{"name":"仪陇县","value":"511324","parent":"511300"},{"name":"西充县","value":"511325","parent":"511300"},{"name":"阆中市","value":"511381","parent":"511300"},{"name":"东坡区","value":"511402","parent":"511400"},{"name":"彭山区","value":"511403","parent":"511400"},{"name":"仁寿县","value":"511421","parent":"511400"},{"name":"洪雅县","value":"511423","parent":"511400"},{"name":"丹棱县","value":"511424","parent":"511400"},{"name":"青神县","value":"511425","parent":"511400"},{"name":"翠屏区","value":"511502","parent":"511500"},{"name":"南溪区","value":"511503","parent":"511500"},{"name":"宜宾县","value":"511521","parent":"511500"},{"name":"江安县","value":"511523","parent":"511500"},{"name":"长宁县","value":"511524","parent":"511500"},{"name":"高县","value":"511525","parent":"511500"},{"name":"珙县","value":"511526","parent":"511500"},{"name":"筠连县","value":"511527","parent":"511500"},{"name":"兴文县","value":"511528","parent":"511500"},{"name":"屏山县","value":"511529","parent":"511500"},{"name":"广安区","value":"511602","parent":"511600"},{"name":"前锋区","value":"511603","parent":"511600"},{"name":"岳池县","value":"511621","parent":"511600"},{"name":"武胜县","value":"511622","parent":"511600"},{"name":"邻水县","value":"511623","parent":"511600"},{"name":"华蓥市","value":"511681","parent":"511600"},{"name":"通川区","value":"511702","parent":"511700"},{"name":"达川区","value":"511703","parent":"511700"},{"name":"宣汉县","value":"511722","parent":"511700"},{"name":"开江县","value":"511723","parent":"511700"},{"name":"大竹县","value":"511724","parent":"511700"},{"name":"渠县","value":"511725","parent":"511700"},{"name":"万源市","value":"511781","parent":"511700"},{"name":"雨城区","value":"511802","parent":"511800"},{"name":"名山区","value":"511803","parent":"511800"},{"name":"荥经县","value":"511822","parent":"511800"},{"name":"汉源县","value":"511823","parent":"511800"},{"name":"石棉县","value":"511824","parent":"511800"},{"name":"天全县","value":"511825","parent":"511800"},{"name":"芦山县","value":"511826","parent":"511800"},{"name":"宝兴县","value":"511827","parent":"511800"},{"name":"巴州区","value":"511902","parent":"511900"},{"name":"恩阳区","value":"511903","parent":"511900"},{"name":"通江县","value":"511921","parent":"511900"},{"name":"南江县","value":"511922","parent":"511900"},{"name":"平昌县","value":"511923","parent":"511900"},{"name":"雁江区","value":"512002","parent":"512000"},{"name":"安岳县","value":"512021","parent":"512000"},{"name":"乐至县","value":"512022","parent":"512000"},{"name":"马尔康市","value":"513201","parent":"513200"},{"name":"汶川县","value":"513221","parent":"513200"},{"name":"理县","value":"513222","parent":"513200"},{"name":"茂县","value":"513223","parent":"513200"},{"name":"松潘县","value":"513224","parent":"513200"},{"name":"九寨沟县","value":"513225","parent":"513200"},{"name":"金川县","value":"513226","parent":"513200"},{"name":"小金县","value":"513227","parent":"513200"},{"name":"黑水县","value":"513228","parent":"513200"},{"name":"壤塘县","value":"513230","parent":"513200"},{"name":"阿坝县","value":"513231","parent":"513200"},{"name":"若尔盖县","value":"513232","parent":"513200"},{"name":"红原县","value":"513233","parent":"513200"},{"name":"康定市","value":"513301","parent":"513300"},{"name":"泸定县","value":"513322","parent":"513300"},{"name":"丹巴县","value":"513323","parent":"513300"},{"name":"九龙县","value":"513324","parent":"513300"},{"name":"雅江县","value":"513325","parent":"513300"},{"name":"道孚县","value":"513326","parent":"513300"},{"name":"炉霍县","value":"513327","parent":"513300"},{"name":"甘孜县","value":"513328","parent":"513300"},{"name":"新龙县","value":"513329","parent":"513300"},{"name":"德格县","value":"513330","parent":"513300"},{"name":"白玉县","value":"513331","parent":"513300"},{"name":"石渠县","value":"513332","parent":"513300"},{"name":"色达县","value":"513333","parent":"513300"},{"name":"理塘县","value":"513334","parent":"513300"},{"name":"巴塘县","value":"513335","parent":"513300"},{"name":"乡城县","value":"513336","parent":"513300"},{"name":"稻城县","value":"513337","parent":"513300"},{"name":"得荣县","value":"513338","parent":"513300"},{"name":"西昌市","value":"513401","parent":"513400"},{"name":"木里藏族自治县","value":"513422","parent":"513400"},{"name":"盐源县","value":"513423","parent":"513400"},{"name":"德昌县","value":"513424","parent":"513400"},{"name":"会理县","value":"513425","parent":"513400"},{"name":"会东县","value":"513426","parent":"513400"},{"name":"宁南县","value":"513427","parent":"513400"},{"name":"普格县","value":"513428","parent":"513400"},{"name":"布拖县","value":"513429","parent":"513400"},{"name":"金阳县","value":"513430","parent":"513400"},{"name":"昭觉县","value":"513431","parent":"513400"},{"name":"喜德县","value":"513432","parent":"513400"},{"name":"冕宁县","value":"513433","parent":"513400"},{"name":"越西县","value":"513434","parent":"513400"},{"name":"甘洛县","value":"513435","parent":"513400"},{"name":"美姑县","value":"513436","parent":"513400"},{"name":"雷波县","value":"513437","parent":"513400"},{"name":"贵阳市","value":"520100","parent":"520000"},{"name":"六盘水市","value":"520200","parent":"520000"},{"name":"遵义市","value":"520300","parent":"520000"},{"name":"安顺市","value":"520400","parent":"520000"},{"name":"毕节市","value":"520500","parent":"520000"},{"name":"铜仁市","value":"520600","parent":"520000"},{"name":"黔西南布依族苗族自治州","value":"522300","parent":"520000"},{"name":"黔东南苗族侗族自治州","value":"522600","parent":"520000"},{"name":"黔南布依族苗族自治州","value":"522700","parent":"520000"},{"name":"南明区","value":"520102","parent":"520100"},{"name":"云岩区","value":"520103","parent":"520100"},{"name":"花溪区","value":"520111","parent":"520100"},{"name":"乌当区","value":"520112","parent":"520100"},{"name":"白云区","value":"520113","parent":"520100"},{"name":"观山湖区","value":"520115","parent":"520100"},{"name":"开阳县","value":"520121","parent":"520100"},{"name":"息烽县","value":"520122","parent":"520100"},{"name":"修文县","value":"520123","parent":"520100"},{"name":"清镇市","value":"520181","parent":"520100"},{"name":"钟山区","value":"520201","parent":"520200"},{"name":"六枝特区","value":"520203","parent":"520200"},{"name":"水城县","value":"520221","parent":"520200"},{"name":"盘县","value":"520222","parent":"520200"},{"name":"红花岗区","value":"520302","parent":"520300"},{"name":"汇川区","value":"520303","parent":"520300"},{"name":"播州区","value":"520304","parent":"520300"},{"name":"桐梓县","value":"520322","parent":"520300"},{"name":"绥阳县","value":"520323","parent":"520300"},{"name":"正安县","value":"520324","parent":"520300"},{"name":"道真仡佬族苗族自治县","value":"520325","parent":"520300"},{"name":"务川仡佬族苗族自治县","value":"520326","parent":"520300"},{"name":"凤冈县","value":"520327","parent":"520300"},{"name":"湄潭县","value":"520328","parent":"520300"},{"name":"余庆县","value":"520329","parent":"520300"},{"name":"习水县","value":"520330","parent":"520300"},{"name":"赤水市","value":"520381","parent":"520300"},{"name":"仁怀市","value":"520382","parent":"520300"},{"name":"西秀区","value":"520402","parent":"520400"},{"name":"平坝区","value":"520403","parent":"520400"},{"name":"普定县","value":"520422","parent":"520400"},{"name":"镇宁布依族苗族自治县","value":"520423","parent":"520400"},{"name":"关岭布依族苗族自治县","value":"520424","parent":"520400"},{"name":"紫云苗族布依族自治县","value":"520425","parent":"520400"},{"name":"七星关区","value":"520502","parent":"520500"},{"name":"大方县","value":"520521","parent":"520500"},{"name":"黔西县","value":"520522","parent":"520500"},{"name":"金沙县","value":"520523","parent":"520500"},{"name":"织金县","value":"520524","parent":"520500"},{"name":"纳雍县","value":"520525","parent":"520500"},{"name":"威宁彝族回族苗族自治县","value":"520526","parent":"520500"},{"name":"赫章县","value":"520527","parent":"520500"},{"name":"碧江区","value":"520602","parent":"520600"},{"name":"万山区","value":"520603","parent":"520600"},{"name":"江口县","value":"520621","parent":"520600"},{"name":"玉屏侗族自治县","value":"520622","parent":"520600"},{"name":"石阡县","value":"520623","parent":"520600"},{"name":"思南县","value":"520624","parent":"520600"},{"name":"印江土家族苗族自治县","value":"520625","parent":"520600"},{"name":"德江县","value":"520626","parent":"520600"},{"name":"沿河土家族自治县","value":"520627","parent":"520600"},{"name":"松桃苗族自治县","value":"520628","parent":"520600"},{"name":"兴义市","value":"522301","parent":"522300"},{"name":"兴仁县","value":"522322","parent":"522300"},{"name":"普安县","value":"522323","parent":"522300"},{"name":"晴隆县","value":"522324","parent":"522300"},{"name":"贞丰县","value":"522325","parent":"522300"},{"name":"望谟县","value":"522326","parent":"522300"},{"name":"册亨县","value":"522327","parent":"522300"},{"name":"安龙县","value":"522328","parent":"522300"},{"name":"凯里市","value":"522601","parent":"522600"},{"name":"黄平县","value":"522622","parent":"522600"},{"name":"施秉县","value":"522623","parent":"522600"},{"name":"三穗县","value":"522624","parent":"522600"},{"name":"镇远县","value":"522625","parent":"522600"},{"name":"岑巩县","value":"522626","parent":"522600"},{"name":"天柱县","value":"522627","parent":"522600"},{"name":"锦屏县","value":"522628","parent":"522600"},{"name":"剑河县","value":"522629","parent":"522600"},{"name":"台江县","value":"522630","parent":"522600"},{"name":"黎平县","value":"522631","parent":"522600"},{"name":"榕江县","value":"522632","parent":"522600"},{"name":"从江县","value":"522633","parent":"522600"},{"name":"雷山县","value":"522634","parent":"522600"},{"name":"麻江县","value":"522635","parent":"522600"},{"name":"丹寨县","value":"522636","parent":"522600"},{"name":"都匀市","value":"522701","parent":"522700"},{"name":"福泉市","value":"522702","parent":"522700"},{"name":"荔波县","value":"522722","parent":"522700"},{"name":"贵定县","value":"522723","parent":"522700"},{"name":"瓮安县","value":"522725","parent":"522700"},{"name":"独山县","value":"522726","parent":"522700"},{"name":"平塘县","value":"522727","parent":"522700"},{"name":"罗甸县","value":"522728","parent":"522700"},{"name":"长顺县","value":"522729","parent":"522700"},{"name":"龙里县","value":"522730","parent":"522700"},{"name":"惠水县","value":"522731","parent":"522700"},{"name":"三都水族自治县","value":"522732","parent":"522700"},{"name":"昆明市","value":"530100","parent":"530000"},{"name":"曲靖市","value":"530300","parent":"530000"},{"name":"玉溪市","value":"530400","parent":"530000"},{"name":"保山市","value":"530500","parent":"530000"},{"name":"昭通市","value":"530600","parent":"530000"},{"name":"丽江市","value":"530700","parent":"530000"},{"name":"普洱市","value":"530800","parent":"530000"},{"name":"临沧市","value":"530900","parent":"530000"},{"name":"楚雄彝族自治州","value":"532300","parent":"530000"},{"name":"红河哈尼族彝族自治州","value":"532500","parent":"530000"},{"name":"文山壮族苗族自治州","value":"532600","parent":"530000"},{"name":"西双版纳傣族自治州","value":"532800","parent":"530000"},{"name":"大理白族自治州","value":"532900","parent":"530000"},{"name":"德宏傣族景颇族自治州","value":"533100","parent":"530000"},{"name":"怒江傈僳族自治州","value":"533300","parent":"530000"},{"name":"迪庆藏族自治州","value":"533400","parent":"530000"},{"name":"五华区","value":"530102","parent":"530100"},{"name":"盘龙区","value":"530103","parent":"530100"},{"name":"官渡区","value":"530111","parent":"530100"},{"name":"西山区","value":"530112","parent":"530100"},{"name":"东川区","value":"530113","parent":"530100"},{"name":"呈贡区","value":"530114","parent":"530100"},{"name":"晋宁县","value":"530122","parent":"530100"},{"name":"富民县","value":"530124","parent":"530100"},{"name":"宜良县","value":"530125","parent":"530100"},{"name":"石林彝族自治县","value":"530126","parent":"530100"},{"name":"嵩明县","value":"530127","parent":"530100"},{"name":"禄劝彝族苗族自治县","value":"530128","parent":"530100"},{"name":"寻甸回族彝族自治县","value":"530129","parent":"530100"},{"name":"安宁市","value":"530181","parent":"530100"},{"name":"麒麟区","value":"530302","parent":"530300"},{"name":"沾益区","value":"530303","parent":"530300"},{"name":"马龙县","value":"530321","parent":"530300"},{"name":"陆良县","value":"530322","parent":"530300"},{"name":"师宗县","value":"530323","parent":"530300"},{"name":"罗平县","value":"530324","parent":"530300"},{"name":"富源县","value":"530325","parent":"530300"},{"name":"会泽县","value":"530326","parent":"530300"},{"name":"宣威市","value":"530381","parent":"530300"},{"name":"红塔区","value":"530402","parent":"530400"},{"name":"江川区","value":"530403","parent":"530400"},{"name":"澄江县","value":"530422","parent":"530400"},{"name":"通海县","value":"530423","parent":"530400"},{"name":"华宁县","value":"530424","parent":"530400"},{"name":"易门县","value":"530425","parent":"530400"},{"name":"峨山彝族自治县","value":"530426","parent":"530400"},{"name":"新平彝族傣族自治县","value":"530427","parent":"530400"},{"name":"元江哈尼族彝族傣族自治县","value":"530428","parent":"530400"},{"name":"隆阳区","value":"530502","parent":"530500"},{"name":"施甸县","value":"530521","parent":"530500"},{"name":"龙陵县","value":"530523","parent":"530500"},{"name":"昌宁县","value":"530524","parent":"530500"},{"name":"腾冲市","value":"530581","parent":"530500"},{"name":"昭阳区","value":"530602","parent":"530600"},{"name":"鲁甸县","value":"530621","parent":"530600"},{"name":"巧家县","value":"530622","parent":"530600"},{"name":"盐津县","value":"530623","parent":"530600"},{"name":"大关县","value":"530624","parent":"530600"},{"name":"永善县","value":"530625","parent":"530600"},{"name":"绥江县","value":"530626","parent":"530600"},{"name":"镇雄县","value":"530627","parent":"530600"},{"name":"彝良县","value":"530628","parent":"530600"},{"name":"威信县","value":"530629","parent":"530600"},{"name":"水富县","value":"530630","parent":"530600"},{"name":"古城区","value":"530702","parent":"530700"},{"name":"玉龙纳西族自治县","value":"530721","parent":"530700"},{"name":"永胜县","value":"530722","parent":"530700"},{"name":"华坪县","value":"530723","parent":"530700"},{"name":"宁蒗彝族自治县","value":"530724","parent":"530700"},{"name":"思茅区","value":"530802","parent":"530800"},{"name":"宁洱哈尼族彝族自治县","value":"530821","parent":"530800"},{"name":"墨江哈尼族自治县","value":"530822","parent":"530800"},{"name":"景东彝族自治县","value":"530823","parent":"530800"},{"name":"景谷傣族彝族自治县","value":"530824","parent":"530800"},{"name":"镇沅彝族哈尼族拉祜族自治县","value":"530825","parent":"530800"},{"name":"江城哈尼族彝族自治县","value":"530826","parent":"530800"},{"name":"孟连傣族拉祜族佤族自治县","value":"530827","parent":"530800"},{"name":"澜沧拉祜族自治县","value":"530828","parent":"530800"},{"name":"西盟佤族自治县","value":"530829","parent":"530800"},{"name":"临翔区","value":"530902","parent":"530900"},{"name":"凤庆县","value":"530921","parent":"530900"},{"name":"云县","value":"530922","parent":"530900"},{"name":"永德县","value":"530923","parent":"530900"},{"name":"镇康县","value":"530924","parent":"530900"},{"name":"双江拉祜族佤族布朗族傣族自治县","value":"530925","parent":"530900"},{"name":"耿马傣族佤族自治县","value":"530926","parent":"530900"},{"name":"沧源佤族自治县","value":"530927","parent":"530900"},{"name":"楚雄市","value":"532301","parent":"532300"},{"name":"双柏县","value":"532322","parent":"532300"},{"name":"牟定县","value":"532323","parent":"532300"},{"name":"南华县","value":"532324","parent":"532300"},{"name":"姚安县","value":"532325","parent":"532300"},{"name":"大姚县","value":"532326","parent":"532300"},{"name":"永仁县","value":"532327","parent":"532300"},{"name":"元谋县","value":"532328","parent":"532300"},{"name":"武定县","value":"532329","parent":"532300"},{"name":"禄丰县","value":"532331","parent":"532300"},{"name":"个旧市","value":"532501","parent":"532500"},{"name":"开远市","value":"532502","parent":"532500"},{"name":"蒙自市","value":"532503","parent":"532500"},{"name":"弥勒市","value":"532504","parent":"532500"},{"name":"屏边苗族自治县","value":"532523","parent":"532500"},{"name":"建水县","value":"532524","parent":"532500"},{"name":"石屏县","value":"532525","parent":"532500"},{"name":"泸西县","value":"532527","parent":"532500"},{"name":"元阳县","value":"532528","parent":"532500"},{"name":"红河县","value":"532529","parent":"532500"},{"name":"金平苗族瑶族傣族自治县","value":"532530","parent":"532500"},{"name":"绿春县","value":"532531","parent":"532500"},{"name":"河口瑶族自治县","value":"532532","parent":"532500"},{"name":"文山市","value":"532601","parent":"532600"},{"name":"砚山县","value":"532622","parent":"532600"},{"name":"西畴县","value":"532623","parent":"532600"},{"name":"麻栗坡县","value":"532624","parent":"532600"},{"name":"马关县","value":"532625","parent":"532600"},{"name":"丘北县","value":"532626","parent":"532600"},{"name":"广南县","value":"532627","parent":"532600"},{"name":"富宁县","value":"532628","parent":"532600"},{"name":"景洪市","value":"532801","parent":"532800"},{"name":"勐海县","value":"532822","parent":"532800"},{"name":"勐腊县","value":"532823","parent":"532800"},{"name":"大理市","value":"532901","parent":"532900"},{"name":"漾濞彝族自治县","value":"532922","parent":"532900"},{"name":"祥云县","value":"532923","parent":"532900"},{"name":"宾川县","value":"532924","parent":"532900"},{"name":"弥渡县","value":"532925","parent":"532900"},{"name":"南涧彝族自治县","value":"532926","parent":"532900"},{"name":"巍山彝族回族自治县","value":"532927","parent":"532900"},{"name":"永平县","value":"532928","parent":"532900"},{"name":"云龙县","value":"532929","parent":"532900"},{"name":"洱源县","value":"532930","parent":"532900"},{"name":"剑川县","value":"532931","parent":"532900"},{"name":"鹤庆县","value":"532932","parent":"532900"},{"name":"瑞丽市","value":"533102","parent":"533100"},{"name":"芒市","value":"533103","parent":"533100"},{"name":"梁河县","value":"533122","parent":"533100"},{"name":"盈江县","value":"533123","parent":"533100"},{"name":"陇川县","value":"533124","parent":"533100"},{"name":"泸水市","value":"533301","parent":"533300"},{"name":"福贡县","value":"533323","parent":"533300"},{"name":"贡山独龙族怒族自治县","value":"533324","parent":"533300"},{"name":"兰坪白族普米族自治县","value":"533325","parent":"533300"},{"name":"香格里拉市","value":"533401","parent":"533400"},{"name":"德钦县","value":"533422","parent":"533400"},{"name":"维西傈僳族自治县","value":"533423","parent":"533400"},{"name":"拉萨市","value":"540100","parent":"540000"},{"name":"日喀则市","value":"540200","parent":"540000"},{"name":"昌都市","value":"540300","parent":"540000"},{"name":"林芝市","value":"540400","parent":"540000"},{"name":"山南市","value":"540500","parent":"540000"},{"name":"那曲地区","value":"542400","parent":"540000"},{"name":"阿里地区","value":"542500","parent":"540000"},{"name":"城关区","value":"540102","parent":"540100"},{"name":"堆龙德庆区","value":"540103","parent":"540100"},{"name":"林周县","value":"540121","parent":"540100"},{"name":"当雄县","value":"540122","parent":"540100"},{"name":"尼木县","value":"540123","parent":"540100"},{"name":"曲水县","value":"540124","parent":"540100"},{"name":"达孜县","value":"540126","parent":"540100"},{"name":"墨竹工卡县","value":"540127","parent":"540100"},{"name":"桑珠孜区","value":"540202","parent":"540200"},{"name":"南木林县","value":"540221","parent":"540200"},{"name":"江孜县","value":"540222","parent":"540200"},{"name":"定日县","value":"540223","parent":"540200"},{"name":"萨迦县","value":"540224","parent":"540200"},{"name":"拉孜县","value":"540225","parent":"540200"},{"name":"昂仁县","value":"540226","parent":"540200"},{"name":"谢通门县","value":"540227","parent":"540200"},{"name":"白朗县","value":"540228","parent":"540200"},{"name":"仁布县","value":"540229","parent":"540200"},{"name":"康马县","value":"540230","parent":"540200"},{"name":"定结县","value":"540231","parent":"540200"},{"name":"仲巴县","value":"540232","parent":"540200"},{"name":"亚东县","value":"540233","parent":"540200"},{"name":"吉隆县","value":"540234","parent":"540200"},{"name":"聂拉木县","value":"540235","parent":"540200"},{"name":"萨嘎县","value":"540236","parent":"540200"},{"name":"岗巴县","value":"540237","parent":"540200"},{"name":"卡若区","value":"540302","parent":"540300"},{"name":"江达县","value":"540321","parent":"540300"},{"name":"贡觉县","value":"540322","parent":"540300"},{"name":"类乌齐县","value":"540323","parent":"540300"},{"name":"丁青县","value":"540324","parent":"540300"},{"name":"察雅县","value":"540325","parent":"540300"},{"name":"八宿县","value":"540326","parent":"540300"},{"name":"左贡县","value":"540327","parent":"540300"},{"name":"芒康县","value":"540328","parent":"540300"},{"name":"洛隆县","value":"540329","parent":"540300"},{"name":"边坝县","value":"540330","parent":"540300"},{"name":"巴宜区","value":"540402","parent":"540400"},{"name":"工布江达县","value":"540421","parent":"540400"},{"name":"米林县","value":"540422","parent":"540400"},{"name":"墨脱县","value":"540423","parent":"540400"},{"name":"波密县","value":"540424","parent":"540400"},{"name":"察隅县","value":"540425","parent":"540400"},{"name":"朗县","value":"540426","parent":"540400"},{"name":"乃东区","value":"540502","parent":"540500"},{"name":"扎囊县","value":"540521","parent":"540500"},{"name":"贡嘎县","value":"540522","parent":"540500"},{"name":"桑日县","value":"540523","parent":"540500"},{"name":"琼结县","value":"540524","parent":"540500"},{"name":"曲松县","value":"540525","parent":"540500"},{"name":"措美县","value":"540526","parent":"540500"},{"name":"洛扎县","value":"540527","parent":"540500"},{"name":"加查县","value":"540528","parent":"540500"},{"name":"隆子县","value":"540529","parent":"540500"},{"name":"错那县","value":"540530","parent":"540500"},{"name":"浪卡子县","value":"540531","parent":"540500"},{"name":"那曲县","value":"542421","parent":"542400"},{"name":"嘉黎县","value":"542422","parent":"542400"},{"name":"比如县","value":"542423","parent":"542400"},{"name":"聂荣县","value":"542424","parent":"542400"},{"name":"安多县","value":"542425","parent":"542400"},{"name":"申扎县","value":"542426","parent":"542400"},{"name":"索县","value":"542427","parent":"542400"},{"name":"班戈县","value":"542428","parent":"542400"},{"name":"巴青县","value":"542429","parent":"542400"},{"name":"尼玛县","value":"542430","parent":"542400"},{"name":"双湖县","value":"542431","parent":"542400"},{"name":"普兰县","value":"542521","parent":"542500"},{"name":"札达县","value":"542522","parent":"542500"},{"name":"噶尔县","value":"542523","parent":"542500"},{"name":"日土县","value":"542524","parent":"542500"},{"name":"革吉县","value":"542525","parent":"542500"},{"name":"改则县","value":"542526","parent":"542500"},{"name":"措勤县","value":"542527","parent":"542500"},{"name":"西安市","value":"610100","parent":"610000"},{"name":"铜川市","value":"610200","parent":"610000"},{"name":"宝鸡市","value":"610300","parent":"610000"},{"name":"咸阳市","value":"610400","parent":"610000"},{"name":"渭南市","value":"610500","parent":"610000"},{"name":"延安市","value":"610600","parent":"610000"},{"name":"汉中市","value":"610700","parent":"610000"},{"name":"榆林市","value":"610800","parent":"610000"},{"name":"安康市","value":"610900","parent":"610000"},{"name":"商洛市","value":"611000","parent":"610000"},{"name":"新城区","value":"610102","parent":"610100"},{"name":"碑林区","value":"610103","parent":"610100"},{"name":"莲湖区","value":"610104","parent":"610100"},{"name":"灞桥区","value":"610111","parent":"610100"},{"name":"未央区","value":"610112","parent":"610100"},{"name":"雁塔区","value":"610113","parent":"610100"},{"name":"阎良区","value":"610114","parent":"610100"},{"name":"临潼区","value":"610115","parent":"610100"},{"name":"长安区","value":"610116","parent":"610100"},{"name":"高陵区","value":"610117","parent":"610100"},{"name":"蓝田县","value":"610122","parent":"610100"},{"name":"周至县","value":"610124","parent":"610100"},{"name":"户县","value":"610125","parent":"610100"},{"name":"王益区","value":"610202","parent":"610200"},{"name":"印台区","value":"610203","parent":"610200"},{"name":"耀州区","value":"610204","parent":"610200"},{"name":"宜君县","value":"610222","parent":"610200"},{"name":"渭滨区","value":"610302","parent":"610300"},{"name":"金台区","value":"610303","parent":"610300"},{"name":"陈仓区","value":"610304","parent":"610300"},{"name":"凤翔县","value":"610322","parent":"610300"},{"name":"岐山县","value":"610323","parent":"610300"},{"name":"扶风县","value":"610324","parent":"610300"},{"name":"眉县","value":"610326","parent":"610300"},{"name":"陇县","value":"610327","parent":"610300"},{"name":"千阳县","value":"610328","parent":"610300"},{"name":"麟游县","value":"610329","parent":"610300"},{"name":"凤县","value":"610330","parent":"610300"},{"name":"太白县","value":"610331","parent":"610300"},{"name":"秦都区","value":"610402","parent":"610400"},{"name":"杨陵区","value":"610403","parent":"610400"},{"name":"渭城区","value":"610404","parent":"610400"},{"name":"三原县","value":"610422","parent":"610400"},{"name":"泾阳县","value":"610423","parent":"610400"},{"name":"乾县","value":"610424","parent":"610400"},{"name":"礼泉县","value":"610425","parent":"610400"},{"name":"永寿县","value":"610426","parent":"610400"},{"name":"彬县","value":"610427","parent":"610400"},{"name":"长武县","value":"610428","parent":"610400"},{"name":"旬邑县","value":"610429","parent":"610400"},{"name":"淳化县","value":"610430","parent":"610400"},{"name":"武功县","value":"610431","parent":"610400"},{"name":"兴平市","value":"610481","parent":"610400"},{"name":"临渭区","value":"610502","parent":"610500"},{"name":"华州区","value":"610503","parent":"610500"},{"name":"潼关县","value":"610522","parent":"610500"},{"name":"大荔县","value":"610523","parent":"610500"},{"name":"合阳县","value":"610524","parent":"610500"},{"name":"澄城县","value":"610525","parent":"610500"},{"name":"蒲城县","value":"610526","parent":"610500"},{"name":"白水县","value":"610527","parent":"610500"},{"name":"富平县","value":"610528","parent":"610500"},{"name":"韩城市","value":"610581","parent":"610500"},{"name":"华阴市","value":"610582","parent":"610500"},{"name":"宝塔区","value":"610602","parent":"610600"},{"name":"安塞区","value":"610603","parent":"610600"},{"name":"延长县","value":"610621","parent":"610600"},{"name":"延川县","value":"610622","parent":"610600"},{"name":"子长县","value":"610623","parent":"610600"},{"name":"志丹县","value":"610625","parent":"610600"},{"name":"吴起县","value":"610626","parent":"610600"},{"name":"甘泉县","value":"610627","parent":"610600"},{"name":"富县","value":"610628","parent":"610600"},{"name":"洛川县","value":"610629","parent":"610600"},{"name":"宜川县","value":"610630","parent":"610600"},{"name":"黄龙县","value":"610631","parent":"610600"},{"name":"黄陵县","value":"610632","parent":"610600"},{"name":"汉台区","value":"610702","parent":"610700"},{"name":"南郑县","value":"610721","parent":"610700"},{"name":"城固县","value":"610722","parent":"610700"},{"name":"洋县","value":"610723","parent":"610700"},{"name":"西乡县","value":"610724","parent":"610700"},{"name":"勉县","value":"610725","parent":"610700"},{"name":"宁强县","value":"610726","parent":"610700"},{"name":"略阳县","value":"610727","parent":"610700"},{"name":"镇巴县","value":"610728","parent":"610700"},{"name":"留坝县","value":"610729","parent":"610700"},{"name":"佛坪县","value":"610730","parent":"610700"},{"name":"榆阳区","value":"610802","parent":"610800"},{"name":"横山区","value":"610803","parent":"610800"},{"name":"神木县","value":"610821","parent":"610800"},{"name":"府谷县","value":"610822","parent":"610800"},{"name":"靖边县","value":"610824","parent":"610800"},{"name":"定边县","value":"610825","parent":"610800"},{"name":"绥德县","value":"610826","parent":"610800"},{"name":"米脂县","value":"610827","parent":"610800"},{"name":"佳县","value":"610828","parent":"610800"},{"name":"吴堡县","value":"610829","parent":"610800"},{"name":"清涧县","value":"610830","parent":"610800"},{"name":"子洲县","value":"610831","parent":"610800"},{"name":"汉滨区","value":"610902","parent":"610900"},{"name":"汉阴县","value":"610921","parent":"610900"},{"name":"石泉县","value":"610922","parent":"610900"},{"name":"宁陕县","value":"610923","parent":"610900"},{"name":"紫阳县","value":"610924","parent":"610900"},{"name":"岚皋县","value":"610925","parent":"610900"},{"name":"平利县","value":"610926","parent":"610900"},{"name":"镇坪县","value":"610927","parent":"610900"},{"name":"旬阳县","value":"610928","parent":"610900"},{"name":"白河县","value":"610929","parent":"610900"},{"name":"商州区","value":"611002","parent":"611000"},{"name":"洛南县","value":"611021","parent":"611000"},{"name":"丹凤县","value":"611022","parent":"611000"},{"name":"商南县","value":"611023","parent":"611000"},{"name":"山阳县","value":"611024","parent":"611000"},{"name":"镇安县","value":"611025","parent":"611000"},{"name":"柞水县","value":"611026","parent":"611000"},{"name":"兰州市","value":"620100","parent":"620000"},{"name":"嘉峪关市","value":"620200","parent":"620000"},{"name":"金昌市","value":"620300","parent":"620000"},{"name":"白银市","value":"620400","parent":"620000"},{"name":"天水市","value":"620500","parent":"620000"},{"name":"武威市","value":"620600","parent":"620000"},{"name":"张掖市","value":"620700","parent":"620000"},{"name":"平凉市","value":"620800","parent":"620000"},{"name":"酒泉市","value":"620900","parent":"620000"},{"name":"庆阳市","value":"621000","parent":"620000"},{"name":"定西市","value":"621100","parent":"620000"},{"name":"陇南市","value":"621200","parent":"620000"},{"name":"临夏回族自治州","value":"622900","parent":"620000"},{"name":"甘南藏族自治州","value":"623000","parent":"620000"},{"name":"城关区","value":"620102","parent":"620100"},{"name":"七里河区","value":"620103","parent":"620100"},{"name":"西固区","value":"620104","parent":"620100"},{"name":"安宁区","value":"620105","parent":"620100"},{"name":"红古区","value":"620111","parent":"620100"},{"name":"永登县","value":"620121","parent":"620100"},{"name":"皋兰县","value":"620122","parent":"620100"},{"name":"榆中县","value":"620123","parent":"620100"},{"name":"金川区","value":"620302","parent":"620300"},{"name":"永昌县","value":"620321","parent":"620300"},{"name":"白银区","value":"620402","parent":"620400"},{"name":"平川区","value":"620403","parent":"620400"},{"name":"靖远县","value":"620421","parent":"620400"},{"name":"会宁县","value":"620422","parent":"620400"},{"name":"景泰县","value":"620423","parent":"620400"},{"name":"秦州区","value":"620502","parent":"620500"},{"name":"麦积区","value":"620503","parent":"620500"},{"name":"清水县","value":"620521","parent":"620500"},{"name":"秦安县","value":"620522","parent":"620500"},{"name":"甘谷县","value":"620523","parent":"620500"},{"name":"武山县","value":"620524","parent":"620500"},{"name":"张家川回族自治县","value":"620525","parent":"620500"},{"name":"凉州区","value":"620602","parent":"620600"},{"name":"民勤县","value":"620621","parent":"620600"},{"name":"古浪县","value":"620622","parent":"620600"},{"name":"天祝藏族自治县","value":"620623","parent":"620600"},{"name":"甘州区","value":"620702","parent":"620700"},{"name":"肃南裕固族自治县","value":"620721","parent":"620700"},{"name":"民乐县","value":"620722","parent":"620700"},{"name":"临泽县","value":"620723","parent":"620700"},{"name":"高台县","value":"620724","parent":"620700"},{"name":"山丹县","value":"620725","parent":"620700"},{"name":"崆峒区","value":"620802","parent":"620800"},{"name":"泾川县","value":"620821","parent":"620800"},{"name":"灵台县","value":"620822","parent":"620800"},{"name":"崇信县","value":"620823","parent":"620800"},{"name":"华亭县","value":"620824","parent":"620800"},{"name":"庄浪县","value":"620825","parent":"620800"},{"name":"静宁县","value":"620826","parent":"620800"},{"name":"肃州区","value":"620902","parent":"620900"},{"name":"金塔县","value":"620921","parent":"620900"},{"name":"瓜州县","value":"620922","parent":"620900"},{"name":"肃北蒙古族自治县","value":"620923","parent":"620900"},{"name":"阿克塞哈萨克族自治县","value":"620924","parent":"620900"},{"name":"玉门市","value":"620981","parent":"620900"},{"name":"敦煌市","value":"620982","parent":"620900"},{"name":"西峰区","value":"621002","parent":"621000"},{"name":"庆城县","value":"621021","parent":"621000"},{"name":"环县","value":"621022","parent":"621000"},{"name":"华池县","value":"621023","parent":"621000"},{"name":"合水县","value":"621024","parent":"621000"},{"name":"正宁县","value":"621025","parent":"621000"},{"name":"宁县","value":"621026","parent":"621000"},{"name":"镇原县","value":"621027","parent":"621000"},{"name":"安定区","value":"621102","parent":"621100"},{"name":"通渭县","value":"621121","parent":"621100"},{"name":"陇西县","value":"621122","parent":"621100"},{"name":"渭源县","value":"621123","parent":"621100"},{"name":"临洮县","value":"621124","parent":"621100"},{"name":"漳县","value":"621125","parent":"621100"},{"name":"岷县","value":"621126","parent":"621100"},{"name":"武都区","value":"621202","parent":"621200"},{"name":"成县","value":"621221","parent":"621200"},{"name":"文县","value":"621222","parent":"621200"},{"name":"宕昌县","value":"621223","parent":"621200"},{"name":"康县","value":"621224","parent":"621200"},{"name":"西和县","value":"621225","parent":"621200"},{"name":"礼县","value":"621226","parent":"621200"},{"name":"徽县","value":"621227","parent":"621200"},{"name":"两当县","value":"621228","parent":"621200"},{"name":"临夏市","value":"622901","parent":"622900"},{"name":"临夏县","value":"622921","parent":"622900"},{"name":"康乐县","value":"622922","parent":"622900"},{"name":"永靖县","value":"622923","parent":"622900"},{"name":"广河县","value":"622924","parent":"622900"},{"name":"和政县","value":"622925","parent":"622900"},{"name":"东乡族自治县","value":"622926","parent":"622900"},{"name":"积石山保安族东乡族撒拉族自治县","value":"622927","parent":"622900"},{"name":"合作市","value":"623001","parent":"623000"},{"name":"临潭县","value":"623021","parent":"623000"},{"name":"卓尼县","value":"623022","parent":"623000"},{"name":"舟曲县","value":"623023","parent":"623000"},{"name":"迭部县","value":"623024","parent":"623000"},{"name":"玛曲县","value":"623025","parent":"623000"},{"name":"碌曲县","value":"623026","parent":"623000"},{"name":"夏河县","value":"623027","parent":"623000"},{"name":"西宁市","value":"630100","parent":"630000"},{"name":"海东市","value":"630200","parent":"630000"},{"name":"海北藏族自治州","value":"632200","parent":"630000"},{"name":"黄南藏族自治州","value":"632300","parent":"630000"},{"name":"海南藏族自治州","value":"632500","parent":"630000"},{"name":"果洛藏族自治州","value":"632600","parent":"630000"},{"name":"玉树藏族自治州","value":"632700","parent":"630000"},{"name":"海西蒙古族藏族自治州","value":"632800","parent":"630000"},{"name":"城东区","value":"630102","parent":"630100"},{"name":"城中区","value":"630103","parent":"630100"},{"name":"城西区","value":"630104","parent":"630100"},{"name":"城北区","value":"630105","parent":"630100"},{"name":"大通回族土族自治县","value":"630121","parent":"630100"},{"name":"湟中县","value":"630122","parent":"630100"},{"name":"湟源县","value":"630123","parent":"630100"},{"name":"乐都区","value":"630202","parent":"630200"},{"name":"平安区","value":"630203","parent":"630200"},{"name":"民和回族土族自治县","value":"630222","parent":"630200"},{"name":"互助土族自治县","value":"630223","parent":"630200"},{"name":"化隆回族自治县","value":"630224","parent":"630200"},{"name":"循化撒拉族自治县","value":"630225","parent":"630200"},{"name":"门源回族自治县","value":"632221","parent":"632200"},{"name":"祁连县","value":"632222","parent":"632200"},{"name":"海晏县","value":"632223","parent":"632200"},{"name":"刚察县","value":"632224","parent":"632200"},{"name":"同仁县","value":"632321","parent":"632300"},{"name":"尖扎县","value":"632322","parent":"632300"},{"name":"泽库县","value":"632323","parent":"632300"},{"name":"河南蒙古族自治县","value":"632324","parent":"632300"},{"name":"共和县","value":"632521","parent":"632500"},{"name":"同德县","value":"632522","parent":"632500"},{"name":"贵德县","value":"632523","parent":"632500"},{"name":"兴海县","value":"632524","parent":"632500"},{"name":"贵南县","value":"632525","parent":"632500"},{"name":"玛沁县","value":"632621","parent":"632600"},{"name":"班玛县","value":"632622","parent":"632600"},{"name":"甘德县","value":"632623","parent":"632600"},{"name":"达日县","value":"632624","parent":"632600"},{"name":"久治县","value":"632625","parent":"632600"},{"name":"玛多县","value":"632626","parent":"632600"},{"name":"玉树市","value":"632701","parent":"632700"},{"name":"杂多县","value":"632722","parent":"632700"},{"name":"称多县","value":"632723","parent":"632700"},{"name":"治多县","value":"632724","parent":"632700"},{"name":"囊谦县","value":"632725","parent":"632700"},{"name":"曲麻莱县","value":"632726","parent":"632700"},{"name":"格尔木市","value":"632801","parent":"632800"},{"name":"德令哈市","value":"632802","parent":"632800"},{"name":"乌兰县","value":"632821","parent":"632800"},{"name":"都兰县","value":"632822","parent":"632800"},{"name":"天峻县","value":"632823","parent":"632800"},{"name":"银川市","value":"640100","parent":"640000"},{"name":"石嘴山市","value":"640200","parent":"640000"},{"name":"吴忠市","value":"640300","parent":"640000"},{"name":"固原市","value":"640400","parent":"640000"},{"name":"中卫市","value":"640500","parent":"640000"},{"name":"兴庆区","value":"640104","parent":"640100"},{"name":"西夏区","value":"640105","parent":"640100"},{"name":"金凤区","value":"640106","parent":"640100"},{"name":"永宁县","value":"640121","parent":"640100"},{"name":"贺兰县","value":"640122","parent":"640100"},{"name":"灵武市","value":"640181","parent":"640100"},{"name":"大武口区","value":"640202","parent":"640200"},{"name":"惠农区","value":"640205","parent":"640200"},{"name":"平罗县","value":"640221","parent":"640200"},{"name":"利通区","value":"640302","parent":"640300"},{"name":"红寺堡区","value":"640303","parent":"640300"},{"name":"盐池县","value":"640323","parent":"640300"},{"name":"同心县","value":"640324","parent":"640300"},{"name":"青铜峡市","value":"640381","parent":"640300"},{"name":"原州区","value":"640402","parent":"640400"},{"name":"西吉县","value":"640422","parent":"640400"},{"name":"隆德县","value":"640423","parent":"640400"},{"name":"泾源县","value":"640424","parent":"640400"},{"name":"彭阳县","value":"640425","parent":"640400"},{"name":"沙坡头区","value":"640502","parent":"640500"},{"name":"中宁县","value":"640521","parent":"640500"},{"name":"海原县","value":"640522","parent":"640500"},{"name":"乌鲁木齐市","value":"650100","parent":"650000"},{"name":"克拉玛依市","value":"650200","parent":"650000"},{"name":"吐鲁番市","value":"650400","parent":"650000"},{"name":"哈密市","value":"650500","parent":"650000"},{"name":"昌吉回族自治州","value":"652300","parent":"650000"},{"name":"博尔塔拉蒙古自治州","value":"652700","parent":"650000"},{"name":"巴音郭楞蒙古自治州","value":"652800","parent":"650000"},{"name":"阿克苏地区","value":"652900","parent":"650000"},{"name":"克孜勒苏柯尔克孜自治州","value":"653000","parent":"650000"},{"name":"喀什地区","value":"653100","parent":"650000"},{"name":"和田地区","value":"653200","parent":"650000"},{"name":"伊犁哈萨克自治州","value":"654000","parent":"650000"},{"name":"塔城地区","value":"654200","parent":"650000"},{"name":"阿勒泰地区","value":"654300","parent":"650000"},{"name":"石河子市","value":"659001","parent":"650000"},{"name":"阿拉尔市","value":"659002","parent":"650000"},{"name":"图木舒克市","value":"659003","parent":"650000"},{"name":"五家渠市","value":"659004","parent":"650000"},{"name":"铁门关市","value":"659006","parent":"650000"},{"name":"天山区","value":"650102","parent":"650100"},{"name":"沙依巴克区","value":"650103","parent":"650100"},{"name":"新市区","value":"650104","parent":"650100"},{"name":"水磨沟区","value":"650105","parent":"650100"},{"name":"头屯河区","value":"650106","parent":"650100"},{"name":"达坂城区","value":"650107","parent":"650100"},{"name":"米东区","value":"650109","parent":"650100"},{"name":"乌鲁木齐县","value":"650121","parent":"650100"},{"name":"独山子区","value":"650202","parent":"650200"},{"name":"克拉玛依区","value":"650203","parent":"650200"},{"name":"白碱滩区","value":"650204","parent":"650200"},{"name":"乌尔禾区","value":"650205","parent":"650200"},{"name":"高昌区","value":"650402","parent":"650400"},{"name":"鄯善县","value":"650421","parent":"650400"},{"name":"托克逊县","value":"650422","parent":"650400"},{"name":"伊州区","value":"650502","parent":"650500"},{"name":"巴里坤哈萨克自治县","value":"650521","parent":"650500"},{"name":"伊吾县","value":"650522","parent":"650500"},{"name":"昌吉市","value":"652301","parent":"652300"},{"name":"阜康市","value":"652302","parent":"652300"},{"name":"呼图壁县","value":"652323","parent":"652300"},{"name":"玛纳斯县","value":"652324","parent":"652300"},{"name":"奇台县","value":"652325","parent":"652300"},{"name":"吉木萨尔县","value":"652327","parent":"652300"},{"name":"木垒哈萨克自治县","value":"652328","parent":"652300"},{"name":"博乐市","value":"652701","parent":"652700"},{"name":"阿拉山口市","value":"652702","parent":"652700"},{"name":"精河县","value":"652722","parent":"652700"},{"name":"温泉县","value":"652723","parent":"652700"},{"name":"库尔勒市","value":"652801","parent":"652800"},{"name":"轮台县","value":"652822","parent":"652800"},{"name":"尉犁县","value":"652823","parent":"652800"},{"name":"若羌县","value":"652824","parent":"652800"},{"name":"且末县","value":"652825","parent":"652800"},{"name":"焉耆回族自治县","value":"652826","parent":"652800"},{"name":"和静县","value":"652827","parent":"652800"},{"name":"和硕县","value":"652828","parent":"652800"},{"name":"博湖县","value":"652829","parent":"652800"},{"name":"阿克苏市","value":"652901","parent":"652900"},{"name":"温宿县","value":"652922","parent":"652900"},{"name":"库车县","value":"652923","parent":"652900"},{"name":"沙雅县","value":"652924","parent":"652900"},{"name":"新和县","value":"652925","parent":"652900"},{"name":"拜城县","value":"652926","parent":"652900"},{"name":"乌什县","value":"652927","parent":"652900"},{"name":"阿瓦提县","value":"652928","parent":"652900"},{"name":"柯坪县","value":"652929","parent":"652900"},{"name":"阿图什市","value":"653001","parent":"653000"},{"name":"阿克陶县","value":"653022","parent":"653000"},{"name":"阿合奇县","value":"653023","parent":"653000"},{"name":"乌恰县","value":"653024","parent":"653000"},{"name":"喀什市","value":"653101","parent":"653100"},{"name":"疏附县","value":"653121","parent":"653100"},{"name":"疏勒县","value":"653122","parent":"653100"},{"name":"英吉沙县","value":"653123","parent":"653100"},{"name":"泽普县","value":"653124","parent":"653100"},{"name":"莎车县","value":"653125","parent":"653100"},{"name":"叶城县","value":"653126","parent":"653100"},{"name":"麦盖提县","value":"653127","parent":"653100"},{"name":"岳普湖县","value":"653128","parent":"653100"},{"name":"伽师县","value":"653129","parent":"653100"},{"name":"巴楚县","value":"653130","parent":"653100"},{"name":"塔什库尔干塔吉克自治县","value":"653131","parent":"653100"},{"name":"和田市","value":"653201","parent":"653200"},{"name":"和田县","value":"653221","parent":"653200"},{"name":"墨玉县","value":"653222","parent":"653200"},{"name":"皮山县","value":"653223","parent":"653200"},{"name":"洛浦县","value":"653224","parent":"653200"},{"name":"策勒县","value":"653225","parent":"653200"},{"name":"于田县","value":"653226","parent":"653200"},{"name":"民丰县","value":"653227","parent":"653200"},{"name":"伊宁市","value":"654002","parent":"654000"},{"name":"奎屯市","value":"654003","parent":"654000"},{"name":"霍尔果斯市","value":"654004","parent":"654000"},{"name":"伊宁县","value":"654021","parent":"654000"},{"name":"察布查尔锡伯自治县","value":"654022","parent":"654000"},{"name":"霍城县","value":"654023","parent":"654000"},{"name":"巩留县","value":"654024","parent":"654000"},{"name":"新源县","value":"654025","parent":"654000"},{"name":"昭苏县","value":"654026","parent":"654000"},{"name":"特克斯县","value":"654027","parent":"654000"},{"name":"尼勒克县","value":"654028","parent":"654000"},{"name":"塔城市","value":"654201","parent":"654200"},{"name":"乌苏市","value":"654202","parent":"654200"},{"name":"额敏县","value":"654221","parent":"654200"},{"name":"沙湾县","value":"654223","parent":"654200"},{"name":"托里县","value":"654224","parent":"654200"},{"name":"裕民县","value":"654225","parent":"654200"},{"name":"和布克赛尔蒙古自治县","value":"654226","parent":"654200"},{"name":"阿勒泰市","value":"654301","parent":"654300"},{"name":"布尔津县","value":"654321","parent":"654300"},{"name":"富蕴县","value":"654322","parent":"654300"},{"name":"福海县","value":"654323","parent":"654300"},{"name":"哈巴河县","value":"654324","parent":"654300"},{"name":"青河县","value":"654325","parent":"654300"},{"name":"吉木乃县","value":"654326","parent":"654300"},{"name":"中西區","value":"810001","parent":"810000"},{"name":"灣仔區","value":"810002","parent":"810000"},{"name":"東區","value":"810003","parent":"810000"},{"name":"南區","value":"810004","parent":"810000"},{"name":"油尖旺區","value":"810005","parent":"810000"},{"name":"深水埗區","value":"810006","parent":"810000"},{"name":"九龍城區","value":"810007","parent":"810000"},{"name":"黃大仙區","value":"810008","parent":"810000"},{"name":"觀塘區","value":"810009","parent":"810000"},{"name":"荃灣區","value":"810010","parent":"810000"},{"name":"屯門區","value":"810011","parent":"810000"},{"name":"元朗區","value":"810012","parent":"810000"},{"name":"北區","value":"810013","parent":"810000"},{"name":"大埔區","value":"810014","parent":"810000"},{"name":"西貢區","value":"810015","parent":"810000"},{"name":"沙田區","value":"810016","parent":"810000"},{"name":"葵青區","value":"810017","parent":"810000"},{"name":"離島區","value":"810018","parent":"810000"},{"name":"花地瑪堂區","value":"820001","parent":"820000"},{"name":"花王堂區","value":"820002","parent":"820000"},{"name":"望德堂區","value":"820003","parent":"820000"},{"name":"大堂區","value":"820004","parent":"820000"},{"name":"風順堂區","value":"820005","parent":"820000"},{"name":"嘉模堂區","value":"820006","parent":"820000"},{"name":"路氹填海區","value":"820007","parent":"820000"},{"name":"聖方濟各堂區","value":"820008","parent":"820000"},{"name":"--","value":"--","parent":"139000"},{"name":"--","value":"--","parent":"139001"},{"name":"--","value":"--","parent":"139002"},{"name":"--","value":"--","parent":"419000"},{"name":"--","value":"--","parent":"419001"},{"name":"--","value":"--","parent":"429000"},{"name":"--","value":"--","parent":"429004"},{"name":"--","value":"--","parent":"429005"},{"name":"--","value":"--","parent":"429006"},{"name":"--","value":"--","parent":"429021"},{"name":"--","value":"--","parent":"441900"},{"name":"--","value":"--","parent":"442000"},{"name":"--","value":"--","parent":"460300"},{"name":"--","value":"--","parent":"460400"},{"name":"--","value":"--","parent":"469000"},{"name":"--","value":"--","parent":"469001"},{"name":"--","value":"--","parent":"469002"},{"name":"--","value":"--","parent":"469005"},{"name":"--","value":"--","parent":"469006"},{"name":"--","value":"--","parent":"469007"},{"name":"--","value":"--","parent":"469021"},{"name":"--","value":"--","parent":"469022"},{"name":"--","value":"--","parent":"469023"},{"name":"--","value":"--","parent":"469024"},{"name":"--","value":"--","parent":"469025"},{"name":"--","value":"--","parent":"469026"},{"name":"--","value":"--","parent":"469027"},{"name":"--","value":"--","parent":"469028"},{"name":"--","value":"--","parent":"469029"},{"name":"--","value":"--","parent":"469030"},{"name":"--","value":"--","parent":"620200"},{"name":"--","value":"--","parent":"659000"},{"name":"--","value":"--","parent":"659001"},{"name":"--","value":"--","parent":"659002"},{"name":"--","value":"--","parent":"659003"},{"name":"--","value":"--","parent":"659004"},{"name":"--","value":"--","parent":"659006"}]

/***/ }),
/* 301 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/**
https://gist.github.com/JerryC8080/b4005ef5c4902b1ea7a0

电信

2G/3G号段（CDMA2000网络）133、153、180、181、189
4G号段 177、173、190、199

联通

2G号段（GSM网络）130、131、132、155、156
3G上网卡145
3G号段（WCDMA网络）185、186
4G号段 176、185[1]、196

移动

2G号段（GSM网络）有134x（0-8）、135、136、137、138、139、150、151、152、158、159、182、183、184。
3G号段（TD-SCDMA网络）有157、187、188
3G上网卡 147
4G号段 178、197、198
*/

/* harmony default export */ __webpack_exports__["default"] = (function (str) {
  return /^1[3|4|5|6|7|8|9][0-9]{9}$/.test(str)
});


/***/ }),
/* 302 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony default export */ __webpack_exports__["default"] = ({
  bind: function (el, { value }) {
    let onClickOutside = value
    el.handler = function (e) {
      if (el && !el.contains(e.target)) {
        onClickOutside(e)
      }
    }
    document.addEventListener('click', el.handler, true)
  },
  unbind: function (el) {
    document.removeEventListener('click', el.handler, true)
    el.handler = null
  }
});


/***/ }),
/* 303 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div style=\"display:inline-block;\">\n|     <span v-if=\"showTimeString\">{{timeString}}</span>");

/***/ }),
/* 304 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/**
* import { CloseDialogsPlugin } from 'vux'
* Vue.use(CloseDialogsPlugin, router)
*/
/* harmony default export */ __webpack_exports__["default"] = ({
  install (Vue, router) {
    router.beforeEach((to, from, next) => {
      const list = ['alert', 'confirm', 'toast', 'loading', 'datetime']
      list.forEach(one => {
        if (Vue.$vux[one]) {
          Vue.$vux[one].hide && Vue.$vux[one].hide()
        }
      })
      next()
    })
  }
});


/***/ }),
/* 305 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-color-picker\">\n|     <flexbox>");

/***/ }),
/* 306 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony default export */ __webpack_exports__["default"] = ({
  install (Vue, config = {}) {
    if (!Vue.vux) {
      Vue.vux = {
        config
      }
    } else {
      Vue.vux.config = config
    }

    if (typeof window !== 'undefined') {
      window.VUX_CONFIG = config
    }

    Vue.mixin({
      created: function () {
        if (this.$vux) {
          this.$vux.config = config
        } else {
          this.$vux = {
            config
          }
        }
      }
    })
  }
});


/***/ }),
/* 307 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-confirm\">\n|     <x-dialog");

/***/ }),
/* 308 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
throw new Error("Cannot find module \"../../components/confirm\"");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__libs_plugin_helper__ = __webpack_require__(81);



let $vm

const plugin = {
  install (vue, options = {}) {
    const Confirm = vue.extend(__WEBPACK_IMPORTED_MODULE_0__components_confirm___default.a)

    if (!$vm) {
      $vm = new Confirm({
        el: document.createElement('div'),
        propsData: {
          title: ''
        }
      })
      document.body.appendChild($vm.$el)
    }

    const confirm = {
      show (options) {
        if (typeof options === 'object') {
          Object(__WEBPACK_IMPORTED_MODULE_1__libs_plugin_helper__["mergeOptions"])($vm, options)
        }
        if (typeof options === 'object' && (options.onShow || options.onHide)) {
          options.onShow && options.onShow()
        }
        this.$watcher && this.$watcher()
        this.$watcher = $vm.$watch('showValue', (val) => {
          if (!val && options && options.onHide) {
            options.onHide()
          }
        })

        $vm.$off('on-cancel')
        $vm.$off('on-confirm')

        $vm.$on('on-cancel', () => {
          options && options.onCancel && options.onCancel()
        })
        $vm.$on('on-confirm', msg => {
          options && options.onConfirm && options.onConfirm(msg)
        })
        $vm.showValue = true
      },
      setInputValue (val) {
        vue.nextTick(() => {
          setTimeout(() => {
            $vm.setInputValue(val)
          }, 10)
        })
      },
      prompt (placeholder, options) {
        this.show(Object.assign({}, options, {
          placeholder,
          showInput: true
        }))
      },
      hide () {
        $vm.showValue = false
      },
      isVisible () {
        return $vm.showValue
      }
    }

    // all Vux's plugins are included in this.$vux
    if (!vue.$vux) {
      vue.$vux = {
        confirm
      }
    } else {
      vue.$vux.confirm = confirm
    }

    vue.mixin({
      created: function () {
        this.$vux = vue.$vux
      }
    })
  }
}

/* harmony default export */ __webpack_exports__["default"] = (plugin);
const install = plugin.install
/* harmony export (immutable) */ __webpack_exports__["install"] = install;




/***/ }),
/* 309 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <span>{{currentTime}}</span>\n| </template>");

/***/ }),
/* 310 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <script>\n| import Countup from 'countup.js'\n| ");

/***/ }),
/* 311 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__format__ = __webpack_require__(161);


/* harmony default export */ __webpack_exports__["default"] = (function (start, end, format = 'YYYY-MM-DD') {
  let rs = []
  let startTime = new Date(start).getTime()
  let endTime = new Date(end).getTime()

  while (startTime <= endTime) {
    rs.push(Object(__WEBPACK_IMPORTED_MODULE_0__format__["default"])(startTime, format))
    startTime += 24 * 60 * 60 * 1000
  }
  return rs
});


/***/ }),
/* 312 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_datetime_datetimepicker__ = __webpack_require__(313);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_object_assign__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_object_assign___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_object_assign__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_datetime_index_vue__ = __webpack_require__(162);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_datetime_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__components_datetime_index_vue__);


/* just for importing style and avoid less-loader issue */
 // eslint-disable-line

const libs = {
  show: function (options = {}) {
    options = __WEBPACK_IMPORTED_MODULE_1_object_assign___default()({
      destroyOnHide: true,
      isOneInstance: true
    }, options)
    const datetime = libs.datetime = new __WEBPACK_IMPORTED_MODULE_0__components_datetime_datetimepicker__["default"](options)
    datetime.show()
  },
  hide: function () {
    libs.datetime && libs.datetime.hide()
  }
}

/* harmony default export */ __webpack_exports__["default"] = ({
  install (Vue) {
    // inject style
    const _Datetime = Vue.extend(__WEBPACK_IMPORTED_MODULE_2__components_datetime_index_vue__["default"])
    const div = document.createElement('div')
    if (typeof document !== 'undefined') {
      let $vm = new _Datetime({
        el: div
      })
      $vm.$el.style.display = 'none'
      $vm.$el.className += ' vux-datetime-style-inject'
      document.body.appendChild($vm.$el)
    }

    if (!Vue.$vux) {
      Vue.$vux = {
        datetime: libs
      }
    } else {
      Vue.$vux.datetime = libs
    }

    Vue.mixin({
      created: function () {
        this.$vux = Vue.$vux
      }
    })
  }
});


/***/ }),
/* 313 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__picker_scroller__ = __webpack_require__(314);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util__ = __webpack_require__(318);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__makeData__ = __webpack_require__(320);




const isBrowser = typeof window === 'object'

const MASK_TEMPLATE = '<div class="dp-mask"></div>'

const TEMPLATE = `<div class="dp-container">
  <div class="dp-header">
    <div class="dp-item dp-left vux-datetime-cancel" data-role="cancel">cancel</div>
    <div class="dp-item vux-datetime-clear" data-role="clear"></div>
    <div class="dp-item dp-right vux-datetime-confirm" data-role="confirm">done</div>
  </div>
  <div class="dp-content">
    <div class="dp-item" data-role="year"></div>
    <div class="dp-item" data-role="month"></div>
    <div class="dp-item" data-role="day"></div>
    <div class="dp-item" data-role="noon"></div>
    <div class="dp-item" data-role="hour"></div>
    <div class="dp-item" data-role="minute"></div>
  </div>
</div>`

const SHOW_ANIMATION_TIME = 200
const SHOW_CONTAINER_TIME = 300

const TYPE_MAP = {
  year: ['YYYY'],
  month: ['MM', 'M'],
  day: ['DD', 'D'],
  hour: ['HH', 'H'],
  minute: ['mm', 'm'],
  noon: ['A']
}

let MASK = null

let CURRENT_PICKER

const NOW = new Date()

const DEFAULT_CONFIG = {
  template: TEMPLATE,
  trigger: null,
  output: null,
  currentYear: NOW.getFullYear(),
  currentMonth: NOW.getMonth() + 1,
  minYear: 2000,
  maxYear: 2030,
  minHour: 0,
  maxHour: 23,
  hourList: null,
  minuteList: null,
  startDate: null,
  endDate: null,
  yearRow: '{value}',
  monthRow: '{value}',
  dayRow: '{value}',
  noonRow: '{value}',
  hourRow: '{value}',
  minuteRow: '{value}',
  format: 'YYYY-MM-DD',
  value: NOW.getFullYear() + '-' + (NOW.getMonth() + 1) + '-' + NOW.getDate(),
  onSelect () {},
  onConfirm () {},
  onClear () {},
  onShow () {},
  onHide () {},
  confirmText: 'ok',
  clearText: '',
  cancelText: 'cancel',
  destroyOnHide: false,
  renderInline: false,
  computeHoursFunction: null,
  computeDaysFunction: null,
  isOneInstance: false,
  orderMap: {}
}

function renderScroller (el, data, value, fn) {
  data = data.map(one => {
    one.value = one.value + ''
    return one
  })
  return new __WEBPACK_IMPORTED_MODULE_0__picker_scroller__["default"](el, {
    data,
    defaultValue: value + '',
    onSelect: fn
  })
}

function showMask () {
  if (!isBrowser) {
    return
  }

  if (!MASK) {
    MASK = Object(__WEBPACK_IMPORTED_MODULE_1__util__["toElement"])(MASK_TEMPLATE)
    document.body.appendChild(MASK)

    MASK.addEventListener('click', function () {
      CURRENT_PICKER && CURRENT_PICKER.hide('cancel')
    }, false)
    MASK.addEventListener('touchmove', function (e) {
      e.preventDefault()
    }, false)
  }

  MASK.style.display = 'block'

  setTimeout(function () {
    MASK && (MASK.style.opacity = 0.5)
  }, 0)
}

function hideMask () {
  if (!MASK) {
    return
  }

  MASK.style.opacity = 0

  setTimeout(function () {
    MASK && (MASK.style.display = 'none')
  }, SHOW_ANIMATION_TIME)
}

function DatetimePicker (config) {
  const self = this
  self.config = {}
  self.value = config.value || ''
  Object(__WEBPACK_IMPORTED_MODULE_1__util__["each"])(DEFAULT_CONFIG, function (key, val) {
    self.config[key] = config[key] || val
  })

  this.renderInline = self.config.renderInline

  if (config.defaultSelectedValue && !config.value) {
    self.config.value = config.defaultSelectedValue
  }

  if (typeof this.config.startDate === 'string') {
    this.config.startDate = new Date(this.config.startDate.replace(/-/g, '/'))
  }

  if (typeof this.config.endDate === 'string') {
    this.config.endDate = new Date(this.config.endDate.replace(/-/g, '/'))
  }

  if (this.config.startDate && !this.config.endDate) {
    this.config.endDate = new Date('2030/12/31')
  }

  if (!this.config.startDate && this.config.endDate) {
    this.config.startDate = new Date(`${this.config.minYear}/01/01`)
  }

  this.reMakeData = !!this.config.startDate && !!this.config.endDate

  if (!this.renderInline) {
    let trigger = self.config.trigger

    this.triggerHandler = function (e) {
      e.preventDefault()
      self.show(self.value)
    }
    if (trigger && isBrowser) {
      trigger = self.trigger = Object(__WEBPACK_IMPORTED_MODULE_1__util__["getElement"])(trigger)
      this.trigger = trigger
      this.trigger && this.trigger.addEventListener('click', this.triggerHandler, false)
    }
  }
}

DatetimePicker.prototype = {

  _show (newValueMap) {
    const self = this
    self._setText()
    self.container.style.display = 'block'

    if (this.renderInline) {
      self.container.classList.add('vux-datetime-view')
    }

    Object(__WEBPACK_IMPORTED_MODULE_1__util__["each"])(TYPE_MAP, function (type) {
      self[type + 'Scroller'] && self[type + 'Scroller'].select(type === 'noon' ? newValueMap[type] : Object(__WEBPACK_IMPORTED_MODULE_1__util__["trimZero"])(newValueMap[type]), false)
    })

    setTimeout(function () {
      self.container.style['-webkit-transform'] = 'translateY(0)'
      self.container.style.transform = 'translateY(0)'
    }, 0)
  },
  show (value) {
    if (!isBrowser) {
      return
    }

    const self = this
    const config = self.config
    if (config.isOneInstance) {
      if (document.querySelector('#vux-datetime-instance')) {
        return
      }
      self.willShow = true
    }

    CURRENT_PICKER = self
    const valueMap = self.valueMap = Object(__WEBPACK_IMPORTED_MODULE_1__util__["parseDate"])(config.format, value || config.value)
    let newValueMap = {}

    Object(__WEBPACK_IMPORTED_MODULE_1__util__["each"])(TYPE_MAP, function (type, list) {
      newValueMap[type] = list.length === 1 ? valueMap[list[0]] : (valueMap[list[0]] || valueMap[list[1]])
    })

    if (self.container) {
      self._show(newValueMap)
    } else {
      let template = config.template
      for (let i in config.orderMap) {
        template = template.replace(`data-role="${i}"`, `data-role="${i}" style="order:${config.orderMap[i]}"`)
      }

      const container = self.container = Object(__WEBPACK_IMPORTED_MODULE_1__util__["toElement"])(template)
      if (config.isOneInstance) {
        container.id = 'vux-datetime-instance'
      }
      if (!self.renderInline) {
        document.body.appendChild(container)

        self.container.style.display = 'block'
      } else {
        document.querySelector(self.config.trigger).appendChild(container)
      }

      Object(__WEBPACK_IMPORTED_MODULE_1__util__["each"])(TYPE_MAP, function (type) {
        const div = self.find('[data-role=' + type + ']')
        if (newValueMap[type] === undefined) {
          Object(__WEBPACK_IMPORTED_MODULE_1__util__["removeElement"])(div)
          return
        }
        let data
        if (type === 'day') {
          data = self._makeData(type, Object(__WEBPACK_IMPORTED_MODULE_1__util__["trimZero"])(newValueMap.year), Object(__WEBPACK_IMPORTED_MODULE_1__util__["trimZero"])(newValueMap.month))
        } else if (type === 'hour') {
          data = self._makeData(type, Object(__WEBPACK_IMPORTED_MODULE_1__util__["trimZero"])(newValueMap.year), Object(__WEBPACK_IMPORTED_MODULE_1__util__["trimZero"])(newValueMap.month), Object(__WEBPACK_IMPORTED_MODULE_1__util__["trimZero"])(newValueMap.day))
        } else {
          data = self._makeData(type)
        }

        self[type + 'Scroller'] = renderScroller(div, data, Object(__WEBPACK_IMPORTED_MODULE_1__util__["trimZero"])(newValueMap[type]), function (currentValue) {
          setTimeout(function () {
            config.onSelect.call(self, type, currentValue, self.getValue())
          }, 0)
          if (type === 'year' || type === 'month' || type === 'day') {
            self.hourScroller && self._setHourScroller(self.yearScroller.value, self.monthScroller.value, self.dayScroller.value, self.hourScroller.value)
          }
          let currentDay
          if (type === 'year') {
            const currentMonth = self.monthScroller ? self.monthScroller.value : config.currentMonth
            self._setMonthScroller(currentValue, currentMonth)
            if (self.dayScroller) {
              currentDay = self.dayScroller.value
              self._setDayScroller(currentValue, currentMonth, currentDay)
            }
          } else if (type === 'month') {
            const currentYear = self.yearScroller ? self.yearScroller.value : config.currentYear
            if (self.dayScroller) {
              currentDay = self.dayScroller.value
              self._setDayScroller(currentYear, currentValue, currentDay)
            }
          }
        })
      })

      if (!self.renderText && !self.renderInline) {
        if (self.config.confirmText) {
          self.find('[data-role=confirm]').innerText = self.config.confirmText
        }

        if (self.config.cancelText) {
          self.find('[data-role=cancel]').innerText = self.config.cancelText
        }
        if (self.config.clearText) {
          self.find('[data-role=clear]').innerText = self.config.clearText
        }
        self.renderText = true
      }

      this._show(newValueMap)

      self.find('[data-role=cancel]').addEventListener('click', function (e) {
        e.preventDefault()
        self.hide('cancel')
      }, false)

      self.find('[data-role=confirm]').addEventListener('click', function (e) {
        e.preventDefault()
        self.confirm()
      }, false)

      if (self.config.clearText) {
        self.find('[data-role=clear]').addEventListener('click', function (e) {
          e.preventDefault()
          self.clear()
        }, false)
      }
    }

    if (!this.renderInline) {
      showMask()
      config.onShow.call(self)
    }
  },

  _setText () {
    if (typeof V_LOCALE !== 'undefined' && V_LOCALE === 'MULTI' && !this.config.renderInline) { // eslint-disable-line
      const trigger = this.trigger
      if (trigger) {
        const confirmText = trigger.getAttribute('data-confirm-text')
        const cancelText = trigger.getAttribute('data-cancel-text')
        this.find('[data-role=confirm]').innerText = confirmText
        this.find('[data-role=cancel]').innerText = cancelText
      }
    }
  },

  _makeData (type, year, month, day) {
    const config = this.config
    const valueMap = this.valueMap
    const list = TYPE_MAP[type]
    let data = []
    let min
    let max

    if (type === 'year') {
      min = config.minYear
      max = config.maxYear
      if (this.reMakeData) {
        const { minYear, maxYear } = Object(__WEBPACK_IMPORTED_MODULE_2__makeData__["getYears"])(this.config.startDate, this.config.endDate)
        min = minYear
        max = maxYear
      }
    } else if (type === 'month') {
      min = 1
      max = 12
      if (this.reMakeData) {
        const { minMonth, maxMonth } = Object(__WEBPACK_IMPORTED_MODULE_2__makeData__["getMonths"])(this.config.startDate, this.config.endDate, this.yearScroller.value * 1)
        min = Math.max(min, minMonth)
        max = Math.min(max, maxMonth)
      }
    } else if (type === 'day') {
      min = 1
      max = Object(__WEBPACK_IMPORTED_MODULE_1__util__["getMaxDay"])(year, month)
      if (this.reMakeData) {
        const { minDay, maxDay } = Object(__WEBPACK_IMPORTED_MODULE_2__makeData__["getDays"])(this.config.startDate, this.config.endDate, this.yearScroller.value * 1, this.monthScroller.value * 1)
        min = Math.max(min, minDay)
        max = Math.min(max, maxDay)
      }
    } else if (type === 'hour') {
      min = this.config.minHour
      max = this.config.maxHour
    } else if (type === 'minute') {
      min = 0
      max = 59
    }
    for (let i = min; i <= max; i++) {
      let name
      if (type === 'year') {
        name = Object(__WEBPACK_IMPORTED_MODULE_1__util__["parseRow"])(config.yearRow, i)
      } else {
        const val = valueMap[list[0]] ? Object(__WEBPACK_IMPORTED_MODULE_1__util__["addZero"])(i) : i
        name = Object(__WEBPACK_IMPORTED_MODULE_1__util__["parseRow"])(config[type + 'Row'], val)
      }
      data.push({
        name: name,
        value: i
      })
    }

    if (type === 'noon') {
      data.push({
        name: '上午',
        value: 'AM'
      })
      data.push({
        name: '下午',
        value: 'PM'
      })
    }

    if (type === 'hour' && this.config.hourList) {
      data = this.config.hourList.map(hour => {
        return {
          name: Object(__WEBPACK_IMPORTED_MODULE_1__util__["parseRow"])(config['hourRow'], hour),
          value: Number(hour)
        }
      })
    }

    if (type === 'day' && this.config.computeDaysFunction) {
      const rs = this.config.computeDaysFunction({
        year,
        month,
        min,
        max
      }, __WEBPACK_IMPORTED_MODULE_1__util__["generateRange"])
      if (rs) {
        data = rs.map(day => {
          return {
            name: Object(__WEBPACK_IMPORTED_MODULE_1__util__["parseRow"])(config['dayRow'], Object(__WEBPACK_IMPORTED_MODULE_1__util__["addZero"])(day)),
            value: Number(day)
          }
        })
      }
    }

    if (type === 'hour' && this.config.computeHoursFunction) {
      const isTodayVal = Object(__WEBPACK_IMPORTED_MODULE_1__util__["isToday"])(new Date(`${year}/${month}/${day}`), new Date())
      const rs = this.config.computeHoursFunction(`${year}-${month}-${day}`, isTodayVal, __WEBPACK_IMPORTED_MODULE_1__util__["generateRange"])
      data = rs.map(hour => {
        // #2296
        return {
          name: Object(__WEBPACK_IMPORTED_MODULE_1__util__["parseRow"])(config['hourRow'], hour),
          value: Number(hour)
        }
      })
    }

    if (type === 'minute' && this.config.minuteList) {
      data = this.config.minuteList.map(minute => {
        return {
          name: Object(__WEBPACK_IMPORTED_MODULE_1__util__["parseRow"])(config['minuteRow'], minute),
          value: Number(minute)
        }
      })
    }
    return data
  },

  // after year change
  _setMonthScroller (currentValue, month) {
    if (!this.monthScroller) {
      return
    }
    const self = this
    this.monthScroller.destroy()
    const div = self.find('[data-role=month]')
    self.monthScroller = renderScroller(div, self._makeData('month'), month, function (currentValue) {
      self.config.onSelect.call(self, 'month', currentValue, self.getValue())
      const currentYear = self.yearScroller ? self.yearScroller.value : self.config.currentYear
      if (self.dayScroller) {
        const currentDay = self.dayScroller.value
        self._setDayScroller(currentYear, currentValue, currentDay)
      }
      if (self.yearScroller && self.monthScroller && self.hourScroller) {
        self._setHourScroller(currentYear, currentValue, self.dayScroller.value, self.hourScroller.value)
      }
    })
  },

  _setDayScroller (year, month, day) {
    if (!this.dayScroller) {
      return
    }
    const self = this
    const maxDay = Object(__WEBPACK_IMPORTED_MODULE_1__util__["getMaxDay"])(year, month)
    if (day > maxDay) {
      day = maxDay
    }
    self.dayScroller.destroy()
    const div = self.find('[data-role=day]')
    self.dayScroller = renderScroller(div, self._makeData('day', year, month), day, function (currentValue) {
      self.config.onSelect.call(self, 'day', currentValue, self.getValue())
      self.hourScroller && self._setHourScroller(year, month, currentValue, self.hourScroller.value)
    })
  },

  _setHourScroller (year, month, day, hour) {
    if (!this.hourScroller) {
      return
    }
    const self = this
    self.hourScroller.destroy()
    const div = self.find('[data-role=hour]')
    self.hourScroller = renderScroller(div, self._makeData('hour', year, month, day), hour || '', function (currentValue) {
      self.config.onSelect.call(self, 'hour', currentValue, self.getValue())
    })
  },

  find (selector) {
    return this.container.querySelector(selector)
  },

  hide (type) {
    if (!this.container) {
      return
    }
    const self = this
    self.container.style.removeProperty('transform')
    self.container.style.removeProperty('-webkit-transform')

    setTimeout(function () {
      self.container && (self.container.style.display = 'none')
    }, SHOW_CONTAINER_TIME)

    hideMask()

    self.config.onHide.call(self, type)
    if (self.config.destroyOnHide) {
      setTimeout(() => {
        self.destroy()
      }, 500)
    }
  },

  select (type, value) {
    this[type + 'Scroller'].select(value, false)
  },

  destroy () {
    const self = this
    this.trigger && this.trigger.removeEventListener('click', this.triggerHandler, false)
    if (!self.config.isOneInstance && !self.willShow) {
      Object(__WEBPACK_IMPORTED_MODULE_1__util__["removeElement"])(MASK)
      MASK = null
    }
    Object(__WEBPACK_IMPORTED_MODULE_1__util__["removeElement"])(self.container)
    self.container = null
  },

  getValue () {
    const self = this
    const config = self.config

    let value = config.format

    function formatValue (scroller, expr1, expr2) {
      if (scroller) {
        const val = scroller.value
        if (expr1) {
          value = value.replace(new RegExp(expr1, 'g'), Object(__WEBPACK_IMPORTED_MODULE_1__util__["addZero"])(val))
        }
        if (expr2) {
          value = value.replace(new RegExp(expr2, 'g'), Object(__WEBPACK_IMPORTED_MODULE_1__util__["trimZero"])(val))
        }
      }
    }

    Object(__WEBPACK_IMPORTED_MODULE_1__util__["each"])(TYPE_MAP, function (key, list) {
      formatValue(self[key + 'Scroller'], list[0], list[1])
    })

    return value
  },

  confirm () {
    const value = this.getValue()
    this.value = value

    if (this.config.onConfirm.call(this, value) === false) {
      return
    }

    this.hide('confirm')
  },

  clear () {
    const value = this.getValue()

    if (this.config.onClear.call(this, value) === false) {
      return
    }

    this.hide('clear')
  }
}

/* harmony default export */ __webpack_exports__["default"] = (DatetimePicker);


/***/ }),
/* 314 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/*
* Anima Scroller
* Based Zynga Scroller (http://github.com/zynga/scroller)
* Copyright 2011, Zynga Inc.
* Licensed under the MIT License.
* https://raw.github.com/zynga/scroller/master/MIT-LICENSE.txt
*/

const isBrowser = typeof window === 'object'

const TEMPLATE = `
<div class="scroller-component" data-role="component">
  <div class="scroller-mask" data-role="mask"></div>
  <div class="scroller-indicator" data-role="indicator"></div>
  <div class="scroller-content" data-role="content"></div>
</div>
`

const Animate = __webpack_require__(315)
const { getElement, getComputedStyle, easeOutCubic, easeInOutCubic } = __webpack_require__(316)
const passiveSupported = __webpack_require__(317)

const getDpr = function () {
  let dpr = 1
  if (isBrowser) {
    if (window.VUX_CONFIG && window.VUX_CONFIG.$picker && window.VUX_CONFIG.$picker.respectHtmlDataDpr) {
      dpr = document.documentElement.getAttribute('data-dpr') || 1
    }
  }
  return dpr
}

const Scroller = function (container, options) {
  const self = this

  self.dpr = getDpr()

  options = options || {}

  self.options = {
    itemClass: 'scroller-item',
    onSelect () {},
    defaultValue: 0,
    data: []
  }

  for (var key in options) {
    if (options[key] !== undefined) {
      self.options[key] = options[key]
    }
  }

  self.__container = getElement(container)

  var tempContainer = document.createElement('div')
  tempContainer.innerHTML = options.template || TEMPLATE

  var component = self.__component = tempContainer.querySelector('[data-role=component]')
  var content = self.__content = component.querySelector('[data-role=content]')
  var indicator = component.querySelector('[data-role=indicator]')

  var data = self.options.data
  var html = ''
  if (data.length && data[0].constructor === Object) {
    data.forEach(function (row) {
      html += '<div class="' + self.options.itemClass + '" data-value=' + JSON.stringify({value: encodeURI(row.value)}) + '>' + row.name + '</div>'
    })
  } else {
    data.forEach(function (val) {
      html += '<div class="' + self.options.itemClass + '" data-value=' + JSON.stringify({value: encodeURI(val)}) + '>' + val + '</div>'
    })
  }
  content.innerHTML = html

  self.__container.appendChild(component)

  self.__itemHeight = parseFloat(getComputedStyle(indicator, 'height'), 10)

  self.__callback = options.callback || function (top) {
    const distance = -top * self.dpr
    content.style.webkitTransform = 'translate3d(0, ' + distance + 'px, 0)'
    content.style.transform = 'translate3d(0, ' + distance + 'px, 0)'
  }

  var rect = component.getBoundingClientRect()

  self.__clientTop = (rect.top + component.clientTop) || 0

  self.__setDimensions(component.clientHeight, content.offsetHeight)

  if (component.clientHeight === 0) {
    self.__setDimensions(parseFloat(getComputedStyle(component, 'height'), 10), 204)
  }
  self.select(self.options.defaultValue, false)

  const touchStartHandler = function (e) {
    if (e.target.tagName.match(/input|textarea|select/i)) {
      return
    }
    e.preventDefault()
    self.__doTouchStart(e, e.timeStamp)
  }

  const touchMoveHandler = function (e) {
    self.__doTouchMove(e, e.timeStamp)
  }

  const touchEndHandler = function (e) {
    self.__doTouchEnd(e.timeStamp)
  }

  const willPreventDefault = passiveSupported ? {passive: false} : false
  const willNotPreventDefault = passiveSupported ? {passive: true} : false

  component.addEventListener('touchstart', touchStartHandler, willPreventDefault)
  component.addEventListener('mousedown', touchStartHandler, willPreventDefault)

  component.addEventListener('touchmove', touchMoveHandler, willNotPreventDefault)
  component.addEventListener('mousemove', touchMoveHandler, willNotPreventDefault)

  component.addEventListener('touchend', touchEndHandler, willNotPreventDefault)
  component.addEventListener('mouseup', touchEndHandler, willNotPreventDefault)
}

var members = {
  value: null,
  __prevValue: null,
  __isSingleTouch: false,
  __isTracking: false,
  __didDecelerationComplete: false,
  __isGesturing: false,
  __isDragging: false,
  __isDecelerating: false,
  __isAnimating: false,
  __clientTop: 0,
  __clientHeight: 0,
  __contentHeight: 0,
  __itemHeight: 0,
  __scrollTop: 0,
  __minScrollTop: 0,
  __maxScrollTop: 0,
  __scheduledTop: 0,
  __lastTouchTop: null,
  __lastTouchMove: null,
  __positions: null,
  __minDecelerationScrollTop: null,
  __maxDecelerationScrollTop: null,
  __decelerationVelocityY: null,

  __setDimensions (clientHeight, contentHeight) {
    var self = this

    self.__clientHeight = clientHeight
    self.__contentHeight = contentHeight

    var totalItemCount = self.options.data.length
    var clientItemCount = Math.round(self.__clientHeight / self.__itemHeight)

    self.__minScrollTop = -self.__itemHeight * (clientItemCount / 2)
    self.__maxScrollTop = self.__minScrollTop + totalItemCount * self.__itemHeight - 0.1
  },

  selectByIndex (index, animate) {
    var self = this
    if (index < 0 || index > self.__content.childElementCount - 1) {
      return
    }
    self.__scrollTop = self.__minScrollTop + index * self.__itemHeight

    self.scrollTo(self.__scrollTop, animate)

    self.__selectItem(self.__content.children[index])
  },

  select (value, animate) {
    var self = this

    var children = self.__content.children
    for (var i = 0, len = children.length; i < len; i++) {
      if (decodeURI(JSON.parse(children[i].dataset.value).value) === value) {
        self.selectByIndex(i, animate)
        return
      }
    }

    self.selectByIndex(0, animate)
  },

  getValue () {
    return this.value
  },

  scrollTo (top, animate) {
    var self = this

    animate = (animate === undefined) ? true : animate

    if (self.__isDecelerating) {
      Animate.stop(self.__isDecelerating)
      self.__isDecelerating = false
    }

    top = Math.round((top / self.__itemHeight).toFixed(5)) * self.__itemHeight
    top = Math.max(Math.min(self.__maxScrollTop, top), self.__minScrollTop)

    if (top === self.__scrollTop || !animate) {
      self.__publish(top)
      self.__scrollingComplete()
      return
    }
    self.__publish(top, 250)
  },

  destroy () {
    this.__component.parentNode && this.__component.parentNode.removeChild(this.__component)
  },

  __selectItem (selectedItem) {
    var self = this

    var selectedItemClass = self.options.itemClass + '-selected'
    var lastSelectedElem = self.__content.querySelector('.' + selectedItemClass)
    if (lastSelectedElem) {
      lastSelectedElem.classList.remove(selectedItemClass)
    }
    selectedItem.classList.add(selectedItemClass)

    if (self.value !== null) {
      self.__prevValue = self.value
    }

    self.value = decodeURI(JSON.parse(selectedItem.dataset.value).value)
  },

  __scrollingComplete () {
    var self = this

    var index = Math.round((self.__scrollTop - self.__minScrollTop - self.__itemHeight / 2) / self.__itemHeight)

    self.__selectItem(self.__content.children[index])

    if (self.__prevValue !== null && self.__prevValue !== self.value) {
      self.options.onSelect(self.value)
    }
  },

  __doTouchStart (ev, timeStamp) {
    const touches = ev.touches
    const self = this
    const target = ev.touches ? ev.touches[0] : ev
    const isMobile = !!ev.touches

    if (ev.touches && touches.length == null) {
      throw new Error('Invalid touch list: ' + touches)
    }
    if (timeStamp instanceof Date) {
      timeStamp = timeStamp.valueOf()
    }
    if (typeof timeStamp !== 'number') {
      throw new Error('Invalid timestamp value: ' + timeStamp)
    }

    self.__interruptedAnimation = true

    if (self.__isDecelerating) {
      Animate.stop(self.__isDecelerating)
      self.__isDecelerating = false
      self.__interruptedAnimation = true
    }

    if (self.__isAnimating) {
      Animate.stop(self.__isAnimating)
      self.__isAnimating = false
      self.__interruptedAnimation = true
    }

    // Use center point when dealing with two fingers
    var currentTouchTop
    var isSingleTouch = (isMobile && touches.length === 1) || !isMobile
    if (isSingleTouch) {
      currentTouchTop = target.pageY
    } else {
      currentTouchTop = Math.abs(target.pageY + touches[1].pageY) / 2
    }

    self.__initialTouchTop = currentTouchTop
    self.__lastTouchTop = currentTouchTop
    self.__lastTouchMove = timeStamp
    self.__lastScale = 1
    self.__enableScrollY = !isSingleTouch
    self.__isTracking = true
    self.__didDecelerationComplete = false
    self.__isDragging = !isSingleTouch
    self.__isSingleTouch = isSingleTouch
    self.__positions = []
  },

  __doTouchMove (ev, timeStamp, scale) {
    const self = this
    const touches = ev.touches
    const target = ev.touches ? ev.touches[0] : ev
    const isMobile = !!ev.touches

    if (touches && touches.length == null) {
      throw new Error('Invalid touch list: ' + touches)
    }
    if (timeStamp instanceof Date) {
      timeStamp = timeStamp.valueOf()
    }
    if (typeof timeStamp !== 'number') {
      throw new Error('Invalid timestamp value: ' + timeStamp)
    }

    // Ignore event when tracking is not enabled (event might be outside of element)
    if (!self.__isTracking) {
      return
    }

    var currentTouchTop

    // Compute move based around of center of fingers
    if (isMobile && touches.length === 2) {
      currentTouchTop = Math.abs(target.pageY + touches[1].pageY) / 2
    } else {
      currentTouchTop = target.pageY
    }

    var positions = self.__positions

    // Are we already is dragging mode?
    if (self.__isDragging) {
      var moveY = currentTouchTop - self.__lastTouchTop
      var scrollTop = self.__scrollTop

      if (self.__enableScrollY) {
        scrollTop -= moveY

        var minScrollTop = self.__minScrollTop
        var maxScrollTop = self.__maxScrollTop

        if (scrollTop > maxScrollTop || scrollTop < minScrollTop) {
          // Slow down on the edges
          if (scrollTop > maxScrollTop) {
            scrollTop = maxScrollTop
          } else {
            scrollTop = minScrollTop
          }
        }
      }

      // Keep list from growing infinitely (holding min 10, max 20 measure points)
      if (positions.length > 40) {
        positions.splice(0, 20)
      }

      // Track scroll movement for decleration
      positions.push(scrollTop, timeStamp)

      // Sync scroll position
      self.__publish(scrollTop)

      // Otherwise figure out whether we are switching into dragging mode now.
    } else {
      var minimumTrackingForScroll = 0
      var minimumTrackingForDrag = 5

      var distanceY = Math.abs(currentTouchTop - self.__initialTouchTop)

      self.__enableScrollY = distanceY >= minimumTrackingForScroll

      positions.push(self.__scrollTop, timeStamp)

      self.__isDragging = self.__enableScrollY && (distanceY >= minimumTrackingForDrag)

      if (self.__isDragging) {
        self.__interruptedAnimation = false
      }
    }

    // Update last touch positions and time stamp for next event
    self.__lastTouchTop = currentTouchTop
    self.__lastTouchMove = timeStamp
    self.__lastScale = scale
  },

  __doTouchEnd (timeStamp) {
    var self = this

    if (timeStamp instanceof Date) {
      timeStamp = timeStamp.valueOf()
    }
    if (typeof timeStamp !== 'number') {
      throw new Error('Invalid timestamp value: ' + timeStamp)
    }

    // Ignore event when tracking is not enabled (no touchstart event on element)
    // This is required as this listener ('touchmove') sits on the document and not on the element itself.
    if (!self.__isTracking) {
      return
    }

    // Not touching anymore (when two finger hit the screen there are two touch end events)
    self.__isTracking = false

    // Be sure to reset the dragging flag now. Here we also detect whether
    // the finger has moved fast enough to switch into a deceleration animation.
    if (self.__isDragging) {
      // Reset dragging flag
      self.__isDragging = false

      // Start deceleration
      // Verify that the last move detected was in some relevant time frame
      if (self.__isSingleTouch && (timeStamp - self.__lastTouchMove) <= 100) {
        // Then figure out what the scroll position was about 100ms ago
        var positions = self.__positions
        var endPos = positions.length - 1
        var startPos = endPos

        // Move pointer to position measured 100ms ago
        for (var i = endPos; i > 0 && positions[i] > (self.__lastTouchMove - 100); i -= 2) {
          startPos = i
        }

        // If start and stop position is identical in a 100ms timeframe,
        // we cannot compute any useful deceleration.
        if (startPos !== endPos) {
          // Compute relative movement between these two points
          var timeOffset = positions[endPos] - positions[startPos]
          var movedTop = self.__scrollTop - positions[startPos - 1]

          // Based on 50ms compute the movement to apply for each render step
          self.__decelerationVelocityY = movedTop / timeOffset * (1000 / 60)

          // How much velocity is required to start the deceleration
          var minVelocityToStartDeceleration = 4

          // Verify that we have enough velocity to start deceleration
          if (Math.abs(self.__decelerationVelocityY) > minVelocityToStartDeceleration) {
            self.__startDeceleration(timeStamp)
          }
        }
      }
    }

    if (!self.__isDecelerating) {
      self.scrollTo(self.__scrollTop)
    }

    // Fully cleanup list
    self.__positions.length = 0
  },

  // Applies the scroll position to the content element
  __publish (top, animationDuration) {
    var self = this

    // Remember whether we had an animation, then we try to continue based on the current "drive" of the animation
    var wasAnimating = self.__isAnimating
    if (wasAnimating) {
      Animate.stop(wasAnimating)
      self.__isAnimating = false
    }

    if (animationDuration) {
      // Keep scheduled positions for scrollBy functionality
      self.__scheduledTop = top

      var oldTop = self.__scrollTop
      var diffTop = top - oldTop

      var step = function (percent, now, render) {
        self.__scrollTop = oldTop + (diffTop * percent)
        // Push values out
        if (self.__callback) {
          self.__callback(self.__scrollTop)
        }
      }

      var verify = function (id) {
        return self.__isAnimating === id
      }

      var completed = function (renderedFramesPerSecond, animationId, wasFinished) {
        if (animationId === self.__isAnimating) {
          self.__isAnimating = false
        }
        if (self.__didDecelerationComplete || wasFinished) {
          self.__scrollingComplete()
        }
      }

      // When continuing based on previous animation we choose an ease-out animation instead of ease-in-out
      self.__isAnimating = Animate.start(step, verify, completed, animationDuration, wasAnimating ? easeOutCubic : easeInOutCubic)
    } else {
      self.__scheduledTop = self.__scrollTop = top
      // Push values out
      if (self.__callback) {
        self.__callback(top)
      }
    }
  },

  // Called when a touch sequence end and the speed of the finger was high enough to switch into deceleration mode.
  __startDeceleration (timeStamp) {
    var self = this

    self.__minDecelerationScrollTop = self.__minScrollTop
    self.__maxDecelerationScrollTop = self.__maxScrollTop

    // Wrap class method
    var step = function (percent, now, render) {
      self.__stepThroughDeceleration(render)
    }

    // How much velocity is required to keep the deceleration running
    var minVelocityToKeepDecelerating = 0.5

    // Detect whether it's still worth to continue animating steps
    // If we are already slow enough to not being user perceivable anymore, we stop the whole process here.
    var verify = function () {
      var shouldContinue = Math.abs(self.__decelerationVelocityY) >= minVelocityToKeepDecelerating
      if (!shouldContinue) {
        self.__didDecelerationComplete = true
      }
      return shouldContinue
    }

    var completed = function (renderedFramesPerSecond, animationId, wasFinished) {
      self.__isDecelerating = false
      if (self.__scrollTop <= self.__minScrollTop || self.__scrollTop >= self.__maxScrollTop) {
        self.scrollTo(self.__scrollTop)
        return
      }
      if (self.__didDecelerationComplete) {
        self.__scrollingComplete()
      }
    }

    // Start animation and switch on flag
    self.__isDecelerating = Animate.start(step, verify, completed)
  },

  // Called on every step of the animation
  __stepThroughDeceleration (render) {
    var self = this

    var scrollTop = self.__scrollTop + self.__decelerationVelocityY

    var scrollTopFixed = Math.max(Math.min(self.__maxDecelerationScrollTop, scrollTop), self.__minDecelerationScrollTop)
    if (scrollTopFixed !== scrollTop) {
      scrollTop = scrollTopFixed
      self.__decelerationVelocityY = 0
    }

    if (Math.abs(self.__decelerationVelocityY) <= 1) {
      if (Math.abs(scrollTop % self.__itemHeight) < 1) {
        self.__decelerationVelocityY = 0
      }
    } else {
      self.__decelerationVelocityY *= 0.95
    }

    self.__publish(scrollTop)
  }
}

// Copy over members to prototype
for (var key in members) {
  Scroller.prototype[key] = members[key]
}

/* harmony default export */ __webpack_exports__["default"] = (Scroller);


/***/ }),
/* 315 */
/***/ (function(module, exports) {

const time = Date.now || function () {
  return +new Date()
}

let running = {}
let counter = 1
let desiredFrames = 60
let millisecondsPerSecond = 1000

// http://paulirish.com/2011/requestanimationframe-for-smart-animating/
// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating

// requestAnimationFrame polyfill by Erik Möller
// fixes from Paul Irish and Tino Zijdel
if (typeof window !== 'undefined') {
  ;(function () {
    var lastTime = 0
    var vendors = ['ms', 'moz', 'webkit', 'o']
    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {
      window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame']
      window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame']
    }

    if (!window.requestAnimationFrame) {
      window.requestAnimationFrame = function (callback, element) {
        var currTime = new Date().getTime()
        var timeToCall = Math.max(0, 16 - (currTime - lastTime))
        var id = window.setTimeout(function () { callback(currTime + timeToCall) },
              timeToCall)
        lastTime = currTime + timeToCall
        return id
      }
    }
    if (!window.cancelAnimationFrame) {
      window.cancelAnimationFrame = function (id) {
        clearTimeout(id)
      }
    }
  }())
}

module.exports = {

  // A requestAnimationFrame wrapper / polyfill.
  requestAnimationFrame: (function () {
    if (typeof window !== 'undefined') {
      var requestFrame = window.requestAnimationFrame
      return function (callback, root) {
        requestFrame(callback, root)
      }
    }
  })(),

  // Stops the given animation.
  stop (id) {
    var cleared = running[id] != null
    if (cleared) {
      running[id] = null
    }
    return cleared
  },

  // Whether the given animation is still running.
  isRunning (id) {
    return running[id] != null
  },

  // Start the animation.
  start (stepCallback, verifyCallback, completedCallback, duration, easingMethod, root) {
    var _this = this
    var start = time()
    var lastFrame = start
    var percent = 0
    var dropCounter = 0
    var id = counter++

    if (!root) {
      root = document.body
    }

    // Compacting running db automatically every few new animations
    if (id % 20 === 0) {
      var newRunning = {}
      for (var usedId in running) {
        newRunning[usedId] = true
      }
      running = newRunning
    }

    // This is the internal step method which is called every few milliseconds
    var step = function (virtual) {
      // Normalize virtual value
      var render = virtual !== true
      // Get current time
      var now = time()

      // Verification is executed before next animation step
      if (!running[id] || (verifyCallback && !verifyCallback(id))) {
        running[id] = null
        completedCallback && completedCallback(desiredFrames - (dropCounter / ((now - start) / millisecondsPerSecond)), id, false)
        return
      }

      // For the current rendering to apply let's update omitted steps in memory.
      // This is important to bring internal state variables up-to-date with progress in time.
      if (render) {
        var droppedFrames = Math.round((now - lastFrame) / (millisecondsPerSecond / desiredFrames)) - 1
        for (var j = 0; j < Math.min(droppedFrames, 4); j++) {
          step(true)
          dropCounter++
        }
      }

      // Compute percent value
      if (duration) {
        percent = (now - start) / duration
        if (percent > 1) {
          percent = 1
        }
      }

      // Execute step callback, then...
      var value = easingMethod ? easingMethod(percent) : percent
      if ((stepCallback(value, now, render) === false || percent === 1) && render) {
        running[id] = null
        completedCallback && completedCallback(desiredFrames - (dropCounter / ((now - start) / millisecondsPerSecond)), id, percent === 1 || duration == null)
      } else if (render) {
        lastFrame = now
        _this.requestAnimationFrame(step, root)
      }
    }

    // Mark as running
    running[id] = true
    // Init first step
    _this.requestAnimationFrame(step, root)
    // Return unique animation ID
    return id
  }
}


/***/ }),
/* 316 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (immutable) */ __webpack_exports__["getElement"] = getElement;
/* harmony export (immutable) */ __webpack_exports__["getComputedStyle"] = getComputedStyle;
/* harmony export (immutable) */ __webpack_exports__["easeOutCubic"] = easeOutCubic;
/* harmony export (immutable) */ __webpack_exports__["easeInOutCubic"] = easeInOutCubic;
function getElement (expr) {
  return (typeof expr === 'string') ? document.querySelector(expr) : expr
}

function getComputedStyle (el, key) {
  var computedStyle = window.getComputedStyle(el)
  return computedStyle[key] || ''
}

// Easing Equations (c) 2003 Robert Penner, all rights reserved.
// Open source under the BSD License.
function easeOutCubic (pos) {
  return (Math.pow((pos - 1), 3) + 1)
}

function easeInOutCubic (pos) {
  if ((pos /= 0.5) < 1) {
    return 0.5 * Math.pow(pos, 3)
  }
  return 0.5 * (Math.pow((pos - 2), 3) + 2)
}


/***/ }),
/* 317 */
/***/ (function(module, exports) {

var passiveSupported = false

try {
  var options = Object.defineProperty({}, 'passive', {
    get: function () {
      passiveSupported = true
    }
  })
  window.addEventListener('test', null, options)
} catch (err) {}

module.exports = passiveSupported

/***/ }),
/* 318 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (immutable) */ __webpack_exports__["each"] = each;
/* harmony export (immutable) */ __webpack_exports__["trimZero"] = trimZero;
/* harmony export (immutable) */ __webpack_exports__["generateRange"] = generateRange;
/* harmony export (immutable) */ __webpack_exports__["isToday"] = isToday;
/* harmony export (immutable) */ __webpack_exports__["addZero"] = addZero;
/* harmony export (immutable) */ __webpack_exports__["isLeapYear"] = isLeapYear;
/* harmony export (immutable) */ __webpack_exports__["getMaxDay"] = getMaxDay;
/* harmony export (immutable) */ __webpack_exports__["parseRow"] = parseRow;
/* harmony export (immutable) */ __webpack_exports__["parseDate"] = parseDate;
/* harmony export (immutable) */ __webpack_exports__["getElement"] = getElement;
/* harmony export (immutable) */ __webpack_exports__["toElement"] = toElement;
/* harmony export (immutable) */ __webpack_exports__["removeElement"] = removeElement;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__format__ = __webpack_require__(319);


function each (obj, fn) {
  for (var key in obj) {
    if (obj.hasOwnProperty(key)) {
      if (fn.call(obj[key], key, obj[key]) === false) {
        break
      }
    }
  }
}

function trimZero (val) {
  val = String(val)
  val = val ? parseFloat(val.replace(/^0+/g, '')) : ''
  val = val || 0
  val = val + ''
  return val
}

function generateRange (start = 0, end) {
  let results = []
  for (let i = start; i <= end; i++) {
    results.push(addZero(i))
  }
  return results
}

function isToday (val1, val2) {
  return val1.getFullYear() === val2.getFullYear() && val1.getMonth() === val2.getMonth() && val1.getDate() === val2.getDate()
}

function addZero (val) {
  val = String(val)
  return val.length < 2 ? '0' + val : val
}

function isLeapYear (year) {
  return year % 100 !== 0 && year % 4 === 0 || year % 400 === 0
}

function getMaxDay (year, month) {
  year = parseFloat(year)
  month = parseFloat(month)
  if (month === 2) {
    return isLeapYear(year) ? 29 : 28
  }
  return [4, 6, 9, 11].indexOf(month) >= 0 ? 30 : 31
}

function parseRow (tmpl, value) {
  return tmpl.replace(/\{value\}/g, value)
}

// parse Date String
function parseDate (format, value) {
  const formatParts = format.split(/[^A-Za-z]+/)
  let valueParts = value.replace(/\s/g, '-').replace(/:/g, '-').replace(/\//g, '-').split('-')
  if (formatParts.length !== valueParts.length) {
    // if it is error date, use current date
    const date = Object(__WEBPACK_IMPORTED_MODULE_0__format__["default"])(new Date(), format)
    valueParts = date.split(/\D+/)
  }

  let result = {}

  for (let i = 0; i < formatParts.length; i++) {
    if (formatParts[i]) {
      result[formatParts[i]] = valueParts[i]
    }
  }
  return result
}

function getElement (expr) {
  return (typeof expr === 'string') ? document.querySelector(expr) : expr
}

function toElement (html) {
  const tempContainer = document.createElement('div')
  tempContainer.innerHTML = html
  return tempContainer.firstElementChild
}

function removeElement (el) {
  el && el.parentNode.removeChild(el)
}


/***/ }),
/* 319 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony default export */ __webpack_exports__["default"] = (function (date, fmt = 'YYYY-MM-DD HH:mm:ss') {
  var o = {
    'M+': date.getMonth() + 1,
    'D+': date.getDate(),
    'h+': date.getHours() % 12 === 0 ? 12 : date.getHours() % 12,
    'H+': date.getHours(),
    'm+': date.getMinutes(),
    's+': date.getSeconds(),
    'q+': Math.floor((date.getMonth() + 3) / 3),
    'S': date.getMilliseconds()
  }
  var week = {
    '0': '\u65e5',
    '1': '\u4e00',
    '2': '\u4e8c',
    '3': '\u4e09',
    '4': '\u56db',
    '5': '\u4e94',
    '6': '\u516d'
  }
  if (/(Y+)/.test(fmt)) {
    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length))
  }
  if (/(E+)/.test(fmt)) {
    fmt = fmt.replace(RegExp.$1, ((RegExp.$1.length > 1) ? (RegExp.$1.length > 2 ? '\u661f\u671f' : '\u5468') : '') + week[date.getDay() + ''])
  }
  for (var k in o) {
    if (new RegExp('(' + k + ')').test(fmt)) {
      fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : (('00' + o[k]).substr(('' + o[k]).length)))
    }
  }
  return fmt
});


/***/ }),
/* 320 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getYears", function() { return getYears; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMonths", function() { return getMonths; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDays", function() { return getDays; });
function isLeapYear (year) {
  return year % 100 !== 0 && year % 4 === 0 || year % 400 === 0
}

function getMaxDay (year, month) {
  year = parseFloat(year)
  month = parseFloat(month)
  if (month === 2) {
    return isLeapYear(year) ? 29 : 28
  }
  return [4, 6, 9, 11].indexOf(month) >= 0 ? 30 : 31
}

function getYears (startDate, endDate) {
  let startYear = startDate.getFullYear()
  const endYear = endDate.getFullYear()
  let rs = []
  while (startYear <= endYear) {
    rs.push(startYear)
    startYear++
  }
  return {
    minYear: rs[0],
    maxYear: rs[rs.length - 1]
  }
}

function getMonths (startDate, endDate, year) {
  const startYear = startDate.getFullYear()
  const endYear = endDate.getFullYear()
  const startMonth = startDate.getMonth() + 1
  const endMonth = endDate.getMonth() + 1
  let start = 1
  let end = 12
  if (year === startYear) {
    start = startMonth
  }
  if (year === endYear) {
    end = endMonth
  }
  return {
    minMonth: start,
    maxMonth: end
  }
}

function getDays (startDate, endDate, year, month) {
  const startYear = startDate.getFullYear()
  const endYear = endDate.getFullYear()
  const startMonth = startDate.getMonth() + 1
  const endMonth = endDate.getMonth() + 1
  const startDay = startDate.getDate()
  const endDay = endDate.getDate()

  let start = 1
  let end = getMaxDay(year, month)

  if (year === startYear && month === startMonth) {
    start = startDay
  }
  if (year === endYear && month === endMonth) {
    end = endDay
  }
  return {
    minDay: start,
    maxDay: end
  }
}




/***/ }),
/* 321 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div>\n|     <popup-picker :data=\"list\" :title=\"title\" :display-format=\"cellFormat\" v-model=\"currentValue\" :inline-desc=\"inlineDesc\" :placeholder=\"placeholder\" @on-hide=\"emitHide\" @on-show=\"$emit('on-show')\" :value-text-align=\"valueTextAlign\" :column-width=\"[1/2, 1/6]\"></popup-picker>");

/***/ }),
/* 322 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div></div>\n| </template>");

/***/ }),
/* 323 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_debounce__ = __webpack_require__(324);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_debounce___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash_debounce__);

/* harmony default export */ __webpack_exports__["default"] = (__WEBPACK_IMPORTED_MODULE_0_lodash_debounce___default.a);


/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the `TypeError` message for "Functions" methods. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return root.Date.now();
};

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = toNumber(wait) || 0;
  if (isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        result = wait - timeSinceLastCall;

    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(now());
  }

  function debounced() {
    var time = now(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && objectToString.call(value) == symbolTag);
}

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

module.exports = debounce;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(36)))

/***/ }),
/* 325 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div>\n|     <fullpage");

/***/ }),
/* 326 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div>\n|     <popover placement=\"top\" style=\"margin: 20px;\" @on-show=\"onShow\" @on-hide=\"onHide\">");

/***/ }),
/* 327 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
const ua = navigator.userAgent

const isAndroid = /(Android);?[\s/]+([\d.]+)?/.test(ua)
const isIpad = /(iPad).*OS\s([\d_]+)/.test(ua)
const isIpod = /(iPod)(.*OS\s([\d_]+))?/.test(ua)
const isIphone = !isIpad && /(iPhone\sOS)\s([\d_]+)/.test(ua)
const isWechat = /micromessenger/i.test(ua)
const isAlipay = /alipayclient/i.test(ua)

const plugin = function (Vue) {
  // Vue.$device will be removed
  if (!Vue.$device || !Vue.device) {
    Vue.$device = Vue.device = {
      isAndroid,
      isIpad,
      isIpod,
      isIphone,
      isWechat,
      isAlipay
    }
  }
  Vue.mixin({
    created: function () {
      this.$device = {
        isAndroid,
        isIpad,
        isIpod,
        isIphone,
        isWechat,
        isAlipay
      }
    }
  })
}

/* harmony default export */ __webpack_exports__["default"] = (plugin);


/***/ }),
/* 328 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-dev-tip\">\n|     <slot></slot>");

/***/ }),
/* 329 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <p class=\"vux-divider\">\n|     <slot></slot>");

/***/ }),
/* 330 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (4:0)\nYou may need an appropriate loader to handle this file type.\n| * this component is forked from: https://github.com/bajian/vue-drawer\r\n| */\r\n| <template>\r\n|   <div class=\"vux-drawer\">\r\n|     <div :style=\"{transform: `translate3d(${translateX}px, 0, 0)`}\"\r");

/***/ }),
/* 331 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-flexbox\"\n|   :class=\"{");

/***/ }),
/* 332 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-flexbox-item\" :style=\"style\">\n|     <slot></slot>");

/***/ }),
/* 333 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"weui-wepay-flow\" :class=\"{'weui-wepay-flow_vertical': orientation === \n|   'vertical'}\">");

/***/ }),
/* 334 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"weui-wepay-flow__line\" :class=\"classes\" :style=\"styles\">\n|     <div class=\"weui-wepay-flow__process\" :style=\"{width: getWidth(this.processSpan)}\"></div>");

/***/ }),
/* 335 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"weui-wepay-flow__li\" :class=\"{'weui-wepay-flow__li_done': isDone}\">\n|     <div class=\"weui-wepay-flow__state\">{{ state }}</div>");

/***/ }),
/* 336 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony default export */ __webpack_exports__["default"] = (function (date, fmt = 'YYYY-MM-DD HH:mm:ss') {
  var o = {
    'M+': date.getMonth() + 1,
    'D+': date.getDate(),
    'h+': date.getHours() % 12 === 0 ? 12 : date.getHours() % 12,
    'H+': date.getHours(),
    'm+': date.getMinutes(),
    's+': date.getSeconds(),
    'q+': Math.floor((date.getMonth() + 3) / 3),
    'S': date.getMilliseconds()
  }
  var week = {
    '0': '\u65e5',
    '1': '\u4e00',
    '2': '\u4e8c',
    '3': '\u4e09',
    '4': '\u56db',
    '5': '\u4e94',
    '6': '\u516d'
  }
  if (/(Y+)/.test(fmt)) {
    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length))
  }
  if (/(E+)/.test(fmt)) {
    fmt = fmt.replace(RegExp.$1, ((RegExp.$1.length > 1) ? (RegExp.$1.length > 2 ? '\u661f\u671f' : '\u5468') : '') + week[date.getDay() + ''])
  }
  for (var k in o) {
    if (new RegExp('(' + k + ')').test(fmt)) {
      fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : (('00' + o[k]).substr(('' + o[k]).length)))
    }
  }
  return fmt
});


/***/ }),
/* 337 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-form-preview weui-form-preview\">\n|     <div class=\"weui-form-preview__hd\">");

/***/ }),
/* 338 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony default export */ __webpack_exports__["default"] = (function (time) {
  let date = (typeof time === 'number') ? new Date(time) : new Date((time || '').replace(/-/g, '/'))
  let diff = (((new Date()).getTime() - date.getTime()) / 1000)
  let dayDiff = Math.floor(diff / 86400)

  let isValidDate = Object.prototype.toString.call(date) === '[object Date]' && !isNaN(date.getTime())

  if (!isValidDate) {
    console.error('not a valid date')
  }
  const formatDate = function (date) {
    let today = new Date(date)
    let year = today.getFullYear()
    let month = ('0' + (today.getMonth() + 1)).slice(-2)
    let day = ('0' + today.getDate()).slice(-2)
    let hour = today.getHours()
    let minute = today.getMinutes()
    let second = today.getSeconds()
    return `${year}-${month}-${day} ${hour}:${minute}:${second}`
  }

  if (isNaN(dayDiff) || dayDiff < 0 || dayDiff >= 31) {
    return formatDate(date)
  }

  return dayDiff === 0 && (
      diff < 60 && '刚刚' ||
      diff < 120 && '1分钟前' ||
      diff < 3600 && Math.floor(diff / 60) + '分钟前' ||
      diff < 7200 && '1小时前' ||
      diff < 86400 && Math.floor(diff / 3600) + '小时前') ||
    dayDiff === 1 && '昨天' ||
    dayDiff < 7 && dayDiff + '天前' ||
    dayDiff < 31 && Math.ceil(dayDiff / 7) + '周前'
});


/***/ }),
/* 339 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div>\n|     <slot></slot>");

/***/ }),
/* 340 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div\n|     class=\"weui-grids\"");

/***/ }),
/* 341 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <a href=\"javascript:;\"\n|     class=\"weui-grid\"");

/***/ }),
/* 342 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div>\n|     <div");

/***/ }),
/* 343 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"weui-cells__title\">\n|     <slot></slot>");

/***/ }),
/* 344 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <i :class=\"[className, isMsg ? 'weui-icon_msg' : '']\"></i>\n| </template>");

/***/ }),
/* 345 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"inline-calendar\" :class=\"{'is-weekend-highlight': highlightWeekend}\">\n|     ");

/***/ }),
/* 346 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <span class=\"vux-label-desc\"><slot></slot></span>\n| </template>");

/***/ }),
/* 347 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <i class=\"weui-loading\"></i>\n| </template>");

/***/ }),
/* 348 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div :class=\"{'vux-number-round': buttonStyle === 'round'}\" class=\"vux-inline-x-number\">\n|     <div>");

/***/ }),
/* 349 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <input\n|     class=\"inline-x-switch weui-switch\"");

/***/ }),
/* 350 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__inview__ = __webpack_require__(351);

/* harmony default export */ __webpack_exports__["default"] = ({
  update (option) {
    if (!option || !option.id) {
      return console.error('no id specified')
    }
    const _this = this
    let id = option.id
    const vm = this.vm
    vm.$nextTick(function () {
      _this._inview = Object(__WEBPACK_IMPORTED_MODULE_0__inview__["default"])(_this.el, function (isInView, data) {
        if (isInView) {
          vm.$emit('on-view-enter', id)
        } else {
          vm.$emit('on-view-leave', id)
        }
      })
    })
  },
  unbind () {}
});


/***/ }),
/* 351 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/**
 * @desc Create an InView instance.
 *
 * @class
 * @func InView
 * @param {HTMLElement} element - element to detect when scrolled to view
 * @param {scrollCallback} scrollCallback - callback function fired on scroll event
 * @return {HTMLElement} - element
 *
 * @example
 * var el = document.querySelector('.item')
 *
 * var InView = InView(el, function(isInView, data) {
 *   if (isInView) {
 *     console.log('in view')
 *   } else {
 *     if (data.windowScrollTop - (data.elementOffsetTop - data.inViewHeight) > data.inViewHeight) {
 *       console.log('not in view (scroll up)')
 *     } else {
 *       console.log('not in view (scroll down)')
 *     }
 *   }
 * })
 */

function InView (el, callback, className) {
  var _this = this
  if (!(_this instanceof InView)) {
    return new InView(el, callback)
  }
  _this.el = el
  _this.callback = callback

  function check (e) {
    var params = {
      windowScrollTop: getScrollTop(),
      elementOffsetTop: _this.el.offsetTop,
      inViewHeight: window.outerHeight,
      elementOffsetTopInViewHeight: window.outerHeight - (getScrollTop() - (_this.el.offsetTop - window.outerHeight))
    }
    if (isInView(_this.el)) {
      addClass(_this.el, className)
      _this.callback.call(_this.el, true, params)
    } else {
      removeClass(_this.el, className)
      _this.callback.call(_this.el, false, params)
    }
  }

  var throttledCheck = throttle(check, 100)

  check()
  addEvent(window, 'scroll', throttledCheck)
}

function throttle (fn, threshhold, scope) {
  threshhold || (threshhold = 100)
  var last,
    deferTimer

  return function () {
    var context = scope || this

    var now = +(new Date())
    var args = arguments
    if (last && now < last + threshhold) {
      clearTimeout(deferTimer)
      deferTimer = setTimeout(function () {
        last = now
        fn.apply(context, args)
      }, threshhold)
    } else {
      last = now
      fn.apply(context, args)
    }
  }
}

function hasClass (el, name) {
  return new RegExp(' ' + name + ' ').test(' ' + el.className + ' ')
}

function addClass (el, name) {
  if (!hasClass(el, name)) {
    el.className += ' ' + name
  }
  return el
}

function removeClass (el, name) {
  var newClass = ' ' + el.className.replace(/[\t\r\n]/g, ' ') + ' '
  if (hasClass(el, name)) {
    while (newClass.indexOf(' ' + name + ' ') >= 0) {
      newClass = newClass.replace(' ' + name + ' ', ' ')
    }
    el.className = newClass.replace(/^\s+|\s+$/g, '')
  }
  return el
}

function addEvent (el, name, fn) {
  if (el.addEventListener) {
    return el.addEventListener(name, fn, false)
  } else if (el.attachEvent) {
    return el.attachEvent('on' + name, fn)
  }
}

function getScrollTop () {
  if (typeof window.pageYOffset !== 'undefined') {
    return window.pageYOffset
  } else {
    var b = document.body
    var d = document.documentElement
    d = d.clientHeight ? d : b
    return d.scrollTop
  }
}

function isInView (obj) {
  var winTop = getScrollTop()
  var winBottom = winTop + window.innerHeight
  var objTop = obj.offsetTop
  var objBottom = objTop + obj.offsetHeight
  var offset = 0

  if ((objTop <= winBottom + offset) && (objBottom >= winTop)) {
    return true
  }
}

/* harmony default export */ __webpack_exports__["default"] = (InView);


/***/ }),
/* 352 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <transition :name=\"transition\">\n|     <div");

/***/ }),
/* 353 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
throw new Error("Cannot find module \"../../components/loading\"");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__libs_plugin_helper__ = __webpack_require__(81);



let $vm
let watcher
let delayTime = null

const plugin = {
  install (vue, options) {
    const Loading = vue.extend(__WEBPACK_IMPORTED_MODULE_0__components_loading___default.a)

    if (!$vm) {
      $vm = new Loading({
        el: document.createElement('div')
      })
      document.body.appendChild($vm.$el)
    }

    const loading = {
      show (options = {}) {
        // destroy watcher
        watcher && watcher()
        if (typeof options === 'string') {
          $vm.text = options
        } else if (typeof options === 'object') {
          Object(__WEBPACK_IMPORTED_MODULE_1__libs_plugin_helper__["mergeOptions"])($vm, options)
        }
        if (typeof options === 'object' && options.onShow || options.onHide) {
          watcher = $vm.$watch('show', (val) => {
            val && options.onShow && options.onShow($vm)
            val === false && options.onHide && options.onHide($vm)
          })
        }
        delayTime && clearTimeout(delayTime)
        delayTime = setTimeout(() => {
          $vm.show = true
        }, options.delay || 0)
      },
      hide () {
        if (delayTime) {
          clearTimeout(delayTime)
          delayTime = null
        }
        $vm.show = false
      },
      isVisible () {
        return $vm.show
      }
    }

    // all Vux's plugins are included in this.$vux
    if (!vue.$vux) {
      vue.$vux = {
        loading
      }
    } else {
      vue.$vux.loading = loading
    }

    vue.mixin({
      created: function () {
        this.$vux = vue.$vux
      }
    })
  }
}

/* harmony default export */ __webpack_exports__["default"] = (plugin);
const install = plugin.install
/* harmony export (immutable) */ __webpack_exports__["install"] = install;




/***/ }),
/* 354 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-loadmore weui-loadmore\" :class=\"{'weui-loadmore_line':!showLoading, 'weui-loadmore_dot': !showLoading && !tip}\">\n|     <i class=\"weui-loading\" v-if=\"showLoading\"></i>");

/***/ }),
/* 355 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__tools_querystring__ = __webpack_require__(163);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__tools_querystring___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__tools_querystring__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tools_cookie__ = __webpack_require__(160);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_object_assign__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_object_assign___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_object_assign__);




const locale = function (options = {}) {
  let defaultOptions = {
    defaultLocale: '', // if not set, use navigator language
    queryField: 'locale',
    cookieField: 'locale',
    cookieMaxAge: 365,
    storageList: ['cookie'],
    get: function () {
      // search query, then cookie, then defaultLocal, then navigator
      const queryRs = __WEBPACK_IMPORTED_MODULE_0__tools_querystring___default.a.parse()
      if (queryRs.locale) {
        return queryRs.locale
      }

      const cookieRs = __WEBPACK_IMPORTED_MODULE_1__tools_cookie__["default"].get('locale')
      if (cookieRs) {
        return cookieRs
      }

      if (this.defaultLocal) {
        return this.defaultLocal
      }

      return navigator.languages ? navigator.languages[0] : (navigator.language || navigator.userLanguage)
    },
    set: function (locale) {
      if (this.storageList.indexOf('cookie') > -1) {
        __WEBPACK_IMPORTED_MODULE_1__tools_cookie__["default"].set('locale', locale, {
          expires: this.cookieMaxAge
        })
      }
    }
  }
  return __WEBPACK_IMPORTED_MODULE_2_object_assign___default()(defaultOptions, options)
}

/* harmony default export */ __webpack_exports__["default"] = ({
  install (Vue, options) {
    const _locale = locale(options)
    Vue.locale = _locale
    Vue.mixin({
      created: function () {
        this.$locale = _locale
      }
    })
  }
});



/***/ }),
/* 356 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-marquee\" :style=\"{height: height + 'px'}\">\n|     <ul class=\"vux-marquee-box\" ref=\"box\" :style=\"{transform: `translate3d(0,${currenTranslateY}px,0)`, transition: `transform ${noAnimate ? 0 : duration}ms`}\">");

/***/ }),
/* 357 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <li>\n|     <slot></slot>");

/***/ }),
/* 358 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-masker-box\">\n|     <slot></slot>");

/***/ }),
/* 359 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_blueimp_md5__ = __webpack_require__(360);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_blueimp_md5___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_blueimp_md5__);

/* harmony default export */ __webpack_exports__["default"] = (__WEBPACK_IMPORTED_MODULE_0_blueimp_md5___default.a);


/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;/*
 * JavaScript MD5
 * https://github.com/blueimp/JavaScript-MD5
 *
 * Copyright 2011, Sebastian Tschan
 * https://blueimp.net
 *
 * Licensed under the MIT license:
 * https://opensource.org/licenses/MIT
 *
 * Based on
 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
 * Digest Algorithm, as defined in RFC 1321.
 * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for more info.
 */

/* global define */

;(function ($) {
  'use strict'

  /*
  * Add integers, wrapping at 2^32. This uses 16-bit operations internally
  * to work around bugs in some JS interpreters.
  */
  function safeAdd (x, y) {
    var lsw = (x & 0xffff) + (y & 0xffff)
    var msw = (x >> 16) + (y >> 16) + (lsw >> 16)
    return (msw << 16) | (lsw & 0xffff)
  }

  /*
  * Bitwise rotate a 32-bit number to the left.
  */
  function bitRotateLeft (num, cnt) {
    return (num << cnt) | (num >>> (32 - cnt))
  }

  /*
  * These functions implement the four basic operations the algorithm uses.
  */
  function md5cmn (q, a, b, x, s, t) {
    return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b)
  }
  function md5ff (a, b, c, d, x, s, t) {
    return md5cmn((b & c) | (~b & d), a, b, x, s, t)
  }
  function md5gg (a, b, c, d, x, s, t) {
    return md5cmn((b & d) | (c & ~d), a, b, x, s, t)
  }
  function md5hh (a, b, c, d, x, s, t) {
    return md5cmn(b ^ c ^ d, a, b, x, s, t)
  }
  function md5ii (a, b, c, d, x, s, t) {
    return md5cmn(c ^ (b | ~d), a, b, x, s, t)
  }

  /*
  * Calculate the MD5 of an array of little-endian words, and a bit length.
  */
  function binlMD5 (x, len) {
    /* append padding */
    x[len >> 5] |= 0x80 << (len % 32)
    x[((len + 64) >>> 9 << 4) + 14] = len

    var i
    var olda
    var oldb
    var oldc
    var oldd
    var a = 1732584193
    var b = -271733879
    var c = -1732584194
    var d = 271733878

    for (i = 0; i < x.length; i += 16) {
      olda = a
      oldb = b
      oldc = c
      oldd = d

      a = md5ff(a, b, c, d, x[i], 7, -680876936)
      d = md5ff(d, a, b, c, x[i + 1], 12, -389564586)
      c = md5ff(c, d, a, b, x[i + 2], 17, 606105819)
      b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330)
      a = md5ff(a, b, c, d, x[i + 4], 7, -176418897)
      d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426)
      c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341)
      b = md5ff(b, c, d, a, x[i + 7], 22, -45705983)
      a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416)
      d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417)
      c = md5ff(c, d, a, b, x[i + 10], 17, -42063)
      b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162)
      a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682)
      d = md5ff(d, a, b, c, x[i + 13], 12, -40341101)
      c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290)
      b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329)

      a = md5gg(a, b, c, d, x[i + 1], 5, -165796510)
      d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632)
      c = md5gg(c, d, a, b, x[i + 11], 14, 643717713)
      b = md5gg(b, c, d, a, x[i], 20, -373897302)
      a = md5gg(a, b, c, d, x[i + 5], 5, -701558691)
      d = md5gg(d, a, b, c, x[i + 10], 9, 38016083)
      c = md5gg(c, d, a, b, x[i + 15], 14, -660478335)
      b = md5gg(b, c, d, a, x[i + 4], 20, -405537848)
      a = md5gg(a, b, c, d, x[i + 9], 5, 568446438)
      d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690)
      c = md5gg(c, d, a, b, x[i + 3], 14, -187363961)
      b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501)
      a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467)
      d = md5gg(d, a, b, c, x[i + 2], 9, -51403784)
      c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473)
      b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734)

      a = md5hh(a, b, c, d, x[i + 5], 4, -378558)
      d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463)
      c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562)
      b = md5hh(b, c, d, a, x[i + 14], 23, -35309556)
      a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060)
      d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353)
      c = md5hh(c, d, a, b, x[i + 7], 16, -155497632)
      b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640)
      a = md5hh(a, b, c, d, x[i + 13], 4, 681279174)
      d = md5hh(d, a, b, c, x[i], 11, -358537222)
      c = md5hh(c, d, a, b, x[i + 3], 16, -722521979)
      b = md5hh(b, c, d, a, x[i + 6], 23, 76029189)
      a = md5hh(a, b, c, d, x[i + 9], 4, -640364487)
      d = md5hh(d, a, b, c, x[i + 12], 11, -421815835)
      c = md5hh(c, d, a, b, x[i + 15], 16, 530742520)
      b = md5hh(b, c, d, a, x[i + 2], 23, -995338651)

      a = md5ii(a, b, c, d, x[i], 6, -198630844)
      d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415)
      c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905)
      b = md5ii(b, c, d, a, x[i + 5], 21, -57434055)
      a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571)
      d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606)
      c = md5ii(c, d, a, b, x[i + 10], 15, -1051523)
      b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799)
      a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359)
      d = md5ii(d, a, b, c, x[i + 15], 10, -30611744)
      c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380)
      b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649)
      a = md5ii(a, b, c, d, x[i + 4], 6, -145523070)
      d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379)
      c = md5ii(c, d, a, b, x[i + 2], 15, 718787259)
      b = md5ii(b, c, d, a, x[i + 9], 21, -343485551)

      a = safeAdd(a, olda)
      b = safeAdd(b, oldb)
      c = safeAdd(c, oldc)
      d = safeAdd(d, oldd)
    }
    return [a, b, c, d]
  }

  /*
  * Convert an array of little-endian words to a string
  */
  function binl2rstr (input) {
    var i
    var output = ''
    var length32 = input.length * 32
    for (i = 0; i < length32; i += 8) {
      output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xff)
    }
    return output
  }

  /*
  * Convert a raw string to an array of little-endian words
  * Characters >255 have their high-byte silently ignored.
  */
  function rstr2binl (input) {
    var i
    var output = []
    output[(input.length >> 2) - 1] = undefined
    for (i = 0; i < output.length; i += 1) {
      output[i] = 0
    }
    var length8 = input.length * 8
    for (i = 0; i < length8; i += 8) {
      output[i >> 5] |= (input.charCodeAt(i / 8) & 0xff) << (i % 32)
    }
    return output
  }

  /*
  * Calculate the MD5 of a raw string
  */
  function rstrMD5 (s) {
    return binl2rstr(binlMD5(rstr2binl(s), s.length * 8))
  }

  /*
  * Calculate the HMAC-MD5, of a key and some data (raw strings)
  */
  function rstrHMACMD5 (key, data) {
    var i
    var bkey = rstr2binl(key)
    var ipad = []
    var opad = []
    var hash
    ipad[15] = opad[15] = undefined
    if (bkey.length > 16) {
      bkey = binlMD5(bkey, key.length * 8)
    }
    for (i = 0; i < 16; i += 1) {
      ipad[i] = bkey[i] ^ 0x36363636
      opad[i] = bkey[i] ^ 0x5c5c5c5c
    }
    hash = binlMD5(ipad.concat(rstr2binl(data)), 512 + data.length * 8)
    return binl2rstr(binlMD5(opad.concat(hash), 512 + 128))
  }

  /*
  * Convert a raw string to a hex string
  */
  function rstr2hex (input) {
    var hexTab = '0123456789abcdef'
    var output = ''
    var x
    var i
    for (i = 0; i < input.length; i += 1) {
      x = input.charCodeAt(i)
      output += hexTab.charAt((x >>> 4) & 0x0f) + hexTab.charAt(x & 0x0f)
    }
    return output
  }

  /*
  * Encode a string as utf-8
  */
  function str2rstrUTF8 (input) {
    return unescape(encodeURIComponent(input))
  }

  /*
  * Take string arguments and return either raw or hex encoded strings
  */
  function rawMD5 (s) {
    return rstrMD5(str2rstrUTF8(s))
  }
  function hexMD5 (s) {
    return rstr2hex(rawMD5(s))
  }
  function rawHMACMD5 (k, d) {
    return rstrHMACMD5(str2rstrUTF8(k), str2rstrUTF8(d))
  }
  function hexHMACMD5 (k, d) {
    return rstr2hex(rawHMACMD5(k, d))
  }

  function md5 (string, key, raw) {
    if (!key) {
      if (!raw) {
        return hexMD5(string)
      }
      return rawMD5(string)
    }
    if (!raw) {
      return hexHMACMD5(key, string)
    }
    return rawHMACMD5(key, string)
  }

  if (true) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return md5
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
  } else if (typeof module === 'object' && module.exports) {
    module.exports = md5
  } else {
    $.md5 = md5
  }
})(this)


/***/ }),
/* 361 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|  <div class=\"weui-msg\">\n|     <div class=\"weui-msg__icon-area\"><i class=\"weui-icon_msg\" :class=\"`weui-icon-${icon || 'success'}`\"></i></div>");

/***/ }),
/* 362 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_array_map__ = __webpack_require__(164);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_array_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_array_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_array_find__ = __webpack_require__(165);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_array_find___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_array_find__);



const specialMap = {
  '北京市': '110100',
  '天津市': '120100',
  '上海市': '310100',
  '重庆市': '500100'
}

/* harmony default export */ __webpack_exports__["default"] = (function (name, list) {
  let rs = __WEBPACK_IMPORTED_MODULE_0_array_map___default()(name, (one, index) => {
    let parent = ''
    if (index === 2) {
      // 可能存在区名一样的情况，比如南山区
      parent = __WEBPACK_IMPORTED_MODULE_1_array_find___default()(list, item => {
        return item.name === name[1]
      }) || { value: '__' }

      if (specialMap[name[0]]) {
        parent = {
          value: specialMap[name[0]]
        }
      }
      return __WEBPACK_IMPORTED_MODULE_1_array_find___default()(list, item => {
        return item.name === one && item.parent === parent.value
      })
    } else {
      if (index === 1 && specialMap[name[0]]) {
        return {
          value: specialMap[name[0]]
        }
      }
      return __WEBPACK_IMPORTED_MODULE_1_array_find___default()(list, item => {
        return item.name === one
      })
    }
  })

  return __WEBPACK_IMPORTED_MODULE_0_array_map___default()(rs, one => {
    return one ? one.value : '__'
  }).join(' ')
});


/***/ }),
/* 363 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony default export */ __webpack_exports__["default"] = (function (source, length = 3) {
  source = String(source).split(".");
  source[0] = source[0].replace(new RegExp('(\\d)(?=(\\d{'+length+'})+$)','ig'),"$1,");
  return source.join(".");
});


/***/ }),
/* 364 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony default export */ __webpack_exports__["default"] = (function (min, max){
  return Math.floor(Math.random() * (max - min + 1) + min)
});


/***/ }),
/* 365 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pad__ = __webpack_require__(166);




/* harmony default export */ __webpack_exports__["default"] = (function (start, end, padWidth = 2) {
  const rs = []
  while (start <= end) {
    rs.push(padWidth ? Object(__WEBPACK_IMPORTED_MODULE_0__pad__["default"])(start, padWidth) : start)
    start++
  }
  return rs
});


/***/ }),
/* 366 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div style=\"height:100px;font-size:100px;\"></div>\n| </template>");

/***/ }),
/* 367 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"weui-panel weui-panel_access\">\n|     <div class=\"weui-panel__hd\" v-if=\"header\" @click=\"onClickHeader\" v-html=\"header\">");

/***/ }),
/* 368 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-picker\">\n|     <flexbox :gutter=\"0\">");

/***/ }),
/* 369 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div v-click-outside=\"onClickedOutside\">\n|     <span ref=\"trigger\" @click=\"toggle\">");

/***/ }),
/* 370 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <transition\n|     :name=\"`vux-popup-animate-${position}`\">");

/***/ }),
/* 371 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-popup-header\" :class=\"showBottomBorder ? 'vux-1px-b' : ''\">\n|     <div class=\"vux-popup-header-left\" @click=\"$emit('on-click-left')\">");

/***/ }),
/* 372 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-cell-box\">\n|     <div class=\"weui-cell vux-tap-active\" :class=\"{'weui-cell_access': !disabled}\" @click=\"onClick\" v-show=\"showCell\">");

/***/ }),
/* 373 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <cell @click.native=\"show\" :title=\"title\" :value=\"currentValue\" :is-link=\"!readonly\" :value-align=\"valueAlign\" :border-intent=\"borderIntent\">\n|     <span class=\"vux-cell-placeholder\" v-if=\"!displayValue && placeholder\">{{ placeholder }}</span>");

/***/ }),
/* 374 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <!-- Root element of PhotoSwipe. Must have class pswp. -->\n|   <div class=\"pswp vux-previewer\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">");

/***/ }),
/* 375 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div>\n|     <canvas");

/***/ }),
/* 376 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"weui-cells_radio\" :class=\"disabled ? 'vux-radio-disabled' : ''\">\n|     <label class=\"weui-cell weui-cell_radio weui-check__label\" :for=\"`radio_${uuid}_${index}`\" v-for=\"(one, index) in options\">");

/***/ }),
/* 377 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-range-input-box\" style=\"position:relative;margin-right:30px;margin-left:50px;\">\n|     <input class=\"vux-range-input\" v-model.number=\"currentValue\">");

/***/ }),
/* 378 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-rater\">\n|     <input v-model=\"currentValue\" style=\"display:none\">");

/***/ }),
/* 379 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div :style=\"styles\">\n|     <div class=\"xs-container\">");

/***/ }),
/* 380 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div\n|     class=\"vux-search-box\"");

/***/ }),
/* 381 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|    <div\n|     class=\"vux-selector weui-cell\"");

/***/ }),
/* 382 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div style=\"display:none\"></div>\n| </template>");

/***/ }),
/* 383 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <span class=\"vux-spinner\" :class=\"className\" :style=\"styles\"></span>\n| </template>");

/***/ }),
/* 384 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n| \t<div class=\"vux-step\">\n|     <slot></slot>");

/***/ }),
/* 385 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n| <div class=\"vux-step-item\" :class=\" { 'vux-step-item-with-tail' : !currentStepLast} \">\n|   <div :class=\"'vux-step-item-tail ' + 'vux-step-item-tail-' + currentStatus\" v-show=\"!currentStepLast\" :style=\"{right: $parent.gutter}\"></div>");

/***/ }),
/* 386 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-sticky-box\">\n|     <slot></slot>");

/***/ }),
/* 387 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-swipeout\">\n|     <slot></slot>");

/***/ }),
/* 388 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <button class=\"vux-swipeout-button\"\n|   :class=\"{'vux-swipeout-button-primary': type === 'primary', 'vux-swipeout-button-warn': type === 'warn', 'vux-swipeout-button-default': type === 'default'}\" :style=\"{width: `${width}px`, backgroundColor: backgroundColor}\" @click=\"onButtonClick\" type=\"button\">");

/***/ }),
/* 389 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-swipeout-item\"\n|   @touchstart=\"start\"");

/***/ }),
/* 390 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-slider\">\n|     <div class=\"vux-swiper\" :style=\"{height: xheight}\">");

/***/ }),
/* 391 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-swiper-item\"><slot></slot></div>\n| </template>");

/***/ }),
/* 392 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div\n|     class=\"vux-tab-wrap\"");

/***/ }),
/* 393 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"weui-tabbar\">\n|     <slot></slot>");

/***/ }),
/* 394 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <a href=\"javascript:;\" class=\"weui-tabbar__item\" :class=\"{'weui-bar__item_on': isActive, 'vux-tabbar-simple': simple}\" @click=\"onItemClick(true)\">\n|     <div class=\"weui-tabbar__icon\" :class=\"[iconClass || $parent.iconClass, {'vux-reddot': showDot}]\" v-if=\"!simple\">");

/***/ }),
/* 395 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div\n|     class=\"vux-tab-item\"");

/***/ }),
/* 396 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_throttle__ = __webpack_require__(397);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_throttle___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash_throttle__);

/* harmony default export */ __webpack_exports__["default"] = (__WEBPACK_IMPORTED_MODULE_0_lodash_throttle___default.a);



/***/ }),
/* 397 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the `TypeError` message for "Functions" methods. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return root.Date.now();
};

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = toNumber(wait) || 0;
  if (isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        result = wait - timeSinceLastCall;

    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(now());
  }

  function debounced() {
    var time = now(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

/**
 * Creates a throttled function that only invokes `func` at most once per
 * every `wait` milliseconds. The throttled function comes with a `cancel`
 * method to cancel delayed `func` invocations and a `flush` method to
 * immediately invoke them. Provide `options` to indicate whether `func`
 * should be invoked on the leading and/or trailing edge of the `wait`
 * timeout. The `func` is invoked with the last arguments provided to the
 * throttled function. Subsequent calls to the throttled function return the
 * result of the last `func` invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the throttled function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.throttle` and `_.debounce`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to throttle.
 * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=true]
 *  Specify invoking on the leading edge of the timeout.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new throttled function.
 * @example
 *
 * // Avoid excessively updating the position while scrolling.
 * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
 *
 * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
 * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
 * jQuery(element).on('click', throttled);
 *
 * // Cancel the trailing throttled invocation.
 * jQuery(window).on('popstate', throttled.cancel);
 */
function throttle(func, wait, options) {
  var leading = true,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  if (isObject(options)) {
    leading = 'leading' in options ? !!options.leading : leading;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }
  return debounce(func, wait, {
    'leading': leading,
    'maxWait': wait,
    'trailing': trailing
  });
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && objectToString.call(value) == symbolTag);
}

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

module.exports = throttle;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(36)))

/***/ }),
/* 398 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n| \t<div class=\"vux-timeline\">\n| \t\t<ul>");

/***/ }),
/* 399 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n| \t<li class=\"vux-timeline-item\">\n| \t\t<div :class=\"['vux-timeline-item-color', {'vux-timeline-item-head': !isFirst,'vux-timeline-item-head-first': isFirst }]\" :style=\"headStyle\">");

/***/ }),
/* 400 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-group-tip\" :style=\"{'text-align':align}\">\n|     <slot></slot>");

/***/ }),
/* 401 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-toast\">\n|     <div class=\"weui-mask_transparent\" v-show=\"isShowMask && show\"></div>");

/***/ }),
/* 402 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_object_assign__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_object_assign___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_object_assign__);
throw new Error("Cannot find module \"../../components/toast\"");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__libs_plugin_helper__ = __webpack_require__(81);




let $vm
let watcher

const plugin = {
  install (vue, pluginOptions = {}) {
    const Toast = vue.extend(__WEBPACK_IMPORTED_MODULE_1__components_toast___default.a)

    if (!$vm) {
      $vm = new Toast({
        el: document.createElement('div')
      })
      document.body.appendChild($vm.$el)
    }

    const defaults = {}
    for (let i in $vm.$options.props) {
      if (i !== 'value') {
        defaults[i] = $vm.$options.props[i].default
      }
    }

    const toast = {
      show (options = {}) {
        // destroy watcher
        watcher && watcher()
        if (typeof options === 'string') {
          Object(__WEBPACK_IMPORTED_MODULE_2__libs_plugin_helper__["mergeOptions"])($vm, __WEBPACK_IMPORTED_MODULE_0_object_assign___default()({}, pluginOptions, {text: options}))
        } else if (typeof options === 'object') {
          Object(__WEBPACK_IMPORTED_MODULE_2__libs_plugin_helper__["mergeOptions"])($vm, __WEBPACK_IMPORTED_MODULE_0_object_assign___default()({}, pluginOptions, options))
        }
        if (typeof options === 'object' && options.onShow || options.onHide) {
          watcher = $vm.$watch('show', (val) => {
            val && options.onShow && options.onShow($vm)
            val === false && options.onHide && options.onHide($vm)
          })
        }
        $vm.show = true
      },
      text (text, position = 'default') {
        this.show({
          type: 'text',
          width: 'auto',
          position,
          text
        })
      },
      hide () {
        $vm.show = false
      },
      isVisible () {
        return $vm.show
      }
    }

    // all Vux's plugins are included in this.$vux
    if (!vue.$vux) {
      vue.$vux = {
        toast
      }
    } else {
      vue.$vux.toast = toast
    }

    vue.mixin({
      created: function () {
        this.$vux = vue.$vux
      }
    })
  }
}

/* harmony default export */ __webpack_exports__["default"] = (plugin);
const install = plugin.install
/* harmony export (immutable) */ __webpack_exports__["install"] = install;




/***/ }),
/* 403 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_array_map__ = __webpack_require__(164);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_array_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_array_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_array_find__ = __webpack_require__(165);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_array_find___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_array_find__);



/* harmony default export */ __webpack_exports__["default"] = (function (value, list, delimiter) {
  if (value && !list.length) {
    return ''
  }
  if (!delimiter) {
    delimiter = ' '
  }

  let rs = __WEBPACK_IMPORTED_MODULE_0_array_map___default()(value, (one, index) => {
    if (list.length && Object.prototype.toString.call(list[0]) === '[object Array]') {
      return __WEBPACK_IMPORTED_MODULE_1_array_find___default()(list[index], item => {
        return item.value === one
      })
    } else {
      return __WEBPACK_IMPORTED_MODULE_1_array_find___default()(list, item => {
        return item.value === one
      })
    }
  })
  rs = rs.filter(one => {
    return typeof one !== 'undefined'
  })
  return __WEBPACK_IMPORTED_MODULE_0_array_map___default()(rs, one => {
    return one.name
  }).join(delimiter).replace('--', '')
});



/***/ }),
/* 404 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <script>\n| import base from './mixin'\n| ");

/***/ }),
/* 405 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <script>\n| import { camelAttrs } from './util'\n| ");

/***/ }),
/* 406 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <script>\n| import base from './mixin'\n| ");

/***/ }),
/* 407 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template lang=\"html\">\n|   <div\n|     :style=\"{");

/***/ }),
/* 408 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <script>\n| import { camelAttrs } from './util'\n| ");

/***/ }),
/* 409 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"zy_media\">\n|     <video :poster=\"cover\" data-config='{\"mediaTitle\": \"《疯狂动物城》--腾讯视频\"}'>");

/***/ }),
/* 410 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"weui-tab\">\n|     <slot name=\"header\"></slot>");

/***/ }),
/* 411 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <script>\n| import { camelAttrs } from './util'\n| ");

/***/ }),
/* 412 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <script>\n| import base from './mixin'\n| ");

/***/ }),
/* 413 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <script>\n| const camel = function (key) {\n|   return key.replace(/(-[a-z])/g, function ($1) { return $1.toUpperCase().replace('-', '') })");

/***/ }),
/* 414 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <script>\n| export default {\n|   props: {");

/***/ }),
/* 415 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <script>\n| import { camelAttrs } from './util'\n| ");

/***/ }),
/* 416 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <script>\n| import { camelAttrs } from './util'\n| ");

/***/ }),
/* 417 */
/***/ (function(module, exports) {

module.exports = [{"name":"actionsheet","icon":"&#xe624;","category_en":"Feedback","category_zh-CN":"弹窗提示","category_order":998,"hasHome":false},{"name":"alert","icon":"&#xe603;","category_en":"Feedback","category_zh-CN":"弹窗提示","category_order":998,"hasHome":false},{"name":"badge","icon":"&#xe65b;","color":"#f74c31","category_en":"Data Display","category_zh-CN":"数据展示","category_order":998,"hasHome":false},{"name":"blur","icon":"&#xe640;","category_en":"Deprecated","category_zh-CN":"不再维护","category_order":998,"hasHome":false},{"name":"button-tab","icon":"&#xe659;","items":["button-tab","button-tab-item"],"category_en":"Navigation","category_zh-CN":"导航","category_order":998,"hasHome":false},{"name":"calendar","icon":"&#xe62b;","category_en":"Form","category_zh-CN":"表单","category_order":998,"hasHome":false},{"name":"card","icon":"&#xe658;","category_en":"Data Display","category_zh-CN":"数据展示","category_order":998,"hasHome":false},{"name":"cell-box","icon":"&#xe62a;","category_en":"Form","category_zh-CN":"表单","category_order":998,"hasHome":false},{"name":"cell-form-preview","icon":"&#xe62a;","category_en":"Form","category_zh-CN":"表单","category_order":998,"hasHome":false},{"name":"cell","icon":"&#xe62a;","category_en":"Form","category_zh-CN":"表单","category_order":998,"hasHome":false},{"name":"check-icon","icon":"&#xe619;","category_en":"Form","category_zh-CN":"表单","category_order":998,"hasHome":false},{"name":"checker","icon":"&#xe655;","items":["checker","checker-item"],"category_en":"Form","category_zh-CN":"表单","category_order":998,"hasHome":false},{"name":"checklist","icon":"&#xe61d;","category_en":"Form","category_zh-CN":"表单","category_order":998,"hasHome":false},{"name":"clocker","icon":"&#xe620;","category_en":"Data Display","category_zh-CN":"数据展示","category_order":998,"hasHome":false},{"name":"color-picker","icon":"&#xe63f;","color":"#f2c400","category_en":"Deprecated","category_zh-CN":"不再维护","category_order":999,"hasHome":false},{"name":"confirm","icon":"&#xe608;","category_en":"Feedback","category_zh-CN":"弹窗提示","category_order":998,"hasHome":false},{"name":"countdown","icon":"&#xe653;","category_en":"Deprecated","category_zh-CN":"不再维护","category_order":998,"hasHome":true},{"name":"countup","icon":"&#xe63e;","category_en":"Data Display","category_zh-CN":"数据展示","category_order":998,"hasHome":false},{"name":"datetime-range","icon":"&#xe60a;","category_en":"Form","category_zh-CN":"表单","category_order":998,"hasHome":false},{"name":"datetime-view","icon":"&#xe60a;","category_en":"Form","category_zh-CN":"表单","category_order":998,"hasHome":false},{"name":"datetime","icon":"&#xe60a;","category_en":"Form","category_zh-CN":"表单","category_order":998,"hasHome":false},{"name":"divider","icon":"&#xe65d;","category_en":"Layout","category_zh-CN":"布局","category_order":998,"hasHome":false},{"name":"drawer","icon":"&#xe62a;","category_en":"Navigation","category_zh-CN":"导航","category_order":998,"hasHome":false},{"name":"flexbox","icon":"&#xe61f;","items":["flexbox","flexbox-item"],"category_en":"Layout","category_zh-CN":"布局","category_order":2,"hasHome":false},{"name":"flow","icon":"&#xe656;","items":["flow","flow-state","flow-line"],"category_en":"Data Display","category_zh-CN":"数据展示","category_order":998,"hasHome":false},{"name":"form-preview","icon":"&#xe699;","category_en":"Form","category_zh-CN":"表单","category_order":998,"hasHome":false},{"name":"grid","icon":"&#xe661;","items":["grid","grid-item"],"category_en":"Layout","category_zh-CN":"布局","category_order":998,"hasHome":false},{"name":"group","icon":"&#xe62a;","category_en":"Form","category_zh-CN":"表单","category_order":998,"hasHome":false},{"name":"icon","icon":"&#xe619;","category_en":"Basic","category_zh-CN":"基础组件","category_order":998,"hasHome":false},{"name":"inline-calendar","icon":"&#xe62b;","category_en":"Form","category_zh-CN":"表单","category_order":998,"hasHome":false},{"name":"inline-loading","icon":"&#xe610;","category_en":"Feedback","category_zh-CN":"弹窗提示","category_order":998,"hasHome":false},{"name":"inline-x-number","icon":"&#xe605;","category_en":"Form","category_zh-CN":"表单","category_order":998,"hasHome":false},{"name":"inline-x-switch","icon":"&#xe61c;","category_en":"Form","category_zh-CN":"表单","category_order":998,"hasHome":false},{"name":"load-more","icon":"&#xe610;","category_en":"Feedback","category_zh-CN":"弹窗提示","category_order":998,"hasHome":false},{"name":"loading","icon":"&#xe610;","category_en":"Feedback","category_zh-CN":"弹窗提示","category_order":998,"hasHome":false},{"name":"marquee","icon":"&#xe662;","items":["marquee","marquee-item"],"category_en":"Data Display","category_zh-CN":"数据展示","category_order":998,"hasHome":false},{"name":"masker","icon":"&#xe651;","category_en":"Deprecated","category_zh-CN":"不再维护","category_order":998,"hasHome":false},{"name":"msg","icon":"&#xe619;","category_en":"Feedback","category_zh-CN":"弹窗提示","category_order":998,"hasHome":false},{"name":"panel","icon":"&#xe658;","category_en":"Data Display","category_zh-CN":"数据展示","category_order":998,"hasHome":false},{"name":"picker","icon":"&#xe627;","category_en":"Form","category_zh-CN":"表单","category_order":998,"hasHome":false},{"name":"popover","icon":"&#xe65f;","category_en":"Feedback","category_zh-CN":"弹窗提示","category_order":998,"hasHome":false},{"name":"popup-header","icon":"&#xe654;","category_en":"Feedback","category_zh-CN":"弹窗提示","category_order":998,"hasHome":false},{"name":"popup-picker","icon":"&#xe626;","category_en":"Form","category_zh-CN":"表单","category_order":998,"hasHome":false},{"name":"popup-radio","icon":"&#xe60f;","category_en":"Form","category_zh-CN":"表单","category_order":998,"hasHome":false},{"name":"popup","icon":"&#xe61e;","category_en":"Feedback","category_zh-CN":"弹窗提示","category_order":998,"hasHome":false},{"name":"previewer","icon":"&#xe65c;","category_en":"Data Display","category_zh-CN":"数据展示","category_order":998,"hasHome":false},{"name":"qrcode","icon":"&#xe65a;","category_en":"Data Display","category_zh-CN":"数据展示","category_order":998,"hasHome":false},{"name":"radio","icon":"&#xe60f;","category_en":"Form","category_zh-CN":"表单","category_order":998,"hasHome":false},{"name":"range","icon":"&#xe60b;","category_en":"Form","category_zh-CN":"表单","category_order":998,"hasHome":false},{"name":"rater","icon":"&#xe606;","color":"#FF9900","category_en":"Form","category_zh-CN":"表单","category_order":998,"hasHome":false},{"name":"scroller","icon":"&#xe641;","category_en":"Deprecated","category_zh-CN":"不再维护","category_order":999,"hasHome":false},{"name":"search","icon":"&#xe63b;","category_en":"Form","category_zh-CN":"表单","category_order":998,"hasHome":false},{"name":"selector","icon":"&#xe607;","category_en":"Form","category_zh-CN":"表单","category_order":998,"hasHome":false},{"name":"spinner","icon":"&#xe610;","category_en":"Feedback","category_zh-CN":"弹窗提示","category_order":998,"hasHome":false},{"name":"step","icon":"&#xe65e;","items":["step","step-item"],"category_en":"Data Display","category_zh-CN":"数据展示","category_order":998,"hasHome":false},{"name":"sticky","icon":"&#xe623;","category_en":"Layout","category_zh-CN":"布局","category_order":998,"hasHome":false},{"name":"swipeout","icon":"&#xe641;","items":["swipeout","swipeout-item","swipeout-button"],"category_en":"Form","category_zh-CN":"表单","category_order":998,"hasHome":false},{"name":"swiper","icon":"&#xe612;","category_en":"Data Display","category_zh-CN":"数据展示","category_order":998,"hasHome":false},{"name":"tab","icon":"&#xe615;","items":["tab","tab-item"],"category_en":"Navigation","category_zh-CN":"导航","category_order":998,"hasHome":false},{"name":"tabbar","icon":"&#xe657;","items":["tabbar","tabbar-item"],"category_en":"Navigation","category_zh-CN":"导航","category_order":998,"hasHome":false},{"name":"timeline","icon":"&#xe656;","category_en":"DataDisplay","category_zh-CN":"数据展示","category_order":998,"hasHome":false},{"name":"toast","icon":"&#xe625;","category_en":"Feedback","category_zh-CN":"弹窗提示","category_order":998,"hasHome":false},{"name":"v-chart","icon":"&#xe663;","items":["v-chart","v-line","v-area","v-bar","v-pie","v-point","v-scale","v-axis","v-guide","v-tooltip","v-legend","v-guide"],"category_en":"Chart","category_zh-CN":"图表","category_order":998,"hasHome":true},{"name":"view-box","icon":"&#xe641;","category_en":"Layout","category_zh-CN":"布局","category_order":998,"hasHome":false},{"name":"wechat-emotion","icon":"&#xe63c;","category_en":"Deprecated","category_zh-CN":"不再维护","category_order":999,"hasHome":false},{"name":"x-address","icon":"&#xe61b;","category_en":"Form","category_zh-CN":"表单","category_order":998,"hasHome":false},{"name":"x-button","icon":"&#xe616;","category_en":"Basic","category_zh-CN":"基础组件","category_order":998,"hasHome":false},{"name":"x-circle","icon":"&#xe63d;","category_en":"Chart","category_zh-CN":"图表","category_order":998,"hasHome":true},{"name":"x-dialog","icon":"&#xe608;","category_en":"Feedback","category_zh-CN":"弹窗提示","category_order":998,"hasHome":false},{"name":"x-header","icon":"&#xe654;","category_en":"Navigation","category_zh-CN":"导航","category_order":998,"hasHome":false},{"name":"x-icon","icon":"&#xe619;","category_en":"Basic","category_zh-CN":"基础组件","category_order":1,"hasHome":false},{"name":"x-img","icon":"&#xe602;","category_en":"Data Display","category_zh-CN":"数据展示","category_order":998,"hasHome":false},{"name":"x-input","icon":"&#xe614;","category_en":"Form","category_zh-CN":"表单","category_order":998,"hasHome":false},{"name":"x-number","icon":"&#xe605;","category_en":"Form","category_zh-CN":"表单","category_order":998,"hasHome":false},{"name":"x-progress","icon":"&#xe618;","category_en":"Data Display","category_zh-CN":"数据展示","category_order":998,"hasHome":false},{"name":"x-switch","icon":"&#xe61c;","category_en":"Form","category_zh-CN":"表单","category_order":998,"hasHome":false},{"name":"x-table","icon":"&#xe66d;","category_en":"Data Display","category_zh-CN":"数据展示","category_order":998,"hasHome":false},{"name":"x-textarea","icon":"&#xe611;","category_en":"Form","category_zh-CN":"表单","category_order":998,"hasHome":false}]

/***/ }),
/* 418 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-emotion\"><slot style=\"display:none;\"></slot></div>\n| </template>");

/***/ }),
/* 419 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
const wx = __webpack_require__(420).wx

const plugin = {
  install (Vue) {
    Vue.prototype.$wechat = wx
    Vue.wechat = wx
  },
  $wechat: wx
}

/* harmony default export */ __webpack_exports__["default"] = (plugin);
const install = plugin.install
/* harmony export (immutable) */ __webpack_exports__["install"] = install;



/***/ }),
/* 420 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wx", function() { return wx; });
let wx
!function (e, n) {
  wx = n(e)
}(window, function (e, n) {
  function i(n, i, t) {
    e.WeixinJSBridge ? WeixinJSBridge.invoke(n, o(i), function (e) {
      c(n, e, t)
    }) : u(n, t)
  }

  function t(n, i, t) {
    e.WeixinJSBridge ? WeixinJSBridge.on(n, function (e) {
      t && t.trigger && t.trigger(e), c(n, e, i)
    }) : t ? u(n, t) : u(n, i)
  }

  function o(e) {
    return e = e || {}, e.appId = C.appId, e.verifyAppId = C.appId, e.verifySignType = "sha1", e.verifyTimestamp = C.timestamp + "", e.verifyNonceStr = C.nonceStr, e.verifySignature = C.signature, e
  }

  function r(e) {
    return {
      timeStamp: e.timestamp + "",
      nonceStr: e.nonceStr,
      package: e.package,
      paySign: e.paySign,
      signType: e.signType || "SHA1"
    }
  }

  function a(e) {
    return e.postalCode = e.addressPostalCode, delete e.addressPostalCode, e.provinceName = e.proviceFirstStageName, delete e.proviceFirstStageName, e.cityName = e.addressCitySecondStageName, delete e.addressCitySecondStageName, e.countryName = e.addressCountiesThirdStageName, delete e.addressCountiesThirdStageName, e.detailInfo = e.addressDetailInfo, delete e.addressDetailInfo, e
  }

  function c(e, n, i) {
    "openEnterpriseChat" == e && (n.errCode = n.err_code), delete n.err_code, delete n.err_desc, delete n.err_detail;
    var t = n.errMsg;
    t || (t = n.err_msg, delete n.err_msg, t = s(e, t), n.errMsg = t), (i = i || {})._complete && (i._complete(n), delete i._complete), t = n.errMsg || "", C.debug && !i.isInnerInvoke && alert(JSON.stringify(n));
    var o = t.indexOf(":");
    switch (t.substring(o + 1)) {
    case "ok":
      i.success && i.success(n);
      break;
    case "cancel":
      i.cancel && i.cancel(n);
      break;
    default:
      i.fail && i.fail(n)
    }
    i.complete && i.complete(n)
  }

  function s(e, n) {
    var i = e,
      t = v[i];
    t && (i = t);
    var o = "ok";
    if (n) {
      var r = n.indexOf(":");
      "confirm" == (o = n.substring(r + 1)) && (o = "ok"), "failed" == o && (o = "fail"), -1 != o.indexOf("failed_") && (o = o.substring(7)), -1 != o.indexOf("fail_") && (o = o.substring(5)), "access denied" != (o = (o = o.replace(/_/g, " ")).toLowerCase()) && "no permission to execute" != o || (o = "permission denied"), "config" == i && "function not exist" == o && (o = "ok"), "" == o && (o = "fail")
    }
    return n = i + ":" + o
  }

  function d(e) {
    if (e) {
      for (var n = 0, i = e.length; n < i; ++n) {
        var t = e[n],
          o = h[t];
        o && (e[n] = o)
      }
      return e
    }
  }

  function u(e, n) {
    if (!(!C.debug || n && n.isInnerInvoke)) {
      var i = v[e];
      i && (e = i), n && n._complete && delete n._complete, console.log('"' + e + '",', n || "")
    }
  }

  function l(e) {
    if (!(w || T || C.debug || x < "6.0.2" || A.systemType < 0)) {
      var n = new Image;
      A.appId = C.appId, A.initTime = V.initEndTime - V.initStartTime, A.preVerifyTime = V.preVerifyEndTime - V.preVerifyStartTime, N.getNetworkType({
        isInnerInvoke: !0,
        success: function (e) {
          A.networkType = e.networkType;
          var i = "https://open.weixin.qq.com/sdk/report?v=" + A.version + "&o=" + A.isPreVerifyOk + "&s=" + A.systemType + "&c=" + A.clientVersion + "&a=" + A.appId + "&n=" + A.networkType + "&i=" + A.initTime + "&p=" + A.preVerifyTime + "&u=" + A.url;
          n.src = i
        }
      })
    }
  }

  function p() {
    return (new Date).getTime()
  }

  function f(n) {
    k && (e.WeixinJSBridge ? "preInject" === I.__wxjsjs__isPreInject ? I.addEventListener && I.addEventListener("WeixinJSBridgeReady", n, !1) : n() : I.addEventListener && I.addEventListener("WeixinJSBridgeReady", n, !1))
  }

  function m() {
    N.invoke || (N.invoke = function (n, i, t) {
      e.WeixinJSBridge && WeixinJSBridge.invoke(n, o(i), t)
    }, N.on = function (n, i) {
      e.WeixinJSBridge && WeixinJSBridge.on(n, i)
    })
  }

  function g(e) {
    if ("string" == typeof e && e.length > 0) {
      var n = e.split("?")[0],
        i = e.split("?")[1];
      return n += ".html", void 0 !== i ? n + "?" + i : n
    }
  }
  if (!e.jWeixin) {
    var h = {
        config: "preVerifyJSAPI",
        onMenuShareTimeline: "menu:share:timeline",
        onMenuShareAppMessage: "menu:share:appmessage",
        onMenuShareQQ: "menu:share:qq",
        onMenuShareWeibo: "menu:share:weiboApp",
        onMenuShareQZone: "menu:share:QZone",
        previewImage: "imagePreview",
        getLocation: "geoLocation",
        openProductSpecificView: "openProductViewWithPid",
        addCard: "batchAddCard",
        openCard: "batchViewCard",
        chooseWXPay: "getBrandWCPayRequest",
        openEnterpriseRedPacket: "getRecevieBizHongBaoRequest",
        startSearchBeacons: "startMonitoringBeacons",
        stopSearchBeacons: "stopMonitoringBeacons",
        onSearchBeacons: "onBeaconsInRange",
        consumeAndShareCard: "consumedShareCard",
        openAddress: "editAddress"
      },
      v = function () {
        var e = {};
        for (var n in h) e[h[n]] = n;
        return e
      }(),
      I = e.document,
      S = I.title,
      y = navigator.userAgent.toLowerCase(),
      _ = navigator.platform.toLowerCase(),
      w = !(!_.match("mac") && !_.match("win")),
      T = -1 != y.indexOf("wxdebugger"),
      k = -1 != y.indexOf("micromessenger"),
      M = -1 != y.indexOf("android"),
      P = -1 != y.indexOf("iphone") || -1 != y.indexOf("ipad"),
      x = function () {
        var e = y.match(/micromessenger\/(\d+\.\d+\.\d+)/) || y.match(/micromessenger\/(\d+\.\d+)/);
        return e ? e[1] : ""
      }(),
      V = {
        initStartTime: p(),
        initEndTime: 0,
        preVerifyStartTime: 0,
        preVerifyEndTime: 0
      },
      A = {
        version: 1,
        appId: "",
        initTime: 0,
        preVerifyTime: 0,
        networkType: "",
        isPreVerifyOk: 1,
        systemType: P ? 1 : M ? 2 : -1,
        clientVersion: x,
        url: encodeURIComponent(location.href)
      },
      C = {},
      L = {
        _completes: []
      },
      B = {
        state: 0,
        data: {}
      };
    f(function () {
      V.initEndTime = p()
    });
    var E = !1,
      O = [],
      N = {
        config: function (e) {
          C = e, u("config", e);
          var n = !1 !== C.check;
          f(function () {
            if (n) i(h.config, {
              verifyJsApiList: d(C.jsApiList)
            }, function () {
              L._complete = function (e) {
                V.preVerifyEndTime = p(), B.state = 1, B.data = e
              }, L.success = function (e) {
                A.isPreVerifyOk = 0
              }, L.fail = function (e) {
                L._fail ? L._fail(e) : B.state = -1
              };
              var e = L._completes;
              return e.push(function () {
                l()
              }), L.complete = function (n) {
                for (var i = 0, t = e.length; i < t; ++i) e[i]();
                L._completes = []
              }, L
            }()), V.preVerifyStartTime = p();
            else {
              B.state = 1;
              for (var e = L._completes, t = 0, o = e.length; t < o; ++t) e[t]();
              L._completes = []
            }
          }), m()
        },
        ready: function (e) {
          0 != B.state ? e() : (L._completes.push(e), !k && C.debug && e())
        },
        error: function (e) {
          x < "6.0.2" || (-1 == B.state ? e(B.data) : L._fail = e)
        },
        checkJsApi: function (e) {
          var n = function (e) {
            var n = e.checkResult;
            for (var i in n) {
              var t = v[i];
              t && (n[t] = n[i], delete n[i])
            }
            return e
          };
          i("checkJsApi", {
            jsApiList: d(e.jsApiList)
          }, (e._complete = function (e) {
            if (M) {
              var i = e.checkResult;
              i && (e.checkResult = JSON.parse(i))
            }
            e = n(e)
          }, e))
        },
        onMenuShareTimeline: function (e) {
          t(h.onMenuShareTimeline, {
            complete: function () {
              i("shareTimeline", {
                title: e.title || S,
                desc: e.title || S,
                img_url: e.imgUrl || "",
                link: e.link || location.href,
                type: e.type || "link",
                data_url: e.dataUrl || ""
              }, e)
            }
          }, e)
        },
        onMenuShareAppMessage: function (e) {
          t(h.onMenuShareAppMessage, {
            complete: function () {
              i("sendAppMessage", {
                title: e.title || S,
                desc: e.desc || "",
                link: e.link || location.href,
                img_url: e.imgUrl || "",
                type: e.type || "link",
                data_url: e.dataUrl || ""
              }, e)
            }
          }, e)
        },
        onMenuShareQQ: function (e) {
          t(h.onMenuShareQQ, {
            complete: function () {
              i("shareQQ", {
                title: e.title || S,
                desc: e.desc || "",
                img_url: e.imgUrl || "",
                link: e.link || location.href
              }, e)
            }
          }, e)
        },
        onMenuShareWeibo: function (e) {
          t(h.onMenuShareWeibo, {
            complete: function () {
              i("shareWeiboApp", {
                title: e.title || S,
                desc: e.desc || "",
                img_url: e.imgUrl || "",
                link: e.link || location.href
              }, e)
            }
          }, e)
        },
        onMenuShareQZone: function (e) {
          t(h.onMenuShareQZone, {
            complete: function () {
              i("shareQZone", {
                title: e.title || S,
                desc: e.desc || "",
                img_url: e.imgUrl || "",
                link: e.link || location.href
              }, e)
            }
          }, e)
        },
        startRecord: function (e) {
          i("startRecord", {}, e)
        },
        stopRecord: function (e) {
          i("stopRecord", {}, e)
        },
        onVoiceRecordEnd: function (e) {
          t("onVoiceRecordEnd", e)
        },
        playVoice: function (e) {
          i("playVoice", {
            localId: e.localId
          }, e)
        },
        pauseVoice: function (e) {
          i("pauseVoice", {
            localId: e.localId
          }, e)
        },
        stopVoice: function (e) {
          i("stopVoice", {
            localId: e.localId
          }, e)
        },
        onVoicePlayEnd: function (e) {
          t("onVoicePlayEnd", e)
        },
        uploadVoice: function (e) {
          i("uploadVoice", {
            localId: e.localId,
            isShowProgressTips: 0 == e.isShowProgressTips ? 0 : 1
          }, e)
        },
        downloadVoice: function (e) {
          i("downloadVoice", {
            serverId: e.serverId,
            isShowProgressTips: 0 == e.isShowProgressTips ? 0 : 1
          }, e)
        },
        translateVoice: function (e) {
          i("translateVoice", {
            localId: e.localId,
            isShowProgressTips: 0 == e.isShowProgressTips ? 0 : 1
          }, e)
        },
        chooseImage: function (e) {
          i("chooseImage", {
            scene: "1|2",
            count: e.count || 9,
            sizeType: e.sizeType || ["original", "compressed"],
            sourceType: e.sourceType || ["album", "camera"]
          }, (e._complete = function (e) {
            if (M) {
              var n = e.localIds;
              n && (e.localIds = JSON.parse(n))
            }
          }, e))
        },
        getLocation: function (e) {},
        previewImage: function (e) {
          i(h.previewImage, {
            current: e.current,
            urls: e.urls
          }, e)
        },
        uploadImage: function (e) {
          i("uploadImage", {
            localId: e.localId,
            isShowProgressTips: 0 == e.isShowProgressTips ? 0 : 1
          }, e)
        },
        downloadImage: function (e) {
          i("downloadImage", {
            serverId: e.serverId,
            isShowProgressTips: 0 == e.isShowProgressTips ? 0 : 1
          }, e)
        },
        getLocalImgData: function (e) {
          !1 === E ? (E = !0, i("getLocalImgData", {
            localId: e.localId
          }, (e._complete = function (e) {
            if (E = !1, O.length > 0) {
              var n = O.shift();
              wx.getLocalImgData(n)
            }
          }, e))) : O.push(e)
        },
        getNetworkType: function (e) {
          var n = function (e) {
            var n = e.errMsg;
            e.errMsg = "getNetworkType:ok";
            var i = e.subtype;
            if (delete e.subtype, i) e.networkType = i;
            else {
              var t = n.indexOf(":"),
                o = n.substring(t + 1);
              switch (o) {
              case "wifi":
              case "edge":
              case "wwan":
                e.networkType = o;
                break;
              default:
                e.errMsg = "getNetworkType:fail"
              }
            }
            return e
          };
          i("getNetworkType", {}, (e._complete = function (e) {
            e = n(e)
          }, e))
        },
        openLocation: function (e) {
          i("openLocation", {
            latitude: e.latitude,
            longitude: e.longitude,
            name: e.name || "",
            address: e.address || "",
            scale: e.scale || 28,
            infoUrl: e.infoUrl || ""
          }, e)
        },
        getLocation: function (e) {
          e = e || {}, i(h.getLocation, {
            type: e.type || "wgs84"
          }, (e._complete = function (e) {
            delete e.type
          }, e))
        },
        hideOptionMenu: function (e) {
          i("hideOptionMenu", {}, e)
        },
        showOptionMenu: function (e) {
          i("showOptionMenu", {}, e)
        },
        closeWindow: function (e) {
          i("closeWindow", {}, e = e || {})
        },
        hideMenuItems: function (e) {
          i("hideMenuItems", {
            menuList: e.menuList
          }, e)
        },
        showMenuItems: function (e) {
          i("showMenuItems", {
            menuList: e.menuList
          }, e)
        },
        hideAllNonBaseMenuItem: function (e) {
          i("hideAllNonBaseMenuItem", {}, e)
        },
        showAllNonBaseMenuItem: function (e) {
          i("showAllNonBaseMenuItem", {}, e)
        },
        scanQRCode: function (e) {
          i("scanQRCode", {
            needResult: (e = e || {}).needResult || 0,
            scanType: e.scanType || ["qrCode", "barCode"]
          }, (e._complete = function (e) {
            if (P) {
              var n = e.resultStr;
              if (n) {
                var i = JSON.parse(n);
                e.resultStr = i && i.scan_code && i.scan_code.scan_result
              }
            }
          }, e))
        },
        openAddress: function (e) {
          i(h.openAddress, {}, (e._complete = function (e) {
            e = a(e)
          }, e))
        },
        openProductSpecificView: function (e) {
          i(h.openProductSpecificView, {
            pid: e.productId,
            view_type: e.viewType || 0,
            ext_info: e.extInfo
          }, e)
        },
        addCard: function (e) {
          for (var n = e.cardList, t = [], o = 0, r = n.length; o < r; ++o) {
            var a = n[o],
              c = {
                card_id: a.cardId,
                card_ext: a.cardExt
              };
            t.push(c)
          }
          i(h.addCard, {
            card_list: t
          }, (e._complete = function (e) {
            var n = e.card_list;
            if (n) {
              for (var i = 0, t = (n = JSON.parse(n)).length; i < t; ++i) {
                var o = n[i];
                o.cardId = o.card_id, o.cardExt = o.card_ext, o.isSuccess = !!o.is_succ, delete o.card_id, delete o.card_ext, delete o.is_succ
              }
              e.cardList = n, delete e.card_list
            }
          }, e))
        },
        chooseCard: function (e) {
          i("chooseCard", {
            app_id: C.appId,
            location_id: e.shopId || "",
            sign_type: e.signType || "SHA1",
            card_id: e.cardId || "",
            card_type: e.cardType || "",
            card_sign: e.cardSign,
            time_stamp: e.timestamp + "",
            nonce_str: e.nonceStr
          }, (e._complete = function (e) {
            e.cardList = e.choose_card_info, delete e.choose_card_info
          }, e))
        },
        openCard: function (e) {
          for (var n = e.cardList, t = [], o = 0, r = n.length; o < r; ++o) {
            var a = n[o],
              c = {
                card_id: a.cardId,
                code: a.code
              };
            t.push(c)
          }
          i(h.openCard, {
            card_list: t
          }, e)
        },
        consumeAndShareCard: function (e) {
          i(h.consumeAndShareCard, {
            consumedCardId: e.cardId,
            consumedCode: e.code
          }, e)
        },
        chooseWXPay: function (e) {
          i(h.chooseWXPay, r(e), e)
        },
        openEnterpriseRedPacket: function (e) {
          i(h.openEnterpriseRedPacket, r(e), e)
        },
        startSearchBeacons: function (e) {
          i(h.startSearchBeacons, {
            ticket: e.ticket
          }, e)
        },
        stopSearchBeacons: function (e) {
          i(h.stopSearchBeacons, {}, e)
        },
        onSearchBeacons: function (e) {
          t(h.onSearchBeacons, e)
        },
        openEnterpriseChat: function (e) {
          i("openEnterpriseChat", {
            useridlist: e.userIds,
            chatname: e.groupName
          }, e)
        },
        launchMiniProgram: function (e) {
          i("launchMiniProgram", {
            targetAppId: e.targetAppId,
            path: g(e.path),
            envVersion: e.envVersion
          }, e)
        },
        miniProgram: {
          navigateBack: function (e) {
            e = e || {}, f(function () {
              i("invokeMiniProgramAPI", {
                name: "navigateBack",
                arg: {
                  delta: e.delta || 1
                }
              }, e)
            })
          },
          navigateTo: function (e) {
            f(function () {
              i("invokeMiniProgramAPI", {
                name: "navigateTo",
                arg: {
                  url: e.url
                }
              }, e)
            })
          },
          redirectTo: function (e) {
            f(function () {
              i("invokeMiniProgramAPI", {
                name: "redirectTo",
                arg: {
                  url: e.url
                }
              }, e)
            })
          },
          switchTab: function (e) {
            f(function () {
              i("invokeMiniProgramAPI", {
                name: "switchTab",
                arg: {
                  url: e.url
                }
              }, e)
            })
          },
          reLaunch: function (e) {
            f(function () {
              i("invokeMiniProgramAPI", {
                name: "reLaunch",
                arg: {
                  url: e.url
                }
              }, e)
            })
          },
          postMessage: function (e) {
            f(function () {
              i("invokeMiniProgramAPI", {
                name: "postMessage",
                arg: e.data || {}
              }, e)
            })
          },
          getEnv: function (n) {
            f(function () {
              n({
                miniprogram: "miniprogram" === e.__wxjs_environment
              })
            })
          }
        }
      },
      b = 1,
      R = {};
    return I.addEventListener("error", function (e) {
      if (!M) {
        var n = e.target,
          i = n.tagName,
          t = n.src;
        if (("IMG" == i || "VIDEO" == i || "AUDIO" == i || "SOURCE" == i) && -1 != t.indexOf("wxlocalresource://")) {
          e.preventDefault(), e.stopPropagation();
          var o = n["wx-id"];
          if (o || (o = b++, n["wx-id"] = o), R[o]) return;
          R[o] = !0, wx.ready(function () {
            wx.getLocalImgData({
              localId: t,
              success: function (e) {
                n.src = e.localData
              }
            })
          })
        }
      }
    }, !0), I.addEventListener("load", function (e) {
      if (!M) {
        var n = e.target,
          i = n.tagName;
        n.src;
        if ("IMG" == i || "VIDEO" == i || "AUDIO" == i || "SOURCE" == i) {
          var t = n["wx-id"];
          t && (R[t] = !1)
        }
      }
    }, !0), n && (e.wx = e.jWeixin = N), N
  }
});




/***/ }),
/* 421 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-week-calendar\">\n| ");

/***/ }),
/* 422 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div>\n|     <div class=\"weui-wepay-pay\">");

/***/ }),
/* 423 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <popup-picker\n|     :fixed-columns=\"hideDistrict ? 2 : 0\"");

/***/ }),
/* 424 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <button\n|     :style=\"buttonStyle\"");

/***/ }),
/* 425 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-circle\">\n|     <svg viewBox=\"0 0 100 100\">");

/***/ }),
/* 426 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div\n|     class=\"vux-x-dialog\"");

/***/ }),
/* 427 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-header\">\n|     <div class=\"vux-header-left\">");

/***/ }),
/* 428 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <p class=\"vux-x-hr\"></p>\n| </template>");

/***/ }),
/* 429 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <img :src=\"defaultSrc\" :data-src=\"currentSrc\" class=\"vux-x-img\"/>\n| </template>");

/***/ }),
/* 430 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n| \t<div class=\"vux-x-input weui-cell\"\n| \t\t:class=\"{");

/***/ }),
/* 431 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"weui-cell\">\n|     <div>");

/***/ }),
/* 432 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"weui-progress\">\n|     <div class=\"weui-progress__bar\">");

/***/ }),
/* 433 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"vux-x-switch weui-cell weui-cell_switch\">\n|     <div class=\"weui-cell__bd\">");

/***/ }),
/* 434 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <table class=\"vux-table\" :class=\"{'vux-table-bordered': fullBordered, 'vux-table-no-cell-bordered': !cellBordered, 'vux-table-no-content-bordered': !contentBordered}\">\n|     <slot></slot>");

/***/ }),
/* 435 */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n| <template>\n|   <div class=\"weui-cell vux-x-textarea\">\n|     <div class=\"weui-cell__hd\">");

/***/ }),
/* 436 */
/***/ (function(module, exports, __webpack_require__) {

var util = __webpack_require__(1);

var vec2 = __webpack_require__(17);

var Draggable = __webpack_require__(437);

var Eventful = __webpack_require__(73);

var SILENT = 'silent';

function makeEventPacket(eveType, targetInfo, event) {
  return {
    type: eveType,
    event: event,
    // target can only be an element that is not silent.
    target: targetInfo.target,
    // topTarget can be a silent element.
    topTarget: targetInfo.topTarget,
    cancelBubble: false,
    offsetX: event.zrX,
    offsetY: event.zrY,
    gestureEvent: event.gestureEvent,
    pinchX: event.pinchX,
    pinchY: event.pinchY,
    pinchScale: event.pinchScale,
    wheelDelta: event.zrDelta,
    zrByTouch: event.zrByTouch,
    which: event.which
  };
}

function EmptyProxy() {}

EmptyProxy.prototype.dispose = function () {};

var handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];
/**
 * @alias module:zrender/Handler
 * @constructor
 * @extends module:zrender/mixin/Eventful
 * @param {module:zrender/Storage} storage Storage instance.
 * @param {module:zrender/Painter} painter Painter instance.
 * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.
 * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).
 */

var Handler = function (storage, painter, proxy, painterRoot) {
  Eventful.call(this);
  this.storage = storage;
  this.painter = painter;
  this.painterRoot = painterRoot;
  proxy = proxy || new EmptyProxy();
  /**
   * Proxy of event. can be Dom, WebGLSurface, etc.
   */

  this.proxy = null;
  /**
   * {target, topTarget, x, y}
   * @private
   * @type {Object}
   */

  this._hovered = {};
  /**
   * @private
   * @type {Date}
   */

  this._lastTouchMoment;
  /**
   * @private
   * @type {number}
   */

  this._lastX;
  /**
   * @private
   * @type {number}
   */

  this._lastY;
  Draggable.call(this);
  this.setHandlerProxy(proxy);
};

Handler.prototype = {
  constructor: Handler,
  setHandlerProxy: function (proxy) {
    if (this.proxy) {
      this.proxy.dispose();
    }

    if (proxy) {
      util.each(handlerNames, function (name) {
        proxy.on && proxy.on(name, this[name], this);
      }, this); // Attach handler

      proxy.handler = this;
    }

    this.proxy = proxy;
  },
  mousemove: function (event) {
    var x = event.zrX;
    var y = event.zrY;
    var lastHovered = this._hovered;
    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call
    // (like 'setOption' or 'dispatchAction') in event handlers, we should find
    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.
    // See #6198.

    if (lastHoveredTarget && !lastHoveredTarget.__zr) {
      lastHovered = this.findHover(lastHovered.x, lastHovered.y);
      lastHoveredTarget = lastHovered.target;
    }

    var hovered = this._hovered = this.findHover(x, y);
    var hoveredTarget = hovered.target;
    var proxy = this.proxy;
    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element

    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {
      this.dispatchToElement(lastHovered, 'mouseout', event);
    } // Mouse moving on one element


    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element

    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {
      this.dispatchToElement(hovered, 'mouseover', event);
    }
  },
  mouseout: function (event) {
    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application
    // at the same level of painter.getViewportRoot() (e.g., tooltip
    // dom created by echarts), where 'globalout' event should not
    // be triggered when mouse enters these doms. (But 'mouseout'
    // should be triggered at the original hovered element as usual).

    var element = event.toElement || event.relatedTarget;
    var innerDom;

    do {
      element = element && element.parentNode;
    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));

    !innerDom && this.trigger('globalout', {
      event: event
    });
  },

  /**
   * Resize
   */
  resize: function (event) {
    this._hovered = {};
  },

  /**
   * Dispatch event
   * @param {string} eventName
   * @param {event=} eventArgs
   */
  dispatch: function (eventName, eventArgs) {
    var handler = this[eventName];
    handler && handler.call(this, eventArgs);
  },

  /**
   * Dispose
   */
  dispose: function () {
    this.proxy.dispose();
    this.storage = this.proxy = this.painter = null;
  },

  /**
   * 设置默认的cursor style
   * @param {string} [cursorStyle='default'] 例如 crosshair
   */
  setCursorStyle: function (cursorStyle) {
    var proxy = this.proxy;
    proxy.setCursor && proxy.setCursor(cursorStyle);
  },

  /**
   * 事件分发代理
   *
   * @private
   * @param {Object} targetInfo {target, topTarget} 目标图形元素
   * @param {string} eventName 事件名称
   * @param {Object} event 事件对象
   */
  dispatchToElement: function (targetInfo, eventName, event) {
    targetInfo = targetInfo || {};
    var el = targetInfo.target;

    if (el && el.silent) {
      return;
    }

    var eventHandler = 'on' + eventName;
    var eventPacket = makeEventPacket(eventName, targetInfo, event);

    while (el) {
      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));
      el.trigger(eventName, eventPacket);
      el = el.parent;

      if (eventPacket.cancelBubble) {
        break;
      }
    }

    if (!eventPacket.cancelBubble) {
      // 冒泡到顶级 zrender 对象
      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层
      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在

      this.painter && this.painter.eachOtherLayer(function (layer) {
        if (typeof layer[eventHandler] == 'function') {
          layer[eventHandler].call(layer, eventPacket);
        }

        if (layer.trigger) {
          layer.trigger(eventName, eventPacket);
        }
      });
    }
  },

  /**
   * @private
   * @param {number} x
   * @param {number} y
   * @param {module:zrender/graphic/Displayable} exclude
   * @return {model:zrender/Element}
   * @method
   */
  findHover: function (x, y, exclude) {
    var list = this.storage.getDisplayList();
    var out = {
      x: x,
      y: y
    };

    for (var i = list.length - 1; i >= 0; i--) {
      var hoverCheckResult;

      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode
      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {
        !out.topTarget && (out.topTarget = list[i]);

        if (hoverCheckResult !== SILENT) {
          out.target = list[i];
          break;
        }
      }
    }

    return out;
  }
}; // Common handlers

util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {
  Handler.prototype[name] = function (event) {
    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover
    var hovered = this.findHover(event.zrX, event.zrY);
    var hoveredTarget = hovered.target;

    if (name === 'mousedown') {
      this._downEl = hoveredTarget;
      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup

      this._upEl = hoveredTarget;
    } else if (name === 'mouseup') {
      this._upEl = hoveredTarget;
    } else if (name === 'click') {
      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,
      // including the case that `mousedown` - `mousemove` - `mouseup`,
      // which should be filtered, otherwise it will bring trouble to
      // pan and zoom.
      || !this._downPoint // Arbitrary value
      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {
        return;
      }

      this._downPoint = null;
    }

    this.dispatchToElement(hovered, name, event);
  };
});

function isHover(displayable, x, y) {
  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {
    var el = displayable;
    var isSilent;

    while (el) {
      // If clipped by ancestor.
      // FIXME: If clipPath has neither stroke nor fill,
      // el.clipPath.contain(x, y) will always return false.
      if (el.clipPath && !el.clipPath.contain(x, y)) {
        return false;
      }

      if (el.silent) {
        isSilent = true;
      }

      el = el.parent;
    }

    return isSilent ? SILENT : true;
  }

  return false;
}

util.mixin(Handler, Eventful);
util.mixin(Handler, Draggable);
var _default = Handler;
module.exports = _default;

/***/ }),
/* 437 */
/***/ (function(module, exports) {

// TODO Draggable for group
// FIXME Draggable on element which has parent rotation or scale
function Draggable() {
  this.on('mousedown', this._dragStart, this);
  this.on('mousemove', this._drag, this);
  this.on('mouseup', this._dragEnd, this);
  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;
  // this._draggingTarget = null;
  // this._x = 0;
  // this._y = 0;
}

Draggable.prototype = {
  constructor: Draggable,
  _dragStart: function (e) {
    var draggingTarget = e.target;

    if (draggingTarget && draggingTarget.draggable) {
      this._draggingTarget = draggingTarget;
      draggingTarget.dragging = true;
      this._x = e.offsetX;
      this._y = e.offsetY;
      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);
    }
  },
  _drag: function (e) {
    var draggingTarget = this._draggingTarget;

    if (draggingTarget) {
      var x = e.offsetX;
      var y = e.offsetY;
      var dx = x - this._x;
      var dy = y - this._y;
      this._x = x;
      this._y = y;
      draggingTarget.drift(dx, dy, e);
      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);
      var dropTarget = this.findHover(x, y, draggingTarget).target;
      var lastDropTarget = this._dropTarget;
      this._dropTarget = dropTarget;

      if (draggingTarget !== dropTarget) {
        if (lastDropTarget && dropTarget !== lastDropTarget) {
          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);
        }

        if (dropTarget && dropTarget !== lastDropTarget) {
          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);
        }
      }
    }
  },
  _dragEnd: function (e) {
    var draggingTarget = this._draggingTarget;

    if (draggingTarget) {
      draggingTarget.dragging = false;
    }

    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);

    if (this._dropTarget) {
      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);
    }

    this._draggingTarget = null;
    this._dropTarget = null;
  }
};

function param(target, e) {
  return {
    target: target,
    topTarget: e && e.topTarget
  };
}

var _default = Draggable;
module.exports = _default;

/***/ }),
/* 438 */
/***/ (function(module, exports, __webpack_require__) {

var util = __webpack_require__(1);

var env = __webpack_require__(20);

var Group = __webpack_require__(82);

var timsort = __webpack_require__(112);

// Use timsort because in most case elements are partially sorted
// https://jsfiddle.net/pissang/jr4x7mdm/8/
function shapeCompareFunc(a, b) {
  if (a.zlevel === b.zlevel) {
    if (a.z === b.z) {
      // if (a.z2 === b.z2) {
      //     // FIXME Slow has renderidx compare
      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement
      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012
      //     return a.__renderidx - b.__renderidx;
      // }
      return a.z2 - b.z2;
    }

    return a.z - b.z;
  }

  return a.zlevel - b.zlevel;
}
/**
 * 内容仓库 (M)
 * @alias module:zrender/Storage
 * @constructor
 */


var Storage = function () {
  // jshint ignore:line
  this._roots = [];
  this._displayList = [];
  this._displayListLen = 0;
};

Storage.prototype = {
  constructor: Storage,

  /**
   * @param  {Function} cb
   *
   */
  traverse: function (cb, context) {
    for (var i = 0; i < this._roots.length; i++) {
      this._roots[i].traverse(cb, context);
    }
  },

  /**
   * 返回所有图形的绘制队列
   * @param {boolean} [update=false] 是否在返回前更新该数组
   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效
   *
   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}
   * @return {Array.<module:zrender/graphic/Displayable>}
   */
  getDisplayList: function (update, includeIgnore) {
    includeIgnore = includeIgnore || false;

    if (update) {
      this.updateDisplayList(includeIgnore);
    }

    return this._displayList;
  },

  /**
   * 更新图形的绘制队列。
   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，
   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列
   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组
   */
  updateDisplayList: function (includeIgnore) {
    this._displayListLen = 0;
    var roots = this._roots;
    var displayList = this._displayList;

    for (var i = 0, len = roots.length; i < len; i++) {
      this._updateAndAddDisplayable(roots[i], null, includeIgnore);
    }

    displayList.length = this._displayListLen;
    env.canvasSupported && timsort(displayList, shapeCompareFunc);
  },
  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {
    if (el.ignore && !includeIgnore) {
      return;
    }

    el.beforeUpdate();

    if (el.__dirty) {
      el.update();
    }

    el.afterUpdate();
    var userSetClipPath = el.clipPath;

    if (userSetClipPath) {
      // FIXME 效率影响
      if (clipPaths) {
        clipPaths = clipPaths.slice();
      } else {
        clipPaths = [];
      }

      var currentClipPath = userSetClipPath;
      var parentClipPath = el; // Recursively add clip path

      while (currentClipPath) {
        // clipPath 的变换是基于使用这个 clipPath 的元素
        currentClipPath.parent = parentClipPath;
        currentClipPath.updateTransform();
        clipPaths.push(currentClipPath);
        parentClipPath = currentClipPath;
        currentClipPath = currentClipPath.clipPath;
      }
    }

    if (el.isGroup) {
      var children = el._children;

      for (var i = 0; i < children.length; i++) {
        var child = children[i]; // Force to mark as dirty if group is dirty
        // FIXME __dirtyPath ?

        if (el.__dirty) {
          child.__dirty = true;
        }

        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);
      } // Mark group clean here


      el.__dirty = false;
    } else {
      el.__clipPaths = clipPaths;
      this._displayList[this._displayListLen++] = el;
    }
  },

  /**
   * 添加图形(Shape)或者组(Group)到根节点
   * @param {module:zrender/Element} el
   */
  addRoot: function (el) {
    if (el.__storage === this) {
      return;
    }

    if (el instanceof Group) {
      el.addChildrenToStorage(this);
    }

    this.addToStorage(el);

    this._roots.push(el);
  },

  /**
   * 删除指定的图形(Shape)或者组(Group)
   * @param {string|Array.<string>} [el] 如果为空清空整个Storage
   */
  delRoot: function (el) {
    if (el == null) {
      // 不指定el清空
      for (var i = 0; i < this._roots.length; i++) {
        var root = this._roots[i];

        if (root instanceof Group) {
          root.delChildrenFromStorage(this);
        }
      }

      this._roots = [];
      this._displayList = [];
      this._displayListLen = 0;
      return;
    }

    if (el instanceof Array) {
      for (var i = 0, l = el.length; i < l; i++) {
        this.delRoot(el[i]);
      }

      return;
    }

    var idx = util.indexOf(this._roots, el);

    if (idx >= 0) {
      this.delFromStorage(el);

      this._roots.splice(idx, 1);

      if (el instanceof Group) {
        el.delChildrenFromStorage(this);
      }
    }
  },
  addToStorage: function (el) {
    if (el) {
      el.__storage = this;
      el.dirty(false);
    }

    return this;
  },
  delFromStorage: function (el) {
    if (el) {
      el.__storage = null;
    }

    return this;
  },

  /**
   * 清空并且释放Storage
   */
  dispose: function () {
    this._renderList = this._roots = null;
  },
  displayableSortFunc: shapeCompareFunc
};
var _default = Storage;
module.exports = _default;

/***/ }),
/* 439 */
/***/ (function(module, exports, __webpack_require__) {

var Animator = __webpack_require__(173);

var log = __webpack_require__(175);

var _util = __webpack_require__(1);

var isString = _util.isString;
var isFunction = _util.isFunction;
var isObject = _util.isObject;
var isArrayLike = _util.isArrayLike;
var indexOf = _util.indexOf;

/**
 * @alias modue:zrender/mixin/Animatable
 * @constructor
 */
var Animatable = function () {
  /**
   * @type {Array.<module:zrender/animation/Animator>}
   * @readOnly
   */
  this.animators = [];
};

Animatable.prototype = {
  constructor: Animatable,

  /**
   * 动画
   *
   * @param {string} path The path to fetch value from object, like 'a.b.c'.
   * @param {boolean} [loop] Whether to loop animation.
   * @return {module:zrender/animation/Animator}
   * @example:
   *     el.animate('style', false)
   *         .when(1000, {x: 10} )
   *         .done(function(){ // Animation done })
   *         .start()
   */
  animate: function (path, loop) {
    var target;
    var animatingShape = false;
    var el = this;
    var zr = this.__zr;

    if (path) {
      var pathSplitted = path.split('.');
      var prop = el; // If animating shape

      animatingShape = pathSplitted[0] === 'shape';

      for (var i = 0, l = pathSplitted.length; i < l; i++) {
        if (!prop) {
          continue;
        }

        prop = prop[pathSplitted[i]];
      }

      if (prop) {
        target = prop;
      }
    } else {
      target = el;
    }

    if (!target) {
      log('Property "' + path + '" is not existed in element ' + el.id);
      return;
    }

    var animators = el.animators;
    var animator = new Animator(target, loop);
    animator.during(function (target) {
      el.dirty(animatingShape);
    }).done(function () {
      // FIXME Animator will not be removed if use `Animator#stop` to stop animation
      animators.splice(indexOf(animators, animator), 1);
    });
    animators.push(animator); // If animate after added to the zrender

    if (zr) {
      zr.animation.addAnimator(animator);
    }

    return animator;
  },

  /**
   * 停止动画
   * @param {boolean} forwardToLast If move to last frame before stop
   */
  stopAnimation: function (forwardToLast) {
    var animators = this.animators;
    var len = animators.length;

    for (var i = 0; i < len; i++) {
      animators[i].stop(forwardToLast);
    }

    animators.length = 0;
    return this;
  },

  /**
   * Caution: this method will stop previous animation.
   * So do not use this method to one element twice before
   * animation starts, unless you know what you are doing.
   * @param {Object} target
   * @param {number} [time=500] Time in ms
   * @param {string} [easing='linear']
   * @param {number} [delay=0]
   * @param {Function} [callback]
   * @param {Function} [forceAnimate] Prevent stop animation and callback
   *        immediently when target values are the same as current values.
   *
   * @example
   *  // Animate position
   *  el.animateTo({
   *      position: [10, 10]
   *  }, function () { // done })
   *
   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing
   *  el.animateTo({
   *      shape: {
   *          width: 500
   *      },
   *      style: {
   *          fill: 'red'
   *      }
   *      position: [10, 10]
   *  }, 100, 100, 'cubicOut', function () { // done })
   */
  // TODO Return animation key
  animateTo: function (target, time, delay, easing, callback, forceAnimate) {
    // animateTo(target, time, easing, callback);
    if (isString(delay)) {
      callback = easing;
      easing = delay;
      delay = 0;
    } // animateTo(target, time, delay, callback);
    else if (isFunction(easing)) {
        callback = easing;
        easing = 'linear';
        delay = 0;
      } // animateTo(target, time, callback);
      else if (isFunction(delay)) {
          callback = delay;
          delay = 0;
        } // animateTo(target, callback)
        else if (isFunction(time)) {
            callback = time;
            time = 500;
          } // animateTo(target)
          else if (!time) {
              time = 500;
            } // Stop all previous animations


    this.stopAnimation();

    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start
    // if there is nothing to animate


    var animators = this.animators.slice();
    var count = animators.length;

    function done() {
      count--;

      if (!count) {
        callback && callback();
      }
    } // No animators. This should be checked before animators[i].start(),
    // because 'done' may be executed immediately if no need to animate.


    if (!count) {
      callback && callback();
    } // Start after all animators created
    // Incase any animator is done immediately when all animation properties are not changed


    for (var i = 0; i < animators.length; i++) {
      animators[i].done(done).start(easing, forceAnimate);
    }
  },

  /**
   * @private
   * @param {string} path=''
   * @param {Object} source=this
   * @param {Object} target
   * @param {number} [time=500]
   * @param {number} [delay=0]
   *
   * @example
   *  // Animate position
   *  el._animateToShallow({
   *      position: [10, 10]
   *  })
   *
   *  // Animate shape, style and position in 100ms, delayed 100ms
   *  el._animateToShallow({
   *      shape: {
   *          width: 500
   *      },
   *      style: {
   *          fill: 'red'
   *      }
   *      position: [10, 10]
   *  }, 100, 100)
   */
  _animateToShallow: function (path, source, target, time, delay) {
    var objShallow = {};
    var propertyCount = 0;

    for (var name in target) {
      if (!target.hasOwnProperty(name)) {
        continue;
      }

      if (source[name] != null) {
        if (isObject(target[name]) && !isArrayLike(target[name])) {
          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);
        } else {
          objShallow[name] = target[name];
          propertyCount++;
        }
      } else if (target[name] != null) {
        // Attr directly if not has property
        // FIXME, if some property not needed for element ?
        if (!path) {
          this.attr(name, target[name]);
        } else {
          // Shape or style
          var props = {};
          props[path] = {};
          props[path][name] = target[name];
          this.attr(props);
        }
      }
    }

    if (propertyCount > 0) {
      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);
    }

    return this;
  }
};
var _default = Animatable;
module.exports = _default;

/***/ }),
/* 440 */
/***/ (function(module, exports, __webpack_require__) {

var easingFuncs = __webpack_require__(441);

/**
 * 动画主控制器
 * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件
 * @config life(1000) 动画时长
 * @config delay(0) 动画延迟时间
 * @config loop(true)
 * @config gap(0) 循环的间隔时间
 * @config onframe
 * @config easing(optional)
 * @config ondestroy(optional)
 * @config onrestart(optional)
 *
 * TODO pause
 */
function Clip(options) {
  this._target = options.target; // 生命周期

  this._life = options.life || 1000; // 延时

  this._delay = options.delay || 0; // 开始时间
  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒

  this._initialized = false; // 是否循环

  this.loop = options.loop == null ? false : options.loop;
  this.gap = options.gap || 0;
  this.easing = options.easing || 'Linear';
  this.onframe = options.onframe;
  this.ondestroy = options.ondestroy;
  this.onrestart = options.onrestart;
  this._pausedTime = 0;
  this._paused = false;
}

Clip.prototype = {
  constructor: Clip,
  step: function (globalTime, deltaTime) {
    // Set startTime on first step, or _startTime may has milleseconds different between clips
    // PENDING
    if (!this._initialized) {
      this._startTime = globalTime + this._delay;
      this._initialized = true;
    }

    if (this._paused) {
      this._pausedTime += deltaTime;
      return;
    }

    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始

    if (percent < 0) {
      return;
    }

    percent = Math.min(percent, 1);
    var easing = this.easing;
    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;
    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;
    this.fire('frame', schedule); // 结束

    if (percent == 1) {
      if (this.loop) {
        this.restart(globalTime); // 重新开始周期
        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件

        return 'restart';
      } // 动画完成将这个控制器标识为待删除
      // 在Animation.update中进行批量删除


      this._needsRemove = true;
      return 'destroy';
    }

    return null;
  },
  restart: function (globalTime) {
    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;
    this._startTime = globalTime - remainder + this.gap;
    this._pausedTime = 0;
    this._needsRemove = false;
  },
  fire: function (eventType, arg) {
    eventType = 'on' + eventType;

    if (this[eventType]) {
      this[eventType](this._target, arg);
    }
  },
  pause: function () {
    this._paused = true;
  },
  resume: function () {
    this._paused = false;
  }
};
var _default = Clip;
module.exports = _default;

/***/ }),
/* 441 */
/***/ (function(module, exports) {

/**
 * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js
 * @see http://sole.github.io/tween.js/examples/03_graphs.html
 * @exports zrender/animation/easing
 */
var easing = {
  /**
  * @param {number} k
  * @return {number}
  */
  linear: function (k) {
    return k;
  },

  /**
  * @param {number} k
  * @return {number}
  */
  quadraticIn: function (k) {
    return k * k;
  },

  /**
  * @param {number} k
  * @return {number}
  */
  quadraticOut: function (k) {
    return k * (2 - k);
  },

  /**
  * @param {number} k
  * @return {number}
  */
  quadraticInOut: function (k) {
    if ((k *= 2) < 1) {
      return 0.5 * k * k;
    }

    return -0.5 * (--k * (k - 2) - 1);
  },
  // 三次方的缓动（t^3）

  /**
  * @param {number} k
  * @return {number}
  */
  cubicIn: function (k) {
    return k * k * k;
  },

  /**
  * @param {number} k
  * @return {number}
  */
  cubicOut: function (k) {
    return --k * k * k + 1;
  },

  /**
  * @param {number} k
  * @return {number}
  */
  cubicInOut: function (k) {
    if ((k *= 2) < 1) {
      return 0.5 * k * k * k;
    }

    return 0.5 * ((k -= 2) * k * k + 2);
  },
  // 四次方的缓动（t^4）

  /**
  * @param {number} k
  * @return {number}
  */
  quarticIn: function (k) {
    return k * k * k * k;
  },

  /**
  * @param {number} k
  * @return {number}
  */
  quarticOut: function (k) {
    return 1 - --k * k * k * k;
  },

  /**
  * @param {number} k
  * @return {number}
  */
  quarticInOut: function (k) {
    if ((k *= 2) < 1) {
      return 0.5 * k * k * k * k;
    }

    return -0.5 * ((k -= 2) * k * k * k - 2);
  },
  // 五次方的缓动（t^5）

  /**
  * @param {number} k
  * @return {number}
  */
  quinticIn: function (k) {
    return k * k * k * k * k;
  },

  /**
  * @param {number} k
  * @return {number}
  */
  quinticOut: function (k) {
    return --k * k * k * k * k + 1;
  },

  /**
  * @param {number} k
  * @return {number}
  */
  quinticInOut: function (k) {
    if ((k *= 2) < 1) {
      return 0.5 * k * k * k * k * k;
    }

    return 0.5 * ((k -= 2) * k * k * k * k + 2);
  },
  // 正弦曲线的缓动（sin(t)）

  /**
  * @param {number} k
  * @return {number}
  */
  sinusoidalIn: function (k) {
    return 1 - Math.cos(k * Math.PI / 2);
  },

  /**
  * @param {number} k
  * @return {number}
  */
  sinusoidalOut: function (k) {
    return Math.sin(k * Math.PI / 2);
  },

  /**
  * @param {number} k
  * @return {number}
  */
  sinusoidalInOut: function (k) {
    return 0.5 * (1 - Math.cos(Math.PI * k));
  },
  // 指数曲线的缓动（2^t）

  /**
  * @param {number} k
  * @return {number}
  */
  exponentialIn: function (k) {
    return k === 0 ? 0 : Math.pow(1024, k - 1);
  },

  /**
  * @param {number} k
  * @return {number}
  */
  exponentialOut: function (k) {
    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);
  },

  /**
  * @param {number} k
  * @return {number}
  */
  exponentialInOut: function (k) {
    if (k === 0) {
      return 0;
    }

    if (k === 1) {
      return 1;
    }

    if ((k *= 2) < 1) {
      return 0.5 * Math.pow(1024, k - 1);
    }

    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);
  },
  // 圆形曲线的缓动（sqrt(1-t^2)）

  /**
  * @param {number} k
  * @return {number}
  */
  circularIn: function (k) {
    return 1 - Math.sqrt(1 - k * k);
  },

  /**
  * @param {number} k
  * @return {number}
  */
  circularOut: function (k) {
    return Math.sqrt(1 - --k * k);
  },

  /**
  * @param {number} k
  * @return {number}
  */
  circularInOut: function (k) {
    if ((k *= 2) < 1) {
      return -0.5 * (Math.sqrt(1 - k * k) - 1);
    }

    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);
  },
  // 创建类似于弹簧在停止前来回振荡的动画

  /**
  * @param {number} k
  * @return {number}
  */
  elasticIn: function (k) {
    var s;
    var a = 0.1;
    var p = 0.4;

    if (k === 0) {
      return 0;
    }

    if (k === 1) {
      return 1;
    }

    if (!a || a < 1) {
      a = 1;
      s = p / 4;
    } else {
      s = p * Math.asin(1 / a) / (2 * Math.PI);
    }

    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));
  },

  /**
  * @param {number} k
  * @return {number}
  */
  elasticOut: function (k) {
    var s;
    var a = 0.1;
    var p = 0.4;

    if (k === 0) {
      return 0;
    }

    if (k === 1) {
      return 1;
    }

    if (!a || a < 1) {
      a = 1;
      s = p / 4;
    } else {
      s = p * Math.asin(1 / a) / (2 * Math.PI);
    }

    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;
  },

  /**
  * @param {number} k
  * @return {number}
  */
  elasticInOut: function (k) {
    var s;
    var a = 0.1;
    var p = 0.4;

    if (k === 0) {
      return 0;
    }

    if (k === 1) {
      return 1;
    }

    if (!a || a < 1) {
      a = 1;
      s = p / 4;
    } else {
      s = p * Math.asin(1 / a) / (2 * Math.PI);
    }

    if ((k *= 2) < 1) {
      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));
    }

    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;
  },
  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动

  /**
  * @param {number} k
  * @return {number}
  */
  backIn: function (k) {
    var s = 1.70158;
    return k * k * ((s + 1) * k - s);
  },

  /**
  * @param {number} k
  * @return {number}
  */
  backOut: function (k) {
    var s = 1.70158;
    return --k * k * ((s + 1) * k + s) + 1;
  },

  /**
  * @param {number} k
  * @return {number}
  */
  backInOut: function (k) {
    var s = 1.70158 * 1.525;

    if ((k *= 2) < 1) {
      return 0.5 * (k * k * ((s + 1) * k - s));
    }

    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);
  },
  // 创建弹跳效果

  /**
  * @param {number} k
  * @return {number}
  */
  bounceIn: function (k) {
    return 1 - easing.bounceOut(1 - k);
  },

  /**
  * @param {number} k
  * @return {number}
  */
  bounceOut: function (k) {
    if (k < 1 / 2.75) {
      return 7.5625 * k * k;
    } else if (k < 2 / 2.75) {
      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;
    } else if (k < 2.5 / 2.75) {
      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;
    } else {
      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;
    }
  },

  /**
  * @param {number} k
  * @return {number}
  */
  bounceInOut: function (k) {
    if (k < 0.5) {
      return easing.bounceIn(k * 2) * 0.5;
    }

    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;
  }
};
var _default = easing;
module.exports = _default;

/***/ }),
/* 442 */
/***/ (function(module, exports, __webpack_require__) {

var _config = __webpack_require__(83);

var devicePixelRatio = _config.devicePixelRatio;

var util = __webpack_require__(1);

var log = __webpack_require__(175);

var BoundingRect = __webpack_require__(30);

var timsort = __webpack_require__(112);

var Layer = __webpack_require__(443);

var requestAnimationFrame = __webpack_require__(179);

var Image = __webpack_require__(180);

var env = __webpack_require__(20);

var HOVER_LAYER_ZLEVEL = 1e5;
var CANVAS_ZLEVEL = 314159;
var EL_AFTER_INCREMENTAL_INC = 0.01;
var INCREMENTAL_INC = 0.001;

function parseInt10(val) {
  return parseInt(val, 10);
}

function isLayerValid(layer) {
  if (!layer) {
    return false;
  }

  if (layer.__builtin__) {
    return true;
  }

  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {
    return false;
  }

  return true;
}

var tmpRect = new BoundingRect(0, 0, 0, 0);
var viewRect = new BoundingRect(0, 0, 0, 0);

function isDisplayableCulled(el, width, height) {
  tmpRect.copy(el.getBoundingRect());

  if (el.transform) {
    tmpRect.applyTransform(el.transform);
  }

  viewRect.width = width;
  viewRect.height = height;
  return !tmpRect.intersect(viewRect);
}

function isClipPathChanged(clipPaths, prevClipPaths) {
  if (clipPaths == prevClipPaths) {
    // Can both be null or undefined
    return false;
  }

  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {
    return true;
  }

  for (var i = 0; i < clipPaths.length; i++) {
    if (clipPaths[i] !== prevClipPaths[i]) {
      return true;
    }
  }
}

function doClip(clipPaths, ctx) {
  for (var i = 0; i < clipPaths.length; i++) {
    var clipPath = clipPaths[i];
    clipPath.setTransform(ctx);
    ctx.beginPath();
    clipPath.buildPath(ctx, clipPath.shape);
    ctx.clip(); // Transform back

    clipPath.restoreTransform(ctx);
  }
}

function createRoot(width, height) {
  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬

  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';
  return domRoot;
}
/**
 * @alias module:zrender/Painter
 * @constructor
 * @param {HTMLElement} root 绘图容器
 * @param {module:zrender/Storage} storage
 * @param {Object} opts
 */


var Painter = function (root, storage, opts) {
  this.type = 'canvas'; // In node environment using node-canvas

  var singleCanvas = !root.nodeName // In node ?
  || root.nodeName.toUpperCase() === 'CANVAS';
  this._opts = opts = util.extend({}, opts || {});
  /**
   * @type {number}
   */

  this.dpr = opts.devicePixelRatio || devicePixelRatio;
  /**
   * @type {boolean}
   * @private
   */

  this._singleCanvas = singleCanvas;
  /**
   * 绘图容器
   * @type {HTMLElement}
   */

  this.root = root;
  var rootStyle = root.style;

  if (rootStyle) {
    rootStyle['-webkit-tap-highlight-color'] = 'transparent';
    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';
    root.innerHTML = '';
  }
  /**
   * @type {module:zrender/Storage}
   */


  this.storage = storage;
  /**
   * @type {Array.<number>}
   * @private
   */

  var zlevelList = this._zlevelList = [];
  /**
   * @type {Object.<string, module:zrender/Layer>}
   * @private
   */

  var layers = this._layers = {};
  /**
   * @type {Object.<string, Object>}
   * @private
   */

  this._layerConfig = {};
  /**
   * zrender will do compositing when root is a canvas and have multiple zlevels.
   */

  this._needsManuallyCompositing = false;

  if (!singleCanvas) {
    this._width = this._getSize(0);
    this._height = this._getSize(1);
    var domRoot = this._domRoot = createRoot(this._width, this._height);
    root.appendChild(domRoot);
  } else {
    var width = root.width;
    var height = root.height;

    if (opts.width != null) {
      width = opts.width;
    }

    if (opts.height != null) {
      height = opts.height;
    }

    this.dpr = opts.devicePixelRatio || 1; // Use canvas width and height directly

    root.width = width * this.dpr;
    root.height = height * this.dpr;
    this._width = width;
    this._height = height; // Create layer if only one given canvas
    // Device can be specified to create a high dpi image.

    var mainLayer = new Layer(root, this, this.dpr);
    mainLayer.__builtin__ = true;
    mainLayer.initContext(); // FIXME Use canvas width and height
    // mainLayer.resize(width, height);

    layers[CANVAS_ZLEVEL] = mainLayer;
    mainLayer.zlevel = CANVAS_ZLEVEL; // Not use common zlevel.

    zlevelList.push(CANVAS_ZLEVEL);
    this._domRoot = root;
  }
  /**
   * @type {module:zrender/Layer}
   * @private
   */


  this._hoverlayer = null;
  this._hoverElements = [];
};

Painter.prototype = {
  constructor: Painter,
  getType: function () {
    return 'canvas';
  },

  /**
   * If painter use a single canvas
   * @return {boolean}
   */
  isSingleCanvas: function () {
    return this._singleCanvas;
  },

  /**
   * @return {HTMLDivElement}
   */
  getViewportRoot: function () {
    return this._domRoot;
  },
  getViewportRootOffset: function () {
    var viewportRoot = this.getViewportRoot();

    if (viewportRoot) {
      return {
        offsetLeft: viewportRoot.offsetLeft || 0,
        offsetTop: viewportRoot.offsetTop || 0
      };
    }
  },

  /**
   * 刷新
   * @param {boolean} [paintAll=false] 强制绘制所有displayable
   */
  refresh: function (paintAll) {
    var list = this.storage.getDisplayList(true);
    var zlevelList = this._zlevelList;
    this._redrawId = Math.random();

    this._paintList(list, paintAll, this._redrawId); // Paint custum layers


    for (var i = 0; i < zlevelList.length; i++) {
      var z = zlevelList[i];
      var layer = this._layers[z];

      if (!layer.__builtin__ && layer.refresh) {
        var clearColor = i === 0 ? this._backgroundColor : null;
        layer.refresh(clearColor);
      }
    }

    this.refreshHover();
    return this;
  },
  addHover: function (el, hoverStyle) {
    if (el.__hoverMir) {
      return;
    }

    var elMirror = new el.constructor({
      style: el.style,
      shape: el.shape
    });
    elMirror.__from = el;
    el.__hoverMir = elMirror;
    elMirror.setStyle(hoverStyle);

    this._hoverElements.push(elMirror);
  },
  removeHover: function (el) {
    var elMirror = el.__hoverMir;
    var hoverElements = this._hoverElements;
    var idx = util.indexOf(hoverElements, elMirror);

    if (idx >= 0) {
      hoverElements.splice(idx, 1);
    }

    el.__hoverMir = null;
  },
  clearHover: function (el) {
    var hoverElements = this._hoverElements;

    for (var i = 0; i < hoverElements.length; i++) {
      var from = hoverElements[i].__from;

      if (from) {
        from.__hoverMir = null;
      }
    }

    hoverElements.length = 0;
  },
  refreshHover: function () {
    var hoverElements = this._hoverElements;
    var len = hoverElements.length;
    var hoverLayer = this._hoverlayer;
    hoverLayer && hoverLayer.clear();

    if (!len) {
      return;
    }

    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel
    // FIXME?

    if (!hoverLayer) {
      hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);
    }

    var scope = {};
    hoverLayer.ctx.save();

    for (var i = 0; i < len;) {
      var el = hoverElements[i];
      var originalEl = el.__from; // Original el is removed
      // PENDING

      if (!(originalEl && originalEl.__zr)) {
        hoverElements.splice(i, 1);
        originalEl.__hoverMir = null;
        len--;
        continue;
      }

      i++; // Use transform
      // FIXME style and shape ?

      if (!originalEl.invisible) {
        el.transform = originalEl.transform;
        el.invTransform = originalEl.invTransform;
        el.__clipPaths = originalEl.__clipPaths; // el.

        this._doPaintEl(el, hoverLayer, true, scope);
      }
    }

    hoverLayer.ctx.restore();
  },
  getHoverLayer: function () {
    return this.getLayer(HOVER_LAYER_ZLEVEL);
  },
  _paintList: function (list, paintAll, redrawId) {
    if (this._redrawId !== redrawId) {
      return;
    }

    paintAll = paintAll || false;

    this._updateLayerStatus(list);

    var finished = this._doPaintList(list, paintAll);

    if (this._needsManuallyCompositing) {
      this._compositeManually();
    }

    if (!finished) {
      var self = this;
      requestAnimationFrame(function () {
        self._paintList(list, paintAll, redrawId);
      });
    }
  },
  _compositeManually: function () {
    var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;
    var width = this._domRoot.width;
    var height = this._domRoot.height;
    ctx.clearRect(0, 0, width, height); // PENDING, If only builtin layer?

    this.eachBuiltinLayer(function (layer) {
      if (layer.virtual) {
        ctx.drawImage(layer.dom, 0, 0, width, height);
      }
    });
  },
  _doPaintList: function (list, paintAll) {
    var layerList = [];

    for (var zi = 0; zi < this._zlevelList.length; zi++) {
      var zlevel = this._zlevelList[zi];
      var layer = this._layers[zlevel];

      if (layer.__builtin__ && layer !== this._hoverlayer && (layer.__dirty || paintAll)) {
        layerList.push(layer);
      }
    }

    var finished = true;

    for (var k = 0; k < layerList.length; k++) {
      var layer = layerList[k];
      var ctx = layer.ctx;
      var scope = {};
      ctx.save();
      var start = paintAll ? layer.__startIndex : layer.__drawIndex;
      var useTimer = !paintAll && layer.incremental && Date.now;
      var startTime = useTimer && Date.now();
      var clearColor = layer.zlevel === this._zlevelList[0] ? this._backgroundColor : null; // All elements in this layer are cleared.

      if (layer.__startIndex === layer.__endIndex) {
        layer.clear(false, clearColor);
      } else if (start === layer.__startIndex) {
        var firstEl = list[start];

        if (!firstEl.incremental || !firstEl.notClear || paintAll) {
          layer.clear(false, clearColor);
        }
      }

      if (start === -1) {
        console.error('For some unknown reason. drawIndex is -1');
        start = layer.__startIndex;
      }

      for (var i = start; i < layer.__endIndex; i++) {
        var el = list[i];

        this._doPaintEl(el, layer, paintAll, scope);

        el.__dirty = false;

        if (useTimer) {
          // Date.now can be executed in 13,025,305 ops/second.
          var dTime = Date.now() - startTime; // Give 15 millisecond to draw.
          // The rest elements will be drawn in the next frame.

          if (dTime > 15) {
            break;
          }
        }
      }

      layer.__drawIndex = i;

      if (layer.__drawIndex < layer.__endIndex) {
        finished = false;
      }

      if (scope.prevElClipPaths) {
        // Needs restore the state. If last drawn element is in the clipping area.
        ctx.restore();
      }

      ctx.restore();
    }

    if (env.wxa) {
      // Flush for weixin application
      util.each(this._layers, function (layer) {
        if (layer && layer.ctx && layer.ctx.draw) {
          layer.ctx.draw();
        }
      });
    }

    return finished;
  },
  _doPaintEl: function (el, currentLayer, forcePaint, scope) {
    var ctx = currentLayer.ctx;
    var m = el.transform;

    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element
    !el.invisible // Ignore transparent element
    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas
    // Draw a scale 0 element can cause all following draw wrong
    // And setTransform with scale 0 will cause set back transform failed.
    && !(m && !m[0] && !m[3]) // Ignore culled element
    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {
      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements

      if (!scope.prevElClipPaths || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {
        // If has previous clipping state, restore from it
        if (scope.prevElClipPaths) {
          currentLayer.ctx.restore();
          scope.prevElClipPaths = null; // Reset prevEl since context has been restored

          scope.prevEl = null;
        } // New clipping state


        if (clipPaths) {
          ctx.save();
          doClip(clipPaths, ctx);
          scope.prevElClipPaths = clipPaths;
        }
      }

      el.beforeBrush && el.beforeBrush(ctx);
      el.brush(ctx, scope.prevEl || null);
      scope.prevEl = el;
      el.afterBrush && el.afterBrush(ctx);
    }
  },

  /**
   * 获取 zlevel 所在层，如果不存在则会创建一个新的层
   * @param {number} zlevel
   * @param {boolean} virtual Virtual layer will not be inserted into dom.
   * @return {module:zrender/Layer}
   */
  getLayer: function (zlevel, virtual) {
    if (this._singleCanvas && !this._needsManuallyCompositing) {
      zlevel = CANVAS_ZLEVEL;
    }

    var layer = this._layers[zlevel];

    if (!layer) {
      // Create a new layer
      layer = new Layer('zr_' + zlevel, this, this.dpr);
      layer.zlevel = zlevel;
      layer.__builtin__ = true;

      if (this._layerConfig[zlevel]) {
        util.merge(layer, this._layerConfig[zlevel], true);
      }

      if (virtual) {
        layer.virtual = virtual;
      }

      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document
      // Or excanvas will get 0px clientWidth and clientHeight

      layer.initContext();
    }

    return layer;
  },
  insertLayer: function (zlevel, layer) {
    var layersMap = this._layers;
    var zlevelList = this._zlevelList;
    var len = zlevelList.length;
    var prevLayer = null;
    var i = -1;
    var domRoot = this._domRoot;

    if (layersMap[zlevel]) {
      log('ZLevel ' + zlevel + ' has been used already');
      return;
    } // Check if is a valid layer


    if (!isLayerValid(layer)) {
      log('Layer of zlevel ' + zlevel + ' is not valid');
      return;
    }

    if (len > 0 && zlevel > zlevelList[0]) {
      for (i = 0; i < len - 1; i++) {
        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {
          break;
        }
      }

      prevLayer = layersMap[zlevelList[i]];
    }

    zlevelList.splice(i + 1, 0, zlevel);
    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.
    // (It can be a WebGL layer and assigned to a ZImage element)
    // But it still under management of zrender.

    if (!layer.virtual) {
      if (prevLayer) {
        var prevDom = prevLayer.dom;

        if (prevDom.nextSibling) {
          domRoot.insertBefore(layer.dom, prevDom.nextSibling);
        } else {
          domRoot.appendChild(layer.dom);
        }
      } else {
        if (domRoot.firstChild) {
          domRoot.insertBefore(layer.dom, domRoot.firstChild);
        } else {
          domRoot.appendChild(layer.dom);
        }
      }
    }
  },
  // Iterate each layer
  eachLayer: function (cb, context) {
    var zlevelList = this._zlevelList;
    var z;
    var i;

    for (i = 0; i < zlevelList.length; i++) {
      z = zlevelList[i];
      cb.call(context, this._layers[z], z);
    }
  },
  // Iterate each buildin layer
  eachBuiltinLayer: function (cb, context) {
    var zlevelList = this._zlevelList;
    var layer;
    var z;
    var i;

    for (i = 0; i < zlevelList.length; i++) {
      z = zlevelList[i];
      layer = this._layers[z];

      if (layer.__builtin__) {
        cb.call(context, layer, z);
      }
    }
  },
  // Iterate each other layer except buildin layer
  eachOtherLayer: function (cb, context) {
    var zlevelList = this._zlevelList;
    var layer;
    var z;
    var i;

    for (i = 0; i < zlevelList.length; i++) {
      z = zlevelList[i];
      layer = this._layers[z];

      if (!layer.__builtin__) {
        cb.call(context, layer, z);
      }
    }
  },

  /**
   * 获取所有已创建的层
   * @param {Array.<module:zrender/Layer>} [prevLayer]
   */
  getLayers: function () {
    return this._layers;
  },
  _updateLayerStatus: function (list) {
    this.eachBuiltinLayer(function (layer, z) {
      layer.__dirty = layer.__used = false;
    });

    function updatePrevLayer(idx) {
      if (prevLayer) {
        if (prevLayer.__endIndex !== idx) {
          prevLayer.__dirty = true;
        }

        prevLayer.__endIndex = idx;
      }
    }

    if (this._singleCanvas) {
      for (var i = 1; i < list.length; i++) {
        var el = list[i];

        if (el.zlevel !== list[i - 1].zlevel || el.incremental) {
          this._needsManuallyCompositing = true;
          break;
        }
      }
    }

    var prevLayer = null;
    var incrementalLayerCount = 0;

    for (var i = 0; i < list.length; i++) {
      var el = list[i];
      var zlevel = el.zlevel;
      var layer; // PENDING If change one incremental element style ?
      // TODO Where there are non-incremental elements between incremental elements.

      if (el.incremental) {
        layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);
        layer.incremental = true;
        incrementalLayerCount = 1;
      } else {
        layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);
      }

      if (!layer.__builtin__) {
        log('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);
      }

      if (layer !== prevLayer) {
        layer.__used = true;

        if (layer.__startIndex !== i) {
          layer.__dirty = true;
        }

        layer.__startIndex = i;

        if (!layer.incremental) {
          layer.__drawIndex = i;
        } else {
          // Mark layer draw index needs to update.
          layer.__drawIndex = -1;
        }

        updatePrevLayer(i);
        prevLayer = layer;
      }

      if (el.__dirty) {
        layer.__dirty = true;

        if (layer.incremental && layer.__drawIndex < 0) {
          // Start draw from the first dirty element.
          layer.__drawIndex = i;
        }
      }
    }

    updatePrevLayer(i);
    this.eachBuiltinLayer(function (layer, z) {
      // Used in last frame but not in this frame. Needs clear
      if (!layer.__used && layer.getElementCount() > 0) {
        layer.__dirty = true;
        layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;
      } // For incremental layer. In case start index changed and no elements are dirty.


      if (layer.__dirty && layer.__drawIndex < 0) {
        layer.__drawIndex = layer.__startIndex;
      }
    });
  },

  /**
   * 清除hover层外所有内容
   */
  clear: function () {
    this.eachBuiltinLayer(this._clearLayer);
    return this;
  },
  _clearLayer: function (layer) {
    layer.clear();
  },
  setBackgroundColor: function (backgroundColor) {
    this._backgroundColor = backgroundColor;
  },

  /**
   * 修改指定zlevel的绘制参数
   *
   * @param {string} zlevel
   * @param {Object} config 配置对象
   * @param {string} [config.clearColor=0] 每次清空画布的颜色
   * @param {string} [config.motionBlur=false] 是否开启动态模糊
   * @param {number} [config.lastFrameAlpha=0.7]
   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显
   */
  configLayer: function (zlevel, config) {
    if (config) {
      var layerConfig = this._layerConfig;

      if (!layerConfig[zlevel]) {
        layerConfig[zlevel] = config;
      } else {
        util.merge(layerConfig[zlevel], config, true);
      }

      for (var i = 0; i < this._zlevelList.length; i++) {
        var _zlevel = this._zlevelList[i];

        if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {
          var layer = this._layers[_zlevel];
          util.merge(layer, layerConfig[zlevel], true);
        }
      }
    }
  },

  /**
   * 删除指定层
   * @param {number} zlevel 层所在的zlevel
   */
  delLayer: function (zlevel) {
    var layers = this._layers;
    var zlevelList = this._zlevelList;
    var layer = layers[zlevel];

    if (!layer) {
      return;
    }

    layer.dom.parentNode.removeChild(layer.dom);
    delete layers[zlevel];
    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);
  },

  /**
   * 区域大小变化后重绘
   */
  resize: function (width, height) {
    if (!this._domRoot.style) {
      // Maybe in node or worker
      if (width == null || height == null) {
        return;
      }

      this._width = width;
      this._height = height;
      this.getLayer(CANVAS_ZLEVEL).resize(width, height);
    } else {
      var domRoot = this._domRoot; // FIXME Why ?

      domRoot.style.display = 'none'; // Save input w/h

      var opts = this._opts;
      width != null && (opts.width = width);
      height != null && (opts.height = height);
      width = this._getSize(0);
      height = this._getSize(1);
      domRoot.style.display = ''; // 优化没有实际改变的resize

      if (this._width != width || height != this._height) {
        domRoot.style.width = width + 'px';
        domRoot.style.height = height + 'px';

        for (var id in this._layers) {
          if (this._layers.hasOwnProperty(id)) {
            this._layers[id].resize(width, height);
          }
        }

        util.each(this._progressiveLayers, function (layer) {
          layer.resize(width, height);
        });
        this.refresh(true);
      }

      this._width = width;
      this._height = height;
    }

    return this;
  },

  /**
   * 清除单独的一个层
   * @param {number} zlevel
   */
  clearLayer: function (zlevel) {
    var layer = this._layers[zlevel];

    if (layer) {
      layer.clear();
    }
  },

  /**
   * 释放
   */
  dispose: function () {
    this.root.innerHTML = '';
    this.root = this.storage = this._domRoot = this._layers = null;
  },

  /**
   * Get canvas which has all thing rendered
   * @param {Object} opts
   * @param {string} [opts.backgroundColor]
   * @param {number} [opts.pixelRatio]
   */
  getRenderedCanvas: function (opts) {
    opts = opts || {};

    if (this._singleCanvas && !this._compositeManually) {
      return this._layers[CANVAS_ZLEVEL].dom;
    }

    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);
    imageLayer.initContext();
    imageLayer.clear(false, opts.backgroundColor || this._backgroundColor);

    if (opts.pixelRatio <= this.dpr) {
      this.refresh();
      var width = imageLayer.dom.width;
      var height = imageLayer.dom.height;
      var ctx = imageLayer.ctx;
      this.eachLayer(function (layer) {
        if (layer.__builtin__) {
          ctx.drawImage(layer.dom, 0, 0, width, height);
        } else if (layer.renderToCanvas) {
          imageLayer.ctx.save();
          layer.renderToCanvas(imageLayer.ctx);
          imageLayer.ctx.restore();
        }
      });
    } else {
      // PENDING, echarts-gl and incremental rendering.
      var scope = {};
      var displayList = this.storage.getDisplayList(true);

      for (var i = 0; i < displayList.length; i++) {
        var el = displayList[i];

        this._doPaintEl(el, imageLayer, true, scope);
      }
    }

    return imageLayer.dom;
  },

  /**
   * 获取绘图区域宽度
   */
  getWidth: function () {
    return this._width;
  },

  /**
   * 获取绘图区域高度
   */
  getHeight: function () {
    return this._height;
  },
  _getSize: function (whIdx) {
    var opts = this._opts;
    var wh = ['width', 'height'][whIdx];
    var cwh = ['clientWidth', 'clientHeight'][whIdx];
    var plt = ['paddingLeft', 'paddingTop'][whIdx];
    var prb = ['paddingRight', 'paddingBottom'][whIdx];

    if (opts[wh] != null && opts[wh] !== 'auto') {
      return parseFloat(opts[wh]);
    }

    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.

    var stl = document.defaultView.getComputedStyle(root);
    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;
  },
  pathToImage: function (path, dpr) {
    dpr = dpr || this.dpr;
    var canvas = document.createElement('canvas');
    var ctx = canvas.getContext('2d');
    var rect = path.getBoundingRect();
    var style = path.style;
    var shadowBlurSize = style.shadowBlur * dpr;
    var shadowOffsetX = style.shadowOffsetX * dpr;
    var shadowOffsetY = style.shadowOffsetY * dpr;
    var lineWidth = style.hasStroke() ? style.lineWidth : 0;
    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);
    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);
    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);
    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);
    var width = rect.width + leftMargin + rightMargin;
    var height = rect.height + topMargin + bottomMargin;
    canvas.width = width * dpr;
    canvas.height = height * dpr;
    ctx.scale(dpr, dpr);
    ctx.clearRect(0, 0, width, height);
    ctx.dpr = dpr;
    var pathTransform = {
      position: path.position,
      rotation: path.rotation,
      scale: path.scale
    };
    path.position = [leftMargin - rect.x, topMargin - rect.y];
    path.rotation = 0;
    path.scale = [1, 1];
    path.updateTransform();

    if (path) {
      path.brush(ctx);
    }

    var ImageShape = Image;
    var imgShape = new ImageShape({
      style: {
        x: 0,
        y: 0,
        image: canvas
      }
    });

    if (pathTransform.position != null) {
      imgShape.position = path.position = pathTransform.position;
    }

    if (pathTransform.rotation != null) {
      imgShape.rotation = path.rotation = pathTransform.rotation;
    }

    if (pathTransform.scale != null) {
      imgShape.scale = path.scale = pathTransform.scale;
    }

    return imgShape;
  }
};
var _default = Painter;
module.exports = _default;

/***/ }),
/* 443 */
/***/ (function(module, exports, __webpack_require__) {

var util = __webpack_require__(1);

var _config = __webpack_require__(83);

var devicePixelRatio = _config.devicePixelRatio;

var Style = __webpack_require__(176);

var Pattern = __webpack_require__(178);

/**
 * @module zrender/Layer
 * @author pissang(https://www.github.com/pissang)
 */
function returnFalse() {
  return false;
}
/**
 * 创建dom
 *
 * @inner
 * @param {string} id dom id 待用
 * @param {Painter} painter painter instance
 * @param {number} number
 */


function createDom(id, painter, dpr) {
  var newDom = util.createCanvas();
  var width = painter.getWidth();
  var height = painter.getHeight();
  var newDomStyle = newDom.style;

  if (newDomStyle) {
    // In node or some other non-browser environment
    newDomStyle.position = 'absolute';
    newDomStyle.left = 0;
    newDomStyle.top = 0;
    newDomStyle.width = width + 'px';
    newDomStyle.height = height + 'px';
    newDom.setAttribute('data-zr-dom-id', id);
  }

  newDom.width = width * dpr;
  newDom.height = height * dpr;
  return newDom;
}
/**
 * @alias module:zrender/Layer
 * @constructor
 * @extends module:zrender/mixin/Transformable
 * @param {string} id
 * @param {module:zrender/Painter} painter
 * @param {number} [dpr]
 */


var Layer = function (id, painter, dpr) {
  var dom;
  dpr = dpr || devicePixelRatio;

  if (typeof id === 'string') {
    dom = createDom(id, painter, dpr);
  } // Not using isDom because in node it will return false
  else if (util.isObject(id)) {
      dom = id;
      id = dom.id;
    }

  this.id = id;
  this.dom = dom;
  var domStyle = dom.style;

  if (domStyle) {
    // Not in node
    dom.onselectstart = returnFalse; // 避免页面选中的尴尬

    domStyle['-webkit-user-select'] = 'none';
    domStyle['user-select'] = 'none';
    domStyle['-webkit-touch-callout'] = 'none';
    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';
    domStyle['padding'] = 0;
    domStyle['margin'] = 0;
    domStyle['border-width'] = 0;
  }

  this.domBack = null;
  this.ctxBack = null;
  this.painter = painter;
  this.config = null; // Configs

  /**
   * 每次清空画布的颜色
   * @type {string}
   * @default 0
   */

  this.clearColor = 0;
  /**
   * 是否开启动态模糊
   * @type {boolean}
   * @default false
   */

  this.motionBlur = false;
  /**
   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显
   * @type {number}
   * @default 0.7
   */

  this.lastFrameAlpha = 0.7;
  /**
   * Layer dpr
   * @type {number}
   */

  this.dpr = dpr;
};

Layer.prototype = {
  constructor: Layer,
  __dirty: true,
  __used: false,
  __drawIndex: 0,
  __startIndex: 0,
  __endIndex: 0,
  incremental: false,
  getElementCount: function () {
    return this.__endIndex - this.__startIndex;
  },
  initContext: function () {
    this.ctx = this.dom.getContext('2d');
    this.ctx.dpr = this.dpr;
  },
  createBackBuffer: function () {
    var dpr = this.dpr;
    this.domBack = createDom('back-' + this.id, this.painter, dpr);
    this.ctxBack = this.domBack.getContext('2d');

    if (dpr != 1) {
      this.ctxBack.scale(dpr, dpr);
    }
  },

  /**
   * @param  {number} width
   * @param  {number} height
   */
  resize: function (width, height) {
    var dpr = this.dpr;
    var dom = this.dom;
    var domStyle = dom.style;
    var domBack = this.domBack;

    if (domStyle) {
      domStyle.width = width + 'px';
      domStyle.height = height + 'px';
    }

    dom.width = width * dpr;
    dom.height = height * dpr;

    if (domBack) {
      domBack.width = width * dpr;
      domBack.height = height * dpr;

      if (dpr != 1) {
        this.ctxBack.scale(dpr, dpr);
      }
    }
  },

  /**
   * 清空该层画布
   * @param {boolean} [clearAll]=false Clear all with out motion blur
   * @param {Color} [clearColor]
   */
  clear: function (clearAll, clearColor) {
    var dom = this.dom;
    var ctx = this.ctx;
    var width = dom.width;
    var height = dom.height;
    var clearColor = clearColor || this.clearColor;
    var haveMotionBLur = this.motionBlur && !clearAll;
    var lastFrameAlpha = this.lastFrameAlpha;
    var dpr = this.dpr;

    if (haveMotionBLur) {
      if (!this.domBack) {
        this.createBackBuffer();
      }

      this.ctxBack.globalCompositeOperation = 'copy';
      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);
    }

    ctx.clearRect(0, 0, width, height);

    if (clearColor && clearColor !== 'transparent') {
      var clearColorGradientOrPattern; // Gradient

      if (clearColor.colorStops) {
        // Cache canvas gradient
        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {
          x: 0,
          y: 0,
          width: width,
          height: height
        });
        clearColor.__canvasGradient = clearColorGradientOrPattern;
      } // Pattern
      else if (clearColor.image) {
          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);
        }

      ctx.save();
      ctx.fillStyle = clearColorGradientOrPattern || clearColor;
      ctx.fillRect(0, 0, width, height);
      ctx.restore();
    }

    if (haveMotionBLur) {
      var domBack = this.domBack;
      ctx.save();
      ctx.globalAlpha = lastFrameAlpha;
      ctx.drawImage(domBack, 0, 0, width, height);
      ctx.restore();
    }
  }
};
var _default = Layer;
module.exports = _default;

/***/ }),
/* 444 */
/***/ (function(module, exports, __webpack_require__) {

var textHelper = __webpack_require__(181);

var BoundingRect = __webpack_require__(30);

/**
 * Mixin for drawing text in a element bounding rect
 * @module zrender/mixin/RectText
 */
var tmpRect = new BoundingRect();

var RectText = function () {};

RectText.prototype = {
  constructor: RectText,

  /**
   * Draw text in a rect with specified position.
   * @param  {CanvasRenderingContext2D} ctx
   * @param  {Object} rect Displayable rect
   */
  drawRectText: function (ctx, rect) {
    var style = this.style;
    rect = style.textRect || rect; // Optimize, avoid normalize every time.

    this.__dirty && textHelper.normalizeTextStyle(style, true);
    var text = style.text; // Convert to string

    text != null && (text += '');

    if (!textHelper.needDrawText(text, style)) {
      return;
    } // FIXME


    ctx.save(); // Transform rect to view space

    var transform = this.transform;

    if (!style.transformText) {
      if (transform) {
        tmpRect.copy(rect);
        tmpRect.applyTransform(transform);
        rect = tmpRect;
      }
    } else {
      this.setTransform(ctx);
    } // transformText and textRotation can not be used at the same time.


    textHelper.renderText(this, ctx, text, style, rect);
    ctx.restore();
  }
};
var _default = RectText;
module.exports = _default;

/***/ }),
/* 445 */
/***/ (function(module, exports, __webpack_require__) {

var util = __webpack_require__(1);

var _event = __webpack_require__(75);

var Dispatcher = _event.Dispatcher;

var requestAnimationFrame = __webpack_require__(179);

var Animator = __webpack_require__(173);

/**
 * 动画主类, 调度和管理所有动画控制器
 *
 * @module zrender/animation/Animation
 * @author pissang(https://github.com/pissang)
 */
// TODO Additive animation
// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/
// https://developer.apple.com/videos/wwdc2014/#236

/**
 * @typedef {Object} IZRenderStage
 * @property {Function} update
 */

/**
 * @alias module:zrender/animation/Animation
 * @constructor
 * @param {Object} [options]
 * @param {Function} [options.onframe]
 * @param {IZRenderStage} [options.stage]
 * @example
 *     var animation = new Animation();
 *     var obj = {
 *         x: 100,
 *         y: 100
 *     };
 *     animation.animate(node.position)
 *         .when(1000, {
 *             x: 500,
 *             y: 500
 *         })
 *         .when(2000, {
 *             x: 100,
 *             y: 100
 *         })
 *         .start('spline');
 */
var Animation = function (options) {
  options = options || {};
  this.stage = options.stage || {};

  this.onframe = options.onframe || function () {}; // private properties


  this._clips = [];
  this._running = false;
  this._time;
  this._pausedTime;
  this._pauseStart;
  this._paused = false;
  Dispatcher.call(this);
};

Animation.prototype = {
  constructor: Animation,

  /**
   * 添加 clip
   * @param {module:zrender/animation/Clip} clip
   */
  addClip: function (clip) {
    this._clips.push(clip);
  },

  /**
   * 添加 animator
   * @param {module:zrender/animation/Animator} animator
   */
  addAnimator: function (animator) {
    animator.animation = this;
    var clips = animator.getClips();

    for (var i = 0; i < clips.length; i++) {
      this.addClip(clips[i]);
    }
  },

  /**
   * 删除动画片段
   * @param {module:zrender/animation/Clip} clip
   */
  removeClip: function (clip) {
    var idx = util.indexOf(this._clips, clip);

    if (idx >= 0) {
      this._clips.splice(idx, 1);
    }
  },

  /**
   * 删除动画片段
   * @param {module:zrender/animation/Animator} animator
   */
  removeAnimator: function (animator) {
    var clips = animator.getClips();

    for (var i = 0; i < clips.length; i++) {
      this.removeClip(clips[i]);
    }

    animator.animation = null;
  },
  _update: function () {
    var time = new Date().getTime() - this._pausedTime;

    var delta = time - this._time;
    var clips = this._clips;
    var len = clips.length;
    var deferredEvents = [];
    var deferredClips = [];

    for (var i = 0; i < len; i++) {
      var clip = clips[i];
      var e = clip.step(time, delta); // Throw out the events need to be called after
      // stage.update, like destroy

      if (e) {
        deferredEvents.push(e);
        deferredClips.push(clip);
      }
    } // Remove the finished clip


    for (var i = 0; i < len;) {
      if (clips[i]._needsRemove) {
        clips[i] = clips[len - 1];
        clips.pop();
        len--;
      } else {
        i++;
      }
    }

    len = deferredEvents.length;

    for (var i = 0; i < len; i++) {
      deferredClips[i].fire(deferredEvents[i]);
    }

    this._time = time;
    this.onframe(delta); // 'frame' should be triggered before stage, because upper application
    // depends on the sequence (e.g., echarts-stream and finish
    // event judge)

    this.trigger('frame', delta);

    if (this.stage.update) {
      this.stage.update();
    }
  },
  _startLoop: function () {
    var self = this;
    this._running = true;

    function step() {
      if (self._running) {
        requestAnimationFrame(step);
        !self._paused && self._update();
      }
    }

    requestAnimationFrame(step);
  },

  /**
   * Start animation.
   */
  start: function () {
    this._time = new Date().getTime();
    this._pausedTime = 0;

    this._startLoop();
  },

  /**
   * Stop animation.
   */
  stop: function () {
    this._running = false;
  },

  /**
   * Pause animation.
   */
  pause: function () {
    if (!this._paused) {
      this._pauseStart = new Date().getTime();
      this._paused = true;
    }
  },

  /**
   * Resume animation.
   */
  resume: function () {
    if (this._paused) {
      this._pausedTime += new Date().getTime() - this._pauseStart;
      this._paused = false;
    }
  },

  /**
   * Clear animation.
   */
  clear: function () {
    this._clips = [];
  },

  /**
   * Whether animation finished.
   */
  isFinished: function () {
    return !this._clips.length;
  },

  /**
   * Creat animator for a target, whose props can be animated.
   *
   * @param  {Object} target
   * @param  {Object} options
   * @param  {boolean} [options.loop=false] Whether loop animation.
   * @param  {Function} [options.getter=null] Get value from target.
   * @param  {Function} [options.setter=null] Set value to target.
   * @return {module:zrender/animation/Animation~Animator}
   */
  // TODO Gap
  animate: function (target, options) {
    options = options || {};
    var animator = new Animator(target, options.loop, options.getter, options.setter);
    this.addAnimator(animator);
    return animator;
  }
};
util.mixin(Animation, Dispatcher);
var _default = Animation;
module.exports = _default;

/***/ }),
/* 446 */
/***/ (function(module, exports, __webpack_require__) {

var _event = __webpack_require__(75);

var addEventListener = _event.addEventListener;
var removeEventListener = _event.removeEventListener;
var normalizeEvent = _event.normalizeEvent;

var zrUtil = __webpack_require__(1);

var Eventful = __webpack_require__(73);

var env = __webpack_require__(20);

var GestureMgr = __webpack_require__(447);

var TOUCH_CLICK_DELAY = 300;
var mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];
var touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];
var pointerEventNames = {
  pointerdown: 1,
  pointerup: 1,
  pointermove: 1,
  pointerout: 1
};
var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {
  var nm = name.replace('mouse', 'pointer');
  return pointerEventNames[nm] ? nm : name;
});

function eventNameFix(name) {
  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;
}

function processGesture(proxy, event, stage) {
  var gestureMgr = proxy._gestureMgr;
  stage === 'start' && gestureMgr.clear();
  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);
  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.

  if (gestureInfo) {
    var type = gestureInfo.type;
    event.gestureEvent = type;
    proxy.handler.dispatchToElement({
      target: gestureInfo.target
    }, type, gestureInfo.event);
  }
} // function onMSGestureChange(proxy, event) {
//     if (event.translationX || event.translationY) {
//         // mousemove is carried by MSGesture to reduce the sensitivity.
//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);
//     }
//     if (event.scale !== 1) {
//         event.pinchX = event.offsetX;
//         event.pinchY = event.offsetY;
//         event.pinchScale = event.scale;
//         proxy.handler.dispatchToElement(event.target, 'pinch', event);
//     }
// }

/**
 * Prevent mouse event from being dispatched after Touch Events action
 * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>
 * 1. Mobile browsers dispatch mouse events 300ms after touchend.
 * 2. Chrome for Android dispatch mousedown for long-touch about 650ms
 * Result: Blocking Mouse Events for 700ms.
 */


function setTouchTimer(instance) {
  instance._touching = true;
  clearTimeout(instance._touchTimer);
  instance._touchTimer = setTimeout(function () {
    instance._touching = false;
  }, 700);
}

var domHandlers = {
  /**
   * Mouse move handler
   * @inner
   * @param {Event} event
   */
  mousemove: function (event) {
    event = normalizeEvent(this.dom, event);
    this.trigger('mousemove', event);
  },

  /**
   * Mouse out handler
   * @inner
   * @param {Event} event
   */
  mouseout: function (event) {
    event = normalizeEvent(this.dom, event);
    var element = event.toElement || event.relatedTarget;

    if (element != this.dom) {
      while (element && element.nodeType != 9) {
        // 忽略包含在root中的dom引起的mouseOut
        if (element === this.dom) {
          return;
        }

        element = element.parentNode;
      }
    }

    this.trigger('mouseout', event);
  },

  /**
   * Touch开始响应函数
   * @inner
   * @param {Event} event
   */
  touchstart: function (event) {
    // Default mouse behaviour should not be disabled here.
    // For example, page may needs to be slided.
    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and
    // mouse event in upper applicatoin.

    event.zrByTouch = true;
    this._lastTouchMoment = new Date();
    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should
    // be triggered, and must before `mousedown` triggered.

    domHandlers.mousemove.call(this, event);
    domHandlers.mousedown.call(this, event);
    setTouchTimer(this);
  },

  /**
   * Touch移动响应函数
   * @inner
   * @param {Event} event
   */
  touchmove: function (event) {
    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and
    // mouse event in upper applicatoin.

    event.zrByTouch = true;
    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether
    // there is gestrue event, because mouse move and pinch may
    // be used at the same time.

    domHandlers.mousemove.call(this, event);
    setTouchTimer(this);
  },

  /**
   * Touch结束响应函数
   * @inner
   * @param {Event} event
   */
  touchend: function (event) {
    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and
    // mouse event in upper applicatoin.

    event.zrByTouch = true;
    processGesture(this, event, 'end');
    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is
    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,
    // we can conveniently implement "hover style" in both PC and touch device just
    // by listening to `mouseover` to add "hover style" and listening to `mouseout`
    // to remove "hover style" on an element, without any additional code for
    // compatibility. (`mouseout` will not be triggered in `touchend`, so "hover
    // style" will remain for user view)
    // click event should always be triggered no matter whether
    // there is gestrue event. System click can not be prevented.

    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {
      domHandlers.click.call(this, event);
    }

    setTouchTimer(this);
  },
  pointerdown: function (event) {
    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {
    //     this._msGesture.addPointer(event.pointerId);
    // }
  },
  pointermove: function (event) {
    // FIXME
    // pointermove is so sensitive that it always triggered when
    // tap(click) on touch screen, which affect some judgement in
    // upper application. So, we dont support mousemove on MS touch
    // device yet.
    if (!isPointerFromTouch(event)) {
      domHandlers.mousemove.call(this, event);
    }
  },
  pointerup: function (event) {
    domHandlers.mouseup.call(this, event);
  },
  pointerout: function (event) {
    // pointerout will be triggered when tap on touch screen
    // (IE11+/Edge on MS Surface) after click event triggered,
    // which is inconsistent with the mousout behavior we defined
    // in touchend. So we unify them.
    // (check domHandlers.touchend for detailed explanation)
    if (!isPointerFromTouch(event)) {
      domHandlers.mouseout.call(this, event);
    }
  }
};

function isPointerFromTouch(event) {
  var pointerType = event.pointerType;
  return pointerType === 'pen' || pointerType === 'touch';
} // function useMSGuesture(handlerProxy, event) {
//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;
// }
// Common handlers


zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {
  domHandlers[name] = function (event) {
    event = normalizeEvent(this.dom, event);
    this.trigger(name, event);
  };
});
/**
 * 为控制类实例初始化dom 事件处理函数
 *
 * @inner
 * @param {module:zrender/Handler} instance 控制类实例
 */

function initDomHandler(instance) {
  zrUtil.each(touchHandlerNames, function (name) {
    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);
  });
  zrUtil.each(pointerHandlerNames, function (name) {
    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);
  });
  zrUtil.each(mouseHandlerNames, function (name) {
    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);
  });

  function makeMouseHandler(fn, instance) {
    return function () {
      if (instance._touching) {
        return;
      }

      return fn.apply(instance, arguments);
    };
  }
}

function HandlerDomProxy(dom) {
  Eventful.call(this);
  this.dom = dom;
  /**
   * @private
   * @type {boolean}
   */

  this._touching = false;
  /**
   * @private
   * @type {number}
   */

  this._touchTimer;
  /**
   * @private
   * @type {module:zrender/core/GestureMgr}
   */

  this._gestureMgr = new GestureMgr();
  this._handlers = {};
  initDomHandler(this);

  if (env.pointerEventsSupported) {
    // Only IE11+/Edge
    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),
    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event
    // at the same time.
    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on
    // screen, which do not occurs in pointer event.
    // So we use pointer event to both detect touch gesture and mouse behavior.
    mountHandlers(pointerHandlerNames, this); // FIXME
    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,
    // which does not prevent defuault behavior occasionally (which may cause view port
    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.
    // So we have to not to use MSGesture and not to support touchmove and pinch on MS
    // touch screen. And we only support click behavior on MS touch screen now.
    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.
    // We dont support touch on IE on win7.
    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>
    // if (typeof MSGesture === 'function') {
    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line
    //     dom.addEventListener('MSGestureChange', onMSGestureChange);
    // }
  } else {
    if (env.touchEventsSupported) {
      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.
      // addEventListener(root, 'mouseout', this._mouseoutHandler);
    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface
    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise
    // mouse event can not be handle in those devices.
    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent
    // mouseevent after touch event triggered, see `setTouchTimer`.


    mountHandlers(mouseHandlerNames, this);
  }

  function mountHandlers(handlerNames, instance) {
    zrUtil.each(handlerNames, function (name) {
      addEventListener(dom, eventNameFix(name), instance._handlers[name]);
    }, instance);
  }
}

var handlerDomProxyProto = HandlerDomProxy.prototype;

handlerDomProxyProto.dispose = function () {
  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);

  for (var i = 0; i < handlerNames.length; i++) {
    var name = handlerNames[i];
    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);
  }
};

handlerDomProxyProto.setCursor = function (cursorStyle) {
  this.dom.style && (this.dom.style.cursor = cursorStyle || 'default');
};

zrUtil.mixin(HandlerDomProxy, Eventful);
var _default = HandlerDomProxy;
module.exports = _default;

/***/ }),
/* 447 */
/***/ (function(module, exports, __webpack_require__) {

var eventUtil = __webpack_require__(75);

/**
 * Only implements needed gestures for mobile.
 */
var GestureMgr = function () {
  /**
   * @private
   * @type {Array.<Object>}
   */
  this._track = [];
};

GestureMgr.prototype = {
  constructor: GestureMgr,
  recognize: function (event, target, root) {
    this._doTrack(event, target, root);

    return this._recognize(event);
  },
  clear: function () {
    this._track.length = 0;
    return this;
  },
  _doTrack: function (event, target, root) {
    var touches = event.touches;

    if (!touches) {
      return;
    }

    var trackItem = {
      points: [],
      touches: [],
      target: target,
      event: event
    };

    for (var i = 0, len = touches.length; i < len; i++) {
      var touch = touches[i];
      var pos = eventUtil.clientToLocal(root, touch, {});
      trackItem.points.push([pos.zrX, pos.zrY]);
      trackItem.touches.push(touch);
    }

    this._track.push(trackItem);
  },
  _recognize: function (event) {
    for (var eventName in recognizers) {
      if (recognizers.hasOwnProperty(eventName)) {
        var gestureInfo = recognizers[eventName](this._track, event);

        if (gestureInfo) {
          return gestureInfo;
        }
      }
    }
  }
};

function dist(pointPair) {
  var dx = pointPair[1][0] - pointPair[0][0];
  var dy = pointPair[1][1] - pointPair[0][1];
  return Math.sqrt(dx * dx + dy * dy);
}

function center(pointPair) {
  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];
}

var recognizers = {
  pinch: function (track, event) {
    var trackLen = track.length;

    if (!trackLen) {
      return;
    }

    var pinchEnd = (track[trackLen - 1] || {}).points;
    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;

    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {
      var pinchScale = dist(pinchEnd) / dist(pinchPre);
      !isFinite(pinchScale) && (pinchScale = 1);
      event.pinchScale = pinchScale;
      var pinchCenter = center(pinchEnd);
      event.pinchX = pinchCenter[0];
      event.pinchY = pinchCenter[1];
      return {
        type: 'pinch',
        target: track[0].target,
        event: event
      };
    }
  } // Only pinch currently.

};
var _default = GestureMgr;
module.exports = _default;

/***/ }),
/* 448 */
/***/ (function(module, exports, __webpack_require__) {

var makeStyleMapper = __webpack_require__(114);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);
var _default = {
  getLineStyle: function (excludes) {
    var style = getLineStyle(this, excludes);
    var lineDash = this.getLineDash(style.lineWidth);
    lineDash && (style.lineDash = lineDash);
    return style;
  },
  getLineDash: function (lineWidth) {
    if (lineWidth == null) {
      lineWidth = 1;
    }

    var lineType = this.get('type');
    var dotSize = Math.max(lineWidth, 2);
    var dashSize = lineWidth * 4;
    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];
  }
};
module.exports = _default;

/***/ }),
/* 449 */
/***/ (function(module, exports, __webpack_require__) {

var makeStyleMapper = __webpack_require__(114);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);
var _default = {
  getAreaStyle: function (excludes, includes) {
    return getAreaStyle(this, excludes, includes);
  }
};
module.exports = _default;

/***/ }),
/* 450 */
/***/ (function(module, exports, __webpack_require__) {

var textContain = __webpack_require__(55);

var graphicUtil = __webpack_require__(11);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var PATH_COLOR = ['textStyle', 'color'];
var _default = {
  /**
   * Get color property or get color from option.textStyle.color
   * @param {boolean} [isEmphasis]
   * @return {string}
   */
  getTextColor: function (isEmphasis) {
    var ecModel = this.ecModel;
    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);
  },

  /**
   * Create font string from fontStyle, fontWeight, fontSize, fontFamily
   * @return {string}
   */
  getFont: function () {
    return graphicUtil.getFont({
      fontStyle: this.getShallow('fontStyle'),
      fontWeight: this.getShallow('fontWeight'),
      fontSize: this.getShallow('fontSize'),
      fontFamily: this.getShallow('fontFamily')
    }, this.ecModel);
  },
  getTextRect: function (text) {
    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));
  }
};
module.exports = _default;

/***/ }),
/* 451 */
/***/ (function(module, exports, __webpack_require__) {

var Path = __webpack_require__(21);

var PathProxy = __webpack_require__(85);

var transformPath = __webpack_require__(457);

// command chars
var cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];
var mathSqrt = Math.sqrt;
var mathSin = Math.sin;
var mathCos = Math.cos;
var PI = Math.PI;

var vMag = function (v) {
  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);
};

var vRatio = function (u, v) {
  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));
};

var vAngle = function (u, v) {
  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));
};

function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {
  var psi = psiDeg * (PI / 180.0);
  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;
  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;
  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);

  if (lambda > 1) {
    rx *= mathSqrt(lambda);
    ry *= mathSqrt(lambda);
  }

  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;
  var cxp = f * rx * yp / ry;
  var cyp = f * -ry * xp / rx;
  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;
  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;
  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);
  var u = [(xp - cxp) / rx, (yp - cyp) / ry];
  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];
  var dTheta = vAngle(u, v);

  if (vRatio(u, v) <= -1) {
    dTheta = PI;
  }

  if (vRatio(u, v) >= 1) {
    dTheta = 0;
  }

  if (fs === 0 && dTheta > 0) {
    dTheta = dTheta - 2 * PI;
  }

  if (fs === 1 && dTheta < 0) {
    dTheta = dTheta + 2 * PI;
  }

  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);
}

function createPathProxyFromString(data) {
  if (!data) {
    return [];
  } // command string


  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');
  var n; // create pipes so that we can split the data

  for (n = 0; n < cc.length; n++) {
    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);
  } // create array


  var arr = cs.split('|'); // init context point

  var cpx = 0;
  var cpy = 0;
  var path = new PathProxy();
  var CMD = PathProxy.CMD;
  var prevCmd;

  for (n = 1; n < arr.length; n++) {
    var str = arr[n];
    var c = str.charAt(0);
    var off = 0;
    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');
    var cmd;

    if (p.length > 0 && p[0] === '') {
      p.shift();
    }

    for (var i = 0; i < p.length; i++) {
      p[i] = parseFloat(p[i]);
    }

    while (off < p.length && !isNaN(p[off])) {
      if (isNaN(p[0])) {
        break;
      }

      var ctlPtx;
      var ctlPty;
      var rx;
      var ry;
      var psi;
      var fa;
      var fs;
      var x1 = cpx;
      var y1 = cpy; // convert l, H, h, V, and v to L

      switch (c) {
        case 'l':
          cpx += p[off++];
          cpy += p[off++];
          cmd = CMD.L;
          path.addData(cmd, cpx, cpy);
          break;

        case 'L':
          cpx = p[off++];
          cpy = p[off++];
          cmd = CMD.L;
          path.addData(cmd, cpx, cpy);
          break;

        case 'm':
          cpx += p[off++];
          cpy += p[off++];
          cmd = CMD.M;
          path.addData(cmd, cpx, cpy);
          c = 'l';
          break;

        case 'M':
          cpx = p[off++];
          cpy = p[off++];
          cmd = CMD.M;
          path.addData(cmd, cpx, cpy);
          c = 'L';
          break;

        case 'h':
          cpx += p[off++];
          cmd = CMD.L;
          path.addData(cmd, cpx, cpy);
          break;

        case 'H':
          cpx = p[off++];
          cmd = CMD.L;
          path.addData(cmd, cpx, cpy);
          break;

        case 'v':
          cpy += p[off++];
          cmd = CMD.L;
          path.addData(cmd, cpx, cpy);
          break;

        case 'V':
          cpy = p[off++];
          cmd = CMD.L;
          path.addData(cmd, cpx, cpy);
          break;

        case 'C':
          cmd = CMD.C;
          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);
          cpx = p[off - 2];
          cpy = p[off - 1];
          break;

        case 'c':
          cmd = CMD.C;
          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);
          cpx += p[off - 2];
          cpy += p[off - 1];
          break;

        case 'S':
          ctlPtx = cpx;
          ctlPty = cpy;
          var len = path.len();
          var pathData = path.data;

          if (prevCmd === CMD.C) {
            ctlPtx += cpx - pathData[len - 4];
            ctlPty += cpy - pathData[len - 3];
          }

          cmd = CMD.C;
          x1 = p[off++];
          y1 = p[off++];
          cpx = p[off++];
          cpy = p[off++];
          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);
          break;

        case 's':
          ctlPtx = cpx;
          ctlPty = cpy;
          var len = path.len();
          var pathData = path.data;

          if (prevCmd === CMD.C) {
            ctlPtx += cpx - pathData[len - 4];
            ctlPty += cpy - pathData[len - 3];
          }

          cmd = CMD.C;
          x1 = cpx + p[off++];
          y1 = cpy + p[off++];
          cpx += p[off++];
          cpy += p[off++];
          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);
          break;

        case 'Q':
          x1 = p[off++];
          y1 = p[off++];
          cpx = p[off++];
          cpy = p[off++];
          cmd = CMD.Q;
          path.addData(cmd, x1, y1, cpx, cpy);
          break;

        case 'q':
          x1 = p[off++] + cpx;
          y1 = p[off++] + cpy;
          cpx += p[off++];
          cpy += p[off++];
          cmd = CMD.Q;
          path.addData(cmd, x1, y1, cpx, cpy);
          break;

        case 'T':
          ctlPtx = cpx;
          ctlPty = cpy;
          var len = path.len();
          var pathData = path.data;

          if (prevCmd === CMD.Q) {
            ctlPtx += cpx - pathData[len - 4];
            ctlPty += cpy - pathData[len - 3];
          }

          cpx = p[off++];
          cpy = p[off++];
          cmd = CMD.Q;
          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);
          break;

        case 't':
          ctlPtx = cpx;
          ctlPty = cpy;
          var len = path.len();
          var pathData = path.data;

          if (prevCmd === CMD.Q) {
            ctlPtx += cpx - pathData[len - 4];
            ctlPty += cpy - pathData[len - 3];
          }

          cpx += p[off++];
          cpy += p[off++];
          cmd = CMD.Q;
          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);
          break;

        case 'A':
          rx = p[off++];
          ry = p[off++];
          psi = p[off++];
          fa = p[off++];
          fs = p[off++];
          x1 = cpx, y1 = cpy;
          cpx = p[off++];
          cpy = p[off++];
          cmd = CMD.A;
          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);
          break;

        case 'a':
          rx = p[off++];
          ry = p[off++];
          psi = p[off++];
          fa = p[off++];
          fs = p[off++];
          x1 = cpx, y1 = cpy;
          cpx += p[off++];
          cpy += p[off++];
          cmd = CMD.A;
          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);
          break;
      }
    }

    if (c === 'z' || c === 'Z') {
      cmd = CMD.Z;
      path.addData(cmd);
    }

    prevCmd = cmd;
  }

  path.toStatic();
  return path;
} // TODO Optimize double memory cost problem


function createPathOptions(str, opts) {
  var pathProxy = createPathProxyFromString(str);
  opts = opts || {};

  opts.buildPath = function (path) {
    if (path.setData) {
      path.setData(pathProxy.data); // Svg and vml renderer don't have context

      var ctx = path.getContext();

      if (ctx) {
        path.rebuildPath(ctx);
      }
    } else {
      var ctx = path;
      pathProxy.rebuildPath(ctx);
    }
  };

  opts.applyTransform = function (m) {
    transformPath(pathProxy, m);
    this.dirty(true);
  };

  return opts;
}
/**
 * Create a Path object from path string data
 * http://www.w3.org/TR/SVG/paths.html#PathData
 * @param  {Object} opts Other options
 */


function createFromString(str, opts) {
  return new Path(createPathOptions(str, opts));
}
/**
 * Create a Path class from path string data
 * @param  {string} str
 * @param  {Object} opts Other options
 */


function extendFromString(str, opts) {
  return Path.extend(createPathOptions(str, opts));
}
/**
 * Merge multiple paths
 */
// TODO Apply transform
// TODO stroke dash
// TODO Optimize double memory cost problem


function mergePath(pathEls, opts) {
  var pathList = [];
  var len = pathEls.length;

  for (var i = 0; i < len; i++) {
    var pathEl = pathEls[i];

    if (!pathEl.path) {
      pathEl.createPathProxy();
    }

    if (pathEl.__dirtyPath) {
      pathEl.buildPath(pathEl.path, pathEl.shape, true);
    }

    pathList.push(pathEl.path);
  }

  var pathBundle = new Path(opts); // Need path proxy.

  pathBundle.createPathProxy();

  pathBundle.buildPath = function (path) {
    path.appendPath(pathList); // Svg and vml renderer don't have context

    var ctx = path.getContext();

    if (ctx) {
      path.rebuildPath(ctx);
    }
  };

  return pathBundle;
}

exports.createFromString = createFromString;
exports.extendFromString = extendFromString;
exports.mergePath = mergePath;

/***/ }),
/* 452 */
/***/ (function(module, exports, __webpack_require__) {

var PathProxy = __webpack_require__(85);

var line = __webpack_require__(453);

var cubic = __webpack_require__(454);

var quadratic = __webpack_require__(455);

var arc = __webpack_require__(456);

var _util = __webpack_require__(185);

var normalizeRadian = _util.normalizeRadian;

var curve = __webpack_require__(65);

var windingLine = __webpack_require__(186);

var CMD = PathProxy.CMD;
var PI2 = Math.PI * 2;
var EPSILON = 1e-4;

function isAroundEqual(a, b) {
  return Math.abs(a - b) < EPSILON;
} // 临时数组


var roots = [-1, -1, -1];
var extrema = [-1, -1];

function swapExtrema() {
  var tmp = extrema[0];
  extrema[0] = extrema[1];
  extrema[1] = tmp;
}

function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {
  // Quick reject
  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {
    return 0;
  }

  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);

  if (nRoots === 0) {
    return 0;
  } else {
    var w = 0;
    var nExtrema = -1;
    var y0_, y1_;

    for (var i = 0; i < nRoots; i++) {
      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon

      var unit = t === 0 || t === 1 ? 0.5 : 1;
      var x_ = curve.cubicAt(x0, x1, x2, x3, t);

      if (x_ < x) {
        // Quick reject
        continue;
      }

      if (nExtrema < 0) {
        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);

        if (extrema[1] < extrema[0] && nExtrema > 1) {
          swapExtrema();
        }

        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);

        if (nExtrema > 1) {
          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);
        }
      }

      if (nExtrema == 2) {
        // 分成三段单调函数
        if (t < extrema[0]) {
          w += y0_ < y0 ? unit : -unit;
        } else if (t < extrema[1]) {
          w += y1_ < y0_ ? unit : -unit;
        } else {
          w += y3 < y1_ ? unit : -unit;
        }
      } else {
        // 分成两段单调函数
        if (t < extrema[0]) {
          w += y0_ < y0 ? unit : -unit;
        } else {
          w += y3 < y0_ ? unit : -unit;
        }
      }
    }

    return w;
  }
}

function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {
  // Quick reject
  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {
    return 0;
  }

  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);

  if (nRoots === 0) {
    return 0;
  } else {
    var t = curve.quadraticExtremum(y0, y1, y2);

    if (t >= 0 && t <= 1) {
      var w = 0;
      var y_ = curve.quadraticAt(y0, y1, y2, t);

      for (var i = 0; i < nRoots; i++) {
        // Remove one endpoint.
        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;
        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);

        if (x_ < x) {
          // Quick reject
          continue;
        }

        if (roots[i] < t) {
          w += y_ < y0 ? unit : -unit;
        } else {
          w += y2 < y_ ? unit : -unit;
        }
      }

      return w;
    } else {
      // Remove one endpoint.
      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;
      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);

      if (x_ < x) {
        // Quick reject
        return 0;
      }

      return y2 < y0 ? unit : -unit;
    }
  }
} // TODO
// Arc 旋转


function windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {
  y -= cy;

  if (y > r || y < -r) {
    return 0;
  }

  var tmp = Math.sqrt(r * r - y * y);
  roots[0] = -tmp;
  roots[1] = tmp;
  var diff = Math.abs(startAngle - endAngle);

  if (diff < 1e-4) {
    return 0;
  }

  if (diff % PI2 < 1e-4) {
    // Is a circle
    startAngle = 0;
    endAngle = PI2;
    var dir = anticlockwise ? 1 : -1;

    if (x >= roots[0] + cx && x <= roots[1] + cx) {
      return dir;
    } else {
      return 0;
    }
  }

  if (anticlockwise) {
    var tmp = startAngle;
    startAngle = normalizeRadian(endAngle);
    endAngle = normalizeRadian(tmp);
  } else {
    startAngle = normalizeRadian(startAngle);
    endAngle = normalizeRadian(endAngle);
  }

  if (startAngle > endAngle) {
    endAngle += PI2;
  }

  var w = 0;

  for (var i = 0; i < 2; i++) {
    var x_ = roots[i];

    if (x_ + cx > x) {
      var angle = Math.atan2(y, x_);
      var dir = anticlockwise ? 1 : -1;

      if (angle < 0) {
        angle = PI2 + angle;
      }

      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {
        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {
          dir = -dir;
        }

        w += dir;
      }
    }
  }

  return w;
}

function containPath(data, lineWidth, isStroke, x, y) {
  var w = 0;
  var xi = 0;
  var yi = 0;
  var x0 = 0;
  var y0 = 0;

  for (var i = 0; i < data.length;) {
    var cmd = data[i++]; // Begin a new subpath

    if (cmd === CMD.M && i > 1) {
      // Close previous subpath
      if (!isStroke) {
        w += windingLine(xi, yi, x0, y0, x, y);
      } // 如果被任何一个 subpath 包含
      // if (w !== 0) {
      //     return true;
      // }

    }

    if (i == 1) {
      // 如果第一个命令是 L, C, Q
      // 则 previous point 同绘制命令的第一个 point
      //
      // 第一个命令为 Arc 的情况下会在后面特殊处理
      xi = data[i];
      yi = data[i + 1];
      x0 = xi;
      y0 = yi;
    }

    switch (cmd) {
      case CMD.M:
        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点
        // 在 closePath 的时候使用
        x0 = data[i++];
        y0 = data[i++];
        xi = x0;
        yi = y0;
        break;

      case CMD.L:
        if (isStroke) {
          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {
            return true;
          }
        } else {
          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN
          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;
        }

        xi = data[i++];
        yi = data[i++];
        break;

      case CMD.C:
        if (isStroke) {
          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {
            return true;
          }
        } else {
          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;
        }

        xi = data[i++];
        yi = data[i++];
        break;

      case CMD.Q:
        if (isStroke) {
          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {
            return true;
          }
        } else {
          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;
        }

        xi = data[i++];
        yi = data[i++];
        break;

      case CMD.A:
        // TODO Arc 判断的开销比较大
        var cx = data[i++];
        var cy = data[i++];
        var rx = data[i++];
        var ry = data[i++];
        var theta = data[i++];
        var dTheta = data[i++]; // TODO Arc 旋转

        var psi = data[i++];
        var anticlockwise = 1 - data[i++];
        var x1 = Math.cos(theta) * rx + cx;
        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令

        if (i > 1) {
          w += windingLine(xi, yi, x1, y1, x, y);
        } else {
          // 第一个命令起点还未定义
          x0 = x1;
          y0 = y1;
        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放


        var _x = (x - cx) * ry / rx + cx;

        if (isStroke) {
          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {
            return true;
          }
        } else {
          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);
        }

        xi = Math.cos(theta + dTheta) * rx + cx;
        yi = Math.sin(theta + dTheta) * ry + cy;
        break;

      case CMD.R:
        x0 = xi = data[i++];
        y0 = yi = data[i++];
        var width = data[i++];
        var height = data[i++];
        var x1 = x0 + width;
        var y1 = y0 + height;

        if (isStroke) {
          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {
            return true;
          }
        } else {
          // FIXME Clockwise ?
          w += windingLine(x1, y0, x1, y1, x, y);
          w += windingLine(x0, y1, x0, y0, x, y);
        }

        break;

      case CMD.Z:
        if (isStroke) {
          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {
            return true;
          }
        } else {
          // Close a subpath
          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含
          // FIXME subpaths may overlap
          // if (w !== 0) {
          //     return true;
          // }
        }

        xi = x0;
        yi = y0;
        break;
    }
  }

  if (!isStroke && !isAroundEqual(yi, y0)) {
    w += windingLine(xi, yi, x0, y0, x, y) || 0;
  }

  return w !== 0;
}

function contain(pathData, x, y) {
  return containPath(pathData, 0, false, x, y);
}

function containStroke(pathData, lineWidth, x, y) {
  return containPath(pathData, lineWidth, true, x, y);
}

exports.contain = contain;
exports.containStroke = containStroke;

/***/ }),
/* 453 */
/***/ (function(module, exports) {

/**
 * 线段包含判断
 * @param  {number}  x0
 * @param  {number}  y0
 * @param  {number}  x1
 * @param  {number}  y1
 * @param  {number}  lineWidth
 * @param  {number}  x
 * @param  {number}  y
 * @return {boolean}
 */
function containStroke(x0, y0, x1, y1, lineWidth, x, y) {
  if (lineWidth === 0) {
    return false;
  }

  var _l = lineWidth;
  var _a = 0;
  var _b = x0; // Quick reject

  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {
    return false;
  }

  if (x0 !== x1) {
    _a = (y0 - y1) / (x0 - x1);
    _b = (x0 * y1 - x1 * y0) / (x0 - x1);
  } else {
    return Math.abs(x - x0) <= _l / 2;
  }

  var tmp = _a * x - y + _b;

  var _s = tmp * tmp / (_a * _a + 1);

  return _s <= _l / 2 * _l / 2;
}

exports.containStroke = containStroke;

/***/ }),
/* 454 */
/***/ (function(module, exports, __webpack_require__) {

var curve = __webpack_require__(65);

/**
 * 三次贝塞尔曲线描边包含判断
 * @param  {number}  x0
 * @param  {number}  y0
 * @param  {number}  x1
 * @param  {number}  y1
 * @param  {number}  x2
 * @param  {number}  y2
 * @param  {number}  x3
 * @param  {number}  y3
 * @param  {number}  lineWidth
 * @param  {number}  x
 * @param  {number}  y
 * @return {boolean}
 */
function containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {
  if (lineWidth === 0) {
    return false;
  }

  var _l = lineWidth; // Quick reject

  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {
    return false;
  }

  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);
  return d <= _l / 2;
}

exports.containStroke = containStroke;

/***/ }),
/* 455 */
/***/ (function(module, exports, __webpack_require__) {

var _curve = __webpack_require__(65);

var quadraticProjectPoint = _curve.quadraticProjectPoint;

/**
 * 二次贝塞尔曲线描边包含判断
 * @param  {number}  x0
 * @param  {number}  y0
 * @param  {number}  x1
 * @param  {number}  y1
 * @param  {number}  x2
 * @param  {number}  y2
 * @param  {number}  lineWidth
 * @param  {number}  x
 * @param  {number}  y
 * @return {boolean}
 */
function containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {
  if (lineWidth === 0) {
    return false;
  }

  var _l = lineWidth; // Quick reject

  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {
    return false;
  }

  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);
  return d <= _l / 2;
}

exports.containStroke = containStroke;

/***/ }),
/* 456 */
/***/ (function(module, exports, __webpack_require__) {

var _util = __webpack_require__(185);

var normalizeRadian = _util.normalizeRadian;
var PI2 = Math.PI * 2;
/**
 * 圆弧描边包含判断
 * @param  {number}  cx
 * @param  {number}  cy
 * @param  {number}  r
 * @param  {number}  startAngle
 * @param  {number}  endAngle
 * @param  {boolean}  anticlockwise
 * @param  {number} lineWidth
 * @param  {number}  x
 * @param  {number}  y
 * @return {Boolean}
 */

function containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {
  if (lineWidth === 0) {
    return false;
  }

  var _l = lineWidth;
  x -= cx;
  y -= cy;
  var d = Math.sqrt(x * x + y * y);

  if (d - _l > r || d + _l < r) {
    return false;
  }

  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {
    // Is a circle
    return true;
  }

  if (anticlockwise) {
    var tmp = startAngle;
    startAngle = normalizeRadian(endAngle);
    endAngle = normalizeRadian(tmp);
  } else {
    startAngle = normalizeRadian(startAngle);
    endAngle = normalizeRadian(endAngle);
  }

  if (startAngle > endAngle) {
    endAngle += PI2;
  }

  var angle = Math.atan2(y, x);

  if (angle < 0) {
    angle += PI2;
  }

  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;
}

exports.containStroke = containStroke;

/***/ }),
/* 457 */
/***/ (function(module, exports, __webpack_require__) {

var PathProxy = __webpack_require__(85);

var _vector = __webpack_require__(17);

var v2ApplyTransform = _vector.applyTransform;
var CMD = PathProxy.CMD;
var points = [[], [], []];
var mathSqrt = Math.sqrt;
var mathAtan2 = Math.atan2;

function _default(path, m) {
  var data = path.data;
  var cmd;
  var nPoint;
  var i;
  var j;
  var k;
  var p;
  var M = CMD.M;
  var C = CMD.C;
  var L = CMD.L;
  var R = CMD.R;
  var A = CMD.A;
  var Q = CMD.Q;

  for (i = 0, j = 0; i < data.length;) {
    cmd = data[i++];
    j = i;
    nPoint = 0;

    switch (cmd) {
      case M:
        nPoint = 1;
        break;

      case L:
        nPoint = 1;
        break;

      case C:
        nPoint = 3;
        break;

      case Q:
        nPoint = 2;
        break;

      case A:
        var x = m[4];
        var y = m[5];
        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);
        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);
        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx

        data[i] *= sx;
        data[i++] += x; // cy

        data[i] *= sy;
        data[i++] += y; // Scale rx and ry
        // FIXME Assume psi is 0 here

        data[i++] *= sx;
        data[i++] *= sy; // Start angle

        data[i++] += angle; // end angle

        data[i++] += angle; // FIXME psi

        i += 2;
        j = i;
        break;

      case R:
        // x0, y0
        p[0] = data[i++];
        p[1] = data[i++];
        v2ApplyTransform(p, p, m);
        data[j++] = p[0];
        data[j++] = p[1]; // x1, y1

        p[0] += data[i++];
        p[1] += data[i++];
        v2ApplyTransform(p, p, m);
        data[j++] = p[0];
        data[j++] = p[1];
    }

    for (k = 0; k < nPoint; k++) {
      var p = points[k];
      p[0] = data[i++];
      p[1] = data[i++];
      v2ApplyTransform(p, p, m); // Write back

      data[j++] = p[0];
      data[j++] = p[1];
    }
  }
}

module.exports = _default;

/***/ }),
/* 458 */
/***/ (function(module, exports, __webpack_require__) {

var Displayable = __webpack_require__(84);

var zrUtil = __webpack_require__(1);

var textContain = __webpack_require__(55);

var textHelper = __webpack_require__(181);

/**
 * @alias zrender/graphic/Text
 * @extends module:zrender/graphic/Displayable
 * @constructor
 * @param {Object} opts
 */
var Text = function (opts) {
  // jshint ignore:line
  Displayable.call(this, opts);
};

Text.prototype = {
  constructor: Text,
  type: 'text',
  brush: function (ctx, prevEl) {
    var style = this.style; // Optimize, avoid normalize every time.

    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.

    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;
    var text = style.text; // Convert to string

    text != null && (text += ''); // Always bind style

    style.bind(ctx, this, prevEl);

    if (!textHelper.needDrawText(text, style)) {
      return;
    }

    this.setTransform(ctx);
    textHelper.renderText(this, ctx, text, style);
    this.restoreTransform(ctx);
  },
  getBoundingRect: function () {
    var style = this.style; // Optimize, avoid normalize every time.

    this.__dirty && textHelper.normalizeTextStyle(style, true);

    if (!this._rect) {
      var text = style.text;
      text != null ? text += '' : text = '';
      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);
      rect.x += style.x || 0;
      rect.y += style.y || 0;

      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {
        var w = style.textStrokeWidth;
        rect.x -= w / 2;
        rect.y -= w / 2;
        rect.width += w;
        rect.height += w;
      }

      this._rect = rect;
    }

    return this._rect;
  }
};
zrUtil.inherits(Text, Displayable);
var _default = Text;
module.exports = _default;

/***/ }),
/* 459 */
/***/ (function(module, exports, __webpack_require__) {

var Path = __webpack_require__(21);

/**
 * 圆形
 * @module zrender/shape/Circle
 */
var _default = Path.extend({
  type: 'circle',
  shape: {
    cx: 0,
    cy: 0,
    r: 0
  },
  buildPath: function (ctx, shape, inBundle) {
    // Better stroking in ShapeBundle
    // Always do it may have performence issue ( fill may be 2x more cost)
    if (inBundle) {
      ctx.moveTo(shape.cx + shape.r, shape.cy);
    } // else {
    //     if (ctx.allocate && !ctx.data.length) {
    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);
    //     }
    // }
    // Better stroking in ShapeBundle
    // ctx.moveTo(shape.cx + shape.r, shape.cy);


    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);
  }
});

module.exports = _default;

/***/ }),
/* 460 */
/***/ (function(module, exports, __webpack_require__) {

var Path = __webpack_require__(21);

var fixClipWithShadow = __webpack_require__(187);

/**
 * 扇形
 * @module zrender/graphic/shape/Sector
 */
var _default = Path.extend({
  type: 'sector',
  shape: {
    cx: 0,
    cy: 0,
    r0: 0,
    r: 0,
    startAngle: 0,
    endAngle: Math.PI * 2,
    clockwise: true
  },
  brush: fixClipWithShadow(Path.prototype.brush),
  buildPath: function (ctx, shape) {
    var x = shape.cx;
    var y = shape.cy;
    var r0 = Math.max(shape.r0 || 0, 0);
    var r = Math.max(shape.r, 0);
    var startAngle = shape.startAngle;
    var endAngle = shape.endAngle;
    var clockwise = shape.clockwise;
    var unitX = Math.cos(startAngle);
    var unitY = Math.sin(startAngle);
    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);
    ctx.lineTo(unitX * r + x, unitY * r + y);
    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);
    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);

    if (r0 !== 0) {
      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);
    }

    ctx.closePath();
  }
});

module.exports = _default;

/***/ }),
/* 461 */
/***/ (function(module, exports, __webpack_require__) {

var Path = __webpack_require__(21);

/**
 * 圆环
 * @module zrender/graphic/shape/Ring
 */
var _default = Path.extend({
  type: 'ring',
  shape: {
    cx: 0,
    cy: 0,
    r: 0,
    r0: 0
  },
  buildPath: function (ctx, shape) {
    var x = shape.cx;
    var y = shape.cy;
    var PI2 = Math.PI * 2;
    ctx.moveTo(x + shape.r, y);
    ctx.arc(x, y, shape.r, 0, PI2, false);
    ctx.moveTo(x + shape.r0, y);
    ctx.arc(x, y, shape.r0, 0, PI2, true);
  }
});

module.exports = _default;

/***/ }),
/* 462 */
/***/ (function(module, exports, __webpack_require__) {

var Path = __webpack_require__(21);

var polyHelper = __webpack_require__(188);

/**
 * 多边形
 * @module zrender/shape/Polygon
 */
var _default = Path.extend({
  type: 'polygon',
  shape: {
    points: null,
    smooth: false,
    smoothConstraint: null
  },
  buildPath: function (ctx, shape) {
    polyHelper.buildPath(ctx, shape, true);
  }
});

module.exports = _default;

/***/ }),
/* 463 */
/***/ (function(module, exports, __webpack_require__) {

var _vector = __webpack_require__(17);

var v2Distance = _vector.distance;

/**
 * Catmull-Rom spline 插值折线
 * @module zrender/shape/util/smoothSpline
 * @author pissang (https://www.github.com/pissang)
 *         Kener (@Kener-林峰, kener.linfeng@gmail.com)
 *         errorrik (errorrik@gmail.com)
 */

/**
 * @inner
 */
function interpolate(p0, p1, p2, p3, t, t2, t3) {
  var v0 = (p2 - p0) * 0.5;
  var v1 = (p3 - p1) * 0.5;
  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;
}
/**
 * @alias module:zrender/shape/util/smoothSpline
 * @param {Array} points 线段顶点数组
 * @param {boolean} isLoop
 * @return {Array}
 */


function _default(points, isLoop) {
  var len = points.length;
  var ret = [];
  var distance = 0;

  for (var i = 1; i < len; i++) {
    distance += v2Distance(points[i - 1], points[i]);
  }

  var segs = distance / 2;
  segs = segs < len ? len : segs;

  for (var i = 0; i < segs; i++) {
    var pos = i / (segs - 1) * (isLoop ? len : len - 1);
    var idx = Math.floor(pos);
    var w = pos - idx;
    var p0;
    var p1 = points[idx % len];
    var p2;
    var p3;

    if (!isLoop) {
      p0 = points[idx === 0 ? idx : idx - 1];
      p2 = points[idx > len - 2 ? len - 1 : idx + 1];
      p3 = points[idx > len - 3 ? len - 1 : idx + 2];
    } else {
      p0 = points[(idx - 1 + len) % len];
      p2 = points[(idx + 1) % len];
      p3 = points[(idx + 2) % len];
    }

    var w2 = w * w;
    var w3 = w * w2;
    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);
  }

  return ret;
}

module.exports = _default;

/***/ }),
/* 464 */
/***/ (function(module, exports, __webpack_require__) {

var _vector = __webpack_require__(17);

var v2Min = _vector.min;
var v2Max = _vector.max;
var v2Scale = _vector.scale;
var v2Distance = _vector.distance;
var v2Add = _vector.add;
var v2Clone = _vector.clone;
var v2Sub = _vector.sub;

/**
 * 贝塞尔平滑曲线
 * @module zrender/shape/util/smoothBezier
 * @author pissang (https://www.github.com/pissang)
 *         Kener (@Kener-林峰, kener.linfeng@gmail.com)
 *         errorrik (errorrik@gmail.com)
 */

/**
 * 贝塞尔平滑曲线
 * @alias module:zrender/shape/util/smoothBezier
 * @param {Array} points 线段顶点数组
 * @param {number} smooth 平滑等级, 0-1
 * @param {boolean} isLoop
 * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内
 *                           比如 [[0, 0], [100, 100]], 这个包围盒会与
 *                           整个折线的包围盒做一个并集用来约束控制点。
 * @param {Array} 计算出来的控制点数组
 */
function _default(points, smooth, isLoop, constraint) {
  var cps = [];
  var v = [];
  var v1 = [];
  var v2 = [];
  var prevPoint;
  var nextPoint;
  var min, max;

  if (constraint) {
    min = [Infinity, Infinity];
    max = [-Infinity, -Infinity];

    for (var i = 0, len = points.length; i < len; i++) {
      v2Min(min, min, points[i]);
      v2Max(max, max, points[i]);
    } // 与指定的包围盒做并集


    v2Min(min, min, constraint[0]);
    v2Max(max, max, constraint[1]);
  }

  for (var i = 0, len = points.length; i < len; i++) {
    var point = points[i];

    if (isLoop) {
      prevPoint = points[i ? i - 1 : len - 1];
      nextPoint = points[(i + 1) % len];
    } else {
      if (i === 0 || i === len - 1) {
        cps.push(v2Clone(points[i]));
        continue;
      } else {
        prevPoint = points[i - 1];
        nextPoint = points[i + 1];
      }
    }

    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length

    v2Scale(v, v, smooth);
    var d0 = v2Distance(point, prevPoint);
    var d1 = v2Distance(point, nextPoint);
    var sum = d0 + d1;

    if (sum !== 0) {
      d0 /= sum;
      d1 /= sum;
    }

    v2Scale(v1, v, -d0);
    v2Scale(v2, v, d1);
    var cp0 = v2Add([], point, v1);
    var cp1 = v2Add([], point, v2);

    if (constraint) {
      v2Max(cp0, cp0, min);
      v2Min(cp0, cp0, max);
      v2Max(cp1, cp1, min);
      v2Min(cp1, cp1, max);
    }

    cps.push(cp0);
    cps.push(cp1);
  }

  if (isLoop) {
    cps.push(cps.shift());
  }

  return cps;
}

module.exports = _default;

/***/ }),
/* 465 */
/***/ (function(module, exports, __webpack_require__) {

var Path = __webpack_require__(21);

var polyHelper = __webpack_require__(188);

/**
 * @module zrender/graphic/shape/Polyline
 */
var _default = Path.extend({
  type: 'polyline',
  shape: {
    points: null,
    smooth: false,
    smoothConstraint: null
  },
  style: {
    stroke: '#000',
    fill: null
  },
  buildPath: function (ctx, shape) {
    polyHelper.buildPath(ctx, shape, false);
  }
});

module.exports = _default;

/***/ }),
/* 466 */
/***/ (function(module, exports, __webpack_require__) {

var Path = __webpack_require__(21);

var roundRectHelper = __webpack_require__(182);

/**
 * 矩形
 * @module zrender/graphic/shape/Rect
 */
var _default = Path.extend({
  type: 'rect',
  shape: {
    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4
    // r缩写为1         相当于 [1, 1, 1, 1]
    // r缩写为[1]       相当于 [1, 1, 1, 1]
    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]
    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]
    r: 0,
    x: 0,
    y: 0,
    width: 0,
    height: 0
  },
  buildPath: function (ctx, shape) {
    var x = shape.x;
    var y = shape.y;
    var width = shape.width;
    var height = shape.height;

    if (!shape.r) {
      ctx.rect(x, y, width, height);
    } else {
      roundRectHelper.buildPath(ctx, shape);
    }

    ctx.closePath();
    return;
  }
});

module.exports = _default;

/***/ }),
/* 467 */
/***/ (function(module, exports, __webpack_require__) {

var Path = __webpack_require__(21);

/**
 * 直线
 * @module zrender/graphic/shape/Line
 */
var _default = Path.extend({
  type: 'line',
  shape: {
    // Start point
    x1: 0,
    y1: 0,
    // End point
    x2: 0,
    y2: 0,
    percent: 1
  },
  style: {
    stroke: '#000',
    fill: null
  },
  buildPath: function (ctx, shape) {
    var x1 = shape.x1;
    var y1 = shape.y1;
    var x2 = shape.x2;
    var y2 = shape.y2;
    var percent = shape.percent;

    if (percent === 0) {
      return;
    }

    ctx.moveTo(x1, y1);

    if (percent < 1) {
      x2 = x1 * (1 - percent) + x2 * percent;
      y2 = y1 * (1 - percent) + y2 * percent;
    }

    ctx.lineTo(x2, y2);
  },

  /**
   * Get point at percent
   * @param  {number} percent
   * @return {Array.<number>}
   */
  pointAt: function (p) {
    var shape = this.shape;
    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];
  }
});

module.exports = _default;

/***/ }),
/* 468 */
/***/ (function(module, exports, __webpack_require__) {

var Path = __webpack_require__(21);

var vec2 = __webpack_require__(17);

var _curve = __webpack_require__(65);

var quadraticSubdivide = _curve.quadraticSubdivide;
var cubicSubdivide = _curve.cubicSubdivide;
var quadraticAt = _curve.quadraticAt;
var cubicAt = _curve.cubicAt;
var quadraticDerivativeAt = _curve.quadraticDerivativeAt;
var cubicDerivativeAt = _curve.cubicDerivativeAt;

/**
 * 贝塞尔曲线
 * @module zrender/shape/BezierCurve
 */
var out = [];

function someVectorAt(shape, t, isTangent) {
  var cpx2 = shape.cpx2;
  var cpy2 = shape.cpy2;

  if (cpx2 === null || cpy2 === null) {
    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];
  } else {
    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];
  }
}

var _default = Path.extend({
  type: 'bezier-curve',
  shape: {
    x1: 0,
    y1: 0,
    x2: 0,
    y2: 0,
    cpx1: 0,
    cpy1: 0,
    // cpx2: 0,
    // cpy2: 0
    // Curve show percent, for animating
    percent: 1
  },
  style: {
    stroke: '#000',
    fill: null
  },
  buildPath: function (ctx, shape) {
    var x1 = shape.x1;
    var y1 = shape.y1;
    var x2 = shape.x2;
    var y2 = shape.y2;
    var cpx1 = shape.cpx1;
    var cpy1 = shape.cpy1;
    var cpx2 = shape.cpx2;
    var cpy2 = shape.cpy2;
    var percent = shape.percent;

    if (percent === 0) {
      return;
    }

    ctx.moveTo(x1, y1);

    if (cpx2 == null || cpy2 == null) {
      if (percent < 1) {
        quadraticSubdivide(x1, cpx1, x2, percent, out);
        cpx1 = out[1];
        x2 = out[2];
        quadraticSubdivide(y1, cpy1, y2, percent, out);
        cpy1 = out[1];
        y2 = out[2];
      }

      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);
    } else {
      if (percent < 1) {
        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);
        cpx1 = out[1];
        cpx2 = out[2];
        x2 = out[3];
        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);
        cpy1 = out[1];
        cpy2 = out[2];
        y2 = out[3];
      }

      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);
    }
  },

  /**
   * Get point at percent
   * @param  {number} t
   * @return {Array.<number>}
   */
  pointAt: function (t) {
    return someVectorAt(this.shape, t, false);
  },

  /**
   * Get tangent at percent
   * @param  {number} t
   * @return {Array.<number>}
   */
  tangentAt: function (t) {
    var p = someVectorAt(this.shape, t, true);
    return vec2.normalize(p, p);
  }
});

module.exports = _default;

/***/ }),
/* 469 */
/***/ (function(module, exports, __webpack_require__) {

var Path = __webpack_require__(21);

/**
 * 圆弧
 * @module zrender/graphic/shape/Arc
 */
var _default = Path.extend({
  type: 'arc',
  shape: {
    cx: 0,
    cy: 0,
    r: 0,
    startAngle: 0,
    endAngle: Math.PI * 2,
    clockwise: true
  },
  style: {
    stroke: '#000',
    fill: null
  },
  buildPath: function (ctx, shape) {
    var x = shape.cx;
    var y = shape.cy;
    var r = Math.max(shape.r, 0);
    var startAngle = shape.startAngle;
    var endAngle = shape.endAngle;
    var clockwise = shape.clockwise;
    var unitX = Math.cos(startAngle);
    var unitY = Math.sin(startAngle);
    ctx.moveTo(unitX * r + x, unitY * r + y);
    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);
  }
});

module.exports = _default;

/***/ }),
/* 470 */
/***/ (function(module, exports, __webpack_require__) {

var Path = __webpack_require__(21);

// CompoundPath to improve performance
var _default = Path.extend({
  type: 'compound',
  shape: {
    paths: null
  },
  _updatePathDirty: function () {
    var dirtyPath = this.__dirtyPath;
    var paths = this.shape.paths;

    for (var i = 0; i < paths.length; i++) {
      // Mark as dirty if any subpath is dirty
      dirtyPath = dirtyPath || paths[i].__dirtyPath;
    }

    this.__dirtyPath = dirtyPath;
    this.__dirty = this.__dirty || dirtyPath;
  },
  beforeBrush: function () {
    this._updatePathDirty();

    var paths = this.shape.paths || [];
    var scale = this.getGlobalScale(); // Update path scale

    for (var i = 0; i < paths.length; i++) {
      if (!paths[i].path) {
        paths[i].createPathProxy();
      }

      paths[i].path.setScale(scale[0], scale[1]);
    }
  },
  buildPath: function (ctx, shape) {
    var paths = shape.paths || [];

    for (var i = 0; i < paths.length; i++) {
      paths[i].buildPath(ctx, paths[i].shape, true);
    }
  },
  afterBrush: function () {
    var paths = this.shape.paths || [];

    for (var i = 0; i < paths.length; i++) {
      paths[i].__dirtyPath = false;
    }
  },
  getBoundingRect: function () {
    this._updatePathDirty();

    return Path.prototype.getBoundingRect.call(this);
  }
});

module.exports = _default;

/***/ }),
/* 471 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var Gradient = __webpack_require__(115);

/**
 * x, y, x2, y2 are all percent from 0 to 1
 * @param {number} [x=0]
 * @param {number} [y=0]
 * @param {number} [x2=1]
 * @param {number} [y2=0]
 * @param {Array.<Object>} colorStops
 * @param {boolean} [globalCoord=false]
 */
var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {
  // Should do nothing more in this constructor. Because gradient can be
  // declard by `color: {type: 'linear', colorStops: ...}`, where
  // this constructor will not be called.
  this.x = x == null ? 0 : x;
  this.y = y == null ? 0 : y;
  this.x2 = x2 == null ? 1 : x2;
  this.y2 = y2 == null ? 0 : y2; // Can be cloned

  this.type = 'linear'; // If use global coord

  this.global = globalCoord || false;
  Gradient.call(this, colorStops);
};

LinearGradient.prototype = {
  constructor: LinearGradient
};
zrUtil.inherits(LinearGradient, Gradient);
var _default = LinearGradient;
module.exports = _default;

/***/ }),
/* 472 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var Gradient = __webpack_require__(115);

/**
 * x, y, r are all percent from 0 to 1
 * @param {number} [x=0.5]
 * @param {number} [y=0.5]
 * @param {number} [r=0.5]
 * @param {Array.<Object>} [colorStops]
 * @param {boolean} [globalCoord=false]
 */
var RadialGradient = function (x, y, r, colorStops, globalCoord) {
  // Should do nothing more in this constructor. Because gradient can be
  // declard by `color: {type: 'radial', colorStops: ...}`, where
  // this constructor will not be called.
  this.x = x == null ? 0.5 : x;
  this.y = y == null ? 0.5 : y;
  this.r = r == null ? 0.5 : r; // Can be cloned

  this.type = 'radial'; // If use global coord

  this.global = globalCoord || false;
  Gradient.call(this, colorStops);
};

RadialGradient.prototype = {
  constructor: RadialGradient
};
zrUtil.inherits(RadialGradient, Gradient);
var _default = RadialGradient;
module.exports = _default;

/***/ }),
/* 473 */
/***/ (function(module, exports, __webpack_require__) {

var _util = __webpack_require__(1);

var inherits = _util.inherits;

var Displayble = __webpack_require__(84);

var BoundingRect = __webpack_require__(30);

/**
 * Displayable for incremental rendering. It will be rendered in a separate layer
 * IncrementalDisplay have too main methods. `clearDisplayables` and `addDisplayables`
 * addDisplayables will render the added displayables incremetally.
 *
 * It use a not clearFlag to tell the painter don't clear the layer if it's the first element.
 */
// TODO Style override ?
function IncrementalDisplayble(opts) {
  Displayble.call(this, opts);
  this._displayables = [];
  this._temporaryDisplayables = [];
  this._cursor = 0;
  this.notClear = true;
}

IncrementalDisplayble.prototype.incremental = true;

IncrementalDisplayble.prototype.clearDisplaybles = function () {
  this._displayables = [];
  this._temporaryDisplayables = [];
  this._cursor = 0;
  this.dirty();
  this.notClear = false;
};

IncrementalDisplayble.prototype.addDisplayable = function (displayable, notPersistent) {
  if (notPersistent) {
    this._temporaryDisplayables.push(displayable);
  } else {
    this._displayables.push(displayable);
  }

  this.dirty();
};

IncrementalDisplayble.prototype.addDisplayables = function (displayables, notPersistent) {
  notPersistent = notPersistent || false;

  for (var i = 0; i < displayables.length; i++) {
    this.addDisplayable(displayables[i], notPersistent);
  }
};

IncrementalDisplayble.prototype.eachPendingDisplayable = function (cb) {
  for (var i = this._cursor; i < this._displayables.length; i++) {
    cb && cb(this._displayables[i]);
  }

  for (var i = 0; i < this._temporaryDisplayables.length; i++) {
    cb && cb(this._temporaryDisplayables[i]);
  }
};

IncrementalDisplayble.prototype.update = function () {
  this.updateTransform();

  for (var i = this._cursor; i < this._displayables.length; i++) {
    var displayable = this._displayables[i]; // PENDING

    displayable.parent = this;
    displayable.update();
    displayable.parent = null;
  }

  for (var i = 0; i < this._temporaryDisplayables.length; i++) {
    var displayable = this._temporaryDisplayables[i]; // PENDING

    displayable.parent = this;
    displayable.update();
    displayable.parent = null;
  }
};

IncrementalDisplayble.prototype.brush = function (ctx, prevEl) {
  // Render persistant displayables.
  for (var i = this._cursor; i < this._displayables.length; i++) {
    var displayable = this._displayables[i];
    displayable.beforeBrush && displayable.beforeBrush(ctx);
    displayable.brush(ctx, i === this._cursor ? null : this._displayables[i - 1]);
    displayable.afterBrush && displayable.afterBrush(ctx);
  }

  this._cursor = i; // Render temporary displayables.

  for (var i = 0; i < this._temporaryDisplayables.length; i++) {
    var displayable = this._temporaryDisplayables[i];
    displayable.beforeBrush && displayable.beforeBrush(ctx);
    displayable.brush(ctx, i === 0 ? null : this._temporaryDisplayables[i - 1]);
    displayable.afterBrush && displayable.afterBrush(ctx);
  }

  this._temporaryDisplayables = [];
  this.notClear = true;
};

var m = [];

IncrementalDisplayble.prototype.getBoundingRect = function () {
  if (!this._rect) {
    var rect = new BoundingRect(Infinity, Infinity, -Infinity, -Infinity);

    for (var i = 0; i < this._displayables.length; i++) {
      var displayable = this._displayables[i];
      var childRect = displayable.getBoundingRect().clone();

      if (displayable.needLocalTransform()) {
        childRect.applyTransform(displayable.getLocalTransform(m));
      }

      rect.union(childRect);
    }

    this._rect = rect;
  }

  return this._rect;
};

IncrementalDisplayble.prototype.contain = function (x, y) {
  var localPos = this.transformCoordToLocal(x, y);
  var rect = this.getBoundingRect();

  if (rect.contain(localPos[0], localPos[1])) {
    for (var i = 0; i < this._displayables.length; i++) {
      var displayable = this._displayables[i];

      if (displayable.contain(x, y)) {
        return true;
      }
    }
  }

  return false;
};

inherits(IncrementalDisplayble, Displayble);
var _default = IncrementalDisplayble;
module.exports = _default;

/***/ }),
/* 474 */
/***/ (function(module, exports, __webpack_require__) {

var makeStyleMapper = __webpack_require__(114);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);
var _default = {
  getItemStyle: function (excludes, includes) {
    var style = getItemStyle(this, excludes, includes);
    var lineDash = this.getBorderLineDash();
    lineDash && (style.lineDash = lineDash);
    return style;
  },
  getBorderLineDash: function () {
    var lineType = this.get('borderType');
    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];
  }
};
module.exports = _default;

/***/ }),
/* 475 */
/***/ (function(module, exports) {

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var _default = {
  getBoxLayoutParams: function () {
    return {
      left: this.get('left'),
      top: this.get('top'),
      right: this.get('right'),
      bottom: this.get('bottom'),
      width: this.get('width'),
      height: this.get('height')
    };
  }
};
module.exports = _default;

/***/ }),
/* 476 */
/***/ (function(module, exports) {

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var platform = ''; // Navigator not exists in node

if (typeof navigator !== 'undefined') {
  platform = navigator.platform || '';
}

var _default = {
  // backgroundColor: 'rgba(0,0,0,0)',
  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization
  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],
  // Light colors:
  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],
  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],
  // Dark colors:
  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],
  gradientColor: ['#f6efa6', '#d88273', '#bf444c'],
  // If xAxis and yAxis declared, grid is created by default.
  // grid: {},
  textStyle: {
    // color: '#000',
    // decoration: 'none',
    // PENDING
    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',
    // fontFamily: 'Arial, Verdana, sans-serif',
    fontSize: 12,
    fontStyle: 'normal',
    fontWeight: 'normal'
  },
  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/
  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation
  // Default is source-over
  blendMode: null,
  animation: 'auto',
  animationDuration: 1000,
  animationDurationUpdate: 300,
  animationEasing: 'exponentialOut',
  animationEasingUpdate: 'cubicOut',
  animationThreshold: 2000,
  // Configuration for progressive/incremental rendering
  progressiveThreshold: 3000,
  progressive: 400,
  // Threshold of if use single hover layer to optimize.
  // It is recommended that `hoverLayerThreshold` is equivalent to or less than
  // `progressiveThreshold`, otherwise hover will cause restart of progressive,
  // which is unexpected.
  // see example <echarts/test/heatmap-large.html>.
  hoverLayerThreshold: 3000,
  // See: module:echarts/scale/Time
  useUTC: false
};
module.exports = _default;

/***/ }),
/* 477 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var modelUtil = __webpack_require__(7);

var ComponentModel = __webpack_require__(43);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * ECharts option manager
 *
 * @module {echarts/model/OptionManager}
 */
var each = zrUtil.each;
var clone = zrUtil.clone;
var map = zrUtil.map;
var merge = zrUtil.merge;
var QUERY_REG = /^(min|max)?(.+)$/;
/**
 * TERM EXPLANATIONS:
 *
 * [option]:
 *
 *     An object that contains definitions of components. For example:
 *     var option = {
 *         title: {...},
 *         legend: {...},
 *         visualMap: {...},
 *         series: [
 *             {data: [...]},
 *             {data: [...]},
 *             ...
 *         ]
 *     };
 *
 * [rawOption]:
 *
 *     An object input to echarts.setOption. 'rawOption' may be an
 *     'option', or may be an object contains multi-options. For example:
 *     var option = {
 *         baseOption: {
 *             title: {...},
 *             legend: {...},
 *             series: [
 *                 {data: [...]},
 *                 {data: [...]},
 *                 ...
 *             ]
 *         },
 *         timeline: {...},
 *         options: [
 *             {title: {...}, series: {data: [...]}},
 *             {title: {...}, series: {data: [...]}},
 *             ...
 *         ],
 *         media: [
 *             {
 *                 query: {maxWidth: 320},
 *                 option: {series: {x: 20}, visualMap: {show: false}}
 *             },
 *             {
 *                 query: {minWidth: 320, maxWidth: 720},
 *                 option: {series: {x: 500}, visualMap: {show: true}}
 *             },
 *             {
 *                 option: {series: {x: 1200}, visualMap: {show: true}}
 *             }
 *         ]
 *     };
 *
 * @alias module:echarts/model/OptionManager
 * @param {module:echarts/ExtensionAPI} api
 */

function OptionManager(api) {
  /**
   * @private
   * @type {module:echarts/ExtensionAPI}
   */
  this._api = api;
  /**
   * @private
   * @type {Array.<number>}
   */

  this._timelineOptions = [];
  /**
   * @private
   * @type {Array.<Object>}
   */

  this._mediaList = [];
  /**
   * @private
   * @type {Object}
   */

  this._mediaDefault;
  /**
   * -1, means default.
   * empty means no media.
   * @private
   * @type {Array.<number>}
   */

  this._currentMediaIndices = [];
  /**
   * @private
   * @type {Object}
   */

  this._optionBackup;
  /**
   * @private
   * @type {Object}
   */

  this._newBaseOption;
} // timeline.notMerge is not supported in ec3. Firstly there is rearly
// case that notMerge is needed. Secondly supporting 'notMerge' requires
// rawOption cloned and backuped when timeline changed, which does no
// good to performance. What's more, that both timeline and setOption
// method supply 'notMerge' brings complex and some problems.
// Consider this case:
// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);
// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);


OptionManager.prototype = {
  constructor: OptionManager,

  /**
   * @public
   * @param {Object} rawOption Raw option.
   * @param {module:echarts/model/Global} ecModel
   * @param {Array.<Function>} optionPreprocessorFuncs
   * @return {Object} Init option
   */
  setOption: function (rawOption, optionPreprocessorFuncs) {
    if (rawOption) {
      // That set dat primitive is dangerous if user reuse the data when setOption again.
      zrUtil.each(modelUtil.normalizeToArray(rawOption.series), function (series) {
        series && series.data && zrUtil.isTypedArray(series.data) && zrUtil.setAsPrimitive(series.data);
      });
    } // Caution: some series modify option data, if do not clone,
    // it should ensure that the repeat modify correctly
    // (create a new object when modify itself).


    rawOption = clone(rawOption, true); // FIXME
    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。

    var oldOptionBackup = this._optionBackup;
    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);
    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);

    if (oldOptionBackup) {
      // Only baseOption can be merged.
      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,
      // that is, if you `setOption` twice and both has timeline options, the latter
      // timeline opitons will not be merged to the formers, but just substitude them.

      if (newParsedOption.timelineOptions.length) {
        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;
      }

      if (newParsedOption.mediaList.length) {
        oldOptionBackup.mediaList = newParsedOption.mediaList;
      }

      if (newParsedOption.mediaDefault) {
        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;
      }
    } else {
      this._optionBackup = newParsedOption;
    }
  },

  /**
   * @param {boolean} isRecreate
   * @return {Object}
   */
  mountOption: function (isRecreate) {
    var optionBackup = this._optionBackup; // TODO
    // 如果没有reset功能则不clone。

    this._timelineOptions = map(optionBackup.timelineOptions, clone);
    this._mediaList = map(optionBackup.mediaList, clone);
    this._mediaDefault = clone(optionBackup.mediaDefault);
    this._currentMediaIndices = [];
    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`
    // called, and is merged into every new option by inner method `mergeOption`
    // each time `setOption` called, can be only used in `isRecreate`, because
    // its reliability is under suspicion. In other cases option merge is
    // performed by `model.mergeOption`.
    ? optionBackup.baseOption : this._newBaseOption);
  },

  /**
   * @param {module:echarts/model/Global} ecModel
   * @return {Object}
   */
  getTimelineOption: function (ecModel) {
    var option;
    var timelineOptions = this._timelineOptions;

    if (timelineOptions.length) {
      // getTimelineOption can only be called after ecModel inited,
      // so we can get currentIndex from timelineModel.
      var timelineModel = ecModel.getComponent('timeline');

      if (timelineModel) {
        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);
      }
    }

    return option;
  },

  /**
   * @param {module:echarts/model/Global} ecModel
   * @return {Array.<Object>}
   */
  getMediaOption: function (ecModel) {
    var ecWidth = this._api.getWidth();

    var ecHeight = this._api.getHeight();

    var mediaList = this._mediaList;
    var mediaDefault = this._mediaDefault;
    var indices = [];
    var result = []; // No media defined.

    if (!mediaList.length && !mediaDefault) {
      return result;
    } // Multi media may be applied, the latter defined media has higher priority.


    for (var i = 0, len = mediaList.length; i < len; i++) {
      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {
        indices.push(i);
      }
    } // FIXME
    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。


    if (!indices.length && mediaDefault) {
      indices = [-1];
    }

    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {
      result = map(indices, function (index) {
        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);
      });
    } // Otherwise return nothing.


    this._currentMediaIndices = indices;
    return result;
  }
};

function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {
  var timelineOptions = [];
  var mediaList = [];
  var mediaDefault;
  var baseOption; // Compatible with ec2.

  var timelineOpt = rawOption.timeline;

  if (rawOption.baseOption) {
    baseOption = rawOption.baseOption;
  } // For timeline


  if (timelineOpt || rawOption.options) {
    baseOption = baseOption || {};
    timelineOptions = (rawOption.options || []).slice();
  } // For media query


  if (rawOption.media) {
    baseOption = baseOption || {};
    var media = rawOption.media;
    each(media, function (singleMedia) {
      if (singleMedia && singleMedia.option) {
        if (singleMedia.query) {
          mediaList.push(singleMedia);
        } else if (!mediaDefault) {
          // Use the first media default.
          mediaDefault = singleMedia;
        }
      }
    });
  } // For normal option


  if (!baseOption) {
    baseOption = rawOption;
  } // Set timelineOpt to baseOption in ec3,
  // which is convenient for merge option.


  if (!baseOption.timeline) {
    baseOption.timeline = timelineOpt;
  } // Preprocess.


  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {
    return media.option;
  })), function (option) {
    each(optionPreprocessorFuncs, function (preProcess) {
      preProcess(option, isNew);
    });
  });
  return {
    baseOption: baseOption,
    timelineOptions: timelineOptions,
    mediaDefault: mediaDefault,
    mediaList: mediaList
  };
}
/**
 * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>
 * Support: width, height, aspectRatio
 * Can use max or min as prefix.
 */


function applyMediaQuery(query, ecWidth, ecHeight) {
  var realMap = {
    width: ecWidth,
    height: ecHeight,
    aspectratio: ecWidth / ecHeight // lowser case for convenientce.

  };
  var applicatable = true;
  zrUtil.each(query, function (value, attr) {
    var matched = attr.match(QUERY_REG);

    if (!matched || !matched[1] || !matched[2]) {
      return;
    }

    var operator = matched[1];
    var realAttr = matched[2].toLowerCase();

    if (!compare(realMap[realAttr], value, operator)) {
      applicatable = false;
    }
  });
  return applicatable;
}

function compare(real, expect, operator) {
  if (operator === 'min') {
    return real >= expect;
  } else if (operator === 'max') {
    return real <= expect;
  } else {
    // Equals
    return real === expect;
  }
}

function indicesEquals(indices1, indices2) {
  // indices is always order by asc and has only finite number.
  return indices1.join(',') === indices2.join(',');
}
/**
 * Consider case:
 * `chart.setOption(opt1);`
 * Then user do some interaction like dataZoom, dataView changing.
 * `chart.setOption(opt2);`
 * Then user press 'reset button' in toolbox.
 *
 * After doing that all of the interaction effects should be reset, the
 * chart should be the same as the result of invoke
 * `chart.setOption(opt1); chart.setOption(opt2);`.
 *
 * Although it is not able ensure that
 * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to
 * `chart.setOption(merge(opt1, opt2));` exactly,
 * this might be the only simple way to implement that feature.
 *
 * MEMO: We've considered some other approaches:
 * 1. Each model handle its self restoration but not uniform treatment.
 *     (Too complex in logic and error-prone)
 * 2. Use a shadow ecModel. (Performace expensive)
 */


function mergeOption(oldOption, newOption) {
  newOption = newOption || {};
  each(newOption, function (newCptOpt, mainType) {
    if (newCptOpt == null) {
      return;
    }

    var oldCptOpt = oldOption[mainType];

    if (!ComponentModel.hasClass(mainType)) {
      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);
    } else {
      newCptOpt = modelUtil.normalizeToArray(newCptOpt);
      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);
      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);
      oldOption[mainType] = map(mapResult, function (item) {
        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;
      });
    }
  });
}

var _default = OptionManager;
module.exports = _default;

/***/ }),
/* 478 */
/***/ (function(module, exports, __webpack_require__) {

var _util = __webpack_require__(1);

var each = _util.each;
var isArray = _util.isArray;
var isObject = _util.isObject;

var compatStyle = __webpack_require__(479);

var _model = __webpack_require__(7);

var normalizeToArray = _model.normalizeToArray;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
// Compatitable with 2.0
function get(opt, path) {
  path = path.split(',');
  var obj = opt;

  for (var i = 0; i < path.length; i++) {
    obj = obj && obj[path[i]];

    if (obj == null) {
      break;
    }
  }

  return obj;
}

function set(opt, path, val, overwrite) {
  path = path.split(',');
  var obj = opt;
  var key;

  for (var i = 0; i < path.length - 1; i++) {
    key = path[i];

    if (obj[key] == null) {
      obj[key] = {};
    }

    obj = obj[key];
  }

  if (overwrite || obj[path[i]] == null) {
    obj[path[i]] = val;
  }
}

function compatLayoutProperties(option) {
  each(LAYOUT_PROPERTIES, function (prop) {
    if (prop[0] in option && !(prop[1] in option)) {
      option[prop[1]] = option[prop[0]];
    }
  });
}

var LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];
var COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];

function _default(option, isTheme) {
  compatStyle(option, isTheme); // Make sure series array for model initialization.

  option.series = normalizeToArray(option.series);
  each(option.series, function (seriesOpt) {
    if (!isObject(seriesOpt)) {
      return;
    }

    var seriesType = seriesOpt.type;

    if (seriesType === 'pie' || seriesType === 'gauge') {
      if (seriesOpt.clockWise != null) {
        seriesOpt.clockwise = seriesOpt.clockWise;
      }
    }

    if (seriesType === 'gauge') {
      var pointerColor = get(seriesOpt, 'pointer.color');
      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);
    }

    compatLayoutProperties(seriesOpt);
  }); // dataRange has changed to visualMap

  if (option.dataRange) {
    option.visualMap = option.dataRange;
  }

  each(COMPATITABLE_COMPONENTS, function (componentName) {
    var options = option[componentName];

    if (options) {
      if (!isArray(options)) {
        options = [options];
      }

      each(options, function (option) {
        compatLayoutProperties(option);
      });
    }
  });
}

module.exports = _default;

/***/ }),
/* 479 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var modelUtil = __webpack_require__(7);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var each = zrUtil.each;
var isObject = zrUtil.isObject;
var POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];

function compatEC2ItemStyle(opt) {
  var itemStyleOpt = opt && opt.itemStyle;

  if (!itemStyleOpt) {
    return;
  }

  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {
    var styleName = POSSIBLE_STYLES[i];
    var normalItemStyleOpt = itemStyleOpt.normal;
    var emphasisItemStyleOpt = itemStyleOpt.emphasis;

    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {
      opt[styleName] = opt[styleName] || {};

      if (!opt[styleName].normal) {
        opt[styleName].normal = normalItemStyleOpt[styleName];
      } else {
        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);
      }

      normalItemStyleOpt[styleName] = null;
    }

    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {
      opt[styleName] = opt[styleName] || {};

      if (!opt[styleName].emphasis) {
        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];
      } else {
        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);
      }

      emphasisItemStyleOpt[styleName] = null;
    }
  }
}

function convertNormalEmphasis(opt, optType, useExtend) {
  if (opt && opt[optType] && (opt[optType].normal || opt[optType].emphasis)) {
    var normalOpt = opt[optType].normal;
    var emphasisOpt = opt[optType].emphasis;

    if (normalOpt) {
      // Timeline controlStyle has other properties besides normal and emphasis
      if (useExtend) {
        opt[optType].normal = opt[optType].emphasis = null;
        zrUtil.defaults(opt[optType], normalOpt);
      } else {
        opt[optType] = normalOpt;
      }
    }

    if (emphasisOpt) {
      opt.emphasis = opt.emphasis || {};
      opt.emphasis[optType] = emphasisOpt;
    }
  }
}

function removeEC3NormalStatus(opt) {
  convertNormalEmphasis(opt, 'itemStyle');
  convertNormalEmphasis(opt, 'lineStyle');
  convertNormalEmphasis(opt, 'areaStyle');
  convertNormalEmphasis(opt, 'label');
  convertNormalEmphasis(opt, 'labelLine'); // treemap

  convertNormalEmphasis(opt, 'upperLabel'); // graph

  convertNormalEmphasis(opt, 'edgeLabel');
}

function compatTextStyle(opt, propName) {
  // Check whether is not object (string\null\undefined ...)
  var labelOptSingle = isObject(opt) && opt[propName];
  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;

  if (textStyle) {
    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {
      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];

      if (textStyle.hasOwnProperty(propName)) {
        labelOptSingle[propName] = textStyle[propName];
      }
    }
  }
}

function compatEC3CommonStyles(opt) {
  if (opt) {
    removeEC3NormalStatus(opt);
    compatTextStyle(opt, 'label');
    opt.emphasis && compatTextStyle(opt.emphasis, 'label');
  }
}

function processSeries(seriesOpt) {
  if (!isObject(seriesOpt)) {
    return;
  }

  compatEC2ItemStyle(seriesOpt);
  removeEC3NormalStatus(seriesOpt);
  compatTextStyle(seriesOpt, 'label'); // treemap

  compatTextStyle(seriesOpt, 'upperLabel'); // graph

  compatTextStyle(seriesOpt, 'edgeLabel');

  if (seriesOpt.emphasis) {
    compatTextStyle(seriesOpt.emphasis, 'label'); // treemap

    compatTextStyle(seriesOpt.emphasis, 'upperLabel'); // graph

    compatTextStyle(seriesOpt.emphasis, 'edgeLabel');
  }

  var markPoint = seriesOpt.markPoint;

  if (markPoint) {
    compatEC2ItemStyle(markPoint);
    compatEC3CommonStyles(markPoint);
  }

  var markLine = seriesOpt.markLine;

  if (markLine) {
    compatEC2ItemStyle(markLine);
    compatEC3CommonStyles(markLine);
  }

  var markArea = seriesOpt.markArea;

  if (markArea) {
    compatEC3CommonStyles(markArea);
  }

  var data = seriesOpt.data; // Break with ec3: if `setOption` again, there may be no `type` in option,
  // then the backward compat based on option type will not be performed.

  if (seriesOpt.type === 'graph') {
    data = data || seriesOpt.nodes;
    var edgeData = seriesOpt.links || seriesOpt.edges;

    if (edgeData && !zrUtil.isTypedArray(edgeData)) {
      for (var i = 0; i < edgeData.length; i++) {
        compatEC3CommonStyles(edgeData[i]);
      }
    }

    zrUtil.each(seriesOpt.categories, function (opt) {
      removeEC3NormalStatus(opt);
    });
  }

  if (data && !zrUtil.isTypedArray(data)) {
    for (var i = 0; i < data.length; i++) {
      compatEC3CommonStyles(data[i]);
    }
  } // mark point data


  var markPoint = seriesOpt.markPoint;

  if (markPoint && markPoint.data) {
    var mpData = markPoint.data;

    for (var i = 0; i < mpData.length; i++) {
      compatEC3CommonStyles(mpData[i]);
    }
  } // mark line data


  var markLine = seriesOpt.markLine;

  if (markLine && markLine.data) {
    var mlData = markLine.data;

    for (var i = 0; i < mlData.length; i++) {
      if (zrUtil.isArray(mlData[i])) {
        compatEC3CommonStyles(mlData[i][0]);
        compatEC3CommonStyles(mlData[i][1]);
      } else {
        compatEC3CommonStyles(mlData[i]);
      }
    }
  } // Series


  if (seriesOpt.type === 'gauge') {
    compatTextStyle(seriesOpt, 'axisLabel');
    compatTextStyle(seriesOpt, 'title');
    compatTextStyle(seriesOpt, 'detail');
  } else if (seriesOpt.type === 'treemap') {
    convertNormalEmphasis(seriesOpt.breadcrumb, 'itemStyle');
    zrUtil.each(seriesOpt.levels, function (opt) {
      removeEC3NormalStatus(opt);
    });
  } else if (seriesOpt.type === 'tree') {
    removeEC3NormalStatus(seriesOpt.leaves);
  } // sunburst starts from ec4, so it does not need to compat levels.

}

function toArr(o) {
  return zrUtil.isArray(o) ? o : o ? [o] : [];
}

function toObj(o) {
  return (zrUtil.isArray(o) ? o[0] : o) || {};
}

function _default(option, isTheme) {
  each(toArr(option.series), function (seriesOpt) {
    isObject(seriesOpt) && processSeries(seriesOpt);
  });
  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];
  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');
  each(axes, function (axisName) {
    each(toArr(option[axisName]), function (axisOpt) {
      if (axisOpt) {
        compatTextStyle(axisOpt, 'axisLabel');
        compatTextStyle(axisOpt.axisPointer, 'label');
      }
    });
  });
  each(toArr(option.parallel), function (parallelOpt) {
    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;
    compatTextStyle(parallelAxisDefault, 'axisLabel');
    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');
  });
  each(toArr(option.calendar), function (calendarOpt) {
    convertNormalEmphasis(calendarOpt, 'itemStyle');
    compatTextStyle(calendarOpt, 'dayLabel');
    compatTextStyle(calendarOpt, 'monthLabel');
    compatTextStyle(calendarOpt, 'yearLabel');
  }); // radar.name.textStyle

  each(toArr(option.radar), function (radarOpt) {
    compatTextStyle(radarOpt, 'name');
  });
  each(toArr(option.geo), function (geoOpt) {
    if (isObject(geoOpt)) {
      compatEC3CommonStyles(geoOpt);
      each(toArr(geoOpt.regions), function (regionObj) {
        compatEC3CommonStyles(regionObj);
      });
    }
  });
  each(toArr(option.timeline), function (timelineOpt) {
    compatEC3CommonStyles(timelineOpt);
    convertNormalEmphasis(timelineOpt, 'label');
    convertNormalEmphasis(timelineOpt, 'itemStyle');
    convertNormalEmphasis(timelineOpt, 'controlStyle', true);
    var data = timelineOpt.data;
    zrUtil.isArray(data) && zrUtil.each(data, function (item) {
      if (zrUtil.isObject(item)) {
        convertNormalEmphasis(item, 'label');
        convertNormalEmphasis(item, 'itemStyle');
      }
    });
  });
  each(toArr(option.toolbox), function (toolboxOpt) {
    convertNormalEmphasis(toolboxOpt, 'iconStyle');
    each(toolboxOpt.feature, function (featureOpt) {
      convertNormalEmphasis(featureOpt, 'iconStyle');
    });
  });
  compatTextStyle(toObj(option.axisPointer), 'label');
  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');
}

module.exports = _default;

/***/ }),
/* 480 */
/***/ (function(module, exports, __webpack_require__) {

var _util = __webpack_require__(1);

var createHashMap = _util.createHashMap;
var each = _util.each;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
// (1) [Caution]: the logic is correct based on the premises:
//     data processing stage is blocked in stream.
//     See <module:echarts/stream/Scheduler#performDataProcessorTasks>
// (2) Only register once when import repeatly.
//     Should be executed before after series filtered and before stack calculation.
function _default(ecModel) {
  var stackInfoMap = createHashMap();
  ecModel.eachSeries(function (seriesModel) {
    var stack = seriesModel.get('stack'); // Compatibal: when `stack` is set as '', do not stack.

    if (stack) {
      var stackInfoList = stackInfoMap.get(stack) || stackInfoMap.set(stack, []);
      var data = seriesModel.getData();
      var stackInfo = {
        // Used for calculate axis extent automatically.
        stackResultDimension: data.getCalculationInfo('stackResultDimension'),
        stackedOverDimension: data.getCalculationInfo('stackedOverDimension'),
        stackedDimension: data.getCalculationInfo('stackedDimension'),
        stackedByDimension: data.getCalculationInfo('stackedByDimension'),
        isStackedByIndex: data.getCalculationInfo('isStackedByIndex'),
        data: data,
        seriesModel: seriesModel
      }; // If stacked on axis that do not support data stack.

      if (!stackInfo.stackedDimension || !(stackInfo.isStackedByIndex || stackInfo.stackedByDimension)) {
        return;
      }

      stackInfoList.length && data.setCalculationInfo('stackedOnSeries', stackInfoList[stackInfoList.length - 1].seriesModel);
      stackInfoList.push(stackInfo);
    }
  });
  stackInfoMap.each(calculateStack);
}

function calculateStack(stackInfoList) {
  each(stackInfoList, function (targetStackInfo, idxInStack) {
    var resultVal = [];
    var resultNaN = [NaN, NaN];
    var dims = [targetStackInfo.stackResultDimension, targetStackInfo.stackedOverDimension];
    var targetData = targetStackInfo.data;
    var isStackedByIndex = targetStackInfo.isStackedByIndex; // Should not write on raw data, because stack series model list changes
    // depending on legend selection.

    var newData = targetData.map(dims, function (v0, v1, dataIndex) {
      var sum = targetData.get(targetStackInfo.stackedDimension, dataIndex); // Consider `connectNulls` of line area, if value is NaN, stackedOver
      // should also be NaN, to draw a appropriate belt area.

      if (isNaN(sum)) {
        return resultNaN;
      }

      var byValue;
      var stackedDataRawIndex;

      if (isStackedByIndex) {
        stackedDataRawIndex = targetData.getRawIndex(dataIndex);
      } else {
        byValue = targetData.get(targetStackInfo.stackedByDimension, dataIndex);
      } // If stackOver is NaN, chart view will render point on value start.


      var stackedOver = NaN;

      for (var j = idxInStack - 1; j >= 0; j--) {
        var stackInfo = stackInfoList[j]; // Has been optimized by inverted indices on `stackedByDimension`.

        if (!isStackedByIndex) {
          stackedDataRawIndex = stackInfo.data.rawIndexOf(stackInfo.stackedByDimension, byValue);
        }

        if (stackedDataRawIndex >= 0) {
          var val = stackInfo.data.getByRawIndex(stackInfo.stackResultDimension, stackedDataRawIndex); // Considering positive stack, negative stack and empty data

          if (sum >= 0 && val > 0 || // Positive stack
          sum <= 0 && val < 0 // Negative stack
          ) {
              sum += val;
              stackedOver = val;
              break;
            }
        }
      }

      resultVal[0] = sum;
      resultVal[1] = stackedOver;
      return resultVal;
    });
    targetData.hostModel.setData(newData); // Update for consequent calculation

    targetStackInfo.data = newData;
  });
}

module.exports = _default;

/***/ }),
/* 481 */
/***/ (function(module, exports, __webpack_require__) {

var _dataProvider = __webpack_require__(66);

var retrieveRawValue = _dataProvider.retrieveRawValue;

var _format = __webpack_require__(33);

var getTooltipMarker = _format.getTooltipMarker;
var formatTpl = _format.formatTpl;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var DIMENSION_LABEL_REG = /\{@(.+?)\}/g; // PENDING A little ugly

var _default = {
  /**
   * Get params for formatter
   * @param {number} dataIndex
   * @param {string} [dataType]
   * @return {Object}
   */
  getDataParams: function (dataIndex, dataType) {
    var data = this.getData(dataType);
    var rawValue = this.getRawValue(dataIndex, dataType);
    var rawDataIndex = data.getRawIndex(dataIndex);
    var name = data.getName(dataIndex);
    var itemOpt = data.getRawDataItem(dataIndex);
    var color = data.getItemVisual(dataIndex, 'color');
    return {
      componentType: this.mainType,
      componentSubType: this.subType,
      seriesType: this.mainType === 'series' ? this.subType : null,
      seriesIndex: this.seriesIndex,
      seriesId: this.id,
      seriesName: this.name,
      name: name,
      dataIndex: rawDataIndex,
      data: itemOpt,
      dataType: dataType,
      value: rawValue,
      color: color,
      marker: getTooltipMarker(color),
      // Param name list for mapping `a`, `b`, `c`, `d`, `e`
      $vars: ['seriesName', 'name', 'value']
    };
  },

  /**
   * Format label
   * @param {number} dataIndex
   * @param {string} [status='normal'] 'normal' or 'emphasis'
   * @param {string} [dataType]
   * @param {number} [dimIndex]
   * @param {string} [labelProp='label']
   * @return {string} If not formatter, return null/undefined
   */
  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {
    status = status || 'normal';
    var data = this.getData(dataType);
    var itemModel = data.getItemModel(dataIndex);
    var params = this.getDataParams(dataIndex, dataType);

    if (dimIndex != null && params.value instanceof Array) {
      params.value = params.value[dimIndex];
    }

    var formatter = itemModel.get(status === 'normal' ? [labelProp || 'label', 'formatter'] : [status, labelProp || 'label', 'formatter']);

    if (typeof formatter === 'function') {
      params.status = status;
      return formatter(params);
    } else if (typeof formatter === 'string') {
      var str = formatTpl(formatter, params); // Support 'aaa{@[3]}bbb{@product}ccc'.
      // Do not support '}' in dim name util have to.

      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {
        var len = dim.length;

        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {
          dim = +dim.slice(1, len - 1); // Also: '[]' => 0
        }

        return retrieveRawValue(data, dataIndex, dim);
      });
    }
  },

  /**
   * Get raw value in option
   * @param {number} idx
   * @param {string} [dataType]
   * @return {Array|number|string}
   */
  getRawValue: function (idx, dataType) {
    return retrieveRawValue(this.getData(dataType), idx);
  },

  /**
   * Should be implemented.
   * @param {number} dataIndex
   * @param {boolean} [multipleSeries=false]
   * @param {number} [dataType]
   * @return {string} tooltip string
   */
  formatTooltip: function () {// Empty function
  }
};
module.exports = _default;

/***/ }),
/* 482 */
/***/ (function(module, exports, __webpack_require__) {

var Gradient = __webpack_require__(115);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var _default = {
  createOnAllSeries: true,
  performRawSeries: true,
  reset: function (seriesModel, ecModel) {
    var data = seriesModel.getData();
    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.');
    var color = seriesModel.get(colorAccessPath) // Set in itemStyle
    || seriesModel.getColorFromPalette( // TODO series count changed.
    seriesModel.name, null, ecModel.getSeriesCount()); // Default color
    // FIXME Set color function or use the platte color

    data.setVisual('color', color); // Only visible series has each data be visual encoded

    if (!ecModel.isSeriesFiltered(seriesModel)) {
      if (typeof color === 'function' && !(color instanceof Gradient)) {
        data.each(function (idx) {
          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));
        });
      } // itemStyle in each data item


      var dataEach = function (data, idx) {
        var itemModel = data.getItemModel(idx);
        var color = itemModel.get(colorAccessPath, true);

        if (color != null) {
          data.setItemVisual(idx, 'color', color);
        }
      };

      return {
        dataEach: data.hasItemOption ? dataEach : null
      };
    }
  }
};
module.exports = _default;

/***/ }),
/* 483 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var lang = __webpack_require__(484);

var _dataProvider = __webpack_require__(66);

var retrieveRawValue = _dataProvider.retrieveRawValue;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
function _default(dom, ecModel) {
  var ariaModel = ecModel.getModel('aria');

  if (!ariaModel.get('show')) {
    return;
  } else if (ariaModel.get('description')) {
    dom.setAttribute('aria-label', ariaModel.get('description'));
    return;
  }

  var seriesCnt = 0;
  ecModel.eachSeries(function (seriesModel, idx) {
    ++seriesCnt;
  }, this);
  var maxDataCnt = ariaModel.get('data.maxCount') || 10;
  var maxSeriesCnt = ariaModel.get('series.maxCount') || 10;
  var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);
  var ariaLabel;

  if (seriesCnt < 1) {
    // No series, no aria label
    return;
  } else {
    var title = getTitle();

    if (title) {
      ariaLabel = replace(getConfig('general.withTitle'), {
        title: title
      });
    } else {
      ariaLabel = getConfig('general.withoutTitle');
    }

    var seriesLabels = [];
    var prefix = seriesCnt > 1 ? 'series.multiple.prefix' : 'series.single.prefix';
    ariaLabel += replace(getConfig(prefix), {
      seriesCount: seriesCnt
    });
    ecModel.eachSeries(function (seriesModel, idx) {
      if (idx < displaySeriesCnt) {
        var seriesLabel;
        var seriesName = seriesModel.get('name');
        var seriesTpl = 'series.' + (seriesCnt > 1 ? 'multiple' : 'single') + '.';
        seriesLabel = getConfig(seriesName ? seriesTpl + 'withName' : seriesTpl + 'withoutName');
        seriesLabel = replace(seriesLabel, {
          seriesId: seriesModel.seriesIndex,
          seriesName: seriesModel.get('name'),
          seriesType: getSeriesTypeName(seriesModel.subType)
        });
        var data = seriesModel.getData();
        window.data = data;

        if (data.count() > maxDataCnt) {
          // Show part of data
          seriesLabel += replace(getConfig('data.partialData'), {
            displayCnt: maxDataCnt
          });
        } else {
          seriesLabel += getConfig('data.allData');
        }

        var dataLabels = [];

        for (var i = 0; i < data.count(); i++) {
          if (i < maxDataCnt) {
            var name = data.getName(i);
            var value = retrieveRawValue(data, i);
            dataLabels.push(replace(name ? getConfig('data.withName') : getConfig('data.withoutName'), {
              name: name,
              value: value
            }));
          }
        }

        seriesLabel += dataLabels.join(getConfig('data.separator.middle')) + getConfig('data.separator.end');
        seriesLabels.push(seriesLabel);
      }
    });
    ariaLabel += seriesLabels.join(getConfig('series.multiple.separator.middle')) + getConfig('series.multiple.separator.end');
    dom.setAttribute('aria-label', ariaLabel);
  }

  function replace(str, keyValues) {
    if (typeof str !== 'string') {
      return str;
    }

    var result = str;
    zrUtil.each(keyValues, function (value, key) {
      result = result.replace(new RegExp('\\{\\s*' + key + '\\s*\\}', 'g'), value);
    });
    return result;
  }

  function getConfig(path) {
    var userConfig = ariaModel.get(path);

    if (userConfig == null) {
      var pathArr = path.split('.');
      var result = lang.aria;

      for (var i = 0; i < pathArr.length; ++i) {
        result = result[pathArr[i]];
      }

      return result;
    } else {
      return userConfig;
    }
  }

  function getTitle() {
    var title = ecModel.getModel('title').option;

    if (title && title.length) {
      title = title[0];
    }

    return title && title.text;
  }

  function getSeriesTypeName(type) {
    return lang.series.typeNames[type] || '自定义图';
  }
}

module.exports = _default;

/***/ }),
/* 484 */
/***/ (function(module, exports) {

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var _default = {
  toolbox: {
    brush: {
      title: {
        rect: '矩形选择',
        polygon: '圈选',
        lineX: '横向选择',
        lineY: '纵向选择',
        keep: '保持选择',
        clear: '清除选择'
      }
    },
    dataView: {
      title: '数据视图',
      lang: ['数据视图', '关闭', '刷新']
    },
    dataZoom: {
      title: {
        zoom: '区域缩放',
        back: '区域缩放还原'
      }
    },
    magicType: {
      title: {
        line: '切换为折线图',
        bar: '切换为柱状图',
        stack: '切换为堆叠',
        tiled: '切换为平铺'
      }
    },
    restore: {
      title: '还原'
    },
    saveAsImage: {
      title: '保存为图片',
      lang: ['右键另存为图片']
    }
  },
  series: {
    typeNames: {
      pie: '饼图',
      bar: '柱状图',
      line: '折线图',
      scatter: '散点图',
      effectScatter: '涟漪散点图',
      radar: '雷达图',
      tree: '树图',
      treemap: '矩形树图',
      boxplot: '箱型图',
      candlestick: 'K线图',
      k: 'K线图',
      heatmap: '热力图',
      map: '地图',
      parallel: '平行坐标图',
      lines: '线图',
      graph: '关系图',
      sankey: '桑基图',
      funnel: '漏斗图',
      gauge: '仪表盘图',
      pictorialBar: '象形柱图',
      themeRiver: '主题河流图',
      sunburst: '旭日图'
    }
  },
  aria: {
    general: {
      withTitle: '这是一个关于“{title}”的图表。',
      withoutTitle: '这是一个图表，'
    },
    series: {
      single: {
        prefix: '',
        withName: '图表类型是{seriesType}，表示{seriesName}。',
        withoutName: '图表类型是{seriesType}。'
      },
      multiple: {
        prefix: '它由{seriesCount}个图表系列组成。',
        withName: '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，',
        withoutName: '第{seriesId}个系列是一个{seriesType}，',
        separator: {
          middle: '；',
          end: '。'
        }
      }
    },
    data: {
      allData: '其数据是——',
      partialData: '其中，前{displayCnt}项是——',
      withName: '{name}的数据是{value}',
      withoutName: '{value}',
      separator: {
        middle: '，',
        end: ''
      }
    }
  }
};
module.exports = _default;

/***/ }),
/* 485 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var graphic = __webpack_require__(11);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var PI = Math.PI;
/**
 * @param {module:echarts/ExtensionAPI} api
 * @param {Object} [opts]
 * @param {string} [opts.text]
 * @param {string} [opts.color]
 * @param {string} [opts.textColor]
 * @return {module:zrender/Element}
 */

function _default(api, opts) {
  opts = opts || {};
  zrUtil.defaults(opts, {
    text: 'loading',
    color: '#c23531',
    textColor: '#000',
    maskColor: 'rgba(255, 255, 255, 0.8)',
    zlevel: 0
  });
  var mask = new graphic.Rect({
    style: {
      fill: opts.maskColor
    },
    zlevel: opts.zlevel,
    z: 10000
  });
  var arc = new graphic.Arc({
    shape: {
      startAngle: -PI / 2,
      endAngle: -PI / 2 + 0.1,
      r: 10
    },
    style: {
      stroke: opts.color,
      lineCap: 'round',
      lineWidth: 5
    },
    zlevel: opts.zlevel,
    z: 10001
  });
  var labelRect = new graphic.Rect({
    style: {
      fill: 'none',
      text: opts.text,
      textPosition: 'right',
      textDistance: 10,
      textFill: opts.textColor
    },
    zlevel: opts.zlevel,
    z: 10001
  });
  arc.animateShape(true).when(1000, {
    endAngle: PI * 3 / 2
  }).start('circularInOut');
  arc.animateShape(true).when(1000, {
    startAngle: PI * 3 / 2
  }).delay(300).start('circularInOut');
  var group = new graphic.Group();
  group.add(arc);
  group.add(labelRect);
  group.add(mask); // Inject resize

  group.resize = function () {
    var cx = api.getWidth() / 2;
    var cy = api.getHeight() / 2;
    arc.setShape({
      cx: cx,
      cy: cy
    });
    var r = arc.shape.r;
    labelRect.setShape({
      x: cx - r,
      y: cy - r,
      width: r * 2,
      height: r * 2
    });
    mask.setShape({
      x: 0,
      y: 0,
      width: api.getWidth(),
      height: api.getHeight()
    });
  };

  group.resize();
  return group;
}

module.exports = _default;

/***/ }),
/* 486 */
/***/ (function(module, exports, __webpack_require__) {

var _util = __webpack_require__(1);

var each = _util.each;
var map = _util.map;
var isArray = _util.isArray;
var isFunction = _util.isFunction;
var createHashMap = _util.createHashMap;
var noop = _util.noop;

var _task = __webpack_require__(117);

var createTask = _task.createTask;

var _component = __webpack_require__(86);

var getUID = _component.getUID;

var GlobalModel = __webpack_require__(183);

var ExtensionAPI = __webpack_require__(191);

var _model = __webpack_require__(7);

var normalizeToArray = _model.normalizeToArray;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * @module echarts/stream/Scheduler
 */

/**
 * @constructor
 */
function Scheduler(ecInstance, api, dataProcessorHandlers, visualHandlers) {
  this.ecInstance = ecInstance;
  this.api = api;
  this.unfinished; // Fix current processors in case that in some rear cases that
  // processors might be registered after echarts instance created.
  // Register processors incrementally for a echarts instance is
  // not supported by this stream architecture.

  var dataProcessorHandlers = this._dataProcessorHandlers = dataProcessorHandlers.slice();
  var visualHandlers = this._visualHandlers = visualHandlers.slice();
  this._allHandlers = dataProcessorHandlers.concat(visualHandlers);
  /**
   * @private
   * @type {
   *     [handlerUID: string]: {
   *         seriesTaskMap?: {
   *             [seriesUID: string]: Task
   *         },
   *         overallTask?: Task
   *     }
   * }
   */

  this._stageTaskMap = createHashMap();
}

var proto = Scheduler.prototype;
/**
 * @param {module:echarts/model/Global} ecModel
 * @param {Object} payload
 */

proto.restoreData = function (ecModel, payload) {
  // TODO: Only restroe needed series and components, but not all components.
  // Currently `restoreData` of all of the series and component will be called.
  // But some independent components like `title`, `legend`, `graphic`, `toolbox`,
  // `tooltip`, `axisPointer`, etc, do not need series refresh when `setOption`,
  // and some components like coordinate system, axes, dataZoom, visualMap only
  // need their target series refresh.
  // (1) If we are implementing this feature some day, we should consider these cases:
  // if a data processor depends on a component (e.g., dataZoomProcessor depends
  // on the settings of `dataZoom`), it should be re-performed if the component
  // is modified by `setOption`.
  // (2) If a processor depends on sevral series, speicified by its `getTargetSeries`,
  // it should be re-performed when the result array of `getTargetSeries` changed.
  // We use `dependencies` to cover these issues.
  // (3) How to update target series when coordinate system related components modified.
  // TODO: simply the dirty mechanism? Check whether only the case here can set tasks dirty,
  // and this case all of the tasks will be set as dirty.
  ecModel.restoreData(payload); // Theoretically an overall task not only depends on each of its target series, but also
  // depends on all of the series.
  // The overall task is not in pipeline, and `ecModel.restoreData` only set pipeline tasks
  // dirty. If `getTargetSeries` of an overall task returns nothing, we should also ensure
  // that the overall task is set as dirty and to be performed, otherwise it probably cause
  // state chaos. So we have to set dirty of all of the overall tasks manually, otherwise it
  // probably cause state chaos (consider `dataZoomProcessor`).

  this._stageTaskMap.each(function (taskRecord) {
    var overallTask = taskRecord.overallTask;
    overallTask && overallTask.dirty();
  });
}; // If seriesModel provided, incremental threshold is check by series data.


proto.getPerformArgs = function (task, isBlock) {
  // For overall task
  if (!task.__pipeline) {
    return;
  }

  var pipeline = this._pipelineMap.get(task.__pipeline.id);

  var pCtx = pipeline.context;
  var incremental = !isBlock && pipeline.progressiveEnabled && (!pCtx || pCtx.progressiveRender) && task.__idxInPipeline > pipeline.blockIndex;
  var step = incremental ? pipeline.step : null;
  var modDataCount = pCtx && pCtx.modDataCount;
  var modBy = modDataCount != null ? Math.ceil(modDataCount / step) : null;
  return {
    step: step,
    modBy: modBy,
    modDataCount: modDataCount
  };
};

proto.getPipeline = function (pipelineId) {
  return this._pipelineMap.get(pipelineId);
};
/**
 * Current, progressive rendering starts from visual and layout.
 * Always detect render mode in the same stage, avoiding that incorrect
 * detection caused by data filtering.
 * Caution:
 * `updateStreamModes` use `seriesModel.getData()`.
 */


proto.updateStreamModes = function (seriesModel, view) {
  var pipeline = this._pipelineMap.get(seriesModel.uid);

  var data = seriesModel.getData();
  var dataLen = data.count(); // `progressiveRender` means that can render progressively in each
  // animation frame. Note that some types of series do not provide
  // `view.incrementalPrepareRender` but support `chart.appendData`. We
  // use the term `incremental` but not `progressive` to describe the
  // case that `chart.appendData`.

  var progressiveRender = pipeline.progressiveEnabled && view.incrementalPrepareRender && dataLen >= pipeline.threshold;
  var large = seriesModel.get('large') && dataLen >= seriesModel.get('largeThreshold'); // TODO: modDataCount should not updated if `appendData`, otherwise cause whole repaint.
  // see `test/candlestick-large3.html`

  var modDataCount = seriesModel.get('progressiveChunkMode') === 'mod' ? dataLen : null;
  seriesModel.pipelineContext = pipeline.context = {
    progressiveRender: progressiveRender,
    modDataCount: modDataCount,
    large: large
  };
};

proto.restorePipelines = function (ecModel) {
  var scheduler = this;
  var pipelineMap = scheduler._pipelineMap = createHashMap();
  ecModel.eachSeries(function (seriesModel) {
    var progressive = seriesModel.getProgressive();
    var pipelineId = seriesModel.uid;
    pipelineMap.set(pipelineId, {
      id: pipelineId,
      head: null,
      tail: null,
      threshold: seriesModel.getProgressiveThreshold(),
      progressiveEnabled: progressive && !(seriesModel.preventIncremental && seriesModel.preventIncremental()),
      blockIndex: -1,
      step: Math.round(progressive || 700),
      count: 0
    });
    pipe(scheduler, seriesModel, seriesModel.dataTask);
  });
};

proto.prepareStageTasks = function () {
  var stageTaskMap = this._stageTaskMap;
  var ecModel = this.ecInstance.getModel();
  var api = this.api;
  each(this._allHandlers, function (handler) {
    var record = stageTaskMap.get(handler.uid) || stageTaskMap.set(handler.uid, []);
    handler.reset && createSeriesStageTask(this, handler, record, ecModel, api);
    handler.overallReset && createOverallStageTask(this, handler, record, ecModel, api);
  }, this);
};

proto.prepareView = function (view, model, ecModel, api) {
  var renderTask = view.renderTask;
  var context = renderTask.context;
  context.model = model;
  context.ecModel = ecModel;
  context.api = api;
  renderTask.__block = !view.incrementalPrepareRender;
  pipe(this, model, renderTask);
};

proto.performDataProcessorTasks = function (ecModel, payload) {
  // If we do not use `block` here, it should be considered when to update modes.
  performStageTasks(this, this._dataProcessorHandlers, ecModel, payload, {
    block: true
  });
}; // opt
// opt.visualType: 'visual' or 'layout'
// opt.setDirty


proto.performVisualTasks = function (ecModel, payload, opt) {
  performStageTasks(this, this._visualHandlers, ecModel, payload, opt);
};

function performStageTasks(scheduler, stageHandlers, ecModel, payload, opt) {
  opt = opt || {};
  var unfinished;
  each(stageHandlers, function (stageHandler, idx) {
    if (opt.visualType && opt.visualType !== stageHandler.visualType) {
      return;
    }

    var stageHandlerRecord = scheduler._stageTaskMap.get(stageHandler.uid);

    var seriesTaskMap = stageHandlerRecord.seriesTaskMap;
    var overallTask = stageHandlerRecord.overallTask;

    if (overallTask) {
      var overallNeedDirty;
      var agentStubMap = overallTask.agentStubMap;
      agentStubMap.each(function (stub) {
        if (needSetDirty(opt, stub)) {
          stub.dirty();
          overallNeedDirty = true;
        }
      });
      overallNeedDirty && overallTask.dirty();
      updatePayload(overallTask, payload);
      var performArgs = scheduler.getPerformArgs(overallTask, opt.block); // Execute stubs firstly, which may set the overall task dirty,
      // then execute the overall task. And stub will call seriesModel.setData,
      // which ensures that in the overallTask seriesModel.getData() will not
      // return incorrect data.

      agentStubMap.each(function (stub) {
        stub.perform(performArgs);
      });
      unfinished |= overallTask.perform(performArgs);
    } else if (seriesTaskMap) {
      seriesTaskMap.each(function (task, pipelineId) {
        if (needSetDirty(opt, task)) {
          task.dirty();
        }

        var performArgs = scheduler.getPerformArgs(task, opt.block);
        performArgs.skip = !stageHandler.performRawSeries && ecModel.isSeriesFiltered(task.context.model);
        updatePayload(task, payload);
        unfinished |= task.perform(performArgs);
      });
    }
  });

  function needSetDirty(opt, task) {
    return opt.setDirty && (!opt.dirtyMap || opt.dirtyMap.get(task.__pipeline.id));
  }

  scheduler.unfinished |= unfinished;
}

proto.performSeriesTasks = function (ecModel) {
  var unfinished;
  ecModel.eachSeries(function (seriesModel) {
    // Progress to the end for dataInit and dataRestore.
    unfinished |= seriesModel.dataTask.perform();
  });
  this.unfinished |= unfinished;
};

proto.plan = function () {
  // Travel pipelines, check block.
  this._pipelineMap.each(function (pipeline) {
    var task = pipeline.tail;

    do {
      if (task.__block) {
        pipeline.blockIndex = task.__idxInPipeline;
        break;
      }

      task = task.getUpstream();
    } while (task);
  });
};

var updatePayload = proto.updatePayload = function (task, payload) {
  payload !== 'remain' && (task.context.payload = payload);
};

function createSeriesStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {
  var seriesTaskMap = stageHandlerRecord.seriesTaskMap || (stageHandlerRecord.seriesTaskMap = createHashMap());
  var seriesType = stageHandler.seriesType;
  var getTargetSeries = stageHandler.getTargetSeries; // If a stageHandler should cover all series, `createOnAllSeries` should be declared mandatorily,
  // to avoid some typo or abuse. Otherwise if an extension do not specify a `seriesType`,
  // it works but it may cause other irrelevant charts blocked.

  if (stageHandler.createOnAllSeries) {
    ecModel.eachRawSeries(create);
  } else if (seriesType) {
    ecModel.eachRawSeriesByType(seriesType, create);
  } else if (getTargetSeries) {
    getTargetSeries(ecModel, api).each(create);
  }

  function create(seriesModel) {
    var pipelineId = seriesModel.uid; // Init tasks for each seriesModel only once.
    // Reuse original task instance.

    var task = seriesTaskMap.get(pipelineId) || seriesTaskMap.set(pipelineId, createTask({
      plan: seriesTaskPlan,
      reset: seriesTaskReset,
      count: seriesTaskCount
    }));
    task.context = {
      model: seriesModel,
      ecModel: ecModel,
      api: api,
      useClearVisual: stageHandler.isVisual && !stageHandler.isLayout,
      plan: stageHandler.plan,
      reset: stageHandler.reset,
      scheduler: scheduler
    };
    pipe(scheduler, seriesModel, task);
  } // Clear unused series tasks.


  var pipelineMap = scheduler._pipelineMap;
  seriesTaskMap.each(function (task, pipelineId) {
    if (!pipelineMap.get(pipelineId)) {
      task.dispose();
      seriesTaskMap.removeKey(pipelineId);
    }
  });
}

function createOverallStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {
  var overallTask = stageHandlerRecord.overallTask = stageHandlerRecord.overallTask // For overall task, the function only be called on reset stage.
  || createTask({
    reset: overallTaskReset
  });
  overallTask.context = {
    ecModel: ecModel,
    api: api,
    overallReset: stageHandler.overallReset,
    scheduler: scheduler
  }; // Reuse orignal stubs.

  var agentStubMap = overallTask.agentStubMap = overallTask.agentStubMap || createHashMap();
  var seriesType = stageHandler.seriesType;
  var getTargetSeries = stageHandler.getTargetSeries;
  var overallProgress = true;
  var modifyOutputEnd = stageHandler.modifyOutputEnd; // An overall task with seriesType detected or has `getTargetSeries`, we add
  // stub in each pipelines, it will set the overall task dirty when the pipeline
  // progress. Moreover, to avoid call the overall task each frame (too frequent),
  // we set the pipeline block.

  if (seriesType) {
    ecModel.eachRawSeriesByType(seriesType, createStub);
  } else if (getTargetSeries) {
    getTargetSeries(ecModel, api).each(createStub);
  } // Otherwise, (usually it is legancy case), the overall task will only be
  // executed when upstream dirty. Otherwise the progressive rendering of all
  // pipelines will be disabled unexpectedly. But it still needs stubs to receive
  // dirty info from upsteam.
  else {
      overallProgress = false;
      each(ecModel.getSeries(), createStub);
    }

  function createStub(seriesModel) {
    var pipelineId = seriesModel.uid;
    var stub = agentStubMap.get(pipelineId);

    if (!stub) {
      stub = agentStubMap.set(pipelineId, createTask({
        reset: stubReset,
        onDirty: stubOnDirty
      })); // When the result of `getTargetSeries` changed, the overallTask
      // should be set as dirty and re-performed.

      overallTask.dirty();
    }

    stub.context = {
      model: seriesModel,
      overallProgress: overallProgress,
      modifyOutputEnd: modifyOutputEnd
    };
    stub.agent = overallTask;
    stub.__block = overallProgress;
    pipe(scheduler, seriesModel, stub);
  } // Clear unused stubs.


  var pipelineMap = scheduler._pipelineMap;
  agentStubMap.each(function (stub, pipelineId) {
    if (!pipelineMap.get(pipelineId)) {
      stub.dispose(); // When the result of `getTargetSeries` changed, the overallTask
      // should be set as dirty and re-performed.

      overallTask.dirty();
      agentStubMap.removeKey(pipelineId);
    }
  });
}

function overallTaskReset(context) {
  context.overallReset(context.ecModel, context.api, context.payload);
}

function stubReset(context, upstreamContext) {
  return context.overallProgress && stubProgress;
}

function stubProgress() {
  this.agent.dirty();
  this.getDownstream().dirty();
}

function stubOnDirty() {
  this.agent && this.agent.dirty();
}

function seriesTaskPlan(context) {
  return context.plan && context.plan(context.model, context.ecModel, context.api, context.payload);
}

function seriesTaskReset(context) {
  if (context.useClearVisual) {
    context.data.clearAllVisual();
  }

  var resetDefines = context.resetDefines = normalizeToArray(context.reset(context.model, context.ecModel, context.api, context.payload));
  return resetDefines.length > 1 ? map(resetDefines, function (v, idx) {
    return makeSeriesTaskProgress(idx);
  }) : singleSeriesTaskProgress;
}

var singleSeriesTaskProgress = makeSeriesTaskProgress(0);

function makeSeriesTaskProgress(resetDefineIdx) {
  return function (params, context) {
    var data = context.data;
    var resetDefine = context.resetDefines[resetDefineIdx];

    if (resetDefine && resetDefine.dataEach) {
      for (var i = params.start; i < params.end; i++) {
        resetDefine.dataEach(data, i);
      }
    } else if (resetDefine && resetDefine.progress) {
      resetDefine.progress(params, data);
    }
  };
}

function seriesTaskCount(context) {
  return context.data.count();
}

function pipe(scheduler, seriesModel, task) {
  var pipelineId = seriesModel.uid;

  var pipeline = scheduler._pipelineMap.get(pipelineId);

  !pipeline.head && (pipeline.head = task);
  pipeline.tail && pipeline.tail.pipe(task);
  pipeline.tail = task;
  task.__idxInPipeline = pipeline.count++;
  task.__pipeline = pipeline;
}

Scheduler.wrapStageHandler = function (stageHandler, visualType) {
  if (isFunction(stageHandler)) {
    stageHandler = {
      overallReset: stageHandler,
      seriesType: detectSeriseType(stageHandler)
    };
  }

  stageHandler.uid = getUID('stageHandler');
  visualType && (stageHandler.visualType = visualType);
  return stageHandler;
};
/**
 * Only some legacy stage handlers (usually in echarts extensions) are pure function.
 * To ensure that they can work normally, they should work in block mode, that is,
 * they should not be started util the previous tasks finished. So they cause the
 * progressive rendering disabled. We try to detect the series type, to narrow down
 * the block range to only the series type they concern, but not all series.
 */


function detectSeriseType(legacyFunc) {
  seriesType = null;

  try {
    // Assume there is no async when calling `eachSeriesByType`.
    legacyFunc(ecModelMock, apiMock);
  } catch (e) {}

  return seriesType;
}

var ecModelMock = {};
var apiMock = {};
var seriesType;
mockMethods(ecModelMock, GlobalModel);
mockMethods(apiMock, ExtensionAPI);

ecModelMock.eachSeriesByType = ecModelMock.eachRawSeriesByType = function (type) {
  seriesType = type;
};

ecModelMock.eachComponent = function (cond) {
  if (cond.mainType === 'series' && cond.subType) {
    seriesType = cond.subType;
  }
};

function mockMethods(target, Clz) {
  for (var name in Clz.prototype) {
    // Do not use hasOwnProperty
    target[name] = noop;
  }
}

var _default = Scheduler;
module.exports = _default;

/***/ }),
/* 487 */
/***/ (function(module, exports) {

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var colorAll = ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'];
var _default = {
  color: colorAll,
  colorLayer: [['#37A2DA', '#ffd85c', '#fd7b5f'], ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'], ['#37A2DA', '#32C5E9', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#e7bcf3', '#8378EA', '#96BFFF'], colorAll]
};
module.exports = _default;

/***/ }),
/* 488 */
/***/ (function(module, exports) {

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var contrastColor = '#eee';

var axisCommon = function () {
  return {
    axisLine: {
      lineStyle: {
        color: contrastColor
      }
    },
    axisTick: {
      lineStyle: {
        color: contrastColor
      }
    },
    axisLabel: {
      textStyle: {
        color: contrastColor
      }
    },
    splitLine: {
      lineStyle: {
        type: 'dashed',
        color: '#aaa'
      }
    },
    splitArea: {
      areaStyle: {
        color: contrastColor
      }
    }
  };
};

var colorPalette = ['#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53', '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42'];
var theme = {
  color: colorPalette,
  backgroundColor: '#333',
  tooltip: {
    axisPointer: {
      lineStyle: {
        color: contrastColor
      },
      crossStyle: {
        color: contrastColor
      }
    }
  },
  legend: {
    textStyle: {
      color: contrastColor
    }
  },
  textStyle: {
    color: contrastColor
  },
  title: {
    textStyle: {
      color: contrastColor
    }
  },
  toolbox: {
    iconStyle: {
      normal: {
        borderColor: contrastColor
      }
    }
  },
  dataZoom: {
    textStyle: {
      color: contrastColor
    }
  },
  visualMap: {
    textStyle: {
      color: contrastColor
    }
  },
  timeline: {
    lineStyle: {
      color: contrastColor
    },
    itemStyle: {
      normal: {
        color: colorPalette[1]
      }
    },
    label: {
      normal: {
        textStyle: {
          color: contrastColor
        }
      }
    },
    controlStyle: {
      normal: {
        color: contrastColor,
        borderColor: contrastColor
      }
    }
  },
  timeAxis: axisCommon(),
  logAxis: axisCommon(),
  valueAxis: axisCommon(),
  categoryAxis: axisCommon(),
  line: {
    symbol: 'circle'
  },
  graph: {
    color: colorPalette
  },
  gauge: {
    title: {
      textStyle: {
        color: contrastColor
      }
    }
  },
  candlestick: {
    itemStyle: {
      normal: {
        color: '#FD1050',
        color0: '#0CF49B',
        borderColor: '#FD1050',
        borderColor0: '#0CF49B'
      }
    }
  }
};
theme.categoryAxis.splitLine.show = false;
var _default = theme;
module.exports = _default;

/***/ }),
/* 489 */
/***/ (function(module, exports, __webpack_require__) {

var ComponentModel = __webpack_require__(43);

var ComponentView = __webpack_require__(193);

var _sourceHelper = __webpack_require__(87);

var detectSourceFormat = _sourceHelper.detectSourceFormat;

var _sourceType = __webpack_require__(77);

var SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * This module is imported by echarts directly.
 *
 * Notice:
 * Always keep this file exists for backward compatibility.
 * Because before 4.1.0, dataset is an optional component,
 * some users may import this module manually.
 */
ComponentModel.extend({
  type: 'dataset',

  /**
   * @protected
   */
  defaultOption: {
    // 'row', 'column'
    seriesLayoutBy: SERIES_LAYOUT_BY_COLUMN,
    // null/'auto': auto detect header, see "module:echarts/data/helper/sourceHelper"
    sourceHeader: null,
    dimensions: null,
    source: null
  },
  optionUpdated: function () {
    detectSourceFormat(this);
  }
});
ComponentView.extend({
  type: 'dataset'
});

/***/ }),
/* 490 */
/***/ (function(module, exports, __webpack_require__) {

var zrender = __webpack_require__(169);

exports.zrender = zrender;

var matrix = __webpack_require__(64);

exports.matrix = matrix;

var vector = __webpack_require__(17);

exports.vector = vector;

var zrUtil = __webpack_require__(1);

var colorTool = __webpack_require__(74);

exports.color = colorTool;

var graphic = __webpack_require__(11);

exports.graphic = graphic;

var numberUtil = __webpack_require__(14);

exports.number = numberUtil;

var formatUtil = __webpack_require__(33);

exports.format = formatUtil;

var _throttle = __webpack_require__(120);

var throttle = _throttle.throttle;
exports.throttle = _throttle.throttle;

var ecHelper = __webpack_require__(491);

exports.helper = ecHelper;

var parseGeoJSON = __webpack_require__(497);

exports.parseGeoJSON = parseGeoJSON;

var _List = __webpack_require__(121);

exports.List = _List;

var _Model = __webpack_require__(42);

exports.Model = _Model;

var _Axis = __webpack_require__(199);

exports.Axis = _Axis;

var _env = __webpack_require__(20);

exports.env = _env;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * Do not mount those modules on 'src/echarts' for better tree shaking.
 */
var parseGeoJson = parseGeoJSON;
var ecUtil = {};
zrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {
  ecUtil[name] = zrUtil[name];
});
exports.parseGeoJson = parseGeoJson;
exports.util = ecUtil;

/***/ }),
/* 491 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var createListFromArray = __webpack_require__(194);

var axisHelper = __webpack_require__(68);

var axisModelCommonMixin = __webpack_require__(198);

var Model = __webpack_require__(42);

var _layout = __webpack_require__(49);

var getLayoutRect = _layout.getLayoutRect;
exports.getLayoutRect = _layout.getLayoutRect;

var _dataStackHelper = __webpack_require__(67);

var enableDataStack = _dataStackHelper.enableDataStack;
var isDimensionStacked = _dataStackHelper.isDimensionStacked;
var getStackedDimension = _dataStackHelper.getStackedDimension;

var _completeDimensions = __webpack_require__(195);

exports.completeDimensions = _completeDimensions;

var _createDimensions = __webpack_require__(123);

exports.createDimensions = _createDimensions;

var _symbol = __webpack_require__(89);

exports.createSymbol = _symbol.createSymbol;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
// import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge';

/**
 * Create a muti dimension List structure from seriesModel.
 * @param  {module:echarts/model/Model} seriesModel
 * @return {module:echarts/data/List} list
 */
function createList(seriesModel) {
  return createListFromArray(seriesModel.getSource(), seriesModel);
} // export function createGraph(seriesModel) {
//     var nodes = seriesModel.get('data');
//     var links = seriesModel.get('links');
//     return createGraphFromNodeEdge(nodes, links, seriesModel);
// }


var dataStack = {
  isDimensionStacked: isDimensionStacked,
  enableDataStack: enableDataStack,
  getStackedDimension: getStackedDimension
};
/**
 * Create a symbol element with given symbol configuration: shape, x, y, width, height, color
 * @see http://echarts.baidu.com/option.html#series-scatter.symbol
 * @param {string} symbolDesc
 * @param {number} x
 * @param {number} y
 * @param {number} w
 * @param {number} h
 * @param {string} color
 */

/**
 * Create scale
 * @param {Array.<number>} dataExtent
 * @param {Object|module:echarts/Model} option
 */
function createScale(dataExtent, option) {
  var axisModel = option;

  if (!Model.isInstance(option)) {
    axisModel = new Model(option);
    zrUtil.mixin(axisModel, axisModelCommonMixin);
  }

  var scale = axisHelper.createScaleByModel(axisModel);
  scale.setExtent(dataExtent[0], dataExtent[1]);
  axisHelper.niceScaleExtent(scale, axisModel);
  return scale;
}
/**
 * Mixin common methods to axis model,
 *
 * Inlcude methods
 * `getFormattedLabels() => Array.<string>`
 * `getCategories() => Array.<string>`
 * `getMin(origin: boolean) => number`
 * `getMax(origin: boolean) => number`
 * `getNeedCrossZero() => boolean`
 * `setRange(start: number, end: number)`
 * `resetRange()`
 */


function mixinAxisModelCommonMethods(Model) {
  zrUtil.mixin(Model, axisModelCommonMixin);
}

exports.createList = createList;
exports.dataStack = dataStack;
exports.createScale = createScale;
exports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;

/***/ }),
/* 492 */
/***/ (function(module, exports) {

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
function defaultKeyGetter(item) {
  return item;
}
/**
 * @param {Array} oldArr
 * @param {Array} newArr
 * @param {Function} oldKeyGetter
 * @param {Function} newKeyGetter
 * @param {Object} [context] Can be visited by this.context in callback.
 */


function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {
  this._old = oldArr;
  this._new = newArr;
  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;
  this._newKeyGetter = newKeyGetter || defaultKeyGetter;
  this.context = context;
}

DataDiffer.prototype = {
  constructor: DataDiffer,

  /**
   * Callback function when add a data
   */
  add: function (func) {
    this._add = func;
    return this;
  },

  /**
   * Callback function when update a data
   */
  update: function (func) {
    this._update = func;
    return this;
  },

  /**
   * Callback function when remove a data
   */
  remove: function (func) {
    this._remove = func;
    return this;
  },
  execute: function () {
    var oldArr = this._old;
    var newArr = this._new;
    var oldDataIndexMap = {};
    var newDataIndexMap = {};
    var oldDataKeyArr = [];
    var newDataKeyArr = [];
    var i;
    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);
    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency
    // when duplicate keys exists (consider newDataIndex.pop() below).
    // For performance consideration, these code below do not look neat.

    for (i = 0; i < oldArr.length; i++) {
      var key = oldDataKeyArr[i];
      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.

      if (idx != null) {
        // Consider there is duplicate key (for example, use dataItem.name as key).
        // We should make sure every item in newArr and oldArr can be visited.
        var len = idx.length;

        if (len) {
          len === 1 && (newDataIndexMap[key] = null);
          idx = idx.unshift();
        } else {
          newDataIndexMap[key] = null;
        }

        this._update && this._update(idx, i);
      } else {
        this._remove && this._remove(i);
      }
    }

    for (var i = 0; i < newDataKeyArr.length; i++) {
      var key = newDataKeyArr[i];

      if (newDataIndexMap.hasOwnProperty(key)) {
        var idx = newDataIndexMap[key];

        if (idx == null) {
          continue;
        } // idx can never be empty array here. see 'set null' logic above.


        if (!idx.length) {
          this._add && this._add(idx);
        } else {
          for (var j = 0, len = idx.length; j < len; j++) {
            this._add && this._add(idx[j]);
          }
        }
      }
    }
  }
};

function initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {
  for (var i = 0; i < arr.length; i++) {
    // Add prefix to avoid conflict with Object.prototype.
    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);
    var existence = map[key];

    if (existence == null) {
      keyArr.push(key);
      map[key] = i;
    } else {
      if (!existence.length) {
        map[key] = existence = [existence];
      }

      existence.push(i);
    }
  }
}

var _default = DataDiffer;
module.exports = _default;

/***/ }),
/* 493 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var Scale = __webpack_require__(88);

var OrdinalMeta = __webpack_require__(196);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * Linear continuous scale
 * @module echarts/coord/scale/Ordinal
 *
 * http://en.wikipedia.org/wiki/Level_of_measurement
 */
// FIXME only one data
var scaleProto = Scale.prototype;
var OrdinalScale = Scale.extend({
  type: 'ordinal',

  /**
   * @param {module:echarts/data/OrdianlMeta|Array.<string>} ordinalMeta
   */
  init: function (ordinalMeta, extent) {
    // Caution: Should not use instanceof, consider ec-extensions using
    // import approach to get OrdinalMeta class.
    if (!ordinalMeta || zrUtil.isArray(ordinalMeta)) {
      ordinalMeta = new OrdinalMeta({
        categories: ordinalMeta
      });
    }

    this._ordinalMeta = ordinalMeta;
    this._extent = extent || [0, ordinalMeta.categories.length - 1];
  },
  parse: function (val) {
    return typeof val === 'string' ? this._ordinalMeta.getOrdinal(val) // val might be float.
    : Math.round(val);
  },
  contain: function (rank) {
    rank = this.parse(rank);
    return scaleProto.contain.call(this, rank) && this._ordinalMeta.categories[rank] != null;
  },

  /**
   * Normalize given rank or name to linear [0, 1]
   * @param {number|string} [val]
   * @return {number}
   */
  normalize: function (val) {
    return scaleProto.normalize.call(this, this.parse(val));
  },
  scale: function (val) {
    return Math.round(scaleProto.scale.call(this, val));
  },

  /**
   * @return {Array}
   */
  getTicks: function () {
    var ticks = [];
    var extent = this._extent;
    var rank = extent[0];

    while (rank <= extent[1]) {
      ticks.push(rank);
      rank++;
    }

    return ticks;
  },

  /**
   * Get item on rank n
   * @param {number} n
   * @return {string}
   */
  getLabel: function (n) {
    if (!this.isBlank()) {
      // Note that if no data, ordinalMeta.categories is an empty array.
      return this._ordinalMeta.categories[n];
    }
  },

  /**
   * @return {number}
   */
  count: function () {
    return this._extent[1] - this._extent[0] + 1;
  },

  /**
   * @override
   */
  unionExtentFromData: function (data, dim) {
    this.unionExtent(data.getApproximateExtent(dim));
  },
  getOrdinalMeta: function () {
    return this._ordinalMeta;
  },
  niceTicks: zrUtil.noop,
  niceExtent: zrUtil.noop
});
/**
 * @return {module:echarts/scale/Time}
 */

OrdinalScale.create = function () {
  return new OrdinalScale();
};

var _default = OrdinalScale;
module.exports = _default;

/***/ }),
/* 494 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var _number = __webpack_require__(14);

var parsePercent = _number.parsePercent;

var _dataStackHelper = __webpack_require__(67);

var isDimensionStacked = _dataStackHelper.isDimensionStacked;

var createRenderPlanner = __webpack_require__(119);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var STACK_PREFIX = '__ec_stack_';
var LARGE_BAR_MIN_WIDTH = 0.5;
var LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;

function getSeriesStackId(seriesModel) {
  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;
}

function getAxisKey(axis) {
  return axis.dim + axis.index;
}
/**
 * @param {Object} opt
 * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.
 * @param {number} opt.count Positive interger.
 * @param {number} [opt.barWidth]
 * @param {number} [opt.barMaxWidth]
 * @param {number} [opt.barGap]
 * @param {number} [opt.barCategoryGap]
 * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.
 */


function getLayoutOnAxis(opt) {
  var params = [];
  var baseAxis = opt.axis;
  var axisKey = 'axis0';

  if (baseAxis.type !== 'category') {
    return;
  }

  var bandWidth = baseAxis.getBandWidth();

  for (var i = 0; i < opt.count || 0; i++) {
    params.push(zrUtil.defaults({
      bandWidth: bandWidth,
      axisKey: axisKey,
      stackId: STACK_PREFIX + i
    }, opt));
  }

  var widthAndOffsets = doCalBarWidthAndOffset(params);
  var result = [];

  for (var i = 0; i < opt.count; i++) {
    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];
    item.offsetCenter = item.offset + item.width / 2;
    result.push(item);
  }

  return result;
}

function prepareLayoutBarSeries(seriesType, ecModel) {
  var seriesModels = [];
  ecModel.eachSeriesByType(seriesType, function (seriesModel) {
    // Check series coordinate, do layout for cartesian2d only
    if (isOnCartesian(seriesModel) && !isInLargeMode(seriesModel)) {
      seriesModels.push(seriesModel);
    }
  });
  return seriesModels;
}

function makeColumnLayout(barSeries) {
  var seriesInfoList = [];
  zrUtil.each(barSeries, function (seriesModel) {
    var data = seriesModel.getData();
    var cartesian = seriesModel.coordinateSystem;
    var baseAxis = cartesian.getBaseAxis();
    var axisExtent = baseAxis.getExtent();
    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();
    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);
    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);
    var barGap = seriesModel.get('barGap');
    var barCategoryGap = seriesModel.get('barCategoryGap');
    seriesInfoList.push({
      bandWidth: bandWidth,
      barWidth: barWidth,
      barMaxWidth: barMaxWidth,
      barGap: barGap,
      barCategoryGap: barCategoryGap,
      axisKey: getAxisKey(baseAxis),
      stackId: getSeriesStackId(seriesModel)
    });
  });
  return doCalBarWidthAndOffset(seriesInfoList);
}

function doCalBarWidthAndOffset(seriesInfoList) {
  // Columns info on each category axis. Key is cartesian name
  var columnsMap = {};
  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {
    var axisKey = seriesInfo.axisKey;
    var bandWidth = seriesInfo.bandWidth;
    var columnsOnAxis = columnsMap[axisKey] || {
      bandWidth: bandWidth,
      remainedWidth: bandWidth,
      autoWidthCount: 0,
      categoryGap: '20%',
      gap: '30%',
      stacks: {}
    };
    var stacks = columnsOnAxis.stacks;
    columnsMap[axisKey] = columnsOnAxis;
    var stackId = seriesInfo.stackId;

    if (!stacks[stackId]) {
      columnsOnAxis.autoWidthCount++;
    }

    stacks[stackId] = stacks[stackId] || {
      width: 0,
      maxWidth: 0
    }; // Caution: In a single coordinate system, these barGrid attributes
    // will be shared by series. Consider that they have default values,
    // only the attributes set on the last series will work.
    // Do not change this fact unless there will be a break change.
    // TODO

    var barWidth = seriesInfo.barWidth;

    if (barWidth && !stacks[stackId].width) {
      // See #6312, do not restrict width.
      stacks[stackId].width = barWidth;
      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);
      columnsOnAxis.remainedWidth -= barWidth;
    }

    var barMaxWidth = seriesInfo.barMaxWidth;
    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);
    var barGap = seriesInfo.barGap;
    barGap != null && (columnsOnAxis.gap = barGap);
    var barCategoryGap = seriesInfo.barCategoryGap;
    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);
  });
  var result = {};
  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {
    result[coordSysName] = {};
    var stacks = columnsOnAxis.stacks;
    var bandWidth = columnsOnAxis.bandWidth;
    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);
    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);
    var remainedWidth = columnsOnAxis.remainedWidth;
    var autoWidthCount = columnsOnAxis.autoWidthCount;
    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);
    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth

    zrUtil.each(stacks, function (column, stack) {
      var maxWidth = column.maxWidth;

      if (maxWidth && maxWidth < autoWidth) {
        maxWidth = Math.min(maxWidth, remainedWidth);

        if (column.width) {
          maxWidth = Math.min(maxWidth, column.width);
        }

        remainedWidth -= maxWidth;
        column.width = maxWidth;
        autoWidthCount--;
      }
    }); // Recalculate width again

    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);
    autoWidth = Math.max(autoWidth, 0);
    var widthSum = 0;
    var lastColumn;
    zrUtil.each(stacks, function (column, idx) {
      if (!column.width) {
        column.width = autoWidth;
      }

      lastColumn = column;
      widthSum += column.width * (1 + barGapPercent);
    });

    if (lastColumn) {
      widthSum -= lastColumn.width * barGapPercent;
    }

    var offset = -widthSum / 2;
    zrUtil.each(stacks, function (column, stackId) {
      result[coordSysName][stackId] = result[coordSysName][stackId] || {
        offset: offset,
        width: column.width
      };
      offset += column.width * (1 + barGapPercent);
    });
  });
  return result;
}
/**
 * @param {Object} barWidthAndOffset The result of makeColumnLayout
 * @param {module:echarts/coord/Axis} axis
 * @param {module:echarts/model/Series} [seriesModel] If not provided, return all.
 * @return {Object} {stackId: {offset, width}} or {offset, width} if seriesModel provided.
 */


function retrieveColumnLayout(barWidthAndOffset, axis, seriesModel) {
  if (barWidthAndOffset && axis) {
    var result = barWidthAndOffset[getAxisKey(axis)];

    if (result != null && seriesModel != null) {
      result = result[getSeriesStackId(seriesModel)];
    }

    return result;
  }
}
/**
 * @param {string} seriesType
 * @param {module:echarts/model/Global} ecModel
 */


function layout(seriesType, ecModel) {
  var seriesModels = prepareLayoutBarSeries(seriesType, ecModel);
  var barWidthAndOffset = makeColumnLayout(seriesModels);
  var lastStackCoords = {};
  var lastStackCoordsOrigin = {};
  zrUtil.each(seriesModels, function (seriesModel) {
    var data = seriesModel.getData();
    var cartesian = seriesModel.coordinateSystem;
    var baseAxis = cartesian.getBaseAxis();
    var stackId = getSeriesStackId(seriesModel);
    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];
    var columnOffset = columnLayoutInfo.offset;
    var columnWidth = columnLayoutInfo.width;
    var valueAxis = cartesian.getOtherAxis(baseAxis);
    var barMinHeight = seriesModel.get('barMinHeight') || 0;
    lastStackCoords[stackId] = lastStackCoords[stackId] || [];
    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243

    data.setLayout({
      offset: columnOffset,
      size: columnWidth
    });
    var valueDim = data.mapDimension(valueAxis.dim);
    var baseDim = data.mapDimension(baseAxis.dim);
    var stacked = isDimensionStacked(data, valueDim
    /*, baseDim*/
    );
    var isValueAxisH = valueAxis.isHorizontal();
    var valueAxisStart = getValueAxisStart(baseAxis, valueAxis, stacked);

    for (var idx = 0, len = data.count(); idx < len; idx++) {
      var value = data.get(valueDim, idx);
      var baseValue = data.get(baseDim, idx);

      if (isNaN(value)) {
        continue;
      }

      var sign = value >= 0 ? 'p' : 'n';
      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in
      // stackResultDimension directly.

      if (stacked) {
        // Only ordinal axis can be stacked.
        if (!lastStackCoords[stackId][baseValue]) {
          lastStackCoords[stackId][baseValue] = {
            p: valueAxisStart,
            // Positive stack
            n: valueAxisStart // Negative stack

          };
        } // Should also consider #4243


        baseCoord = lastStackCoords[stackId][baseValue][sign];
      }

      var x;
      var y;
      var width;
      var height;

      if (isValueAxisH) {
        var coord = cartesian.dataToPoint([value, baseValue]);
        x = baseCoord;
        y = coord[1] + columnOffset;
        width = coord[0] - valueAxisStart;
        height = columnWidth;

        if (Math.abs(width) < barMinHeight) {
          width = (width < 0 ? -1 : 1) * barMinHeight;
        }

        stacked && (lastStackCoords[stackId][baseValue][sign] += width);
      } else {
        var coord = cartesian.dataToPoint([baseValue, value]);
        x = coord[0] + columnOffset;
        y = baseCoord;
        width = columnWidth;
        height = coord[1] - valueAxisStart;

        if (Math.abs(height) < barMinHeight) {
          // Include zero to has a positive bar
          height = (height <= 0 ? -1 : 1) * barMinHeight;
        }

        stacked && (lastStackCoords[stackId][baseValue][sign] += height);
      }

      data.setItemLayout(idx, {
        x: x,
        y: y,
        width: width,
        height: height
      });
    }
  }, this);
} // TODO: Do not support stack in large mode yet.


var largeLayout = {
  seriesType: 'bar',
  plan: createRenderPlanner(),
  reset: function (seriesModel) {
    if (!isOnCartesian(seriesModel) || !isInLargeMode(seriesModel)) {
      return;
    }

    var data = seriesModel.getData();
    var cartesian = seriesModel.coordinateSystem;
    var baseAxis = cartesian.getBaseAxis();
    var valueAxis = cartesian.getOtherAxis(baseAxis);
    var valueDim = data.mapDimension(valueAxis.dim);
    var baseDim = data.mapDimension(baseAxis.dim);
    var valueAxisHorizontal = valueAxis.isHorizontal();
    var valueDimIdx = valueAxisHorizontal ? 0 : 1;
    var barWidth = retrieveColumnLayout(makeColumnLayout([seriesModel]), baseAxis, seriesModel).width;

    if (!(barWidth > LARGE_BAR_MIN_WIDTH)) {
      // jshint ignore:line
      barWidth = LARGE_BAR_MIN_WIDTH;
    }

    return {
      progress: progress
    };

    function progress(params, data) {
      var largePoints = new LargeArr(params.count * 2);
      var dataIndex;
      var coord = [];
      var valuePair = [];
      var offset = 0;

      while ((dataIndex = params.next()) != null) {
        valuePair[valueDimIdx] = data.get(valueDim, dataIndex);
        valuePair[1 - valueDimIdx] = data.get(baseDim, dataIndex);
        coord = cartesian.dataToPoint(valuePair, null, coord);
        largePoints[offset++] = coord[0];
        largePoints[offset++] = coord[1];
      }

      data.setLayout({
        largePoints: largePoints,
        barWidth: barWidth,
        valueAxisStart: getValueAxisStart(baseAxis, valueAxis, false),
        valueAxisHorizontal: valueAxisHorizontal
      });
    }
  }
};

function isOnCartesian(seriesModel) {
  return seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';
}

function isInLargeMode(seriesModel) {
  return seriesModel.pipelineContext && seriesModel.pipelineContext.large;
}

function getValueAxisStart(baseAxis, valueAxis, stacked) {
  return zrUtil.indexOf(baseAxis.getAxesOnZeroOf(), valueAxis) >= 0 || stacked ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];
}

exports.getLayoutOnAxis = getLayoutOnAxis;
exports.prepareLayoutBarSeries = prepareLayoutBarSeries;
exports.makeColumnLayout = makeColumnLayout;
exports.retrieveColumnLayout = retrieveColumnLayout;
exports.layout = layout;
exports.largeLayout = largeLayout;

/***/ }),
/* 495 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var numberUtil = __webpack_require__(14);

var formatUtil = __webpack_require__(33);

var scaleHelper = __webpack_require__(197);

var IntervalScale = __webpack_require__(124);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
// [About UTC and local time zone]:
// In most cases, `number.parseDate` will treat input data string as local time
// (except time zone is specified in time string). And `format.formateTime` returns
// local time by default. option.useUTC is false by default. This design have
// concidered these common case:
// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed
// in local time by default.
// (2) By default, the input data string (e.g., '2011-01-02') should be displayed
// as its original time, without any time difference.
var intervalScaleProto = IntervalScale.prototype;
var mathCeil = Math.ceil;
var mathFloor = Math.floor;
var ONE_SECOND = 1000;
var ONE_MINUTE = ONE_SECOND * 60;
var ONE_HOUR = ONE_MINUTE * 60;
var ONE_DAY = ONE_HOUR * 24; // FIXME 公用？

var bisect = function (a, x, lo, hi) {
  while (lo < hi) {
    var mid = lo + hi >>> 1;

    if (a[mid][1] < x) {
      lo = mid + 1;
    } else {
      hi = mid;
    }
  }

  return lo;
};
/**
 * @alias module:echarts/coord/scale/Time
 * @constructor
 */


var TimeScale = IntervalScale.extend({
  type: 'time',

  /**
   * @override
   */
  getLabel: function (val) {
    var stepLvl = this._stepLvl;
    var date = new Date(val);
    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));
  },

  /**
   * @override
   */
  niceExtent: function (opt) {
    var extent = this._extent; // If extent start and end are same, expand them

    if (extent[0] === extent[1]) {
      // Expand extent
      extent[0] -= ONE_DAY;
      extent[1] += ONE_DAY;
    } // If there are no data and extent are [Infinity, -Infinity]


    if (extent[1] === -Infinity && extent[0] === Infinity) {
      var d = new Date();
      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());
      extent[0] = extent[1] - ONE_DAY;
    }

    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;

    var interval = this._interval;

    if (!opt.fixMin) {
      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);
    }

    if (!opt.fixMax) {
      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);
    }
  },

  /**
   * @override
   */
  niceTicks: function (approxTickNum, minInterval, maxInterval) {
    approxTickNum = approxTickNum || 10;
    var extent = this._extent;
    var span = extent[1] - extent[0];
    var approxInterval = span / approxTickNum;

    if (minInterval != null && approxInterval < minInterval) {
      approxInterval = minInterval;
    }

    if (maxInterval != null && approxInterval > maxInterval) {
      approxInterval = maxInterval;
    }

    var scaleLevelsLen = scaleLevels.length;
    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);
    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];
    var interval = level[1]; // Same with interval scale if span is much larger than 1 year

    if (level[0] === 'year') {
      var yearSpan = span / interval; // From "Nice Numbers for Graph Labels" of Graphic Gems
      // var niceYearSpan = numberUtil.nice(yearSpan, false);

      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);
      interval *= yearStep;
    }

    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;
    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];
    scaleHelper.fixExtent(niceExtent, extent);
    this._stepLvl = level; // Interval will be used in getTicks

    this._interval = interval;
    this._niceExtent = niceExtent;
  },
  parse: function (val) {
    // val might be float.
    return +numberUtil.parseDate(val);
  }
});
zrUtil.each(['contain', 'normalize'], function (methodName) {
  TimeScale.prototype[methodName] = function (val) {
    return intervalScaleProto[methodName].call(this, this.parse(val));
  };
}); // Steps from d3

var scaleLevels = [// Format              interval
['hh:mm:ss', ONE_SECOND], // 1s
['hh:mm:ss', ONE_SECOND * 5], // 5s
['hh:mm:ss', ONE_SECOND * 10], // 10s
['hh:mm:ss', ONE_SECOND * 15], // 15s
['hh:mm:ss', ONE_SECOND * 30], // 30s
['hh:mm\nMM-dd', ONE_MINUTE], // 1m
['hh:mm\nMM-dd', ONE_MINUTE * 5], // 5m
['hh:mm\nMM-dd', ONE_MINUTE * 10], // 10m
['hh:mm\nMM-dd', ONE_MINUTE * 15], // 15m
['hh:mm\nMM-dd', ONE_MINUTE * 30], // 30m
['hh:mm\nMM-dd', ONE_HOUR], // 1h
['hh:mm\nMM-dd', ONE_HOUR * 2], // 2h
['hh:mm\nMM-dd', ONE_HOUR * 6], // 6h
['hh:mm\nMM-dd', ONE_HOUR * 12], // 12h
['MM-dd\nyyyy', ONE_DAY], // 1d
['MM-dd\nyyyy', ONE_DAY * 2], // 2d
['MM-dd\nyyyy', ONE_DAY * 3], // 3d
['MM-dd\nyyyy', ONE_DAY * 4], // 4d
['MM-dd\nyyyy', ONE_DAY * 5], // 5d
['MM-dd\nyyyy', ONE_DAY * 6], // 6d
['week', ONE_DAY * 7], // 7d
['MM-dd\nyyyy', ONE_DAY * 10], // 10d
['week', ONE_DAY * 14], // 2w
['week', ONE_DAY * 21], // 3w
['month', ONE_DAY * 31], // 1M
['week', ONE_DAY * 42], // 6w
['month', ONE_DAY * 62], // 2M
['week', ONE_DAY * 42], // 10w
['quarter', ONE_DAY * 380 / 4], // 3M
['month', ONE_DAY * 31 * 4], // 4M
['month', ONE_DAY * 31 * 5], // 5M
['half-year', ONE_DAY * 380 / 2], // 6M
['month', ONE_DAY * 31 * 8], // 8M
['month', ONE_DAY * 31 * 10], // 10M
['year', ONE_DAY * 380] // 1Y
];
/**
 * @param {module:echarts/model/Model}
 * @return {module:echarts/scale/Time}
 */

TimeScale.create = function (model) {
  return new TimeScale({
    useUTC: model.ecModel.get('useUTC')
  });
};

var _default = TimeScale;
module.exports = _default;

/***/ }),
/* 496 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var Scale = __webpack_require__(88);

var numberUtil = __webpack_require__(14);

var IntervalScale = __webpack_require__(124);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * Log scale
 * @module echarts/scale/Log
 */
// Use some method of IntervalScale
var scaleProto = Scale.prototype;
var intervalScaleProto = IntervalScale.prototype;
var getPrecisionSafe = numberUtil.getPrecisionSafe;
var roundingErrorFix = numberUtil.round;
var mathFloor = Math.floor;
var mathCeil = Math.ceil;
var mathPow = Math.pow;
var mathLog = Math.log;
var LogScale = Scale.extend({
  type: 'log',
  base: 10,
  $constructor: function () {
    Scale.apply(this, arguments);
    this._originalScale = new IntervalScale();
  },

  /**
   * @return {Array.<number>}
   */
  getTicks: function () {
    var originalScale = this._originalScale;
    var extent = this._extent;
    var originalExtent = originalScale.getExtent();
    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {
      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158

      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;
      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;
      return powVal;
    }, this);
  },

  /**
   * @param {number} val
   * @return {string}
   */
  getLabel: intervalScaleProto.getLabel,

  /**
   * @param  {number} val
   * @return {number}
   */
  scale: function (val) {
    val = scaleProto.scale.call(this, val);
    return mathPow(this.base, val);
  },

  /**
   * @param {number} start
   * @param {number} end
   */
  setExtent: function (start, end) {
    var base = this.base;
    start = mathLog(start) / mathLog(base);
    end = mathLog(end) / mathLog(base);
    intervalScaleProto.setExtent.call(this, start, end);
  },

  /**
   * @return {number} end
   */
  getExtent: function () {
    var base = this.base;
    var extent = scaleProto.getExtent.call(this);
    extent[0] = mathPow(base, extent[0]);
    extent[1] = mathPow(base, extent[1]); // Fix #4158

    var originalScale = this._originalScale;
    var originalExtent = originalScale.getExtent();
    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));
    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));
    return extent;
  },

  /**
   * @param  {Array.<number>} extent
   */
  unionExtent: function (extent) {
    this._originalScale.unionExtent(extent);

    var base = this.base;
    extent[0] = mathLog(extent[0]) / mathLog(base);
    extent[1] = mathLog(extent[1]) / mathLog(base);
    scaleProto.unionExtent.call(this, extent);
  },

  /**
   * @override
   */
  unionExtentFromData: function (data, dim) {
    // TODO
    // filter value that <= 0
    this.unionExtent(data.getApproximateExtent(dim));
  },

  /**
   * Update interval and extent of intervals for nice ticks
   * @param  {number} [approxTickNum = 10] Given approx tick number
   */
  niceTicks: function (approxTickNum) {
    approxTickNum = approxTickNum || 10;
    var extent = this._extent;
    var span = extent[1] - extent[0];

    if (span === Infinity || span <= 0) {
      return;
    }

    var interval = numberUtil.quantity(span);
    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.

    if (err <= 0.5) {
      interval *= 10;
    } // Interval should be integer


    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {
      interval *= 10;
    }

    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];
    this._interval = interval;
    this._niceExtent = niceExtent;
  },

  /**
   * Nice extent.
   * @override
   */
  niceExtent: function (opt) {
    intervalScaleProto.niceExtent.call(this, opt);
    var originalScale = this._originalScale;
    originalScale.__fixMin = opt.fixMin;
    originalScale.__fixMax = opt.fixMax;
  }
});
zrUtil.each(['contain', 'normalize'], function (methodName) {
  LogScale.prototype[methodName] = function (val) {
    val = mathLog(val) / mathLog(this.base);
    return scaleProto[methodName].call(this, val);
  };
});

LogScale.create = function () {
  return new LogScale();
};

function fixRoundingError(val, originalVal) {
  return roundingErrorFix(val, getPrecisionSafe(originalVal));
}

var _default = LogScale;
module.exports = _default;

/***/ }),
/* 497 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var Region = __webpack_require__(498);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * Parse and decode geo json
 * @module echarts/coord/geo/parseGeoJson
 */
function decode(json) {
  if (!json.UTF8Encoding) {
    return json;
  }

  var encodeScale = json.UTF8Scale;

  if (encodeScale == null) {
    encodeScale = 1024;
  }

  var features = json.features;

  for (var f = 0; f < features.length; f++) {
    var feature = features[f];
    var geometry = feature.geometry;
    var coordinates = geometry.coordinates;
    var encodeOffsets = geometry.encodeOffsets;

    for (var c = 0; c < coordinates.length; c++) {
      var coordinate = coordinates[c];

      if (geometry.type === 'Polygon') {
        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);
      } else if (geometry.type === 'MultiPolygon') {
        for (var c2 = 0; c2 < coordinate.length; c2++) {
          var polygon = coordinate[c2];
          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);
        }
      }
    }
  } // Has been decoded


  json.UTF8Encoding = false;
  return json;
}

function decodePolygon(coordinate, encodeOffsets, encodeScale) {
  var result = [];
  var prevX = encodeOffsets[0];
  var prevY = encodeOffsets[1];

  for (var i = 0; i < coordinate.length; i += 2) {
    var x = coordinate.charCodeAt(i) - 64;
    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding

    x = x >> 1 ^ -(x & 1);
    y = y >> 1 ^ -(y & 1); // Delta deocding

    x += prevX;
    y += prevY;
    prevX = x;
    prevY = y; // Dequantize

    result.push([x / encodeScale, y / encodeScale]);
  }

  return result;
}
/**
 * @alias module:echarts/coord/geo/parseGeoJson
 * @param {Object} geoJson
 * @return {module:zrender/container/Group}
 */


function _default(geoJson) {
  decode(geoJson);
  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {
    // Output of mapshaper may have geometry null
    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;
  }), function (featureObj) {
    var properties = featureObj.properties;
    var geo = featureObj.geometry;
    var coordinates = geo.coordinates;
    var geometries = [];

    if (geo.type === 'Polygon') {
      geometries.push({
        type: 'polygon',
        // According to the GeoJSON specification.
        // First must be exterior, and the rest are all interior(holes).
        exterior: coordinates[0],
        interiors: coordinates.slice(1)
      });
    }

    if (geo.type === 'MultiPolygon') {
      zrUtil.each(coordinates, function (item) {
        if (item[0]) {
          geometries.push({
            type: 'polygon',
            exterior: item[0],
            interiors: item.slice(1)
          });
        }
      });
    }

    var region = new Region(properties.name, geometries, properties.cp);
    region.properties = properties;
    return region;
  });
}

module.exports = _default;

/***/ }),
/* 498 */
/***/ (function(module, exports, __webpack_require__) {

var BoundingRect = __webpack_require__(30);

var bbox = __webpack_require__(184);

var vec2 = __webpack_require__(17);

var polygonContain = __webpack_require__(499);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * @module echarts/coord/geo/Region
 */

/**
 * @param {string} name
 * @param {Array} geometries
 * @param {Array.<number>} cp
 */
function Region(name, geometries, cp) {
  /**
   * @type {string}
   * @readOnly
   */
  this.name = name;
  /**
   * @type {Array.<Array>}
   * @readOnly
   */

  this.geometries = geometries;

  if (!cp) {
    var rect = this.getBoundingRect();
    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];
  } else {
    cp = [cp[0], cp[1]];
  }
  /**
   * @type {Array.<number>}
   */


  this.center = cp;
}

Region.prototype = {
  constructor: Region,
  properties: null,

  /**
   * @return {module:zrender/core/BoundingRect}
   */
  getBoundingRect: function () {
    var rect = this._rect;

    if (rect) {
      return rect;
    }

    var MAX_NUMBER = Number.MAX_VALUE;
    var min = [MAX_NUMBER, MAX_NUMBER];
    var max = [-MAX_NUMBER, -MAX_NUMBER];
    var min2 = [];
    var max2 = [];
    var geometries = this.geometries;

    for (var i = 0; i < geometries.length; i++) {
      // Only support polygon
      if (geometries[i].type !== 'polygon') {
        continue;
      } // Doesn't consider hole


      var exterior = geometries[i].exterior;
      bbox.fromPoints(exterior, min2, max2);
      vec2.min(min, min, min2);
      vec2.max(max, max, max2);
    } // No data


    if (i === 0) {
      min[0] = min[1] = max[0] = max[1] = 0;
    }

    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);
  },

  /**
   * @param {<Array.<number>} coord
   * @return {boolean}
   */
  contain: function (coord) {
    var rect = this.getBoundingRect();
    var geometries = this.geometries;

    if (!rect.contain(coord[0], coord[1])) {
      return false;
    }

    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {
      // Only support polygon.
      if (geometries[i].type !== 'polygon') {
        continue;
      }

      var exterior = geometries[i].exterior;
      var interiors = geometries[i].interiors;

      if (polygonContain.contain(exterior, coord[0], coord[1])) {
        // Not in the region if point is in the hole.
        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {
          if (polygonContain.contain(interiors[k])) {
            continue loopGeo;
          }
        }

        return true;
      }
    }

    return false;
  },
  transformTo: function (x, y, width, height) {
    var rect = this.getBoundingRect();
    var aspect = rect.width / rect.height;

    if (!width) {
      width = aspect * height;
    } else if (!height) {
      height = width / aspect;
    }

    var target = new BoundingRect(x, y, width, height);
    var transform = rect.calculateTransform(target);
    var geometries = this.geometries;

    for (var i = 0; i < geometries.length; i++) {
      // Only support polygon.
      if (geometries[i].type !== 'polygon') {
        continue;
      }

      var exterior = geometries[i].exterior;
      var interiors = geometries[i].interiors;

      for (var p = 0; p < exterior.length; p++) {
        vec2.applyTransform(exterior[p], exterior[p], transform);
      }

      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {
        for (var p = 0; p < interiors[h].length; p++) {
          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);
        }
      }
    }

    rect = this._rect;
    rect.copy(target); // Update center

    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];
  }
};
var _default = Region;
module.exports = _default;

/***/ }),
/* 499 */
/***/ (function(module, exports, __webpack_require__) {

var windingLine = __webpack_require__(186);

var EPSILON = 1e-8;

function isAroundEqual(a, b) {
  return Math.abs(a - b) < EPSILON;
}

function contain(points, x, y) {
  var w = 0;
  var p = points[0];

  if (!p) {
    return false;
  }

  for (var i = 1; i < points.length; i++) {
    var p2 = points[i];
    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);
    p = p2;
  } // Close polygon


  var p0 = points[0];

  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {
    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);
  }

  return w !== 0;
}

exports.contain = contain;

/***/ }),
/* 500 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var textContain = __webpack_require__(55);

var _model = __webpack_require__(7);

var makeInner = _model.makeInner;

var _axisHelper = __webpack_require__(68);

var makeLabelFormatter = _axisHelper.makeLabelFormatter;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var inner = makeInner();
/**
 * @param {module:echats/coord/Axis} axis
 * @return {Object} {
 *     labels: [{
 *         formattedLabel: string,
 *         rawLabel: string,
 *         tickValue: number
 *     }, ...],
 *     labelCategoryInterval: number
 * }
 */

function createAxisLabels(axis) {
  // Only ordinal scale support tick interval
  return axis.type === 'category' ? makeCategoryLabels(axis) : makeRealNumberLabels(axis);
}
/**
 * @param {module:echats/coord/Axis} axis
 * @param {module:echarts/model/Model} tickModel For example, can be axisTick, splitLine, splitArea.
 * @return {Object} {
 *     ticks: Array.<number>
 *     tickCategoryInterval: number
 * }
 */


function createAxisTicks(axis, tickModel) {
  // Only ordinal scale support tick interval
  return axis.type === 'category' ? makeCategoryTicks(axis, tickModel) : {
    ticks: axis.scale.getTicks()
  };
}

function makeCategoryLabels(axis) {
  var labelModel = axis.getLabelModel();
  var result = makeCategoryLabelsActually(axis, labelModel);
  return !labelModel.get('show') || axis.scale.isBlank() ? {
    labels: [],
    labelCategoryInterval: result.labelCategoryInterval
  } : result;
}

function makeCategoryLabelsActually(axis, labelModel) {
  var labelsCache = getListCache(axis, 'labels');
  var optionLabelInterval = getOptionCategoryInterval(labelModel);
  var result = listCacheGet(labelsCache, optionLabelInterval);

  if (result) {
    return result;
  }

  var labels;
  var numericLabelInterval;

  if (zrUtil.isFunction(optionLabelInterval)) {
    labels = makeLabelsByCustomizedCategoryInterval(axis, optionLabelInterval);
  } else {
    numericLabelInterval = optionLabelInterval === 'auto' ? makeAutoCategoryInterval(axis) : optionLabelInterval;
    labels = makeLabelsByNumericCategoryInterval(axis, numericLabelInterval);
  } // Cache to avoid calling interval function repeatly.


  return listCacheSet(labelsCache, optionLabelInterval, {
    labels: labels,
    labelCategoryInterval: numericLabelInterval
  });
}

function makeCategoryTicks(axis, tickModel) {
  var ticksCache = getListCache(axis, 'ticks');
  var optionTickInterval = getOptionCategoryInterval(tickModel);
  var result = listCacheGet(ticksCache, optionTickInterval);

  if (result) {
    return result;
  }

  var ticks;
  var tickCategoryInterval; // Optimize for the case that large category data and no label displayed,
  // we should not return all ticks.

  if (!tickModel.get('show') || axis.scale.isBlank()) {
    ticks = [];
  }

  if (zrUtil.isFunction(optionTickInterval)) {
    ticks = makeLabelsByCustomizedCategoryInterval(axis, optionTickInterval, true);
  } // Always use label interval by default despite label show. Consider this
  // scenario, Use multiple grid with the xAxis sync, and only one xAxis shows
  // labels. `splitLine` and `axisTick` should be consistent in this case.
  else if (optionTickInterval === 'auto') {
      var labelsResult = makeCategoryLabelsActually(axis, axis.getLabelModel());
      tickCategoryInterval = labelsResult.labelCategoryInterval;
      ticks = zrUtil.map(labelsResult.labels, function (labelItem) {
        return labelItem.tickValue;
      });
    } else {
      tickCategoryInterval = optionTickInterval;
      ticks = makeLabelsByNumericCategoryInterval(axis, tickCategoryInterval, true);
    } // Cache to avoid calling interval function repeatly.


  return listCacheSet(ticksCache, optionTickInterval, {
    ticks: ticks,
    tickCategoryInterval: tickCategoryInterval
  });
}

function makeRealNumberLabels(axis) {
  var ticks = axis.scale.getTicks();
  var labelFormatter = makeLabelFormatter(axis);
  return {
    labels: zrUtil.map(ticks, function (tickValue, idx) {
      return {
        formattedLabel: labelFormatter(tickValue, idx),
        rawLabel: axis.scale.getLabel(tickValue),
        tickValue: tickValue
      };
    })
  };
} // Large category data calculation is performence sensitive, and ticks and label
// probably be fetched by multiple times. So we cache the result.
// axis is created each time during a ec process, so we do not need to clear cache.


function getListCache(axis, prop) {
  // Because key can be funciton, and cache size always be small, we use array cache.
  return inner(axis)[prop] || (inner(axis)[prop] = []);
}

function listCacheGet(cache, key) {
  for (var i = 0; i < cache.length; i++) {
    if (cache[i].key === key) {
      return cache[i].value;
    }
  }
}

function listCacheSet(cache, key, value) {
  cache.push({
    key: key,
    value: value
  });
  return value;
}

function makeAutoCategoryInterval(axis) {
  var result = inner(axis).autoInterval;
  return result != null ? result : inner(axis).autoInterval = axis.calculateCategoryInterval();
}
/**
 * Calculate interval for category axis ticks and labels.
 * To get precise result, at least one of `getRotate` and `isHorizontal`
 * should be implemented in axis.
 */


function calculateCategoryInterval(axis) {
  var params = fetchAutoCategoryIntervalCalculationParams(axis);
  var labelFormatter = makeLabelFormatter(axis);
  var rotation = (params.axisRotate - params.labelRotate) / 180 * Math.PI;
  var ordinalScale = axis.scale;
  var ordinalExtent = ordinalScale.getExtent(); // Providing this method is for optimization:
  // avoid generating a long array by `getTicks`
  // in large category data case.

  var tickCount = ordinalScale.count();

  if (ordinalExtent[1] - ordinalExtent[0] < 1) {
    return 0;
  }

  var step = 1; // Simple optimization. Empirical value: tick count should less than 40.

  if (tickCount > 40) {
    step = Math.max(1, Math.floor(tickCount / 40));
  }

  var tickValue = ordinalExtent[0];
  var unitSpan = axis.dataToCoord(tickValue + 1) - axis.dataToCoord(tickValue);
  var unitW = Math.abs(unitSpan * Math.cos(rotation));
  var unitH = Math.abs(unitSpan * Math.sin(rotation));
  var maxW = 0;
  var maxH = 0; // Caution: Performance sensitive for large category data.
  // Consider dataZoom, we should make appropriate step to avoid O(n) loop.

  for (; tickValue <= ordinalExtent[1]; tickValue += step) {
    var width = 0;
    var height = 0; // Polar is also calculated in assumptive linear layout here.
    // Not precise, do not consider align and vertical align
    // and each distance from axis line yet.

    var rect = textContain.getBoundingRect(labelFormatter(tickValue), params.font, 'center', 'top'); // Magic number

    width = rect.width * 1.3;
    height = rect.height * 1.3; // Min size, void long loop.

    maxW = Math.max(maxW, width, 7);
    maxH = Math.max(maxH, height, 7);
  }

  var dw = maxW / unitW;
  var dh = maxH / unitH; // 0/0 is NaN, 1/0 is Infinity.

  isNaN(dw) && (dw = Infinity);
  isNaN(dh) && (dh = Infinity);
  var interval = Math.max(0, Math.floor(Math.min(dw, dh)));
  var cache = inner(axis.model);
  var lastAutoInterval = cache.lastAutoInterval;
  var lastTickCount = cache.lastTickCount; // Use cache to keep interval stable while moving zoom window,
  // otherwise the calculated interval might jitter when the zoom
  // window size is close to the interval-changing size.

  if (lastAutoInterval != null && lastTickCount != null && Math.abs(lastAutoInterval - interval) <= 1 && Math.abs(lastTickCount - tickCount) <= 1 // Always choose the bigger one, otherwise the critical
  // point is not the same when zooming in or zooming out.
  && lastAutoInterval > interval) {
    interval = lastAutoInterval;
  } // Only update cache if cache not used, otherwise the
  // changing of interval is too insensitive.
  else {
      cache.lastTickCount = tickCount;
      cache.lastAutoInterval = interval;
    }

  return interval;
}

function fetchAutoCategoryIntervalCalculationParams(axis) {
  var labelModel = axis.getLabelModel();
  return {
    axisRotate: axis.getRotate ? axis.getRotate() : axis.isHorizontal && !axis.isHorizontal() ? 90 : 0,
    labelRotate: labelModel.get('rotate') || 0,
    font: labelModel.getFont()
  };
}

function makeLabelsByNumericCategoryInterval(axis, categoryInterval, onlyTick) {
  var labelFormatter = makeLabelFormatter(axis);
  var ordinalScale = axis.scale;
  var ordinalExtent = ordinalScale.getExtent();
  var labelModel = axis.getLabelModel();
  var result = []; // TODO: axisType: ordinalTime, pick the tick from each month/day/year/...

  var step = Math.max((categoryInterval || 0) + 1, 1);
  var startTick = ordinalExtent[0];
  var tickCount = ordinalScale.count(); // Calculate start tick based on zero if possible to keep label consistent
  // while zooming and moving while interval > 0. Otherwise the selection
  // of displayable ticks and symbols probably keep changing.
  // 3 is empirical value.

  if (startTick !== 0 && step > 1 && tickCount / step > 2) {
    startTick = Math.round(Math.ceil(startTick / step) * step);
  } // (1) Only add min max label here but leave overlap checking
  // to render stage, which also ensure the returned list
  // suitable for splitLine and splitArea rendering.
  // (2) Scales except category always contain min max label so
  // do not need to perform this process.


  var showMinMax = {
    min: labelModel.get('showMinLabel'),
    max: labelModel.get('showMaxLabel')
  };

  if (showMinMax.min && startTick !== ordinalExtent[0]) {
    addItem(ordinalExtent[0]);
  } // Optimize: avoid generating large array by `ordinalScale.getTicks()`.


  var tickValue = startTick;

  for (; tickValue <= ordinalExtent[1]; tickValue += step) {
    addItem(tickValue);
  }

  if (showMinMax.max && tickValue !== ordinalExtent[1]) {
    addItem(ordinalExtent[1]);
  }

  function addItem(tVal) {
    result.push(onlyTick ? tVal : {
      formattedLabel: labelFormatter(tVal),
      rawLabel: ordinalScale.getLabel(tVal),
      tickValue: tVal
    });
  }

  return result;
} // When interval is function, the result `false` means ignore the tick.
// It is time consuming for large category data.


function makeLabelsByCustomizedCategoryInterval(axis, categoryInterval, onlyTick) {
  var ordinalScale = axis.scale;
  var labelFormatter = makeLabelFormatter(axis);
  var result = [];
  zrUtil.each(ordinalScale.getTicks(), function (tickValue) {
    var rawLabel = ordinalScale.getLabel(tickValue);

    if (categoryInterval(tickValue, rawLabel)) {
      result.push(onlyTick ? tickValue : {
        formattedLabel: labelFormatter(tickValue),
        rawLabel: rawLabel,
        tickValue: tickValue
      });
    }
  });
  return result;
} // Can be null|'auto'|number|function


function getOptionCategoryInterval(model) {
  var interval = model.get('interval');
  return interval == null ? 'auto' : interval;
}

exports.createAxisLabels = createAxisLabels;
exports.createAxisTicks = createAxisTicks;
exports.calculateCategoryInterval = calculateCategoryInterval;

/***/ }),
/* 501 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(502);
__webpack_require__(699);
__webpack_require__(80);
__webpack_require__(701);
__webpack_require__(230);
__webpack_require__(702);
__webpack_require__(703);
__webpack_require__(704);
__webpack_require__(705);
__webpack_require__(706);
__webpack_require__(707);
__webpack_require__(708);
__webpack_require__(709);
__webpack_require__(710);
__webpack_require__(711);
module.exports = __webpack_require__(18);


/***/ }),
/* 502 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(503);
__webpack_require__(505);
__webpack_require__(506);
__webpack_require__(507);
__webpack_require__(508);
__webpack_require__(509);
__webpack_require__(510);
__webpack_require__(511);
__webpack_require__(512);
__webpack_require__(513);
__webpack_require__(514);
__webpack_require__(515);
__webpack_require__(516);
__webpack_require__(517);
__webpack_require__(518);
__webpack_require__(519);
__webpack_require__(521);
__webpack_require__(522);
__webpack_require__(523);
__webpack_require__(524);
__webpack_require__(525);
__webpack_require__(526);
__webpack_require__(527);
__webpack_require__(528);
__webpack_require__(529);
__webpack_require__(530);
__webpack_require__(531);
__webpack_require__(532);
__webpack_require__(533);
__webpack_require__(534);
__webpack_require__(535);
__webpack_require__(536);
__webpack_require__(537);
__webpack_require__(538);
__webpack_require__(539);
__webpack_require__(540);
__webpack_require__(541);
__webpack_require__(542);
__webpack_require__(543);
__webpack_require__(544);
__webpack_require__(545);
__webpack_require__(546);
__webpack_require__(547);
__webpack_require__(548);
__webpack_require__(549);
__webpack_require__(550);
__webpack_require__(551);
__webpack_require__(552);
__webpack_require__(553);
__webpack_require__(554);
__webpack_require__(555);
__webpack_require__(556);
__webpack_require__(557);
__webpack_require__(558);
__webpack_require__(559);
__webpack_require__(560);
__webpack_require__(561);
__webpack_require__(562);
__webpack_require__(563);
__webpack_require__(564);
__webpack_require__(565);
__webpack_require__(566);
__webpack_require__(567);
__webpack_require__(568);
__webpack_require__(569);
__webpack_require__(570);
__webpack_require__(571);
__webpack_require__(572);
__webpack_require__(573);
__webpack_require__(574);
__webpack_require__(575);
__webpack_require__(576);
__webpack_require__(577);
__webpack_require__(578);
__webpack_require__(579);
__webpack_require__(580);
__webpack_require__(581);
__webpack_require__(583);
__webpack_require__(584);
__webpack_require__(586);
__webpack_require__(587);
__webpack_require__(588);
__webpack_require__(589);
__webpack_require__(590);
__webpack_require__(591);
__webpack_require__(592);
__webpack_require__(594);
__webpack_require__(595);
__webpack_require__(596);
__webpack_require__(597);
__webpack_require__(598);
__webpack_require__(599);
__webpack_require__(600);
__webpack_require__(601);
__webpack_require__(602);
__webpack_require__(603);
__webpack_require__(604);
__webpack_require__(605);
__webpack_require__(606);
__webpack_require__(145);
__webpack_require__(607);
__webpack_require__(608);
__webpack_require__(215);
__webpack_require__(609);
__webpack_require__(610);
__webpack_require__(611);
__webpack_require__(612);
__webpack_require__(613);
__webpack_require__(218);
__webpack_require__(220);
__webpack_require__(221);
__webpack_require__(614);
__webpack_require__(615);
__webpack_require__(616);
__webpack_require__(617);
__webpack_require__(618);
__webpack_require__(619);
__webpack_require__(620);
__webpack_require__(621);
__webpack_require__(622);
__webpack_require__(623);
__webpack_require__(624);
__webpack_require__(625);
__webpack_require__(626);
__webpack_require__(627);
__webpack_require__(628);
__webpack_require__(629);
__webpack_require__(630);
__webpack_require__(631);
__webpack_require__(632);
__webpack_require__(633);
__webpack_require__(634);
__webpack_require__(635);
__webpack_require__(636);
__webpack_require__(637);
__webpack_require__(638);
__webpack_require__(639);
__webpack_require__(640);
__webpack_require__(641);
__webpack_require__(642);
__webpack_require__(643);
__webpack_require__(644);
__webpack_require__(645);
__webpack_require__(646);
__webpack_require__(647);
__webpack_require__(648);
__webpack_require__(649);
__webpack_require__(650);
__webpack_require__(651);
__webpack_require__(652);
__webpack_require__(653);
__webpack_require__(654);
__webpack_require__(655);
__webpack_require__(656);
__webpack_require__(657);
__webpack_require__(658);
__webpack_require__(659);
__webpack_require__(660);
__webpack_require__(661);
__webpack_require__(662);
__webpack_require__(663);
__webpack_require__(664);
__webpack_require__(665);
__webpack_require__(666);
__webpack_require__(667);
__webpack_require__(668);
__webpack_require__(669);
__webpack_require__(670);
__webpack_require__(671);
__webpack_require__(672);
__webpack_require__(673);
__webpack_require__(674);
__webpack_require__(675);
__webpack_require__(676);
__webpack_require__(677);
__webpack_require__(678);
__webpack_require__(679);
__webpack_require__(680);
__webpack_require__(681);
__webpack_require__(682);
__webpack_require__(683);
__webpack_require__(684);
__webpack_require__(685);
__webpack_require__(686);
__webpack_require__(687);
__webpack_require__(688);
__webpack_require__(689);
__webpack_require__(690);
__webpack_require__(691);
__webpack_require__(692);
__webpack_require__(693);
__webpack_require__(694);
__webpack_require__(695);
__webpack_require__(696);
__webpack_require__(697);
__webpack_require__(698);
module.exports = __webpack_require__(18);


/***/ }),
/* 503 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// ECMAScript 6 symbols shim
var global = __webpack_require__(3);
var has = __webpack_require__(22);
var DESCRIPTORS = __webpack_require__(9);
var $export = __webpack_require__(0);
var redefine = __webpack_require__(24);
var META = __webpack_require__(51).KEY;
var $fails = __webpack_require__(5);
var shared = __webpack_require__(90);
var setToStringTag = __webpack_require__(69);
var uid = __webpack_require__(56);
var wks = __webpack_require__(6);
var wksExt = __webpack_require__(201);
var wksDefine = __webpack_require__(126);
var enumKeys = __webpack_require__(504);
var isArray = __webpack_require__(93);
var anObject = __webpack_require__(2);
var isObject = __webpack_require__(4);
var toIObject = __webpack_require__(19);
var toPrimitive = __webpack_require__(37);
var createDesc = __webpack_require__(50);
var _create = __webpack_require__(45);
var gOPNExt = __webpack_require__(204);
var $GOPD = __webpack_require__(25);
var $DP = __webpack_require__(8);
var $keys = __webpack_require__(44);
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function';
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  __webpack_require__(58).f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__(79).f = $propertyIsEnumerable;
  __webpack_require__(92).f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !__webpack_require__(52)) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(23)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);


/***/ }),
/* 504 */
/***/ (function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__(44);
var gOPS = __webpack_require__(92);
var pIE = __webpack_require__(79);
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};


/***/ }),
/* 505 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(0);
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export($export.S, 'Object', { create: __webpack_require__(45) });


/***/ }),
/* 506 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(0);
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !__webpack_require__(9), 'Object', { defineProperty: __webpack_require__(8).f });


/***/ }),
/* 507 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(0);
// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
$export($export.S + $export.F * !__webpack_require__(9), 'Object', { defineProperties: __webpack_require__(203) });


/***/ }),
/* 508 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
var toIObject = __webpack_require__(19);
var $getOwnPropertyDescriptor = __webpack_require__(25).f;

__webpack_require__(40)('getOwnPropertyDescriptor', function () {
  return function getOwnPropertyDescriptor(it, key) {
    return $getOwnPropertyDescriptor(toIObject(it), key);
  };
});


/***/ }),
/* 509 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 Object.getPrototypeOf(O)
var toObject = __webpack_require__(12);
var $getPrototypeOf = __webpack_require__(26);

__webpack_require__(40)('getPrototypeOf', function () {
  return function getPrototypeOf(it) {
    return $getPrototypeOf(toObject(it));
  };
});


/***/ }),
/* 510 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 Object.keys(O)
var toObject = __webpack_require__(12);
var $keys = __webpack_require__(44);

__webpack_require__(40)('keys', function () {
  return function keys(it) {
    return $keys(toObject(it));
  };
});


/***/ }),
/* 511 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 Object.getOwnPropertyNames(O)
__webpack_require__(40)('getOwnPropertyNames', function () {
  return __webpack_require__(204).f;
});


/***/ }),
/* 512 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.5 Object.freeze(O)
var isObject = __webpack_require__(4);
var meta = __webpack_require__(51).onFreeze;

__webpack_require__(40)('freeze', function ($freeze) {
  return function freeze(it) {
    return $freeze && isObject(it) ? $freeze(meta(it)) : it;
  };
});


/***/ }),
/* 513 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.17 Object.seal(O)
var isObject = __webpack_require__(4);
var meta = __webpack_require__(51).onFreeze;

__webpack_require__(40)('seal', function ($seal) {
  return function seal(it) {
    return $seal && isObject(it) ? $seal(meta(it)) : it;
  };
});


/***/ }),
/* 514 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.15 Object.preventExtensions(O)
var isObject = __webpack_require__(4);
var meta = __webpack_require__(51).onFreeze;

__webpack_require__(40)('preventExtensions', function ($preventExtensions) {
  return function preventExtensions(it) {
    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;
  };
});


/***/ }),
/* 515 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.12 Object.isFrozen(O)
var isObject = __webpack_require__(4);

__webpack_require__(40)('isFrozen', function ($isFrozen) {
  return function isFrozen(it) {
    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
  };
});


/***/ }),
/* 516 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.13 Object.isSealed(O)
var isObject = __webpack_require__(4);

__webpack_require__(40)('isSealed', function ($isSealed) {
  return function isSealed(it) {
    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
  };
});


/***/ }),
/* 517 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.11 Object.isExtensible(O)
var isObject = __webpack_require__(4);

__webpack_require__(40)('isExtensible', function ($isExtensible) {
  return function isExtensible(it) {
    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
  };
});


/***/ }),
/* 518 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.1 Object.assign(target, source)
var $export = __webpack_require__(0);

$export($export.S + $export.F, 'Object', { assign: __webpack_require__(130) });


/***/ }),
/* 519 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.10 Object.is(value1, value2)
var $export = __webpack_require__(0);
$export($export.S, 'Object', { is: __webpack_require__(520) });


/***/ }),
/* 520 */
/***/ (function(module, exports) {

// 7.2.9 SameValue(x, y)
module.exports = Object.is || function is(x, y) {
  // eslint-disable-next-line no-self-compare
  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
};


/***/ }),
/* 521 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.19 Object.setPrototypeOf(O, proto)
var $export = __webpack_require__(0);
$export($export.S, 'Object', { setPrototypeOf: __webpack_require__(131).set });


/***/ }),
/* 522 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.3.6 Object.prototype.toString()
var classof = __webpack_require__(59);
var test = {};
test[__webpack_require__(6)('toStringTag')] = 'z';
if (test + '' != '[object z]') {
  __webpack_require__(24)(Object.prototype, 'toString', function toString() {
    return '[object ' + classof(this) + ']';
  }, true);
}


/***/ }),
/* 523 */
/***/ (function(module, exports, __webpack_require__) {

// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
var $export = __webpack_require__(0);

$export($export.P, 'Function', { bind: __webpack_require__(205) });


/***/ }),
/* 524 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(8).f;
var FProto = Function.prototype;
var nameRE = /^\s*function ([^ (]*)/;
var NAME = 'name';

// 19.2.4.2 name
NAME in FProto || __webpack_require__(9) && dP(FProto, NAME, {
  configurable: true,
  get: function () {
    try {
      return ('' + this).match(nameRE)[1];
    } catch (e) {
      return '';
    }
  }
});


/***/ }),
/* 525 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var isObject = __webpack_require__(4);
var getPrototypeOf = __webpack_require__(26);
var HAS_INSTANCE = __webpack_require__(6)('hasInstance');
var FunctionProto = Function.prototype;
// 19.2.3.6 Function.prototype[@@hasInstance](V)
if (!(HAS_INSTANCE in FunctionProto)) __webpack_require__(8).f(FunctionProto, HAS_INSTANCE, { value: function (O) {
  if (typeof this != 'function' || !isObject(O)) return false;
  if (!isObject(this.prototype)) return O instanceof this;
  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
  while (O = getPrototypeOf(O)) if (this.prototype === O) return true;
  return false;
} });


/***/ }),
/* 526 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(0);
var $parseInt = __webpack_require__(206);
// 18.2.5 parseInt(string, radix)
$export($export.G + $export.F * (parseInt != $parseInt), { parseInt: $parseInt });


/***/ }),
/* 527 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(0);
var $parseFloat = __webpack_require__(207);
// 18.2.4 parseFloat(string)
$export($export.G + $export.F * (parseFloat != $parseFloat), { parseFloat: $parseFloat });


/***/ }),
/* 528 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(3);
var has = __webpack_require__(22);
var cof = __webpack_require__(34);
var inheritIfRequired = __webpack_require__(134);
var toPrimitive = __webpack_require__(37);
var fails = __webpack_require__(5);
var gOPN = __webpack_require__(58).f;
var gOPD = __webpack_require__(25).f;
var dP = __webpack_require__(8).f;
var $trim = __webpack_require__(70).trim;
var NUMBER = 'Number';
var $Number = global[NUMBER];
var Base = $Number;
var proto = $Number.prototype;
// Opera ~12 has broken Object#toString
var BROKEN_COF = cof(__webpack_require__(45)(proto)) == NUMBER;
var TRIM = 'trim' in String.prototype;

// 7.1.3 ToNumber(argument)
var toNumber = function (argument) {
  var it = toPrimitive(argument, false);
  if (typeof it == 'string' && it.length > 2) {
    it = TRIM ? it.trim() : $trim(it, 3);
    var first = it.charCodeAt(0);
    var third, radix, maxCode;
    if (first === 43 || first === 45) {
      third = it.charCodeAt(2);
      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
    } else if (first === 48) {
      switch (it.charCodeAt(1)) {
        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i
        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i
        default: return +it;
      }
      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {
        code = digits.charCodeAt(i);
        // parseInt parses a string to a first unavailable symbol
        // but ToNumber should return NaN if a string contains unavailable symbols
        if (code < 48 || code > maxCode) return NaN;
      } return parseInt(digits, radix);
    }
  } return +it;
};

if (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {
  $Number = function Number(value) {
    var it = arguments.length < 1 ? 0 : value;
    var that = this;
    return that instanceof $Number
      // check on 1..constructor(foo) case
      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)
        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
  };
  for (var keys = __webpack_require__(9) ? gOPN(Base) : (
    // ES3:
    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
    // ES6 (in case, if modules with ES6 Number statics required before):
    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
  ).split(','), j = 0, key; keys.length > j; j++) {
    if (has(Base, key = keys[j]) && !has($Number, key)) {
      dP($Number, key, gOPD(Base, key));
    }
  }
  $Number.prototype = proto;
  proto.constructor = $Number;
  __webpack_require__(24)(global, NUMBER, $Number);
}


/***/ }),
/* 529 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(0);
var toInteger = __webpack_require__(39);
var aNumberValue = __webpack_require__(208);
var repeat = __webpack_require__(135);
var $toFixed = 1.0.toFixed;
var floor = Math.floor;
var data = [0, 0, 0, 0, 0, 0];
var ERROR = 'Number.toFixed: incorrect invocation!';
var ZERO = '0';

var multiply = function (n, c) {
  var i = -1;
  var c2 = c;
  while (++i < 6) {
    c2 += n * data[i];
    data[i] = c2 % 1e7;
    c2 = floor(c2 / 1e7);
  }
};
var divide = function (n) {
  var i = 6;
  var c = 0;
  while (--i >= 0) {
    c += data[i];
    data[i] = floor(c / n);
    c = (c % n) * 1e7;
  }
};
var numToString = function () {
  var i = 6;
  var s = '';
  while (--i >= 0) {
    if (s !== '' || i === 0 || data[i] !== 0) {
      var t = String(data[i]);
      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;
    }
  } return s;
};
var pow = function (x, n, acc) {
  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
};
var log = function (x) {
  var n = 0;
  var x2 = x;
  while (x2 >= 4096) {
    n += 12;
    x2 /= 4096;
  }
  while (x2 >= 2) {
    n += 1;
    x2 /= 2;
  } return n;
};

$export($export.P + $export.F * (!!$toFixed && (
  0.00008.toFixed(3) !== '0.000' ||
  0.9.toFixed(0) !== '1' ||
  1.255.toFixed(2) !== '1.25' ||
  1000000000000000128.0.toFixed(0) !== '1000000000000000128'
) || !__webpack_require__(5)(function () {
  // V8 ~ Android 4.3-
  $toFixed.call({});
})), 'Number', {
  toFixed: function toFixed(fractionDigits) {
    var x = aNumberValue(this, ERROR);
    var f = toInteger(fractionDigits);
    var s = '';
    var m = ZERO;
    var e, z, j, k;
    if (f < 0 || f > 20) throw RangeError(ERROR);
    // eslint-disable-next-line no-self-compare
    if (x != x) return 'NaN';
    if (x <= -1e21 || x >= 1e21) return String(x);
    if (x < 0) {
      s = '-';
      x = -x;
    }
    if (x > 1e-21) {
      e = log(x * pow(2, 69, 1)) - 69;
      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);
      z *= 0x10000000000000;
      e = 52 - e;
      if (e > 0) {
        multiply(0, z);
        j = f;
        while (j >= 7) {
          multiply(1e7, 0);
          j -= 7;
        }
        multiply(pow(10, j, 1), 0);
        j = e - 1;
        while (j >= 23) {
          divide(1 << 23);
          j -= 23;
        }
        divide(1 << j);
        multiply(1, 1);
        divide(2);
        m = numToString();
      } else {
        multiply(0, z);
        multiply(1 << -e, 0);
        m = numToString() + repeat.call(ZERO, f);
      }
    }
    if (f > 0) {
      k = m.length;
      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));
    } else {
      m = s + m;
    } return m;
  }
});


/***/ }),
/* 530 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(0);
var $fails = __webpack_require__(5);
var aNumberValue = __webpack_require__(208);
var $toPrecision = 1.0.toPrecision;

$export($export.P + $export.F * ($fails(function () {
  // IE7-
  return $toPrecision.call(1, undefined) !== '1';
}) || !$fails(function () {
  // V8 ~ Android 4.3-
  $toPrecision.call({});
})), 'Number', {
  toPrecision: function toPrecision(precision) {
    var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');
    return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision);
  }
});


/***/ }),
/* 531 */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.1 Number.EPSILON
var $export = __webpack_require__(0);

$export($export.S, 'Number', { EPSILON: Math.pow(2, -52) });


/***/ }),
/* 532 */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.2 Number.isFinite(number)
var $export = __webpack_require__(0);
var _isFinite = __webpack_require__(3).isFinite;

$export($export.S, 'Number', {
  isFinite: function isFinite(it) {
    return typeof it == 'number' && _isFinite(it);
  }
});


/***/ }),
/* 533 */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.3 Number.isInteger(number)
var $export = __webpack_require__(0);

$export($export.S, 'Number', { isInteger: __webpack_require__(209) });


/***/ }),
/* 534 */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.4 Number.isNaN(number)
var $export = __webpack_require__(0);

$export($export.S, 'Number', {
  isNaN: function isNaN(number) {
    // eslint-disable-next-line no-self-compare
    return number != number;
  }
});


/***/ }),
/* 535 */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.5 Number.isSafeInteger(number)
var $export = __webpack_require__(0);
var isInteger = __webpack_require__(209);
var abs = Math.abs;

$export($export.S, 'Number', {
  isSafeInteger: function isSafeInteger(number) {
    return isInteger(number) && abs(number) <= 0x1fffffffffffff;
  }
});


/***/ }),
/* 536 */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.6 Number.MAX_SAFE_INTEGER
var $export = __webpack_require__(0);

$export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });


/***/ }),
/* 537 */
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.10 Number.MIN_SAFE_INTEGER
var $export = __webpack_require__(0);

$export($export.S, 'Number', { MIN_SAFE_INTEGER: -0x1fffffffffffff });


/***/ }),
/* 538 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(0);
var $parseFloat = __webpack_require__(207);
// 20.1.2.12 Number.parseFloat(string)
$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', { parseFloat: $parseFloat });


/***/ }),
/* 539 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(0);
var $parseInt = __webpack_require__(206);
// 20.1.2.13 Number.parseInt(string, radix)
$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', { parseInt: $parseInt });


/***/ }),
/* 540 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.3 Math.acosh(x)
var $export = __webpack_require__(0);
var log1p = __webpack_require__(210);
var sqrt = Math.sqrt;
var $acosh = Math.acosh;

$export($export.S + $export.F * !($acosh
  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
  && Math.floor($acosh(Number.MAX_VALUE)) == 710
  // Tor Browser bug: Math.acosh(Infinity) -> NaN
  && $acosh(Infinity) == Infinity
), 'Math', {
  acosh: function acosh(x) {
    return (x = +x) < 1 ? NaN : x > 94906265.62425156
      ? Math.log(x) + Math.LN2
      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
  }
});


/***/ }),
/* 541 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.5 Math.asinh(x)
var $export = __webpack_require__(0);
var $asinh = Math.asinh;

function asinh(x) {
  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
}

// Tor Browser bug: Math.asinh(0) -> -0
$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', { asinh: asinh });


/***/ }),
/* 542 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.7 Math.atanh(x)
var $export = __webpack_require__(0);
var $atanh = Math.atanh;

// Tor Browser bug: Math.atanh(-0) -> 0
$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
  atanh: function atanh(x) {
    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
  }
});


/***/ }),
/* 543 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.9 Math.cbrt(x)
var $export = __webpack_require__(0);
var sign = __webpack_require__(136);

$export($export.S, 'Math', {
  cbrt: function cbrt(x) {
    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
  }
});


/***/ }),
/* 544 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.11 Math.clz32(x)
var $export = __webpack_require__(0);

$export($export.S, 'Math', {
  clz32: function clz32(x) {
    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
  }
});


/***/ }),
/* 545 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.12 Math.cosh(x)
var $export = __webpack_require__(0);
var exp = Math.exp;

$export($export.S, 'Math', {
  cosh: function cosh(x) {
    return (exp(x = +x) + exp(-x)) / 2;
  }
});


/***/ }),
/* 546 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.14 Math.expm1(x)
var $export = __webpack_require__(0);
var $expm1 = __webpack_require__(137);

$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', { expm1: $expm1 });


/***/ }),
/* 547 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.16 Math.fround(x)
var $export = __webpack_require__(0);

$export($export.S, 'Math', { fround: __webpack_require__(211) });


/***/ }),
/* 548 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
var $export = __webpack_require__(0);
var abs = Math.abs;

$export($export.S, 'Math', {
  hypot: function hypot(value1, value2) { // eslint-disable-line no-unused-vars
    var sum = 0;
    var i = 0;
    var aLen = arguments.length;
    var larg = 0;
    var arg, div;
    while (i < aLen) {
      arg = abs(arguments[i++]);
      if (larg < arg) {
        div = larg / arg;
        sum = sum * div * div + 1;
        larg = arg;
      } else if (arg > 0) {
        div = arg / larg;
        sum += div * div;
      } else sum += arg;
    }
    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
  }
});


/***/ }),
/* 549 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.18 Math.imul(x, y)
var $export = __webpack_require__(0);
var $imul = Math.imul;

// some WebKit versions fails with big numbers, some has wrong arity
$export($export.S + $export.F * __webpack_require__(5)(function () {
  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
}), 'Math', {
  imul: function imul(x, y) {
    var UINT16 = 0xffff;
    var xn = +x;
    var yn = +y;
    var xl = UINT16 & xn;
    var yl = UINT16 & yn;
    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
  }
});


/***/ }),
/* 550 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.21 Math.log10(x)
var $export = __webpack_require__(0);

$export($export.S, 'Math', {
  log10: function log10(x) {
    return Math.log(x) * Math.LOG10E;
  }
});


/***/ }),
/* 551 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.20 Math.log1p(x)
var $export = __webpack_require__(0);

$export($export.S, 'Math', { log1p: __webpack_require__(210) });


/***/ }),
/* 552 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.22 Math.log2(x)
var $export = __webpack_require__(0);

$export($export.S, 'Math', {
  log2: function log2(x) {
    return Math.log(x) / Math.LN2;
  }
});


/***/ }),
/* 553 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.28 Math.sign(x)
var $export = __webpack_require__(0);

$export($export.S, 'Math', { sign: __webpack_require__(136) });


/***/ }),
/* 554 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.30 Math.sinh(x)
var $export = __webpack_require__(0);
var expm1 = __webpack_require__(137);
var exp = Math.exp;

// V8 near Chromium 38 has a problem with very small numbers
$export($export.S + $export.F * __webpack_require__(5)(function () {
  return !Math.sinh(-2e-17) != -2e-17;
}), 'Math', {
  sinh: function sinh(x) {
    return Math.abs(x = +x) < 1
      ? (expm1(x) - expm1(-x)) / 2
      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
  }
});


/***/ }),
/* 555 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.33 Math.tanh(x)
var $export = __webpack_require__(0);
var expm1 = __webpack_require__(137);
var exp = Math.exp;

$export($export.S, 'Math', {
  tanh: function tanh(x) {
    var a = expm1(x = +x);
    var b = expm1(-x);
    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
  }
});


/***/ }),
/* 556 */
/***/ (function(module, exports, __webpack_require__) {

// 20.2.2.34 Math.trunc(x)
var $export = __webpack_require__(0);

$export($export.S, 'Math', {
  trunc: function trunc(it) {
    return (it > 0 ? Math.floor : Math.ceil)(it);
  }
});


/***/ }),
/* 557 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(0);
var toAbsoluteIndex = __webpack_require__(57);
var fromCharCode = String.fromCharCode;
var $fromCodePoint = String.fromCodePoint;

// length should be 1, old FF problem
$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
  // 21.1.2.2 String.fromCodePoint(...codePoints)
  fromCodePoint: function fromCodePoint(x) { // eslint-disable-line no-unused-vars
    var res = [];
    var aLen = arguments.length;
    var i = 0;
    var code;
    while (aLen > i) {
      code = +arguments[i++];
      if (toAbsoluteIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');
      res.push(code < 0x10000
        ? fromCharCode(code)
        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)
      );
    } return res.join('');
  }
});


/***/ }),
/* 558 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(0);
var toIObject = __webpack_require__(19);
var toLength = __webpack_require__(10);

$export($export.S, 'String', {
  // 21.1.2.4 String.raw(callSite, ...substitutions)
  raw: function raw(callSite) {
    var tpl = toIObject(callSite.raw);
    var len = toLength(tpl.length);
    var aLen = arguments.length;
    var res = [];
    var i = 0;
    while (len > i) {
      res.push(String(tpl[i++]));
      if (i < aLen) res.push(String(arguments[i]));
    } return res.join('');
  }
});


/***/ }),
/* 559 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 21.1.3.25 String.prototype.trim()
__webpack_require__(70)('trim', function ($trim) {
  return function trim() {
    return $trim(this, 3);
  };
});


/***/ }),
/* 560 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at = __webpack_require__(138)(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__(94)(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),
/* 561 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(0);
var $at = __webpack_require__(138)(false);
$export($export.P, 'String', {
  // 21.1.3.3 String.prototype.codePointAt(pos)
  codePointAt: function codePointAt(pos) {
    return $at(this, pos);
  }
});


/***/ }),
/* 562 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])

var $export = __webpack_require__(0);
var toLength = __webpack_require__(10);
var context = __webpack_require__(139);
var ENDS_WITH = 'endsWith';
var $endsWith = ''[ENDS_WITH];

$export($export.P + $export.F * __webpack_require__(140)(ENDS_WITH), 'String', {
  endsWith: function endsWith(searchString /* , endPosition = @length */) {
    var that = context(this, searchString, ENDS_WITH);
    var endPosition = arguments.length > 1 ? arguments[1] : undefined;
    var len = toLength(that.length);
    var end = endPosition === undefined ? len : Math.min(toLength(endPosition), len);
    var search = String(searchString);
    return $endsWith
      ? $endsWith.call(that, search, end)
      : that.slice(end - search.length, end) === search;
  }
});


/***/ }),
/* 563 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 21.1.3.7 String.prototype.includes(searchString, position = 0)

var $export = __webpack_require__(0);
var context = __webpack_require__(139);
var INCLUDES = 'includes';

$export($export.P + $export.F * __webpack_require__(140)(INCLUDES), 'String', {
  includes: function includes(searchString /* , position = 0 */) {
    return !!~context(this, searchString, INCLUDES)
      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),
/* 564 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(0);

$export($export.P, 'String', {
  // 21.1.3.13 String.prototype.repeat(count)
  repeat: __webpack_require__(135)
});


/***/ }),
/* 565 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 21.1.3.18 String.prototype.startsWith(searchString [, position ])

var $export = __webpack_require__(0);
var toLength = __webpack_require__(10);
var context = __webpack_require__(139);
var STARTS_WITH = 'startsWith';
var $startsWith = ''[STARTS_WITH];

$export($export.P + $export.F * __webpack_require__(140)(STARTS_WITH), 'String', {
  startsWith: function startsWith(searchString /* , position = 0 */) {
    var that = context(this, searchString, STARTS_WITH);
    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));
    var search = String(searchString);
    return $startsWith
      ? $startsWith.call(that, search, index)
      : that.slice(index, index + search.length) === search;
  }
});


/***/ }),
/* 566 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.2 String.prototype.anchor(name)
__webpack_require__(27)('anchor', function (createHTML) {
  return function anchor(name) {
    return createHTML(this, 'a', 'name', name);
  };
});


/***/ }),
/* 567 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.3 String.prototype.big()
__webpack_require__(27)('big', function (createHTML) {
  return function big() {
    return createHTML(this, 'big', '', '');
  };
});


/***/ }),
/* 568 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.4 String.prototype.blink()
__webpack_require__(27)('blink', function (createHTML) {
  return function blink() {
    return createHTML(this, 'blink', '', '');
  };
});


/***/ }),
/* 569 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.5 String.prototype.bold()
__webpack_require__(27)('bold', function (createHTML) {
  return function bold() {
    return createHTML(this, 'b', '', '');
  };
});


/***/ }),
/* 570 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.6 String.prototype.fixed()
__webpack_require__(27)('fixed', function (createHTML) {
  return function fixed() {
    return createHTML(this, 'tt', '', '');
  };
});


/***/ }),
/* 571 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.7 String.prototype.fontcolor(color)
__webpack_require__(27)('fontcolor', function (createHTML) {
  return function fontcolor(color) {
    return createHTML(this, 'font', 'color', color);
  };
});


/***/ }),
/* 572 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.8 String.prototype.fontsize(size)
__webpack_require__(27)('fontsize', function (createHTML) {
  return function fontsize(size) {
    return createHTML(this, 'font', 'size', size);
  };
});


/***/ }),
/* 573 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.9 String.prototype.italics()
__webpack_require__(27)('italics', function (createHTML) {
  return function italics() {
    return createHTML(this, 'i', '', '');
  };
});


/***/ }),
/* 574 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.10 String.prototype.link(url)
__webpack_require__(27)('link', function (createHTML) {
  return function link(url) {
    return createHTML(this, 'a', 'href', url);
  };
});


/***/ }),
/* 575 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.11 String.prototype.small()
__webpack_require__(27)('small', function (createHTML) {
  return function small() {
    return createHTML(this, 'small', '', '');
  };
});


/***/ }),
/* 576 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.12 String.prototype.strike()
__webpack_require__(27)('strike', function (createHTML) {
  return function strike() {
    return createHTML(this, 'strike', '', '');
  };
});


/***/ }),
/* 577 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.13 String.prototype.sub()
__webpack_require__(27)('sub', function (createHTML) {
  return function sub() {
    return createHTML(this, 'sub', '', '');
  };
});


/***/ }),
/* 578 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.14 String.prototype.sup()
__webpack_require__(27)('sup', function (createHTML) {
  return function sup() {
    return createHTML(this, 'sup', '', '');
  };
});


/***/ }),
/* 579 */
/***/ (function(module, exports, __webpack_require__) {

// 20.3.3.1 / 15.9.4.4 Date.now()
var $export = __webpack_require__(0);

$export($export.S, 'Date', { now: function () { return new Date().getTime(); } });


/***/ }),
/* 580 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(0);
var toObject = __webpack_require__(12);
var toPrimitive = __webpack_require__(37);

$export($export.P + $export.F * __webpack_require__(5)(function () {
  return new Date(NaN).toJSON() !== null
    || Date.prototype.toJSON.call({ toISOString: function () { return 1; } }) !== 1;
}), 'Date', {
  // eslint-disable-next-line no-unused-vars
  toJSON: function toJSON(key) {
    var O = toObject(this);
    var pv = toPrimitive(O);
    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
  }
});


/***/ }),
/* 581 */
/***/ (function(module, exports, __webpack_require__) {

// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
var $export = __webpack_require__(0);
var toISOString = __webpack_require__(582);

// PhantomJS / old WebKit has a broken implementations
$export($export.P + $export.F * (Date.prototype.toISOString !== toISOString), 'Date', {
  toISOString: toISOString
});


/***/ }),
/* 582 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
var fails = __webpack_require__(5);
var getTime = Date.prototype.getTime;
var $toISOString = Date.prototype.toISOString;

var lz = function (num) {
  return num > 9 ? num : '0' + num;
};

// PhantomJS / old WebKit has a broken implementations
module.exports = (fails(function () {
  return $toISOString.call(new Date(-5e13 - 1)) != '0385-07-25T07:06:39.999Z';
}) || !fails(function () {
  $toISOString.call(new Date(NaN));
})) ? function toISOString() {
  if (!isFinite(getTime.call(this))) throw RangeError('Invalid time value');
  var d = this;
  var y = d.getUTCFullYear();
  var m = d.getUTCMilliseconds();
  var s = y < 0 ? '-' : y > 9999 ? '+' : '';
  return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +
    '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +
    'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +
    ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';
} : $toISOString;


/***/ }),
/* 583 */
/***/ (function(module, exports, __webpack_require__) {

var DateProto = Date.prototype;
var INVALID_DATE = 'Invalid Date';
var TO_STRING = 'toString';
var $toString = DateProto[TO_STRING];
var getTime = DateProto.getTime;
if (new Date(NaN) + '' != INVALID_DATE) {
  __webpack_require__(24)(DateProto, TO_STRING, function toString() {
    var value = getTime.call(this);
    // eslint-disable-next-line no-self-compare
    return value === value ? $toString.call(this) : INVALID_DATE;
  });
}


/***/ }),
/* 584 */
/***/ (function(module, exports, __webpack_require__) {

var TO_PRIMITIVE = __webpack_require__(6)('toPrimitive');
var proto = Date.prototype;

if (!(TO_PRIMITIVE in proto)) __webpack_require__(23)(proto, TO_PRIMITIVE, __webpack_require__(585));


/***/ }),
/* 585 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var anObject = __webpack_require__(2);
var toPrimitive = __webpack_require__(37);
var NUMBER = 'number';

module.exports = function (hint) {
  if (hint !== 'string' && hint !== NUMBER && hint !== 'default') throw TypeError('Incorrect hint');
  return toPrimitive(anObject(this), hint != NUMBER);
};


/***/ }),
/* 586 */
/***/ (function(module, exports, __webpack_require__) {

// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
var $export = __webpack_require__(0);

$export($export.S, 'Array', { isArray: __webpack_require__(93) });


/***/ }),
/* 587 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ctx = __webpack_require__(31);
var $export = __webpack_require__(0);
var toObject = __webpack_require__(12);
var call = __webpack_require__(212);
var isArrayIter = __webpack_require__(141);
var toLength = __webpack_require__(10);
var createProperty = __webpack_require__(142);
var getIterFn = __webpack_require__(80);

$export($export.S + $export.F * !__webpack_require__(97)(function (iter) { Array.from(iter); }), 'Array', {
  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
    var O = toObject(arrayLike);
    var C = typeof this == 'function' ? this : Array;
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var index = 0;
    var iterFn = getIterFn(O);
    var length, result, step, iterator;
    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
    // if object isn't iterable or it's array with default iterator - use simple case
    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
      }
    } else {
      length = toLength(O.length);
      for (result = new C(length); length > index; index++) {
        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
      }
    }
    result.length = index;
    return result;
  }
});


/***/ }),
/* 588 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(0);
var createProperty = __webpack_require__(142);

// WebKit Array.of isn't generic
$export($export.S + $export.F * __webpack_require__(5)(function () {
  function F() { /* empty */ }
  return !(Array.of.call(F) instanceof F);
}), 'Array', {
  // 22.1.2.3 Array.of( ...items)
  of: function of(/* ...args */) {
    var index = 0;
    var aLen = arguments.length;
    var result = new (typeof this == 'function' ? this : Array)(aLen);
    while (aLen > index) createProperty(result, index, arguments[index++]);
    result.length = aLen;
    return result;
  }
});


/***/ }),
/* 589 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 22.1.3.13 Array.prototype.join(separator)
var $export = __webpack_require__(0);
var toIObject = __webpack_require__(19);
var arrayJoin = [].join;

// fallback for not array-like strings
$export($export.P + $export.F * (__webpack_require__(78) != Object || !__webpack_require__(35)(arrayJoin)), 'Array', {
  join: function join(separator) {
    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);
  }
});


/***/ }),
/* 590 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(0);
var html = __webpack_require__(129);
var cof = __webpack_require__(34);
var toAbsoluteIndex = __webpack_require__(57);
var toLength = __webpack_require__(10);
var arraySlice = [].slice;

// fallback for not array-like ES3 strings and DOM objects
$export($export.P + $export.F * __webpack_require__(5)(function () {
  if (html) arraySlice.call(html);
}), 'Array', {
  slice: function slice(begin, end) {
    var len = toLength(this.length);
    var klass = cof(this);
    end = end === undefined ? len : end;
    if (klass == 'Array') return arraySlice.call(this, begin, end);
    var start = toAbsoluteIndex(begin, len);
    var upTo = toAbsoluteIndex(end, len);
    var size = toLength(upTo - start);
    var cloned = new Array(size);
    var i = 0;
    for (; i < size; i++) cloned[i] = klass == 'String'
      ? this.charAt(start + i)
      : this[start + i];
    return cloned;
  }
});


/***/ }),
/* 591 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(0);
var aFunction = __webpack_require__(15);
var toObject = __webpack_require__(12);
var fails = __webpack_require__(5);
var $sort = [].sort;
var test = [1, 2, 3];

$export($export.P + $export.F * (fails(function () {
  // IE8-
  test.sort(undefined);
}) || !fails(function () {
  // V8 bug
  test.sort(null);
  // Old WebKit
}) || !__webpack_require__(35)($sort)), 'Array', {
  // 22.1.3.25 Array.prototype.sort(comparefn)
  sort: function sort(comparefn) {
    return comparefn === undefined
      ? $sort.call(toObject(this))
      : $sort.call(toObject(this), aFunction(comparefn));
  }
});


/***/ }),
/* 592 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(0);
var $forEach = __webpack_require__(41)(0);
var STRICT = __webpack_require__(35)([].forEach, true);

$export($export.P + $export.F * !STRICT, 'Array', {
  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
  forEach: function forEach(callbackfn /* , thisArg */) {
    return $forEach(this, callbackfn, arguments[1]);
  }
});


/***/ }),
/* 593 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(4);
var isArray = __webpack_require__(93);
var SPECIES = __webpack_require__(6)('species');

module.exports = function (original) {
  var C;
  if (isArray(original)) {
    C = original.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return C === undefined ? Array : C;
};


/***/ }),
/* 594 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(0);
var $map = __webpack_require__(41)(1);

$export($export.P + $export.F * !__webpack_require__(35)([].map, true), 'Array', {
  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
  map: function map(callbackfn /* , thisArg */) {
    return $map(this, callbackfn, arguments[1]);
  }
});


/***/ }),
/* 595 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(0);
var $filter = __webpack_require__(41)(2);

$export($export.P + $export.F * !__webpack_require__(35)([].filter, true), 'Array', {
  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
  filter: function filter(callbackfn /* , thisArg */) {
    return $filter(this, callbackfn, arguments[1]);
  }
});


/***/ }),
/* 596 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(0);
var $some = __webpack_require__(41)(3);

$export($export.P + $export.F * !__webpack_require__(35)([].some, true), 'Array', {
  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
  some: function some(callbackfn /* , thisArg */) {
    return $some(this, callbackfn, arguments[1]);
  }
});


/***/ }),
/* 597 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(0);
var $every = __webpack_require__(41)(4);

$export($export.P + $export.F * !__webpack_require__(35)([].every, true), 'Array', {
  // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
  every: function every(callbackfn /* , thisArg */) {
    return $every(this, callbackfn, arguments[1]);
  }
});


/***/ }),
/* 598 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(0);
var $reduce = __webpack_require__(213);

$export($export.P + $export.F * !__webpack_require__(35)([].reduce, true), 'Array', {
  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
  reduce: function reduce(callbackfn /* , initialValue */) {
    return $reduce(this, callbackfn, arguments.length, arguments[1], false);
  }
});


/***/ }),
/* 599 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(0);
var $reduce = __webpack_require__(213);

$export($export.P + $export.F * !__webpack_require__(35)([].reduceRight, true), 'Array', {
  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
  reduceRight: function reduceRight(callbackfn /* , initialValue */) {
    return $reduce(this, callbackfn, arguments.length, arguments[1], true);
  }
});


/***/ }),
/* 600 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(0);
var $indexOf = __webpack_require__(91)(false);
var $native = [].indexOf;
var NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;

$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(35)($native)), 'Array', {
  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
    return NEGATIVE_ZERO
      // convert -0 to +0
      ? $native.apply(this, arguments) || 0
      : $indexOf(this, searchElement, arguments[1]);
  }
});


/***/ }),
/* 601 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(0);
var toIObject = __webpack_require__(19);
var toInteger = __webpack_require__(39);
var toLength = __webpack_require__(10);
var $native = [].lastIndexOf;
var NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;

$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(35)($native)), 'Array', {
  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
  lastIndexOf: function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {
    // convert -0 to +0
    if (NEGATIVE_ZERO) return $native.apply(this, arguments) || 0;
    var O = toIObject(this);
    var length = toLength(O.length);
    var index = length - 1;
    if (arguments.length > 1) index = Math.min(index, toInteger(arguments[1]));
    if (index < 0) index = length + index;
    for (;index >= 0; index--) if (index in O) if (O[index] === searchElement) return index || 0;
    return -1;
  }
});


/***/ }),
/* 602 */
/***/ (function(module, exports, __webpack_require__) {

// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
var $export = __webpack_require__(0);

$export($export.P, 'Array', { copyWithin: __webpack_require__(214) });

__webpack_require__(53)('copyWithin');


/***/ }),
/* 603 */
/***/ (function(module, exports, __webpack_require__) {

// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
var $export = __webpack_require__(0);

$export($export.P, 'Array', { fill: __webpack_require__(144) });

__webpack_require__(53)('fill');


/***/ }),
/* 604 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
var $export = __webpack_require__(0);
var $find = __webpack_require__(41)(5);
var KEY = 'find';
var forced = true;
// Shouldn't skip holes
if (KEY in []) Array(1)[KEY](function () { forced = false; });
$export($export.P + $export.F * forced, 'Array', {
  find: function find(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
__webpack_require__(53)(KEY);


/***/ }),
/* 605 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
var $export = __webpack_require__(0);
var $find = __webpack_require__(41)(6);
var KEY = 'findIndex';
var forced = true;
// Shouldn't skip holes
if (KEY in []) Array(1)[KEY](function () { forced = false; });
$export($export.P + $export.F * forced, 'Array', {
  findIndex: function findIndex(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
__webpack_require__(53)(KEY);


/***/ }),
/* 606 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(61)('Array');


/***/ }),
/* 607 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(3);
var inheritIfRequired = __webpack_require__(134);
var dP = __webpack_require__(8).f;
var gOPN = __webpack_require__(58).f;
var isRegExp = __webpack_require__(96);
var $flags = __webpack_require__(98);
var $RegExp = global.RegExp;
var Base = $RegExp;
var proto = $RegExp.prototype;
var re1 = /a/g;
var re2 = /a/g;
// "new" creates a new object, old webkit buggy here
var CORRECT_NEW = new $RegExp(re1) !== re1;

if (__webpack_require__(9) && (!CORRECT_NEW || __webpack_require__(5)(function () {
  re2[__webpack_require__(6)('match')] = false;
  // RegExp constructor can alter flags and IsRegExp works correct with @@match
  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
}))) {
  $RegExp = function RegExp(p, f) {
    var tiRE = this instanceof $RegExp;
    var piRE = isRegExp(p);
    var fiU = f === undefined;
    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p
      : inheritIfRequired(CORRECT_NEW
        ? new Base(piRE && !fiU ? p.source : p, f)
        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)
      , tiRE ? this : proto, $RegExp);
  };
  var proxy = function (key) {
    key in $RegExp || dP($RegExp, key, {
      configurable: true,
      get: function () { return Base[key]; },
      set: function (it) { Base[key] = it; }
    });
  };
  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);
  proto.constructor = $RegExp;
  $RegExp.prototype = proto;
  __webpack_require__(24)(global, 'RegExp', $RegExp);
}

__webpack_require__(61)('RegExp');


/***/ }),
/* 608 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

__webpack_require__(215);
var anObject = __webpack_require__(2);
var $flags = __webpack_require__(98);
var DESCRIPTORS = __webpack_require__(9);
var TO_STRING = 'toString';
var $toString = /./[TO_STRING];

var define = function (fn) {
  __webpack_require__(24)(RegExp.prototype, TO_STRING, fn, true);
};

// 21.2.5.14 RegExp.prototype.toString()
if (__webpack_require__(5)(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {
  define(function toString() {
    var R = anObject(this);
    return '/'.concat(R.source, '/',
      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
  });
// FF44- RegExp#toString has a wrong name
} else if ($toString.name != TO_STRING) {
  define(function toString() {
    return $toString.call(this);
  });
}


/***/ }),
/* 609 */
/***/ (function(module, exports, __webpack_require__) {

// @@match logic
__webpack_require__(99)('match', 1, function (defined, MATCH, $match) {
  // 21.1.3.11 String.prototype.match(regexp)
  return [function match(regexp) {
    'use strict';
    var O = defined(this);
    var fn = regexp == undefined ? undefined : regexp[MATCH];
    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
  }, $match];
});


/***/ }),
/* 610 */
/***/ (function(module, exports, __webpack_require__) {

// @@replace logic
__webpack_require__(99)('replace', 2, function (defined, REPLACE, $replace) {
  // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)
  return [function replace(searchValue, replaceValue) {
    'use strict';
    var O = defined(this);
    var fn = searchValue == undefined ? undefined : searchValue[REPLACE];
    return fn !== undefined
      ? fn.call(searchValue, O, replaceValue)
      : $replace.call(String(O), searchValue, replaceValue);
  }, $replace];
});


/***/ }),
/* 611 */
/***/ (function(module, exports, __webpack_require__) {

// @@search logic
__webpack_require__(99)('search', 1, function (defined, SEARCH, $search) {
  // 21.1.3.15 String.prototype.search(regexp)
  return [function search(regexp) {
    'use strict';
    var O = defined(this);
    var fn = regexp == undefined ? undefined : regexp[SEARCH];
    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
  }, $search];
});


/***/ }),
/* 612 */
/***/ (function(module, exports, __webpack_require__) {

// @@split logic
__webpack_require__(99)('split', 2, function (defined, SPLIT, $split) {
  'use strict';
  var isRegExp = __webpack_require__(96);
  var _split = $split;
  var $push = [].push;
  var $SPLIT = 'split';
  var LENGTH = 'length';
  var LAST_INDEX = 'lastIndex';
  if (
    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
    ''[$SPLIT](/.?/)[LENGTH]
  ) {
    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group
    // based on es5-shim implementation, need to rework it
    $split = function (separator, limit) {
      var string = String(this);
      if (separator === undefined && limit === 0) return [];
      // If `separator` is not a regex, use native split
      if (!isRegExp(separator)) return _split.call(string, separator, limit);
      var output = [];
      var flags = (separator.ignoreCase ? 'i' : '') +
                  (separator.multiline ? 'm' : '') +
                  (separator.unicode ? 'u' : '') +
                  (separator.sticky ? 'y' : '');
      var lastLastIndex = 0;
      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;
      // Make `global` and avoid `lastIndex` issues by working with a copy
      var separatorCopy = new RegExp(separator.source, flags + 'g');
      var separator2, match, lastIndex, lastLength, i;
      // Doesn't need flags gy, but they don't hurt
      if (!NPCG) separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\s)', flags);
      while (match = separatorCopy.exec(string)) {
        // `separatorCopy.lastIndex` is not reliable cross-browser
        lastIndex = match.index + match[0][LENGTH];
        if (lastIndex > lastLastIndex) {
          output.push(string.slice(lastLastIndex, match.index));
          // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG
          // eslint-disable-next-line no-loop-func
          if (!NPCG && match[LENGTH] > 1) match[0].replace(separator2, function () {
            for (i = 1; i < arguments[LENGTH] - 2; i++) if (arguments[i] === undefined) match[i] = undefined;
          });
          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));
          lastLength = match[0][LENGTH];
          lastLastIndex = lastIndex;
          if (output[LENGTH] >= splitLimit) break;
        }
        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
      }
      if (lastLastIndex === string[LENGTH]) {
        if (lastLength || !separatorCopy.test('')) output.push('');
      } else output.push(string.slice(lastLastIndex));
      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
    };
  // Chakra, V8
  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {
    $split = function (separator, limit) {
      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);
    };
  }
  // 21.1.3.17 String.prototype.split(separator, limit)
  return [function split(separator, limit) {
    var O = defined(this);
    var fn = separator == undefined ? undefined : separator[SPLIT];
    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);
  }, $split];
});


/***/ }),
/* 613 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(52);
var global = __webpack_require__(3);
var ctx = __webpack_require__(31);
var classof = __webpack_require__(59);
var $export = __webpack_require__(0);
var isObject = __webpack_require__(4);
var aFunction = __webpack_require__(15);
var anInstance = __webpack_require__(62);
var forOf = __webpack_require__(54);
var speciesConstructor = __webpack_require__(100);
var task = __webpack_require__(147).set;
var microtask = __webpack_require__(148)();
var newPromiseCapabilityModule = __webpack_require__(149);
var perform = __webpack_require__(216);
var userAgent = __webpack_require__(101);
var promiseResolve = __webpack_require__(217);
var PROMISE = 'Promise';
var TypeError = global.TypeError;
var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8 || '';
var $Promise = global[PROMISE];
var isNode = classof(process) == 'process';
var empty = function () { /* empty */ };
var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;

var USE_NATIVE = !!function () {
  try {
    // correct subclassing with @@species support
    var promise = $Promise.resolve(1);
    var FakePromise = (promise.constructor = {})[__webpack_require__(6)('species')] = function (exec) {
      exec(empty, empty);
    };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function')
      && promise.then(empty) instanceof FakePromise
      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
      // we can't detect it synchronously, so just check versions
      && v8.indexOf('6.6') !== 0
      && userAgent.indexOf('Chrome/66') === -1;
  } catch (e) { /* empty */ }
}();

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var notify = function (promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;
    var run = function (reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled(promise);
            promise._h = 1;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // may throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        if (domain && !exited) domain.exit();
        reject(e);
      }
    };
    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled(promise);
  });
};
var onUnhandled = function (promise) {
  task.call(global, function () {
    var value = promise._v;
    var unhandled = isUnhandled(promise);
    var result, handler, console;
    if (unhandled) {
      result = perform(function () {
        if (isNode) {
          process.emit('unhandledRejection', value, promise);
        } else if (handler = global.onunhandledrejection) {
          handler({ promise: promise, reason: value });
        } else if ((console = global.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};
var isUnhandled = function (promise) {
  return promise._h !== 1 && (promise._a || promise._c).length === 0;
};
var onHandleUnhandled = function (promise) {
  task.call(global, function () {
    var handler;
    if (isNode) {
      process.emit('rejectionHandled', promise);
    } else if (handler = global.onrejectionhandled) {
      handler({ promise: promise, reason: promise._v });
    }
  });
};
var $reject = function (value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function (value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    if (then = isThenable(value)) {
      microtask(function () {
        var wrapper = { _w: promise, _d: false }; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch (e) {
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch (e) {
    $reject.call({ _w: promise, _d: false }, e); // wrap
  }
};

// constructor polyfill
if (!USE_NATIVE) {
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor) {
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch (err) {
      $reject.call(this, err);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = __webpack_require__(63)($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if (this._a) this._a.push(reaction);
      if (this._s) notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject = ctx($reject, promise, 1);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === $Promise || C === Wrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
__webpack_require__(69)($Promise, PROMISE);
__webpack_require__(61)(PROMISE);
Wrapper = __webpack_require__(18)[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x) {
    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
  }
});
$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(97)(function (iter) {
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      forOf(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      forOf(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});


/***/ }),
/* 614 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var weak = __webpack_require__(222);
var validate = __webpack_require__(71);
var WEAK_SET = 'WeakSet';

// 23.4 WeakSet Objects
__webpack_require__(102)(WEAK_SET, function (get) {
  return function WeakSet() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.4.3.1 WeakSet.prototype.add(value)
  add: function add(value) {
    return weak.def(validate(this, WEAK_SET), value, true);
  }
}, weak, false, true);


/***/ }),
/* 615 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(0);
var $typed = __webpack_require__(103);
var buffer = __webpack_require__(150);
var anObject = __webpack_require__(2);
var toAbsoluteIndex = __webpack_require__(57);
var toLength = __webpack_require__(10);
var isObject = __webpack_require__(4);
var ArrayBuffer = __webpack_require__(3).ArrayBuffer;
var speciesConstructor = __webpack_require__(100);
var $ArrayBuffer = buffer.ArrayBuffer;
var $DataView = buffer.DataView;
var $isView = $typed.ABV && ArrayBuffer.isView;
var $slice = $ArrayBuffer.prototype.slice;
var VIEW = $typed.VIEW;
var ARRAY_BUFFER = 'ArrayBuffer';

$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), { ArrayBuffer: $ArrayBuffer });

$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
  // 24.1.3.1 ArrayBuffer.isView(arg)
  isView: function isView(it) {
    return $isView && $isView(it) || isObject(it) && VIEW in it;
  }
});

$export($export.P + $export.U + $export.F * __webpack_require__(5)(function () {
  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
}), ARRAY_BUFFER, {
  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
  slice: function slice(start, end) {
    if ($slice !== undefined && end === undefined) return $slice.call(anObject(this), start); // FF fix
    var len = anObject(this).byteLength;
    var first = toAbsoluteIndex(start, len);
    var fin = toAbsoluteIndex(end === undefined ? len : end, len);
    var result = new (speciesConstructor(this, $ArrayBuffer))(toLength(fin - first));
    var viewS = new $DataView(this);
    var viewT = new $DataView(result);
    var index = 0;
    while (first < fin) {
      viewT.setUint8(index++, viewS.getUint8(first++));
    } return result;
  }
});

__webpack_require__(61)(ARRAY_BUFFER);


/***/ }),
/* 616 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(0);
$export($export.G + $export.W + $export.F * !__webpack_require__(103).ABV, {
  DataView: __webpack_require__(150).DataView
});


/***/ }),
/* 617 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(46)('Int8', 1, function (init) {
  return function Int8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),
/* 618 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(46)('Uint8', 1, function (init) {
  return function Uint8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),
/* 619 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(46)('Uint8', 1, function (init) {
  return function Uint8ClampedArray(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
}, true);


/***/ }),
/* 620 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(46)('Int16', 2, function (init) {
  return function Int16Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),
/* 621 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(46)('Uint16', 2, function (init) {
  return function Uint16Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),
/* 622 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(46)('Int32', 4, function (init) {
  return function Int32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),
/* 623 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(46)('Uint32', 4, function (init) {
  return function Uint32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),
/* 624 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(46)('Float32', 4, function (init) {
  return function Float32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),
/* 625 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(46)('Float64', 8, function (init) {
  return function Float64Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),
/* 626 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
var $export = __webpack_require__(0);
var aFunction = __webpack_require__(15);
var anObject = __webpack_require__(2);
var rApply = (__webpack_require__(3).Reflect || {}).apply;
var fApply = Function.apply;
// MS Edge argumentsList argument is optional
$export($export.S + $export.F * !__webpack_require__(5)(function () {
  rApply(function () { /* empty */ });
}), 'Reflect', {
  apply: function apply(target, thisArgument, argumentsList) {
    var T = aFunction(target);
    var L = anObject(argumentsList);
    return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);
  }
});


/***/ }),
/* 627 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
var $export = __webpack_require__(0);
var create = __webpack_require__(45);
var aFunction = __webpack_require__(15);
var anObject = __webpack_require__(2);
var isObject = __webpack_require__(4);
var fails = __webpack_require__(5);
var bind = __webpack_require__(205);
var rConstruct = (__webpack_require__(3).Reflect || {}).construct;

// MS Edge supports only 2 arguments and argumentsList argument is optional
// FF Nightly sets third argument as `new.target`, but does not create `this` from it
var NEW_TARGET_BUG = fails(function () {
  function F() { /* empty */ }
  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);
});
var ARGS_BUG = !fails(function () {
  rConstruct(function () { /* empty */ });
});

$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
  construct: function construct(Target, args /* , newTarget */) {
    aFunction(Target);
    anObject(args);
    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);
    if (Target == newTarget) {
      // w/o altered newTarget, optimization for 0-4 arguments
      switch (args.length) {
        case 0: return new Target();
        case 1: return new Target(args[0]);
        case 2: return new Target(args[0], args[1]);
        case 3: return new Target(args[0], args[1], args[2]);
        case 4: return new Target(args[0], args[1], args[2], args[3]);
      }
      // w/o altered newTarget, lot of arguments case
      var $args = [null];
      $args.push.apply($args, args);
      return new (bind.apply(Target, $args))();
    }
    // with altered newTarget, not support built-in constructors
    var proto = newTarget.prototype;
    var instance = create(isObject(proto) ? proto : Object.prototype);
    var result = Function.apply.call(Target, instance, args);
    return isObject(result) ? result : instance;
  }
});


/***/ }),
/* 628 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
var dP = __webpack_require__(8);
var $export = __webpack_require__(0);
var anObject = __webpack_require__(2);
var toPrimitive = __webpack_require__(37);

// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
$export($export.S + $export.F * __webpack_require__(5)(function () {
  // eslint-disable-next-line no-undef
  Reflect.defineProperty(dP.f({}, 1, { value: 1 }), 1, { value: 2 });
}), 'Reflect', {
  defineProperty: function defineProperty(target, propertyKey, attributes) {
    anObject(target);
    propertyKey = toPrimitive(propertyKey, true);
    anObject(attributes);
    try {
      dP.f(target, propertyKey, attributes);
      return true;
    } catch (e) {
      return false;
    }
  }
});


/***/ }),
/* 629 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.4 Reflect.deleteProperty(target, propertyKey)
var $export = __webpack_require__(0);
var gOPD = __webpack_require__(25).f;
var anObject = __webpack_require__(2);

$export($export.S, 'Reflect', {
  deleteProperty: function deleteProperty(target, propertyKey) {
    var desc = gOPD(anObject(target), propertyKey);
    return desc && !desc.configurable ? false : delete target[propertyKey];
  }
});


/***/ }),
/* 630 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 26.1.5 Reflect.enumerate(target)
var $export = __webpack_require__(0);
var anObject = __webpack_require__(2);
var Enumerate = function (iterated) {
  this._t = anObject(iterated); // target
  this._i = 0;                  // next index
  var keys = this._k = [];      // keys
  var key;
  for (key in iterated) keys.push(key);
};
__webpack_require__(95)(Enumerate, 'Object', function () {
  var that = this;
  var keys = that._k;
  var key;
  do {
    if (that._i >= keys.length) return { value: undefined, done: true };
  } while (!((key = keys[that._i++]) in that._t));
  return { value: key, done: false };
});

$export($export.S, 'Reflect', {
  enumerate: function enumerate(target) {
    return new Enumerate(target);
  }
});


/***/ }),
/* 631 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.6 Reflect.get(target, propertyKey [, receiver])
var gOPD = __webpack_require__(25);
var getPrototypeOf = __webpack_require__(26);
var has = __webpack_require__(22);
var $export = __webpack_require__(0);
var isObject = __webpack_require__(4);
var anObject = __webpack_require__(2);

function get(target, propertyKey /* , receiver */) {
  var receiver = arguments.length < 3 ? target : arguments[2];
  var desc, proto;
  if (anObject(target) === receiver) return target[propertyKey];
  if (desc = gOPD.f(target, propertyKey)) return has(desc, 'value')
    ? desc.value
    : desc.get !== undefined
      ? desc.get.call(receiver)
      : undefined;
  if (isObject(proto = getPrototypeOf(target))) return get(proto, propertyKey, receiver);
}

$export($export.S, 'Reflect', { get: get });


/***/ }),
/* 632 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
var gOPD = __webpack_require__(25);
var $export = __webpack_require__(0);
var anObject = __webpack_require__(2);

$export($export.S, 'Reflect', {
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {
    return gOPD.f(anObject(target), propertyKey);
  }
});


/***/ }),
/* 633 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.8 Reflect.getPrototypeOf(target)
var $export = __webpack_require__(0);
var getProto = __webpack_require__(26);
var anObject = __webpack_require__(2);

$export($export.S, 'Reflect', {
  getPrototypeOf: function getPrototypeOf(target) {
    return getProto(anObject(target));
  }
});


/***/ }),
/* 634 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.9 Reflect.has(target, propertyKey)
var $export = __webpack_require__(0);

$export($export.S, 'Reflect', {
  has: function has(target, propertyKey) {
    return propertyKey in target;
  }
});


/***/ }),
/* 635 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.10 Reflect.isExtensible(target)
var $export = __webpack_require__(0);
var anObject = __webpack_require__(2);
var $isExtensible = Object.isExtensible;

$export($export.S, 'Reflect', {
  isExtensible: function isExtensible(target) {
    anObject(target);
    return $isExtensible ? $isExtensible(target) : true;
  }
});


/***/ }),
/* 636 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.11 Reflect.ownKeys(target)
var $export = __webpack_require__(0);

$export($export.S, 'Reflect', { ownKeys: __webpack_require__(151) });


/***/ }),
/* 637 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.12 Reflect.preventExtensions(target)
var $export = __webpack_require__(0);
var anObject = __webpack_require__(2);
var $preventExtensions = Object.preventExtensions;

$export($export.S, 'Reflect', {
  preventExtensions: function preventExtensions(target) {
    anObject(target);
    try {
      if ($preventExtensions) $preventExtensions(target);
      return true;
    } catch (e) {
      return false;
    }
  }
});


/***/ }),
/* 638 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
var dP = __webpack_require__(8);
var gOPD = __webpack_require__(25);
var getPrototypeOf = __webpack_require__(26);
var has = __webpack_require__(22);
var $export = __webpack_require__(0);
var createDesc = __webpack_require__(50);
var anObject = __webpack_require__(2);
var isObject = __webpack_require__(4);

function set(target, propertyKey, V /* , receiver */) {
  var receiver = arguments.length < 4 ? target : arguments[3];
  var ownDesc = gOPD.f(anObject(target), propertyKey);
  var existingDescriptor, proto;
  if (!ownDesc) {
    if (isObject(proto = getPrototypeOf(target))) {
      return set(proto, propertyKey, V, receiver);
    }
    ownDesc = createDesc(0);
  }
  if (has(ownDesc, 'value')) {
    if (ownDesc.writable === false || !isObject(receiver)) return false;
    if (existingDescriptor = gOPD.f(receiver, propertyKey)) {
      if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;
      existingDescriptor.value = V;
      dP.f(receiver, propertyKey, existingDescriptor);
    } else dP.f(receiver, propertyKey, createDesc(0, V));
    return true;
  }
  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
}

$export($export.S, 'Reflect', { set: set });


/***/ }),
/* 639 */
/***/ (function(module, exports, __webpack_require__) {

// 26.1.14 Reflect.setPrototypeOf(target, proto)
var $export = __webpack_require__(0);
var setProto = __webpack_require__(131);

if (setProto) $export($export.S, 'Reflect', {
  setPrototypeOf: function setPrototypeOf(target, proto) {
    setProto.check(target, proto);
    try {
      setProto.set(target, proto);
      return true;
    } catch (e) {
      return false;
    }
  }
});


/***/ }),
/* 640 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/tc39/Array.prototype.includes
var $export = __webpack_require__(0);
var $includes = __webpack_require__(91)(true);

$export($export.P, 'Array', {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

__webpack_require__(53)('includes');


/***/ }),
/* 641 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatMap
var $export = __webpack_require__(0);
var flattenIntoArray = __webpack_require__(224);
var toObject = __webpack_require__(12);
var toLength = __webpack_require__(10);
var aFunction = __webpack_require__(15);
var arraySpeciesCreate = __webpack_require__(143);

$export($export.P, 'Array', {
  flatMap: function flatMap(callbackfn /* , thisArg */) {
    var O = toObject(this);
    var sourceLen, A;
    aFunction(callbackfn);
    sourceLen = toLength(O.length);
    A = arraySpeciesCreate(O, 0);
    flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments[1]);
    return A;
  }
});

__webpack_require__(53)('flatMap');


/***/ }),
/* 642 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatten
var $export = __webpack_require__(0);
var flattenIntoArray = __webpack_require__(224);
var toObject = __webpack_require__(12);
var toLength = __webpack_require__(10);
var toInteger = __webpack_require__(39);
var arraySpeciesCreate = __webpack_require__(143);

$export($export.P, 'Array', {
  flatten: function flatten(/* depthArg = 1 */) {
    var depthArg = arguments[0];
    var O = toObject(this);
    var sourceLen = toLength(O.length);
    var A = arraySpeciesCreate(O, 0);
    flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toInteger(depthArg));
    return A;
  }
});

__webpack_require__(53)('flatten');


/***/ }),
/* 643 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/mathiasbynens/String.prototype.at
var $export = __webpack_require__(0);
var $at = __webpack_require__(138)(true);

$export($export.P, 'String', {
  at: function at(pos) {
    return $at(this, pos);
  }
});


/***/ }),
/* 644 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/tc39/proposal-string-pad-start-end
var $export = __webpack_require__(0);
var $pad = __webpack_require__(225);
var userAgent = __webpack_require__(101);

// https://github.com/zloirock/core-js/issues/280
$export($export.P + $export.F * /Version\/10\.\d+(\.\d+)? Safari\//.test(userAgent), 'String', {
  padStart: function padStart(maxLength /* , fillString = ' ' */) {
    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
  }
});


/***/ }),
/* 645 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/tc39/proposal-string-pad-start-end
var $export = __webpack_require__(0);
var $pad = __webpack_require__(225);
var userAgent = __webpack_require__(101);

// https://github.com/zloirock/core-js/issues/280
$export($export.P + $export.F * /Version\/10\.\d+(\.\d+)? Safari\//.test(userAgent), 'String', {
  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {
    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
  }
});


/***/ }),
/* 646 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
__webpack_require__(70)('trimLeft', function ($trim) {
  return function trimLeft() {
    return $trim(this, 1);
  };
}, 'trimStart');


/***/ }),
/* 647 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
__webpack_require__(70)('trimRight', function ($trim) {
  return function trimRight() {
    return $trim(this, 2);
  };
}, 'trimEnd');


/***/ }),
/* 648 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://tc39.github.io/String.prototype.matchAll/
var $export = __webpack_require__(0);
var defined = __webpack_require__(38);
var toLength = __webpack_require__(10);
var isRegExp = __webpack_require__(96);
var getFlags = __webpack_require__(98);
var RegExpProto = RegExp.prototype;

var $RegExpStringIterator = function (regexp, string) {
  this._r = regexp;
  this._s = string;
};

__webpack_require__(95)($RegExpStringIterator, 'RegExp String', function next() {
  var match = this._r.exec(this._s);
  return { value: match, done: match === null };
});

$export($export.P, 'String', {
  matchAll: function matchAll(regexp) {
    defined(this);
    if (!isRegExp(regexp)) throw TypeError(regexp + ' is not a regexp!');
    var S = String(this);
    var flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp);
    var rx = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);
    rx.lastIndex = toLength(regexp.lastIndex);
    return new $RegExpStringIterator(rx, S);
  }
});


/***/ }),
/* 649 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(126)('asyncIterator');


/***/ }),
/* 650 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(126)('observable');


/***/ }),
/* 651 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-object-getownpropertydescriptors
var $export = __webpack_require__(0);
var ownKeys = __webpack_require__(151);
var toIObject = __webpack_require__(19);
var gOPD = __webpack_require__(25);
var createProperty = __webpack_require__(142);

$export($export.S, 'Object', {
  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
    var O = toIObject(object);
    var getDesc = gOPD.f;
    var keys = ownKeys(O);
    var result = {};
    var i = 0;
    var key, desc;
    while (keys.length > i) {
      desc = getDesc(O, key = keys[i++]);
      if (desc !== undefined) createProperty(result, key, desc);
    }
    return result;
  }
});


/***/ }),
/* 652 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-object-values-entries
var $export = __webpack_require__(0);
var $values = __webpack_require__(226)(false);

$export($export.S, 'Object', {
  values: function values(it) {
    return $values(it);
  }
});


/***/ }),
/* 653 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-object-values-entries
var $export = __webpack_require__(0);
var $entries = __webpack_require__(226)(true);

$export($export.S, 'Object', {
  entries: function entries(it) {
    return $entries(it);
  }
});


/***/ }),
/* 654 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(0);
var toObject = __webpack_require__(12);
var aFunction = __webpack_require__(15);
var $defineProperty = __webpack_require__(8);

// B.2.2.2 Object.prototype.__defineGetter__(P, getter)
__webpack_require__(9) && $export($export.P + __webpack_require__(104), 'Object', {
  __defineGetter__: function __defineGetter__(P, getter) {
    $defineProperty.f(toObject(this), P, { get: aFunction(getter), enumerable: true, configurable: true });
  }
});


/***/ }),
/* 655 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(0);
var toObject = __webpack_require__(12);
var aFunction = __webpack_require__(15);
var $defineProperty = __webpack_require__(8);

// B.2.2.3 Object.prototype.__defineSetter__(P, setter)
__webpack_require__(9) && $export($export.P + __webpack_require__(104), 'Object', {
  __defineSetter__: function __defineSetter__(P, setter) {
    $defineProperty.f(toObject(this), P, { set: aFunction(setter), enumerable: true, configurable: true });
  }
});


/***/ }),
/* 656 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(0);
var toObject = __webpack_require__(12);
var toPrimitive = __webpack_require__(37);
var getPrototypeOf = __webpack_require__(26);
var getOwnPropertyDescriptor = __webpack_require__(25).f;

// B.2.2.4 Object.prototype.__lookupGetter__(P)
__webpack_require__(9) && $export($export.P + __webpack_require__(104), 'Object', {
  __lookupGetter__: function __lookupGetter__(P) {
    var O = toObject(this);
    var K = toPrimitive(P, true);
    var D;
    do {
      if (D = getOwnPropertyDescriptor(O, K)) return D.get;
    } while (O = getPrototypeOf(O));
  }
});


/***/ }),
/* 657 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(0);
var toObject = __webpack_require__(12);
var toPrimitive = __webpack_require__(37);
var getPrototypeOf = __webpack_require__(26);
var getOwnPropertyDescriptor = __webpack_require__(25).f;

// B.2.2.5 Object.prototype.__lookupSetter__(P)
__webpack_require__(9) && $export($export.P + __webpack_require__(104), 'Object', {
  __lookupSetter__: function __lookupSetter__(P) {
    var O = toObject(this);
    var K = toPrimitive(P, true);
    var D;
    do {
      if (D = getOwnPropertyDescriptor(O, K)) return D.set;
    } while (O = getPrototypeOf(O));
  }
});


/***/ }),
/* 658 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/DavidBruant/Map-Set.prototype.toJSON
var $export = __webpack_require__(0);

$export($export.P + $export.R, 'Map', { toJSON: __webpack_require__(227)('Map') });


/***/ }),
/* 659 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/DavidBruant/Map-Set.prototype.toJSON
var $export = __webpack_require__(0);

$export($export.P + $export.R, 'Set', { toJSON: __webpack_require__(227)('Set') });


/***/ }),
/* 660 */
/***/ (function(module, exports, __webpack_require__) {

// https://tc39.github.io/proposal-setmap-offrom/#sec-map.of
__webpack_require__(105)('Map');


/***/ }),
/* 661 */
/***/ (function(module, exports, __webpack_require__) {

// https://tc39.github.io/proposal-setmap-offrom/#sec-set.of
__webpack_require__(105)('Set');


/***/ }),
/* 662 */
/***/ (function(module, exports, __webpack_require__) {

// https://tc39.github.io/proposal-setmap-offrom/#sec-weakmap.of
__webpack_require__(105)('WeakMap');


/***/ }),
/* 663 */
/***/ (function(module, exports, __webpack_require__) {

// https://tc39.github.io/proposal-setmap-offrom/#sec-weakset.of
__webpack_require__(105)('WeakSet');


/***/ }),
/* 664 */
/***/ (function(module, exports, __webpack_require__) {

// https://tc39.github.io/proposal-setmap-offrom/#sec-map.from
__webpack_require__(106)('Map');


/***/ }),
/* 665 */
/***/ (function(module, exports, __webpack_require__) {

// https://tc39.github.io/proposal-setmap-offrom/#sec-set.from
__webpack_require__(106)('Set');


/***/ }),
/* 666 */
/***/ (function(module, exports, __webpack_require__) {

// https://tc39.github.io/proposal-setmap-offrom/#sec-weakmap.from
__webpack_require__(106)('WeakMap');


/***/ }),
/* 667 */
/***/ (function(module, exports, __webpack_require__) {

// https://tc39.github.io/proposal-setmap-offrom/#sec-weakset.from
__webpack_require__(106)('WeakSet');


/***/ }),
/* 668 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-global
var $export = __webpack_require__(0);

$export($export.G, { global: __webpack_require__(3) });


/***/ }),
/* 669 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-global
var $export = __webpack_require__(0);

$export($export.S, 'System', { global: __webpack_require__(3) });


/***/ }),
/* 670 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/ljharb/proposal-is-error
var $export = __webpack_require__(0);
var cof = __webpack_require__(34);

$export($export.S, 'Error', {
  isError: function isError(it) {
    return cof(it) === 'Error';
  }
});


/***/ }),
/* 671 */
/***/ (function(module, exports, __webpack_require__) {

// https://rwaldron.github.io/proposal-math-extensions/
var $export = __webpack_require__(0);

$export($export.S, 'Math', {
  clamp: function clamp(x, lower, upper) {
    return Math.min(upper, Math.max(lower, x));
  }
});


/***/ }),
/* 672 */
/***/ (function(module, exports, __webpack_require__) {

// https://rwaldron.github.io/proposal-math-extensions/
var $export = __webpack_require__(0);

$export($export.S, 'Math', { DEG_PER_RAD: Math.PI / 180 });


/***/ }),
/* 673 */
/***/ (function(module, exports, __webpack_require__) {

// https://rwaldron.github.io/proposal-math-extensions/
var $export = __webpack_require__(0);
var RAD_PER_DEG = 180 / Math.PI;

$export($export.S, 'Math', {
  degrees: function degrees(radians) {
    return radians * RAD_PER_DEG;
  }
});


/***/ }),
/* 674 */
/***/ (function(module, exports, __webpack_require__) {

// https://rwaldron.github.io/proposal-math-extensions/
var $export = __webpack_require__(0);
var scale = __webpack_require__(229);
var fround = __webpack_require__(211);

$export($export.S, 'Math', {
  fscale: function fscale(x, inLow, inHigh, outLow, outHigh) {
    return fround(scale(x, inLow, inHigh, outLow, outHigh));
  }
});


/***/ }),
/* 675 */
/***/ (function(module, exports, __webpack_require__) {

// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
var $export = __webpack_require__(0);

$export($export.S, 'Math', {
  iaddh: function iaddh(x0, x1, y0, y1) {
    var $x0 = x0 >>> 0;
    var $x1 = x1 >>> 0;
    var $y0 = y0 >>> 0;
    return $x1 + (y1 >>> 0) + (($x0 & $y0 | ($x0 | $y0) & ~($x0 + $y0 >>> 0)) >>> 31) | 0;
  }
});


/***/ }),
/* 676 */
/***/ (function(module, exports, __webpack_require__) {

// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
var $export = __webpack_require__(0);

$export($export.S, 'Math', {
  isubh: function isubh(x0, x1, y0, y1) {
    var $x0 = x0 >>> 0;
    var $x1 = x1 >>> 0;
    var $y0 = y0 >>> 0;
    return $x1 - (y1 >>> 0) - ((~$x0 & $y0 | ~($x0 ^ $y0) & $x0 - $y0 >>> 0) >>> 31) | 0;
  }
});


/***/ }),
/* 677 */
/***/ (function(module, exports, __webpack_require__) {

// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
var $export = __webpack_require__(0);

$export($export.S, 'Math', {
  imulh: function imulh(u, v) {
    var UINT16 = 0xffff;
    var $u = +u;
    var $v = +v;
    var u0 = $u & UINT16;
    var v0 = $v & UINT16;
    var u1 = $u >> 16;
    var v1 = $v >> 16;
    var t = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
    return u1 * v1 + (t >> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >> 16);
  }
});


/***/ }),
/* 678 */
/***/ (function(module, exports, __webpack_require__) {

// https://rwaldron.github.io/proposal-math-extensions/
var $export = __webpack_require__(0);

$export($export.S, 'Math', { RAD_PER_DEG: 180 / Math.PI });


/***/ }),
/* 679 */
/***/ (function(module, exports, __webpack_require__) {

// https://rwaldron.github.io/proposal-math-extensions/
var $export = __webpack_require__(0);
var DEG_PER_RAD = Math.PI / 180;

$export($export.S, 'Math', {
  radians: function radians(degrees) {
    return degrees * DEG_PER_RAD;
  }
});


/***/ }),
/* 680 */
/***/ (function(module, exports, __webpack_require__) {

// https://rwaldron.github.io/proposal-math-extensions/
var $export = __webpack_require__(0);

$export($export.S, 'Math', { scale: __webpack_require__(229) });


/***/ }),
/* 681 */
/***/ (function(module, exports, __webpack_require__) {

// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
var $export = __webpack_require__(0);

$export($export.S, 'Math', {
  umulh: function umulh(u, v) {
    var UINT16 = 0xffff;
    var $u = +u;
    var $v = +v;
    var u0 = $u & UINT16;
    var v0 = $v & UINT16;
    var u1 = $u >>> 16;
    var v1 = $v >>> 16;
    var t = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
    return u1 * v1 + (t >>> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >>> 16);
  }
});


/***/ }),
/* 682 */
/***/ (function(module, exports, __webpack_require__) {

// http://jfbastien.github.io/papers/Math.signbit.html
var $export = __webpack_require__(0);

$export($export.S, 'Math', { signbit: function signbit(x) {
  // eslint-disable-next-line no-self-compare
  return (x = +x) != x ? x : x == 0 ? 1 / x == Infinity : x > 0;
} });


/***/ }),
/* 683 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// https://github.com/tc39/proposal-promise-finally

var $export = __webpack_require__(0);
var core = __webpack_require__(18);
var global = __webpack_require__(3);
var speciesConstructor = __webpack_require__(100);
var promiseResolve = __webpack_require__(217);

$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {
  var C = speciesConstructor(this, core.Promise || global.Promise);
  var isFunction = typeof onFinally == 'function';
  return this.then(
    isFunction ? function (x) {
      return promiseResolve(C, onFinally()).then(function () { return x; });
    } : onFinally,
    isFunction ? function (e) {
      return promiseResolve(C, onFinally()).then(function () { throw e; });
    } : onFinally
  );
} });


/***/ }),
/* 684 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/tc39/proposal-promise-try
var $export = __webpack_require__(0);
var newPromiseCapability = __webpack_require__(149);
var perform = __webpack_require__(216);

$export($export.S, 'Promise', { 'try': function (callbackfn) {
  var promiseCapability = newPromiseCapability.f(this);
  var result = perform(callbackfn);
  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
  return promiseCapability.promise;
} });


/***/ }),
/* 685 */
/***/ (function(module, exports, __webpack_require__) {

var metadata = __webpack_require__(47);
var anObject = __webpack_require__(2);
var toMetaKey = metadata.key;
var ordinaryDefineOwnMetadata = metadata.set;

metadata.exp({ defineMetadata: function defineMetadata(metadataKey, metadataValue, target, targetKey) {
  ordinaryDefineOwnMetadata(metadataKey, metadataValue, anObject(target), toMetaKey(targetKey));
} });


/***/ }),
/* 686 */
/***/ (function(module, exports, __webpack_require__) {

var metadata = __webpack_require__(47);
var anObject = __webpack_require__(2);
var toMetaKey = metadata.key;
var getOrCreateMetadataMap = metadata.map;
var store = metadata.store;

metadata.exp({ deleteMetadata: function deleteMetadata(metadataKey, target /* , targetKey */) {
  var targetKey = arguments.length < 3 ? undefined : toMetaKey(arguments[2]);
  var metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);
  if (metadataMap === undefined || !metadataMap['delete'](metadataKey)) return false;
  if (metadataMap.size) return true;
  var targetMetadata = store.get(target);
  targetMetadata['delete'](targetKey);
  return !!targetMetadata.size || store['delete'](target);
} });


/***/ }),
/* 687 */
/***/ (function(module, exports, __webpack_require__) {

var metadata = __webpack_require__(47);
var anObject = __webpack_require__(2);
var getPrototypeOf = __webpack_require__(26);
var ordinaryHasOwnMetadata = metadata.has;
var ordinaryGetOwnMetadata = metadata.get;
var toMetaKey = metadata.key;

var ordinaryGetMetadata = function (MetadataKey, O, P) {
  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
  if (hasOwn) return ordinaryGetOwnMetadata(MetadataKey, O, P);
  var parent = getPrototypeOf(O);
  return parent !== null ? ordinaryGetMetadata(MetadataKey, parent, P) : undefined;
};

metadata.exp({ getMetadata: function getMetadata(metadataKey, target /* , targetKey */) {
  return ordinaryGetMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
} });


/***/ }),
/* 688 */
/***/ (function(module, exports, __webpack_require__) {

var Set = __webpack_require__(220);
var from = __webpack_require__(228);
var metadata = __webpack_require__(47);
var anObject = __webpack_require__(2);
var getPrototypeOf = __webpack_require__(26);
var ordinaryOwnMetadataKeys = metadata.keys;
var toMetaKey = metadata.key;

var ordinaryMetadataKeys = function (O, P) {
  var oKeys = ordinaryOwnMetadataKeys(O, P);
  var parent = getPrototypeOf(O);
  if (parent === null) return oKeys;
  var pKeys = ordinaryMetadataKeys(parent, P);
  return pKeys.length ? oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys : oKeys;
};

metadata.exp({ getMetadataKeys: function getMetadataKeys(target /* , targetKey */) {
  return ordinaryMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
} });


/***/ }),
/* 689 */
/***/ (function(module, exports, __webpack_require__) {

var metadata = __webpack_require__(47);
var anObject = __webpack_require__(2);
var ordinaryGetOwnMetadata = metadata.get;
var toMetaKey = metadata.key;

metadata.exp({ getOwnMetadata: function getOwnMetadata(metadataKey, target /* , targetKey */) {
  return ordinaryGetOwnMetadata(metadataKey, anObject(target)
    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
} });


/***/ }),
/* 690 */
/***/ (function(module, exports, __webpack_require__) {

var metadata = __webpack_require__(47);
var anObject = __webpack_require__(2);
var ordinaryOwnMetadataKeys = metadata.keys;
var toMetaKey = metadata.key;

metadata.exp({ getOwnMetadataKeys: function getOwnMetadataKeys(target /* , targetKey */) {
  return ordinaryOwnMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
} });


/***/ }),
/* 691 */
/***/ (function(module, exports, __webpack_require__) {

var metadata = __webpack_require__(47);
var anObject = __webpack_require__(2);
var getPrototypeOf = __webpack_require__(26);
var ordinaryHasOwnMetadata = metadata.has;
var toMetaKey = metadata.key;

var ordinaryHasMetadata = function (MetadataKey, O, P) {
  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
  if (hasOwn) return true;
  var parent = getPrototypeOf(O);
  return parent !== null ? ordinaryHasMetadata(MetadataKey, parent, P) : false;
};

metadata.exp({ hasMetadata: function hasMetadata(metadataKey, target /* , targetKey */) {
  return ordinaryHasMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
} });


/***/ }),
/* 692 */
/***/ (function(module, exports, __webpack_require__) {

var metadata = __webpack_require__(47);
var anObject = __webpack_require__(2);
var ordinaryHasOwnMetadata = metadata.has;
var toMetaKey = metadata.key;

metadata.exp({ hasOwnMetadata: function hasOwnMetadata(metadataKey, target /* , targetKey */) {
  return ordinaryHasOwnMetadata(metadataKey, anObject(target)
    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
} });


/***/ }),
/* 693 */
/***/ (function(module, exports, __webpack_require__) {

var $metadata = __webpack_require__(47);
var anObject = __webpack_require__(2);
var aFunction = __webpack_require__(15);
var toMetaKey = $metadata.key;
var ordinaryDefineOwnMetadata = $metadata.set;

$metadata.exp({ metadata: function metadata(metadataKey, metadataValue) {
  return function decorator(target, targetKey) {
    ordinaryDefineOwnMetadata(
      metadataKey, metadataValue,
      (targetKey !== undefined ? anObject : aFunction)(target),
      toMetaKey(targetKey)
    );
  };
} });


/***/ }),
/* 694 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask
var $export = __webpack_require__(0);
var microtask = __webpack_require__(148)();
var process = __webpack_require__(3).process;
var isNode = __webpack_require__(34)(process) == 'process';

$export($export.G, {
  asap: function asap(fn) {
    var domain = isNode && process.domain;
    microtask(domain ? domain.bind(fn) : fn);
  }
});


/***/ }),
/* 695 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/zenparsing/es-observable
var $export = __webpack_require__(0);
var global = __webpack_require__(3);
var core = __webpack_require__(18);
var microtask = __webpack_require__(148)();
var OBSERVABLE = __webpack_require__(6)('observable');
var aFunction = __webpack_require__(15);
var anObject = __webpack_require__(2);
var anInstance = __webpack_require__(62);
var redefineAll = __webpack_require__(63);
var hide = __webpack_require__(23);
var forOf = __webpack_require__(54);
var RETURN = forOf.RETURN;

var getMethod = function (fn) {
  return fn == null ? undefined : aFunction(fn);
};

var cleanupSubscription = function (subscription) {
  var cleanup = subscription._c;
  if (cleanup) {
    subscription._c = undefined;
    cleanup();
  }
};

var subscriptionClosed = function (subscription) {
  return subscription._o === undefined;
};

var closeSubscription = function (subscription) {
  if (!subscriptionClosed(subscription)) {
    subscription._o = undefined;
    cleanupSubscription(subscription);
  }
};

var Subscription = function (observer, subscriber) {
  anObject(observer);
  this._c = undefined;
  this._o = observer;
  observer = new SubscriptionObserver(this);
  try {
    var cleanup = subscriber(observer);
    var subscription = cleanup;
    if (cleanup != null) {
      if (typeof cleanup.unsubscribe === 'function') cleanup = function () { subscription.unsubscribe(); };
      else aFunction(cleanup);
      this._c = cleanup;
    }
  } catch (e) {
    observer.error(e);
    return;
  } if (subscriptionClosed(this)) cleanupSubscription(this);
};

Subscription.prototype = redefineAll({}, {
  unsubscribe: function unsubscribe() { closeSubscription(this); }
});

var SubscriptionObserver = function (subscription) {
  this._s = subscription;
};

SubscriptionObserver.prototype = redefineAll({}, {
  next: function next(value) {
    var subscription = this._s;
    if (!subscriptionClosed(subscription)) {
      var observer = subscription._o;
      try {
        var m = getMethod(observer.next);
        if (m) return m.call(observer, value);
      } catch (e) {
        try {
          closeSubscription(subscription);
        } finally {
          throw e;
        }
      }
    }
  },
  error: function error(value) {
    var subscription = this._s;
    if (subscriptionClosed(subscription)) throw value;
    var observer = subscription._o;
    subscription._o = undefined;
    try {
      var m = getMethod(observer.error);
      if (!m) throw value;
      value = m.call(observer, value);
    } catch (e) {
      try {
        cleanupSubscription(subscription);
      } finally {
        throw e;
      }
    } cleanupSubscription(subscription);
    return value;
  },
  complete: function complete(value) {
    var subscription = this._s;
    if (!subscriptionClosed(subscription)) {
      var observer = subscription._o;
      subscription._o = undefined;
      try {
        var m = getMethod(observer.complete);
        value = m ? m.call(observer, value) : undefined;
      } catch (e) {
        try {
          cleanupSubscription(subscription);
        } finally {
          throw e;
        }
      } cleanupSubscription(subscription);
      return value;
    }
  }
});

var $Observable = function Observable(subscriber) {
  anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);
};

redefineAll($Observable.prototype, {
  subscribe: function subscribe(observer) {
    return new Subscription(observer, this._f);
  },
  forEach: function forEach(fn) {
    var that = this;
    return new (core.Promise || global.Promise)(function (resolve, reject) {
      aFunction(fn);
      var subscription = that.subscribe({
        next: function (value) {
          try {
            return fn(value);
          } catch (e) {
            reject(e);
            subscription.unsubscribe();
          }
        },
        error: reject,
        complete: resolve
      });
    });
  }
});

redefineAll($Observable, {
  from: function from(x) {
    var C = typeof this === 'function' ? this : $Observable;
    var method = getMethod(anObject(x)[OBSERVABLE]);
    if (method) {
      var observable = anObject(method.call(x));
      return observable.constructor === C ? observable : new C(function (observer) {
        return observable.subscribe(observer);
      });
    }
    return new C(function (observer) {
      var done = false;
      microtask(function () {
        if (!done) {
          try {
            if (forOf(x, false, function (it) {
              observer.next(it);
              if (done) return RETURN;
            }) === RETURN) return;
          } catch (e) {
            if (done) throw e;
            observer.error(e);
            return;
          } observer.complete();
        }
      });
      return function () { done = true; };
    });
  },
  of: function of() {
    for (var i = 0, l = arguments.length, items = new Array(l); i < l;) items[i] = arguments[i++];
    return new (typeof this === 'function' ? this : $Observable)(function (observer) {
      var done = false;
      microtask(function () {
        if (!done) {
          for (var j = 0; j < items.length; ++j) {
            observer.next(items[j]);
            if (done) return;
          } observer.complete();
        }
      });
      return function () { done = true; };
    });
  }
});

hide($Observable.prototype, OBSERVABLE, function () { return this; });

$export($export.G, { Observable: $Observable });

__webpack_require__(61)('Observable');


/***/ }),
/* 696 */
/***/ (function(module, exports, __webpack_require__) {

// ie9- setTimeout & setInterval additional parameters fix
var global = __webpack_require__(3);
var $export = __webpack_require__(0);
var userAgent = __webpack_require__(101);
var slice = [].slice;
var MSIE = /MSIE .\./.test(userAgent); // <- dirty ie9- check
var wrap = function (set) {
  return function (fn, time /* , ...args */) {
    var boundArgs = arguments.length > 2;
    var args = boundArgs ? slice.call(arguments, 2) : false;
    return set(boundArgs ? function () {
      // eslint-disable-next-line no-new-func
      (typeof fn == 'function' ? fn : Function(fn)).apply(this, args);
    } : fn, time);
  };
};
$export($export.G + $export.B + $export.F * MSIE, {
  setTimeout: wrap(global.setTimeout),
  setInterval: wrap(global.setInterval)
});


/***/ }),
/* 697 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(0);
var $task = __webpack_require__(147);
$export($export.G + $export.B, {
  setImmediate: $task.set,
  clearImmediate: $task.clear
});


/***/ }),
/* 698 */
/***/ (function(module, exports, __webpack_require__) {

var $iterators = __webpack_require__(145);
var getKeys = __webpack_require__(44);
var redefine = __webpack_require__(24);
var global = __webpack_require__(3);
var hide = __webpack_require__(23);
var Iterators = __webpack_require__(60);
var wks = __webpack_require__(6);
var ITERATOR = wks('iterator');
var TO_STRING_TAG = wks('toStringTag');
var ArrayValues = Iterators.Array;

var DOMIterables = {
  CSSRuleList: true, // TODO: Not spec compliant, should be false.
  CSSStyleDeclaration: false,
  CSSValueList: false,
  ClientRectList: false,
  DOMRectList: false,
  DOMStringList: false,
  DOMTokenList: true,
  DataTransferItemList: false,
  FileList: false,
  HTMLAllCollection: false,
  HTMLCollection: false,
  HTMLFormElement: false,
  HTMLSelectElement: false,
  MediaList: true, // TODO: Not spec compliant, should be false.
  MimeTypeArray: false,
  NamedNodeMap: false,
  NodeList: true,
  PaintRequestList: false,
  Plugin: false,
  PluginArray: false,
  SVGLengthList: false,
  SVGNumberList: false,
  SVGPathSegList: false,
  SVGPointList: false,
  SVGStringList: false,
  SVGTransformList: false,
  SourceBufferList: false,
  StyleSheetList: true, // TODO: Not spec compliant, should be false.
  TextTrackCueList: false,
  TextTrackList: false,
  TouchList: false
};

for (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {
  var NAME = collections[i];
  var explicit = DOMIterables[NAME];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  var key;
  if (proto) {
    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
    Iterators[NAME] = ArrayValues;
    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);
  }
}


/***/ }),
/* 699 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ctx = __webpack_require__(31);
var $export = __webpack_require__(0);
var createDesc = __webpack_require__(50);
var assign = __webpack_require__(130);
var create = __webpack_require__(45);
var getPrototypeOf = __webpack_require__(26);
var getKeys = __webpack_require__(44);
var dP = __webpack_require__(8);
var keyOf = __webpack_require__(700);
var aFunction = __webpack_require__(15);
var forOf = __webpack_require__(54);
var isIterable = __webpack_require__(230);
var $iterCreate = __webpack_require__(95);
var step = __webpack_require__(146);
var isObject = __webpack_require__(4);
var toIObject = __webpack_require__(19);
var DESCRIPTORS = __webpack_require__(9);
var has = __webpack_require__(22);

// 0 -> Dict.forEach
// 1 -> Dict.map
// 2 -> Dict.filter
// 3 -> Dict.some
// 4 -> Dict.every
// 5 -> Dict.find
// 6 -> Dict.findKey
// 7 -> Dict.mapPairs
var createDictMethod = function (TYPE) {
  var IS_MAP = TYPE == 1;
  var IS_EVERY = TYPE == 4;
  return function (object, callbackfn, that /* = undefined */) {
    var f = ctx(callbackfn, that, 3);
    var O = toIObject(object);
    var result = IS_MAP || TYPE == 7 || TYPE == 2
          ? new (typeof this == 'function' ? this : Dict)() : undefined;
    var key, val, res;
    for (key in O) if (has(O, key)) {
      val = O[key];
      res = f(val, key, object);
      if (TYPE) {
        if (IS_MAP) result[key] = res;          // map
        else if (res) switch (TYPE) {
          case 2: result[key] = val; break;     // filter
          case 3: return true;                  // some
          case 5: return val;                   // find
          case 6: return key;                   // findKey
          case 7: result[res[0]] = res[1];      // mapPairs
        } else if (IS_EVERY) return false;      // every
      }
    }
    return TYPE == 3 || IS_EVERY ? IS_EVERY : result;
  };
};
var findKey = createDictMethod(6);

var createDictIter = function (kind) {
  return function (it) {
    return new DictIterator(it, kind);
  };
};
var DictIterator = function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._a = getKeys(iterated);   // keys
  this._i = 0;                   // next index
  this._k = kind;                // kind
};
$iterCreate(DictIterator, 'Dict', function () {
  var that = this;
  var O = that._t;
  var keys = that._a;
  var kind = that._k;
  var key;
  do {
    if (that._i >= keys.length) {
      that._t = undefined;
      return step(1);
    }
  } while (!has(O, key = keys[that._i++]));
  if (kind == 'keys') return step(0, key);
  if (kind == 'values') return step(0, O[key]);
  return step(0, [key, O[key]]);
});

function Dict(iterable) {
  var dict = create(null);
  if (iterable != undefined) {
    if (isIterable(iterable)) {
      forOf(iterable, true, function (key, value) {
        dict[key] = value;
      });
    } else assign(dict, iterable);
  }
  return dict;
}
Dict.prototype = null;

function reduce(object, mapfn, init) {
  aFunction(mapfn);
  var O = toIObject(object);
  var keys = getKeys(O);
  var length = keys.length;
  var i = 0;
  var memo, key;
  if (arguments.length < 3) {
    if (!length) throw TypeError('Reduce of empty object with no initial value');
    memo = O[keys[i++]];
  } else memo = Object(init);
  while (length > i) if (has(O, key = keys[i++])) {
    memo = mapfn(memo, O[key], key, object);
  }
  return memo;
}

function includes(object, el) {
  // eslint-disable-next-line no-self-compare
  return (el == el ? keyOf(object, el) : findKey(object, function (it) {
    // eslint-disable-next-line no-self-compare
    return it != it;
  })) !== undefined;
}

function get(object, key) {
  if (has(object, key)) return object[key];
}
function set(object, key, value) {
  if (DESCRIPTORS && key in Object) dP.f(object, key, createDesc(0, value));
  else object[key] = value;
  return object;
}

function isDict(it) {
  return isObject(it) && getPrototypeOf(it) === Dict.prototype;
}

$export($export.G + $export.F, { Dict: Dict });

$export($export.S, 'Dict', {
  keys: createDictIter('keys'),
  values: createDictIter('values'),
  entries: createDictIter('entries'),
  forEach: createDictMethod(0),
  map: createDictMethod(1),
  filter: createDictMethod(2),
  some: createDictMethod(3),
  every: createDictMethod(4),
  find: createDictMethod(5),
  findKey: findKey,
  mapPairs: createDictMethod(7),
  reduce: reduce,
  keyOf: keyOf,
  includes: includes,
  has: has,
  get: get,
  set: set,
  isDict: isDict
});


/***/ }),
/* 700 */
/***/ (function(module, exports, __webpack_require__) {

var getKeys = __webpack_require__(44);
var toIObject = __webpack_require__(19);
module.exports = function (object, el) {
  var O = toIObject(object);
  var keys = getKeys(O);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) if (O[key = keys[index++]] === el) return key;
};


/***/ }),
/* 701 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(2);
var get = __webpack_require__(80);
module.exports = __webpack_require__(18).getIterator = function (it) {
  var iterFn = get(it);
  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
  return anObject(iterFn.call(it));
};


/***/ }),
/* 702 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(3);
var core = __webpack_require__(18);
var $export = __webpack_require__(0);
var partial = __webpack_require__(231);
// https://esdiscuss.org/topic/promise-returning-delay-function
$export($export.G + $export.F, {
  delay: function delay(time) {
    return new (core.Promise || global.Promise)(function (resolve) {
      setTimeout(partial.call(resolve, true), time);
    });
  }
});


/***/ }),
/* 703 */
/***/ (function(module, exports, __webpack_require__) {

var path = __webpack_require__(232);
var $export = __webpack_require__(0);

// Placeholder
__webpack_require__(18)._ = path._ = path._ || {};

$export($export.P + $export.F, 'Function', { part: __webpack_require__(231) });


/***/ }),
/* 704 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(0);

$export($export.S + $export.F, 'Object', { isObject: __webpack_require__(4) });


/***/ }),
/* 705 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(0);

$export($export.S + $export.F, 'Object', { classof: __webpack_require__(59) });


/***/ }),
/* 706 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(0);
var define = __webpack_require__(233);

$export($export.S + $export.F, 'Object', { define: define });


/***/ }),
/* 707 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(0);
var define = __webpack_require__(233);
var create = __webpack_require__(45);

$export($export.S + $export.F, 'Object', {
  make: function (proto, mixin) {
    return define(create(proto), mixin);
  }
});


/***/ }),
/* 708 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

__webpack_require__(94)(Number, 'Number', function (iterated) {
  this._l = +iterated;
  this._i = 0;
}, function () {
  var i = this._i++;
  var done = !(i < this._l);
  return { done: done, value: done ? undefined : i };
});


/***/ }),
/* 709 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/benjamingr/RexExp.escape
var $export = __webpack_require__(0);
var $re = __webpack_require__(152)(/[\\^$*+?.()|[\]{}]/g, '\\$&');

$export($export.S, 'RegExp', { escape: function escape(it) { return $re(it); } });


/***/ }),
/* 710 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(0);
var $re = __webpack_require__(152)(/[&<>"']/g, {
  '&': '&amp;',
  '<': '&lt;',
  '>': '&gt;',
  '"': '&quot;',
  "'": '&apos;'
});

$export($export.P + $export.F, 'String', { escapeHTML: function escapeHTML() { return $re(this); } });


/***/ }),
/* 711 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(0);
var $re = __webpack_require__(152)(/&(?:amp|lt|gt|quot|apos);/g, {
  '&amp;': '&',
  '&lt;': '<',
  '&gt;': '>',
  '&quot;': '"',
  '&apos;': "'"
});

$export($export.P + $export.F, 'String', { unescapeHTML: function unescapeHTML() { return $re(this); } });


/***/ }),
/* 712 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(713);

/***/ }),
/* 713 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(32);
var bind = __webpack_require__(234);
var Axios = __webpack_require__(715);
var defaults = __webpack_require__(153);

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(utils.merge(defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = __webpack_require__(238);
axios.CancelToken = __webpack_require__(729);
axios.isCancel = __webpack_require__(237);

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = __webpack_require__(730);

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;


/***/ }),
/* 714 */
/***/ (function(module, exports) {

/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports = function (obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
}

function isBuffer (obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer (obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
}


/***/ }),
/* 715 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaults = __webpack_require__(153);
var utils = __webpack_require__(32);
var InterceptorManager = __webpack_require__(724);
var dispatchRequest = __webpack_require__(725);

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = utils.merge({
      url: arguments[0]
    }, arguments[1]);
  }

  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);
  config.method = config.method.toLowerCase();

  // Hook up interceptors middleware
  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);

  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;


/***/ }),
/* 716 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(32);

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};


/***/ }),
/* 717 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var createError = __webpack_require__(236);

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  // Note: status is not exposed by XDomainRequest
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response.request,
      response
    ));
  }
};


/***/ }),
/* 718 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */
module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }
  error.request = request;
  error.response = response;
  return error;
};


/***/ }),
/* 719 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(32);

function encode(val) {
  return encodeURIComponent(val).
    replace(/%40/gi, '@').
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};


/***/ }),
/* 720 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(32);

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
];

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};


/***/ }),
/* 721 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(32);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
  (function standardBrowserEnv() {
    var msie = /(msie|trident)/i.test(navigator.userAgent);
    var urlParsingNode = document.createElement('a');
    var originURL;

    /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
    function resolveURL(url) {
      var href = url;

      if (msie) {
        // IE needs attribute set twice to normalize properties
        urlParsingNode.setAttribute('href', href);
        href = urlParsingNode.href;
      }

      urlParsingNode.setAttribute('href', href);

      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
      return {
        href: urlParsingNode.href,
        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
        host: urlParsingNode.host,
        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
        hostname: urlParsingNode.hostname,
        port: urlParsingNode.port,
        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
                  urlParsingNode.pathname :
                  '/' + urlParsingNode.pathname
      };
    }

    originURL = resolveURL(window.location.href);

    /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
    return function isURLSameOrigin(requestURL) {
      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
      return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
    };
  })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
  (function nonStandardBrowserEnv() {
    return function isURLSameOrigin() {
      return true;
    };
  })()
);


/***/ }),
/* 722 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js

var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

function E() {
  this.message = 'String contains an invalid character';
}
E.prototype = new Error;
E.prototype.code = 5;
E.prototype.name = 'InvalidCharacterError';

function btoa(input) {
  var str = String(input);
  var output = '';
  for (
    // initialize result and counter
    var block, charCode, idx = 0, map = chars;
    // if the next str index does not exist:
    //   change the mapping table to "="
    //   check if d has no fractional digits
    str.charAt(idx | 0) || (map = '=', idx % 1);
    // "8 - idx % 1 * 8" generates the sequence 2, 4, 6, 8
    output += map.charAt(63 & block >> 8 - idx % 1 * 8)
  ) {
    charCode = str.charCodeAt(idx += 3 / 4);
    if (charCode > 0xFF) {
      throw new E();
    }
    block = block << 8 | charCode;
  }
  return output;
}

module.exports = btoa;


/***/ }),
/* 723 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(32);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
  (function standardBrowserEnv() {
    return {
      write: function write(name, value, expires, path, domain, secure) {
        var cookie = [];
        cookie.push(name + '=' + encodeURIComponent(value));

        if (utils.isNumber(expires)) {
          cookie.push('expires=' + new Date(expires).toGMTString());
        }

        if (utils.isString(path)) {
          cookie.push('path=' + path);
        }

        if (utils.isString(domain)) {
          cookie.push('domain=' + domain);
        }

        if (secure === true) {
          cookie.push('secure');
        }

        document.cookie = cookie.join('; ');
      },

      read: function read(name) {
        var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
        return (match ? decodeURIComponent(match[3]) : null);
      },

      remove: function remove(name) {
        this.write(name, '', Date.now() - 86400000);
      }
    };
  })() :

  // Non standard browser env (web workers, react-native) lack needed support.
  (function nonStandardBrowserEnv() {
    return {
      write: function write() {},
      read: function read() { return null; },
      remove: function remove() {}
    };
  })()
);


/***/ }),
/* 724 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(32);

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;


/***/ }),
/* 725 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(32);
var transformData = __webpack_require__(726);
var isCancel = __webpack_require__(237);
var defaults = __webpack_require__(153);
var isAbsoluteURL = __webpack_require__(727);
var combineURLs = __webpack_require__(728);

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Support baseURL config
  if (config.baseURL && !isAbsoluteURL(config.url)) {
    config.url = combineURLs(config.baseURL, config.url);
  }

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData(
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers || {}
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData(
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData(
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};


/***/ }),
/* 726 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(32);

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });

  return data;
};


/***/ }),
/* 727 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};


/***/ }),
/* 728 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};


/***/ }),
/* 729 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Cancel = __webpack_require__(238);

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;


/***/ }),
/* 730 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};


/***/ }),
/* 731 */
/***/ (function(module, exports, __webpack_require__) {

var echarts = __webpack_require__(13);

var zrUtil = __webpack_require__(1);

__webpack_require__(732);

__webpack_require__(735);

var createDataSelectAction = __webpack_require__(736);

var dataColor = __webpack_require__(737);

var pieLayout = __webpack_require__(738);

var dataFilter = __webpack_require__(740);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
createDataSelectAction('pie', [{
  type: 'pieToggleSelect',
  event: 'pieselectchanged',
  method: 'toggleSelected'
}, {
  type: 'pieSelect',
  event: 'pieselected',
  method: 'select'
}, {
  type: 'pieUnSelect',
  event: 'pieunselected',
  method: 'unSelect'
}]);
echarts.registerVisual(dataColor('pie'));
echarts.registerLayout(zrUtil.curry(pieLayout, 'pie'));
echarts.registerProcessor(dataFilter('pie'));

/***/ }),
/* 732 */
/***/ (function(module, exports, __webpack_require__) {

var echarts = __webpack_require__(13);

var createListSimply = __webpack_require__(733);

var zrUtil = __webpack_require__(1);

var modelUtil = __webpack_require__(7);

var _number = __webpack_require__(14);

var getPercentWithPrecision = _number.getPercentWithPrecision;

var dataSelectableMixin = __webpack_require__(734);

var _dataProvider = __webpack_require__(66);

var retrieveRawAttr = _dataProvider.retrieveRawAttr;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var PieSeries = echarts.extendSeriesModel({
  type: 'series.pie',
  // Overwrite
  init: function (option) {
    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item
    // Use a function instead of direct access because data reference may changed

    this.legendDataProvider = function () {
      return this.getRawData();
    };

    this.updateSelectedMap(this._createSelectableList());

    this._defaultLabelLine(option);
  },
  // Overwrite
  mergeOption: function (newOption) {
    PieSeries.superCall(this, 'mergeOption', newOption);
    this.updateSelectedMap(this._createSelectableList());
  },
  getInitialData: function (option, ecModel) {
    return createListSimply(this, ['value']);
  },
  _createSelectableList: function () {
    var data = this.getRawData();
    var valueDim = data.mapDimension('value');
    var targetList = [];

    for (var i = 0, len = data.count(); i < len; i++) {
      targetList.push({
        name: data.getName(i),
        value: data.get(valueDim, i),
        selected: retrieveRawAttr(data, i, 'selected')
      });
    }

    return targetList;
  },
  // Overwrite
  getDataParams: function (dataIndex) {
    var data = this.getData();
    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?

    var valueList = [];
    data.each(data.mapDimension('value'), function (value) {
      valueList.push(value);
    });
    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));
    params.$vars.push('percent');
    return params;
  },
  _defaultLabelLine: function (option) {
    // Extend labelLine emphasis
    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);
    var labelLineNormalOpt = option.labelLine;
    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`

    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;
    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;
  },
  defaultOption: {
    zlevel: 0,
    z: 2,
    legendHoverLink: true,
    hoverAnimation: true,
    // 默认全局居中
    center: ['50%', '50%'],
    radius: [0, '75%'],
    // 默认顺时针
    clockwise: true,
    startAngle: 90,
    // 最小角度改为0
    minAngle: 0,
    // 选中时扇区偏移量
    selectedOffset: 10,
    // 高亮扇区偏移量
    hoverOffset: 10,
    // If use strategy to avoid label overlapping
    avoidLabelOverlap: true,
    // 选择模式，默认关闭，可选single，multiple
    // selectedMode: false,
    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）
    // roseType: null,
    percentPrecision: 2,
    // If still show when all data zero.
    stillShowZeroSum: true,
    // cursor: null,
    label: {
      // If rotate around circle
      rotate: false,
      show: true,
      // 'outer', 'inside', 'center'
      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调
      // 默认使用全局文本样式，详见TEXTSTYLE
      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数

    },
    // Enabled when label.normal.position is 'outer'
    labelLine: {
      show: true,
      // 引导线两段中的第一段长度
      length: 15,
      // 引导线两段中的第二段长度
      length2: 15,
      smooth: false,
      lineStyle: {
        // color: 各异,
        width: 1,
        type: 'solid'
      }
    },
    itemStyle: {
      borderWidth: 1
    },
    // Animation type canbe expansion, scale
    animationType: 'expansion',
    animationEasing: 'cubicOut'
  }
});
zrUtil.mixin(PieSeries, dataSelectableMixin);
var _default = PieSeries;
module.exports = _default;

/***/ }),
/* 733 */
/***/ (function(module, exports, __webpack_require__) {

var createDimensions = __webpack_require__(123);

var List = __webpack_require__(121);

var _util = __webpack_require__(1);

var extend = _util.extend;
var isArray = _util.isArray;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * [Usage]:
 * (1)
 * createListSimply(seriesModel, ['value']);
 * (2)
 * createListSimply(seriesModel, {
 *     coordDimensions: ['value'],
 *     dimensionsCount: 5
 * });
 *
 * @param {module:echarts/model/Series} seriesModel
 * @param {Object|Array.<string|Object>} opt opt or coordDimensions
 *        The options in opt, see `echarts/data/helper/createDimensions`
 * @param {Array.<string>} [nameList]
 * @return {module:echarts/data/List}
 */
function _default(seriesModel, opt, nameList) {
  opt = isArray(opt) && {
    coordDimensions: opt
  } || extend({}, opt);
  var source = seriesModel.getSource();
  var dimensionsInfo = createDimensions(source, opt);
  var list = new List(dimensionsInfo, seriesModel);
  list.initData(source, nameList);
  return list;
}

module.exports = _default;

/***/ }),
/* 734 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * Data selectable mixin for chart series.
 * To eanble data select, option of series must have `selectedMode`.
 * And each data item will use `selected` to toggle itself selected status
 */
var _default = {
  /**
   * @param {Array.<Object>} targetList [{name, value, selected}, ...]
   *        If targetList is an array, it should like [{name: ..., value: ...}, ...].
   *        If targetList is a "List", it must have coordDim: 'value' dimension and name.
   */
  updateSelectedMap: function (targetList) {
    this._targetList = zrUtil.isArray(targetList) ? targetList.slice() : [];
    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {
      targetMap.set(target.name, target);
      return targetMap;
    }, zrUtil.createHashMap());
  },

  /**
   * Either name or id should be passed as input here.
   * If both of them are defined, id is used.
   *
   * @param {string|undefined} name name of data
   * @param {number|undefined} id dataIndex of data
   */
  // PENGING If selectedMode is null ?
  select: function (name, id) {
    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);
    var selectedMode = this.get('selectedMode');

    if (selectedMode === 'single') {
      this._selectTargetMap.each(function (target) {
        target.selected = false;
      });
    }

    target && (target.selected = true);
  },

  /**
   * Either name or id should be passed as input here.
   * If both of them are defined, id is used.
   *
   * @param {string|undefined} name name of data
   * @param {number|undefined} id dataIndex of data
   */
  unSelect: function (name, id) {
    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');
    // selectedMode !== 'single' && target && (target.selected = false);

    target && (target.selected = false);
  },

  /**
   * Either name or id should be passed as input here.
   * If both of them are defined, id is used.
   *
   * @param {string|undefined} name name of data
   * @param {number|undefined} id dataIndex of data
   */
  toggleSelected: function (name, id) {
    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);

    if (target != null) {
      this[target.selected ? 'unSelect' : 'select'](name, id);
      return target.selected;
    }
  },

  /**
   * Either name or id should be passed as input here.
   * If both of them are defined, id is used.
   *
   * @param {string|undefined} name name of data
   * @param {number|undefined} id dataIndex of data
   */
  isSelected: function (name, id) {
    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);
    return target && target.selected;
  }
};
module.exports = _default;

/***/ }),
/* 735 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var graphic = __webpack_require__(11);

var ChartView = __webpack_require__(118);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * @param {module:echarts/model/Series} seriesModel
 * @param {boolean} hasAnimation
 * @inner
 */
function updateDataSelected(uid, seriesModel, hasAnimation, api) {
  var data = seriesModel.getData();
  var dataIndex = this.dataIndex;
  var name = data.getName(dataIndex);
  var selectedOffset = seriesModel.get('selectedOffset');
  api.dispatchAction({
    type: 'pieToggleSelect',
    from: uid,
    name: name,
    seriesId: seriesModel.id
  });
  data.each(function (idx) {
    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);
  });
}
/**
 * @param {module:zrender/graphic/Sector} el
 * @param {Object} layout
 * @param {boolean} isSelected
 * @param {number} selectedOffset
 * @param {boolean} hasAnimation
 * @inner
 */


function toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {
  var midAngle = (layout.startAngle + layout.endAngle) / 2;
  var dx = Math.cos(midAngle);
  var dy = Math.sin(midAngle);
  var offset = isSelected ? selectedOffset : 0;
  var position = [dx * offset, dy * offset];
  hasAnimation // animateTo will stop revious animation like update transition
  ? el.animate().when(200, {
    position: position
  }).start('bounceOut') : el.attr('position', position);
}
/**
 * Piece of pie including Sector, Label, LabelLine
 * @constructor
 * @extends {module:zrender/graphic/Group}
 */


function PiePiece(data, idx) {
  graphic.Group.call(this);
  var sector = new graphic.Sector({
    z2: 2
  });
  var polyline = new graphic.Polyline();
  var text = new graphic.Text();
  this.add(sector);
  this.add(polyline);
  this.add(text);
  this.updateData(data, idx, true); // Hover to change label and labelLine

  function onEmphasis() {
    polyline.ignore = polyline.hoverIgnore;
    text.ignore = text.hoverIgnore;
  }

  function onNormal() {
    polyline.ignore = polyline.normalIgnore;
    text.ignore = text.normalIgnore;
  }

  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);
}

var piePieceProto = PiePiece.prototype;

piePieceProto.updateData = function (data, idx, firstCreate) {
  var sector = this.childAt(0);
  var seriesModel = data.hostModel;
  var itemModel = data.getItemModel(idx);
  var layout = data.getItemLayout(idx);
  var sectorShape = zrUtil.extend({}, layout);
  sectorShape.label = null;

  if (firstCreate) {
    sector.setShape(sectorShape);
    var animationType = seriesModel.getShallow('animationType');

    if (animationType === 'scale') {
      sector.shape.r = layout.r0;
      graphic.initProps(sector, {
        shape: {
          r: layout.r
        }
      }, seriesModel, idx);
    } // Expansion
    else {
        sector.shape.endAngle = layout.startAngle;
        graphic.updateProps(sector, {
          shape: {
            endAngle: layout.endAngle
          }
        }, seriesModel, idx);
      }
  } else {
    graphic.updateProps(sector, {
      shape: sectorShape
    }, seriesModel, idx);
  } // Update common style


  var visualColor = data.getItemVisual(idx, 'color');
  sector.useStyle(zrUtil.defaults({
    lineJoin: 'bevel',
    fill: visualColor
  }, itemModel.getModel('itemStyle').getItemStyle()));
  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();
  var cursorStyle = itemModel.getShallow('cursor');
  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected

  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(null, idx), seriesModel.get('selectedOffset'), seriesModel.get('animation'));

  function onEmphasis() {
    // Sector may has animation of updating data. Force to move to the last frame
    // Or it may stopped on the wrong shape
    sector.stopAnimation(true);
    sector.animateTo({
      shape: {
        r: layout.r + seriesModel.get('hoverOffset')
      }
    }, 300, 'elasticOut');
  }

  function onNormal() {
    sector.stopAnimation(true);
    sector.animateTo({
      shape: {
        r: layout.r
      }
    }, 300, 'elasticOut');
  }

  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');

  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {
    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);
  }

  this._updateLabel(data, idx);

  graphic.setHoverStyle(this);
};

piePieceProto._updateLabel = function (data, idx) {
  var labelLine = this.childAt(1);
  var labelText = this.childAt(2);
  var seriesModel = data.hostModel;
  var itemModel = data.getItemModel(idx);
  var layout = data.getItemLayout(idx);
  var labelLayout = layout.label;
  var visualColor = data.getItemVisual(idx, 'color');
  graphic.updateProps(labelLine, {
    shape: {
      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]
    }
  }, seriesModel, idx);
  graphic.updateProps(labelText, {
    style: {
      x: labelLayout.x,
      y: labelLayout.y
    }
  }, seriesModel, idx);
  labelText.attr({
    rotation: labelLayout.rotation,
    origin: [labelLayout.x, labelLayout.y],
    z2: 10
  });
  var labelModel = itemModel.getModel('label');
  var labelHoverModel = itemModel.getModel('emphasis.label');
  var labelLineModel = itemModel.getModel('labelLine');
  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');
  var visualColor = data.getItemVisual(idx, 'color');
  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {
    labelFetcher: data.hostModel,
    labelDataIndex: idx,
    defaultText: data.getName(idx),
    autoColor: visualColor,
    useInsideStyle: !!labelLayout.inside
  }, {
    textAlign: labelLayout.textAlign,
    textVerticalAlign: labelLayout.verticalAlign,
    opacity: data.getItemVisual(idx, 'opacity')
  });
  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');
  labelText.hoverIgnore = !labelHoverModel.get('show');
  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');
  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color

  labelLine.setStyle({
    stroke: visualColor,
    opacity: data.getItemVisual(idx, 'opacity')
  });
  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());
  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();
  var smooth = labelLineModel.get('smooth');

  if (smooth && smooth === true) {
    smooth = 0.4;
  }

  labelLine.setShape({
    smooth: smooth
  });
};

zrUtil.inherits(PiePiece, graphic.Group); // Pie view

var PieView = ChartView.extend({
  type: 'pie',
  init: function () {
    var sectorGroup = new graphic.Group();
    this._sectorGroup = sectorGroup;
  },
  render: function (seriesModel, ecModel, api, payload) {
    if (payload && payload.from === this.uid) {
      return;
    }

    var data = seriesModel.getData();
    var oldData = this._data;
    var group = this.group;
    var hasAnimation = ecModel.get('animation');
    var isFirstRender = !oldData;
    var animationType = seriesModel.get('animationType');
    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);
    var selectedMode = seriesModel.get('selectedMode');
    data.diff(oldData).add(function (idx) {
      var piePiece = new PiePiece(data, idx); // Default expansion animation

      if (isFirstRender && animationType !== 'scale') {
        piePiece.eachChild(function (child) {
          child.stopAnimation(true);
        });
      }

      selectedMode && piePiece.on('click', onSectorClick);
      data.setItemGraphicEl(idx, piePiece);
      group.add(piePiece);
    }).update(function (newIdx, oldIdx) {
      var piePiece = oldData.getItemGraphicEl(oldIdx);
      piePiece.updateData(data, newIdx);
      piePiece.off('click');
      selectedMode && piePiece.on('click', onSectorClick);
      group.add(piePiece);
      data.setItemGraphicEl(newIdx, piePiece);
    }).remove(function (idx) {
      var piePiece = oldData.getItemGraphicEl(idx);
      group.remove(piePiece);
    }).execute();

    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation
    && animationType !== 'scale') {
      var shape = data.getItemLayout(0);
      var r = Math.max(api.getWidth(), api.getHeight()) / 2;
      var removeClipPath = zrUtil.bind(group.removeClipPath, group);
      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));
    }

    this._data = data;
  },
  dispose: function () {},
  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {
    var clipPath = new graphic.Sector({
      shape: {
        cx: cx,
        cy: cy,
        r0: 0,
        r: r,
        startAngle: startAngle,
        endAngle: startAngle,
        clockwise: clockwise
      }
    });
    graphic.initProps(clipPath, {
      shape: {
        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2
      }
    }, seriesModel, cb);
    return clipPath;
  },

  /**
   * @implement
   */
  containPoint: function (point, seriesModel) {
    var data = seriesModel.getData();
    var itemLayout = data.getItemLayout(0);

    if (itemLayout) {
      var dx = point[0] - itemLayout.cx;
      var dy = point[1] - itemLayout.cy;
      var radius = Math.sqrt(dx * dx + dy * dy);
      return radius <= itemLayout.r && radius >= itemLayout.r0;
    }
  }
});
var _default = PieView;
module.exports = _default;

/***/ }),
/* 736 */
/***/ (function(module, exports, __webpack_require__) {

var echarts = __webpack_require__(13);

var zrUtil = __webpack_require__(1);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
function _default(seriesType, actionInfos) {
  zrUtil.each(actionInfos, function (actionInfo) {
    actionInfo.update = 'updateView';
    /**
     * @payload
     * @property {string} seriesName
     * @property {string} name
     */

    echarts.registerAction(actionInfo, function (payload, ecModel) {
      var selected = {};
      ecModel.eachComponent({
        mainType: 'series',
        subType: seriesType,
        query: payload
      }, function (seriesModel) {
        if (seriesModel[actionInfo.method]) {
          seriesModel[actionInfo.method](payload.name, payload.dataIndex);
        }

        var data = seriesModel.getData(); // Create selected map

        data.each(function (idx) {
          var name = data.getName(idx);
          selected[name] = seriesModel.isSelected(name) || false;
        });
      });
      return {
        name: payload.name,
        selected: selected
      };
    });
  });
}

module.exports = _default;

/***/ }),
/* 737 */
/***/ (function(module, exports, __webpack_require__) {

var _util = __webpack_require__(1);

var createHashMap = _util.createHashMap;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
// Pick color from palette for each data item.
// Applicable for charts that require applying color palette
// in data level (like pie, funnel, chord).
function _default(seriesType) {
  return {
    getTargetSeries: function (ecModel) {
      // Pie and funnel may use diferrent scope
      var paletteScope = {};
      var seiresModelMap = createHashMap();
      ecModel.eachSeriesByType(seriesType, function (seriesModel) {
        seriesModel.__paletteScope = paletteScope;
        seiresModelMap.set(seriesModel.uid, seriesModel);
      });
      return seiresModelMap;
    },
    reset: function (seriesModel, ecModel) {
      var dataAll = seriesModel.getRawData();
      var idxMap = {};
      var data = seriesModel.getData();
      data.each(function (idx) {
        var rawIdx = data.getRawIndex(idx);
        idxMap[rawIdx] = idx;
      });
      dataAll.each(function (rawIdx) {
        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded

        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);

        if (!singleDataColor) {
          // FIXME Performance
          var itemModel = dataAll.getItemModel(rawIdx);
          var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx) || rawIdx + '', seriesModel.__paletteScope, dataAll.count()); // Legend may use the visual info in data before processed

          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered

          if (filteredIdx != null) {
            data.setItemVisual(filteredIdx, 'color', color);
          }
        } else {
          // Set data all color for legend
          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);
        }
      });
    }
  };
}

module.exports = _default;

/***/ }),
/* 738 */
/***/ (function(module, exports, __webpack_require__) {

var _number = __webpack_require__(14);

var parsePercent = _number.parsePercent;
var linearMap = _number.linearMap;

var labelLayout = __webpack_require__(739);

var zrUtil = __webpack_require__(1);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var PI2 = Math.PI * 2;
var RADIAN = Math.PI / 180;

function _default(seriesType, ecModel, api, payload) {
  ecModel.eachSeriesByType(seriesType, function (seriesModel) {
    var data = seriesModel.getData();
    var valueDim = data.mapDimension('value');
    var center = seriesModel.get('center');
    var radius = seriesModel.get('radius');

    if (!zrUtil.isArray(radius)) {
      radius = [0, radius];
    }

    if (!zrUtil.isArray(center)) {
      center = [center, center];
    }

    var width = api.getWidth();
    var height = api.getHeight();
    var size = Math.min(width, height);
    var cx = parsePercent(center[0], width);
    var cy = parsePercent(center[1], height);
    var r0 = parsePercent(radius[0], size / 2);
    var r = parsePercent(radius[1], size / 2);
    var startAngle = -seriesModel.get('startAngle') * RADIAN;
    var minAngle = seriesModel.get('minAngle') * RADIAN;
    var validDataCount = 0;
    data.each(valueDim, function (value) {
      !isNaN(value) && validDataCount++;
    });
    var sum = data.getSum(valueDim); // Sum may be 0

    var unitRadian = Math.PI / (sum || validDataCount) * 2;
    var clockwise = seriesModel.get('clockwise');
    var roseType = seriesModel.get('roseType');
    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]

    var extent = data.getDataExtent(valueDim);
    extent[0] = 0; // In the case some sector angle is smaller than minAngle

    var restAngle = PI2;
    var valueSumLargerThanMinAngle = 0;
    var currentAngle = startAngle;
    var dir = clockwise ? 1 : -1;
    data.each(valueDim, function (value, idx) {
      var angle;

      if (isNaN(value)) {
        data.setItemLayout(idx, {
          angle: NaN,
          startAngle: NaN,
          endAngle: NaN,
          clockwise: clockwise,
          cx: cx,
          cy: cy,
          r0: r0,
          r: roseType ? NaN : r
        });
        return;
      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？


      if (roseType !== 'area') {
        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;
      } else {
        angle = PI2 / validDataCount;
      }

      if (angle < minAngle) {
        angle = minAngle;
        restAngle -= minAngle;
      } else {
        valueSumLargerThanMinAngle += value;
      }

      var endAngle = currentAngle + dir * angle;
      data.setItemLayout(idx, {
        angle: angle,
        startAngle: currentAngle,
        endAngle: endAngle,
        clockwise: clockwise,
        cx: cx,
        cy: cy,
        r0: r0,
        r: roseType ? linearMap(value, extent, [r0, r]) : r
      });
      currentAngle = endAngle;
    }); // Some sector is constrained by minAngle
    // Rest sectors needs recalculate angle

    if (restAngle < PI2 && validDataCount) {
      // Average the angle if rest angle is not enough after all angles is
      // Constrained by minAngle
      if (restAngle <= 1e-3) {
        var angle = PI2 / validDataCount;
        data.each(valueDim, function (value, idx) {
          if (!isNaN(value)) {
            var layout = data.getItemLayout(idx);
            layout.angle = angle;
            layout.startAngle = startAngle + dir * idx * angle;
            layout.endAngle = startAngle + dir * (idx + 1) * angle;
          }
        });
      } else {
        unitRadian = restAngle / valueSumLargerThanMinAngle;
        currentAngle = startAngle;
        data.each(valueDim, function (value, idx) {
          if (!isNaN(value)) {
            var layout = data.getItemLayout(idx);
            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;
            layout.startAngle = currentAngle;
            layout.endAngle = currentAngle + dir * angle;
            currentAngle += dir * angle;
          }
        });
      }
    }

    labelLayout(seriesModel, r, width, height);
  });
}

module.exports = _default;

/***/ }),
/* 739 */
/***/ (function(module, exports, __webpack_require__) {

var textContain = __webpack_require__(55);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
// FIXME emphasis label position is not same with normal label position
function adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {
  list.sort(function (a, b) {
    return a.y - b.y;
  }); // 压

  function shiftDown(start, end, delta, dir) {
    for (var j = start; j < end; j++) {
      list[j].y += delta;

      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {
        shiftUp(j, delta / 2);
        return;
      }
    }

    shiftUp(end - 1, delta / 2);
  } // 弹


  function shiftUp(end, delta) {
    for (var j = end; j >= 0; j--) {
      list[j].y -= delta;

      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {
        break;
      }
    }
  }

  function changeX(list, isDownList, cx, cy, r, dir) {
    var lastDeltaX = dir > 0 ? isDownList // 右侧
    ? Number.MAX_VALUE // 下
    : 0 // 上
    : isDownList // 左侧
    ? Number.MAX_VALUE // 下
    : 0; // 上

    for (var i = 0, l = list.length; i < l; i++) {
      // Not change x for center label
      if (list[i].position === 'center') {
        continue;
      }

      var deltaY = Math.abs(list[i].y - cy);
      var length = list[i].len;
      var length2 = list[i].len2;
      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);

      if (isDownList && deltaX >= lastDeltaX) {
        // 右下，左下
        deltaX = lastDeltaX - 10;
      }

      if (!isDownList && deltaX <= lastDeltaX) {
        // 右上，左上
        deltaX = lastDeltaX + 10;
      }

      list[i].x = cx + deltaX * dir;
      lastDeltaX = deltaX;
    }
  }

  var lastY = 0;
  var delta;
  var len = list.length;
  var upList = [];
  var downList = [];

  for (var i = 0; i < len; i++) {
    delta = list[i].y - lastY;

    if (delta < 0) {
      shiftDown(i, len, -delta, dir);
    }

    lastY = list[i].y + list[i].height;
  }

  if (viewHeight - lastY < 0) {
    shiftUp(len - 1, lastY - viewHeight);
  }

  for (var i = 0; i < len; i++) {
    if (list[i].y >= cy) {
      downList.push(list[i]);
    } else {
      upList.push(list[i]);
    }
  }

  changeX(upList, false, cx, cy, r, dir);
  changeX(downList, true, cx, cy, r, dir);
}

function avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {
  var leftList = [];
  var rightList = [];

  for (var i = 0; i < labelLayoutList.length; i++) {
    if (labelLayoutList[i].x < cx) {
      leftList.push(labelLayoutList[i]);
    } else {
      rightList.push(labelLayoutList[i]);
    }
  }

  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);
  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);

  for (var i = 0; i < labelLayoutList.length; i++) {
    var linePoints = labelLayoutList[i].linePoints;

    if (linePoints) {
      var dist = linePoints[1][0] - linePoints[2][0];

      if (labelLayoutList[i].x < cx) {
        linePoints[2][0] = labelLayoutList[i].x + 3;
      } else {
        linePoints[2][0] = labelLayoutList[i].x - 3;
      }

      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;
      linePoints[1][0] = linePoints[2][0] + dist;
    }
  }
}

function _default(seriesModel, r, viewWidth, viewHeight) {
  var data = seriesModel.getData();
  var labelLayoutList = [];
  var cx;
  var cy;
  var hasLabelRotate = false;
  data.each(function (idx) {
    var layout = data.getItemLayout(idx);
    var itemModel = data.getItemModel(idx);
    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis

    var labelPosition = labelModel.get('position') || itemModel.get('emphasis.label.position');
    var labelLineModel = itemModel.getModel('labelLine');
    var labelLineLen = labelLineModel.get('length');
    var labelLineLen2 = labelLineModel.get('length2');
    var midAngle = (layout.startAngle + layout.endAngle) / 2;
    var dx = Math.cos(midAngle);
    var dy = Math.sin(midAngle);
    var textX;
    var textY;
    var linePoints;
    var textAlign;
    cx = layout.cx;
    cy = layout.cy;
    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';

    if (labelPosition === 'center') {
      textX = layout.cx;
      textY = layout.cy;
      textAlign = 'center';
    } else {
      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;
      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;
      textX = x1 + dx * 3;
      textY = y1 + dy * 3;

      if (!isLabelInside) {
        // For roseType
        var x2 = x1 + dx * (labelLineLen + r - layout.r);
        var y2 = y1 + dy * (labelLineLen + r - layout.r);
        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;
        var y3 = y2;
        textX = x3 + (dx < 0 ? -5 : 5);
        textY = y3;
        linePoints = [[x1, y1], [x2, y2], [x3, y3]];
      }

      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';
    }

    var font = labelModel.getFont();
    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;
    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);
    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');
    hasLabelRotate = !!labelRotate;
    layout.label = {
      x: textX,
      y: textY,
      position: labelPosition,
      height: textRect.height,
      len: labelLineLen,
      len2: labelLineLen2,
      linePoints: linePoints,
      textAlign: textAlign,
      verticalAlign: 'middle',
      rotation: labelRotate,
      inside: isLabelInside
    }; // Not layout the inside label

    if (!isLabelInside) {
      labelLayoutList.push(layout.label);
    }
  });

  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {
    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);
  }
}

module.exports = _default;

/***/ }),
/* 740 */
/***/ (function(module, exports) {

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
function _default(seriesType) {
  return {
    seriesType: seriesType,
    reset: function (seriesModel, ecModel) {
      var legendModels = ecModel.findComponents({
        mainType: 'legend'
      });

      if (!legendModels || !legendModels.length) {
        return;
      }

      var data = seriesModel.getData();
      data.filterSelf(function (idx) {
        var name = data.getName(idx); // If in any legend component the status is not selected.

        for (var i = 0; i < legendModels.length; i++) {
          if (!legendModels[i].isSelected(name)) {
            return false;
          }
        }

        return true;
      });
    }
  };
}

module.exports = _default;

/***/ }),
/* 741 */
/***/ (function(module, exports, __webpack_require__) {

var echarts = __webpack_require__(13);

__webpack_require__(742);

__webpack_require__(743);

var visualSymbol = __webpack_require__(748);

var layoutPoints = __webpack_require__(749);

var dataSample = __webpack_require__(750);

__webpack_require__(751);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
// In case developer forget to include grid component
echarts.registerVisual(visualSymbol('line', 'circle', 'line'));
echarts.registerLayout(layoutPoints('line')); // Down sample after filter

echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));

/***/ }),
/* 742 */
/***/ (function(module, exports, __webpack_require__) {

var _config = __webpack_require__(16);

var __DEV__ = _config.__DEV__;

var createListFromArray = __webpack_require__(194);

var SeriesModel = __webpack_require__(192);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var _default = SeriesModel.extend({
  type: 'series.line',
  dependencies: ['grid', 'polar'],
  getInitialData: function (option, ecModel) {
    return createListFromArray(this.getSource(), this);
  },
  defaultOption: {
    zlevel: 0,
    z: 2,
    coordinateSystem: 'cartesian2d',
    legendHoverLink: true,
    hoverAnimation: true,
    // stack: null
    // xAxisIndex: 0,
    // yAxisIndex: 0,
    // polarIndex: 0,
    // If clip the overflow value
    clipOverflow: true,
    // cursor: null,
    label: {
      position: 'top'
    },
    // itemStyle: {
    // },
    lineStyle: {
      width: 2,
      type: 'solid'
    },
    // areaStyle: {
    // origin of areaStyle. Valid values:
    // `'auto'/null/undefined`: from axisLine to data
    // `'start'`: from min to data
    // `'end'`: from data to max
    // origin: 'auto'
    // },
    // false, 'start', 'end', 'middle'
    step: false,
    // Disabled if step is true
    smooth: false,
    smoothMonotone: null,
    symbol: 'emptyCircle',
    symbolSize: 4,
    symbolRotate: null,
    showSymbol: true,
    // `false`: follow the label interval strategy.
    // `true`: show all symbols.
    // `'auto'`: If possible, show all symbols, otherwise
    //           follow the label interval strategy.
    showAllSymbol: 'auto',
    // Whether to connect break point.
    connectNulls: false,
    // Sampling for large data. Can be: 'average', 'max', 'min', 'sum'.
    sampling: 'none',
    animationEasing: 'linear',
    // Disable progressive
    progressive: 0,
    hoverLayerThreshold: Infinity
  }
});

module.exports = _default;

/***/ }),
/* 743 */
/***/ (function(module, exports, __webpack_require__) {

var _config = __webpack_require__(16);

var __DEV__ = _config.__DEV__;

var zrUtil = __webpack_require__(1);

var SymbolDraw = __webpack_require__(744);

var SymbolClz = __webpack_require__(239);

var lineAnimationDiff = __webpack_require__(746);

var graphic = __webpack_require__(11);

var modelUtil = __webpack_require__(7);

var _poly = __webpack_require__(747);

var Polyline = _poly.Polyline;
var Polygon = _poly.Polygon;

var ChartView = __webpack_require__(118);

var _number = __webpack_require__(14);

var round = _number.round;

var _helper = __webpack_require__(240);

var prepareDataCoordInfo = _helper.prepareDataCoordInfo;
var getStackedOnPoint = _helper.getStackedOnPoint;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
// FIXME step not support polar
function isPointsSame(points1, points2) {
  if (points1.length !== points2.length) {
    return;
  }

  for (var i = 0; i < points1.length; i++) {
    var p1 = points1[i];
    var p2 = points2[i];

    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {
      return;
    }
  }

  return true;
}

function getSmooth(smooth) {
  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;
}

function getAxisExtentWithGap(axis) {
  var extent = axis.getGlobalExtent();

  if (axis.onBand) {
    // Remove extra 1px to avoid line miter in clipped edge
    var halfBandWidth = axis.getBandWidth() / 2 - 1;
    var dir = extent[1] > extent[0] ? 1 : -1;
    extent[0] += dir * halfBandWidth;
    extent[1] -= dir * halfBandWidth;
  }

  return extent;
}
/**
 * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys
 * @param {module:echarts/data/List} data
 * @param {Object} dataCoordInfo
 * @param {Array.<Array.<number>>} points
 */


function getStackedOnPoints(coordSys, data, dataCoordInfo) {
  if (!dataCoordInfo.valueDim) {
    return [];
  }

  var points = [];

  for (var idx = 0, len = data.count(); idx < len; idx++) {
    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));
  }

  return points;
}

function createGridClipShape(cartesian, hasAnimation, forSymbol, seriesModel) {
  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));
  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));
  var isHorizontal = cartesian.getBaseAxis().isHorizontal();
  var x = Math.min(xExtent[0], xExtent[1]);
  var y = Math.min(yExtent[0], yExtent[1]);
  var width = Math.max(xExtent[0], xExtent[1]) - x;
  var height = Math.max(yExtent[0], yExtent[1]) - y; // Avoid float number rounding error for symbol on the edge of axis extent.
  // See #7913 and `test/dataZoom-clip.html`.

  if (forSymbol) {
    x -= 0.5;
    width += 0.5;
    y -= 0.5;
    height += 0.5;
  } else {
    var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis

    var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);

    if (isHorizontal) {
      y -= expandSize;
      height += expandSize * 2;
    } else {
      x -= expandSize;
      width += expandSize * 2;
    }
  }

  var clipPath = new graphic.Rect({
    shape: {
      x: x,
      y: y,
      width: width,
      height: height
    }
  });

  if (hasAnimation) {
    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;
    graphic.initProps(clipPath, {
      shape: {
        width: width,
        height: height
      }
    }, seriesModel);
  }

  return clipPath;
}

function createPolarClipShape(polar, hasAnimation, forSymbol, seriesModel) {
  var angleAxis = polar.getAngleAxis();
  var radiusAxis = polar.getRadiusAxis();
  var radiusExtent = radiusAxis.getExtent().slice();
  radiusExtent[0] > radiusExtent[1] && radiusExtent.reverse();
  var angleExtent = angleAxis.getExtent();
  var RADIAN = Math.PI / 180; // Avoid float number rounding error for symbol on the edge of axis extent.

  if (forSymbol) {
    radiusExtent[0] -= 0.5;
    radiusExtent[1] += 0.5;
  }

  var clipPath = new graphic.Sector({
    shape: {
      cx: round(polar.cx, 1),
      cy: round(polar.cy, 1),
      r0: round(radiusExtent[0], 1),
      r: round(radiusExtent[1], 1),
      startAngle: -angleExtent[0] * RADIAN,
      endAngle: -angleExtent[1] * RADIAN,
      clockwise: angleAxis.inverse
    }
  });

  if (hasAnimation) {
    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;
    graphic.initProps(clipPath, {
      shape: {
        endAngle: -angleExtent[1] * RADIAN
      }
    }, seriesModel);
  }

  return clipPath;
}

function createClipShape(coordSys, hasAnimation, forSymbol, seriesModel) {
  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, forSymbol, seriesModel) : createGridClipShape(coordSys, hasAnimation, forSymbol, seriesModel);
}

function turnPointsIntoStep(points, coordSys, stepTurnAt) {
  var baseAxis = coordSys.getBaseAxis();
  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;
  var stepPoints = [];

  for (var i = 0; i < points.length - 1; i++) {
    var nextPt = points[i + 1];
    var pt = points[i];
    stepPoints.push(pt);
    var stepPt = [];

    switch (stepTurnAt) {
      case 'end':
        stepPt[baseIndex] = nextPt[baseIndex];
        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start

        stepPoints.push(stepPt);
        break;

      case 'middle':
        // default is start
        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;
        var stepPt2 = [];
        stepPt[baseIndex] = stepPt2[baseIndex] = middle;
        stepPt[1 - baseIndex] = pt[1 - baseIndex];
        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];
        stepPoints.push(stepPt);
        stepPoints.push(stepPt2);
        break;

      default:
        stepPt[baseIndex] = pt[baseIndex];
        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start

        stepPoints.push(stepPt);
    }
  } // Last points


  points[i] && stepPoints.push(points[i]);
  return stepPoints;
}

function getVisualGradient(data, coordSys) {
  var visualMetaList = data.getVisual('visualMeta');

  if (!visualMetaList || !visualMetaList.length || !data.count()) {
    // When data.count() is 0, gradient range can not be calculated.
    return;
  }

  if (coordSys.type !== 'cartesian2d') {
    return;
  }

  var coordDim;
  var visualMeta;

  for (var i = visualMetaList.length - 1; i >= 0; i--) {
    var dimIndex = visualMetaList[i].dimension;
    var dimName = data.dimensions[dimIndex];
    var dimInfo = data.getDimensionInfo(dimName);
    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y

    if (coordDim === 'x' || coordDim === 'y') {
      visualMeta = visualMetaList[i];
      break;
    }
  }

  if (!visualMeta) {
    return;
  } // If the area to be rendered is bigger than area defined by LinearGradient,
  // the canvas spec prescribes that the color of the first stop and the last
  // stop should be used. But if two stops are added at offset 0, in effect
  // browsers use the color of the second stop to render area outside
  // LinearGradient. So we can only infinitesimally extend area defined in
  // LinearGradient to render `outerColors`.


  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.

  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {
    return {
      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),
      color: stop.color
    };
  });
  var stopLen = colorStops.length;
  var outerColors = visualMeta.outerColors.slice();

  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {
    colorStops.reverse();
    outerColors.reverse();
  }

  var tinyExtent = 10; // Arbitrary value: 10px

  var minCoord = colorStops[0].coord - tinyExtent;
  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;
  var coordSpan = maxCoord - minCoord;

  if (coordSpan < 1e-3) {
    return 'transparent';
  }

  zrUtil.each(colorStops, function (stop) {
    stop.offset = (stop.coord - minCoord) / coordSpan;
  });
  colorStops.push({
    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,
    color: outerColors[1] || 'transparent'
  });
  colorStops.unshift({
    // notice colorStops.length have been changed.
    offset: stopLen ? colorStops[0].offset : 0.5,
    color: outerColors[0] || 'transparent'
  }); // zrUtil.each(colorStops, function (colorStop) {
  //     // Make sure each offset has rounded px to avoid not sharp edge
  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);
  // });

  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);
  gradient[coordDim] = minCoord;
  gradient[coordDim + '2'] = maxCoord;
  return gradient;
}

function getIsIgnoreFunc(seriesModel, data, coordSys) {
  var showAllSymbol = seriesModel.get('showAllSymbol');
  var isAuto = showAllSymbol === 'auto';

  if (showAllSymbol && !isAuto) {
    return;
  }

  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];

  if (!categoryAxis) {
    return;
  } // Note that category label interval strategy might bring some weird effect
  // in some scenario: users may wonder why some of the symbols are not
  // displayed. So we show all symbols as possible as we can.


  if (isAuto // Simplify the logic, do not determine label overlap here.
  && canShowAllSymbolForCategory(categoryAxis, data)) {
    return;
  } // Otherwise follow the label interval strategy on category axis.


  var categoryDataDim = data.mapDimension(categoryAxis.dim);
  var labelMap = {};
  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {
    labelMap[labelItem.tickValue] = 1;
  });
  return function (dataIndex) {
    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));
  };
}

function canShowAllSymbolForCategory(categoryAxis, data) {
  // In mose cases, line is monotonous on category axis, and the label size
  // is close with each other. So we check the symbol size and some of the
  // label size alone with the category axis to estimate whether all symbol
  // can be shown without overlap.
  var axisExtent = categoryAxis.getExtent();
  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();
  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.
  // Sampling some points, max 5.

  var dataLen = data.count();
  var step = Math.max(1, Math.round(dataLen / 5));

  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {
    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.
    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number
    * 1.5 > availSize) {
      return false;
    }
  }

  return true;
}

var _default = ChartView.extend({
  type: 'line',
  init: function () {
    var lineGroup = new graphic.Group();
    var symbolDraw = new SymbolDraw();
    this.group.add(symbolDraw.group);
    this._symbolDraw = symbolDraw;
    this._lineGroup = lineGroup;
  },
  render: function (seriesModel, ecModel, api) {
    var coordSys = seriesModel.coordinateSystem;
    var group = this.group;
    var data = seriesModel.getData();
    var lineStyleModel = seriesModel.getModel('lineStyle');
    var areaStyleModel = seriesModel.getModel('areaStyle');
    var points = data.mapArray(data.getItemLayout);
    var isCoordSysPolar = coordSys.type === 'polar';
    var prevCoordSys = this._coordSys;
    var symbolDraw = this._symbolDraw;
    var polyline = this._polyline;
    var polygon = this._polygon;
    var lineGroup = this._lineGroup;
    var hasAnimation = seriesModel.get('animation');
    var isAreaChart = !areaStyleModel.isEmpty();
    var valueOrigin = areaStyleModel.get('origin');
    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);
    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);
    var showSymbol = seriesModel.get('showSymbol');
    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols

    var oldData = this._data;
    oldData && oldData.eachItemGraphicEl(function (el, idx) {
      if (el.__temp) {
        group.remove(el);
        oldData.setItemGraphicEl(idx, null);
      }
    }); // Remove previous created symbols if showSymbol changed to false

    if (!showSymbol) {
      symbolDraw.remove();
    }

    group.add(lineGroup); // FIXME step not support polar

    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed

    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {
      showSymbol && symbolDraw.updateData(data, {
        isIgnore: isIgnoreFunc,
        clipShape: createClipShape(coordSys, false, true, seriesModel)
      });

      if (step) {
        // TODO If stacked series is not step
        points = turnPointsIntoStep(points, coordSys, step);
        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);
      }

      polyline = this._newPolyline(points, coordSys, hasAnimation);

      if (isAreaChart) {
        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);
      }

      lineGroup.setClipPath(createClipShape(coordSys, true, false, seriesModel));
    } else {
      if (isAreaChart && !polygon) {
        // If areaStyle is added
        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);
      } else if (polygon && !isAreaChart) {
        // If areaStyle is removed
        lineGroup.remove(polygon);
        polygon = this._polygon = null;
      } // Update clipPath


      lineGroup.setClipPath(createClipShape(coordSys, false, false, seriesModel)); // Always update, or it is wrong in the case turning on legend
      // because points are not changed

      showSymbol && symbolDraw.updateData(data, {
        isIgnore: isIgnoreFunc,
        clipShape: createClipShape(coordSys, false, true, seriesModel)
      }); // Stop symbol animation and sync with line points
      // FIXME performance?

      data.eachItemGraphicEl(function (el) {
        el.stopAnimation(true);
      }); // In the case data zoom triggerred refreshing frequently
      // Data may not change if line has a category axis. So it should animate nothing

      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {
        if (hasAnimation) {
          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);
        } else {
          // Not do it in update with animation
          if (step) {
            // TODO If stacked series is not step
            points = turnPointsIntoStep(points, coordSys, step);
            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);
          }

          polyline.setShape({
            points: points
          });
          polygon && polygon.setShape({
            points: points,
            stackedOnPoints: stackedOnPoints
          });
        }
      }
    }

    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');
    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first
    lineStyleModel.getLineStyle(), {
      fill: 'none',
      stroke: visualColor,
      lineJoin: 'bevel'
    }));
    var smooth = seriesModel.get('smooth');
    smooth = getSmooth(seriesModel.get('smooth'));
    polyline.setShape({
      smooth: smooth,
      smoothMonotone: seriesModel.get('smoothMonotone'),
      connectNulls: seriesModel.get('connectNulls')
    });

    if (polygon) {
      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');
      var stackedOnSmooth = 0;
      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {
        fill: visualColor,
        opacity: 0.7,
        lineJoin: 'bevel'
      }));

      if (stackedOnSeries) {
        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));
      }

      polygon.setShape({
        smooth: smooth,
        stackedOnSmooth: stackedOnSmooth,
        smoothMonotone: seriesModel.get('smoothMonotone'),
        connectNulls: seriesModel.get('connectNulls')
      });
    }

    this._data = data; // Save the coordinate system for transition animation when data changed

    this._coordSys = coordSys;
    this._stackedOnPoints = stackedOnPoints;
    this._points = points;
    this._step = step;
    this._valueOrigin = valueOrigin;
  },
  dispose: function () {},
  highlight: function (seriesModel, ecModel, api, payload) {
    var data = seriesModel.getData();
    var dataIndex = modelUtil.queryDataIndex(data, payload);

    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {
      var symbol = data.getItemGraphicEl(dataIndex);

      if (!symbol) {
        // Create a temporary symbol if it is not exists
        var pt = data.getItemLayout(dataIndex);

        if (!pt) {
          // Null data
          return;
        }

        symbol = new SymbolClz(data, dataIndex);
        symbol.position = pt;
        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));
        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);
        symbol.__temp = true;
        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation

        symbol.stopSymbolAnimation(true);
        this.group.add(symbol);
      }

      symbol.highlight();
    } else {
      // Highlight whole series
      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);
    }
  },
  downplay: function (seriesModel, ecModel, api, payload) {
    var data = seriesModel.getData();
    var dataIndex = modelUtil.queryDataIndex(data, payload);

    if (dataIndex != null && dataIndex >= 0) {
      var symbol = data.getItemGraphicEl(dataIndex);

      if (symbol) {
        if (symbol.__temp) {
          data.setItemGraphicEl(dataIndex, null);
          this.group.remove(symbol);
        } else {
          symbol.downplay();
        }
      }
    } else {
      // FIXME
      // can not downplay completely.
      // Downplay whole series
      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);
    }
  },

  /**
   * @param {module:zrender/container/Group} group
   * @param {Array.<Array.<number>>} points
   * @private
   */
  _newPolyline: function (points) {
    var polyline = this._polyline; // Remove previous created polyline

    if (polyline) {
      this._lineGroup.remove(polyline);
    }

    polyline = new Polyline({
      shape: {
        points: points
      },
      silent: true,
      z2: 10
    });

    this._lineGroup.add(polyline);

    this._polyline = polyline;
    return polyline;
  },

  /**
   * @param {module:zrender/container/Group} group
   * @param {Array.<Array.<number>>} stackedOnPoints
   * @param {Array.<Array.<number>>} points
   * @private
   */
  _newPolygon: function (points, stackedOnPoints) {
    var polygon = this._polygon; // Remove previous created polygon

    if (polygon) {
      this._lineGroup.remove(polygon);
    }

    polygon = new Polygon({
      shape: {
        points: points,
        stackedOnPoints: stackedOnPoints
      },
      silent: true
    });

    this._lineGroup.add(polygon);

    this._polygon = polygon;
    return polygon;
  },

  /**
   * @private
   */
  // FIXME Two value axis
  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {
    var polyline = this._polyline;
    var polygon = this._polygon;
    var seriesModel = data.hostModel;
    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);
    var current = diff.current;
    var stackedOnCurrent = diff.stackedOnCurrent;
    var next = diff.next;
    var stackedOnNext = diff.stackedOnNext;

    if (step) {
      // TODO If stacked series is not step
      current = turnPointsIntoStep(diff.current, coordSys, step);
      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);
      next = turnPointsIntoStep(diff.next, coordSys, step);
      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);
    } // `diff.current` is subset of `current` (which should be ensured by
    // turnPointsIntoStep), so points in `__points` can be updated when
    // points in `current` are update during animation.


    polyline.shape.__points = diff.current;
    polyline.shape.points = current;
    graphic.updateProps(polyline, {
      shape: {
        points: next
      }
    }, seriesModel);

    if (polygon) {
      polygon.setShape({
        points: current,
        stackedOnPoints: stackedOnCurrent
      });
      graphic.updateProps(polygon, {
        shape: {
          points: next,
          stackedOnPoints: stackedOnNext
        }
      }, seriesModel);
    }

    var updatedDataInfo = [];
    var diffStatus = diff.status;

    for (var i = 0; i < diffStatus.length; i++) {
      var cmd = diffStatus[i].cmd;

      if (cmd === '=') {
        var el = data.getItemGraphicEl(diffStatus[i].idx1);

        if (el) {
          updatedDataInfo.push({
            el: el,
            ptIdx: i // Index of points

          });
        }
      }
    }

    if (polyline.animators && polyline.animators.length) {
      polyline.animators[0].during(function () {
        for (var i = 0; i < updatedDataInfo.length; i++) {
          var el = updatedDataInfo[i].el;
          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);
        }
      });
    }
  },
  remove: function (ecModel) {
    var group = this.group;
    var oldData = this._data;

    this._lineGroup.removeAll();

    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting


    oldData && oldData.eachItemGraphicEl(function (el, idx) {
      if (el.__temp) {
        group.remove(el);
        oldData.setItemGraphicEl(idx, null);
      }
    });
    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;
  }
});

module.exports = _default;

/***/ }),
/* 744 */
/***/ (function(module, exports, __webpack_require__) {

var graphic = __webpack_require__(11);

var SymbolClz = __webpack_require__(239);

var _util = __webpack_require__(1);

var isObject = _util.isObject;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * @module echarts/chart/helper/SymbolDraw
 */

/**
 * @constructor
 * @alias module:echarts/chart/helper/SymbolDraw
 * @param {module:zrender/graphic/Group} [symbolCtor]
 */
function SymbolDraw(symbolCtor) {
  this.group = new graphic.Group();
  this._symbolCtor = symbolCtor || SymbolClz;
}

var symbolDrawProto = SymbolDraw.prototype;

function symbolNeedsDraw(data, point, idx, opt) {
  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will cut part of
  // the symbol element shape. We use the same clip shape here as
  // the line clip.
  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';
}
/**
 * Update symbols draw by new data
 * @param {module:echarts/data/List} data
 * @param {Object} [opt] Or isIgnore
 * @param {Function} [opt.isIgnore]
 * @param {Object} [opt.clipShape]
 */


symbolDrawProto.updateData = function (data, opt) {
  opt = normalizeUpdateOpt(opt);
  var group = this.group;
  var seriesModel = data.hostModel;
  var oldData = this._data;
  var SymbolCtor = this._symbolCtor;
  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from
  // stream mode to normal mode, where previous elements should be removed.

  if (!oldData) {
    group.removeAll();
  }

  data.diff(oldData).add(function (newIdx) {
    var point = data.getItemLayout(newIdx);

    if (symbolNeedsDraw(data, point, newIdx, opt)) {
      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);
      symbolEl.attr('position', point);
      data.setItemGraphicEl(newIdx, symbolEl);
      group.add(symbolEl);
    }
  }).update(function (newIdx, oldIdx) {
    var symbolEl = oldData.getItemGraphicEl(oldIdx);
    var point = data.getItemLayout(newIdx);

    if (!symbolNeedsDraw(data, point, newIdx, opt)) {
      group.remove(symbolEl);
      return;
    }

    if (!symbolEl) {
      symbolEl = new SymbolCtor(data, newIdx);
      symbolEl.attr('position', point);
    } else {
      symbolEl.updateData(data, newIdx, seriesScope);
      graphic.updateProps(symbolEl, {
        position: point
      }, seriesModel);
    } // Add back


    group.add(symbolEl);
    data.setItemGraphicEl(newIdx, symbolEl);
  }).remove(function (oldIdx) {
    var el = oldData.getItemGraphicEl(oldIdx);
    el && el.fadeOut(function () {
      group.remove(el);
    });
  }).execute();
  this._data = data;
};

symbolDrawProto.isPersistent = function () {
  return true;
};

symbolDrawProto.updateLayout = function () {
  var data = this._data;

  if (data) {
    // Not use animation
    data.eachItemGraphicEl(function (el, idx) {
      var point = data.getItemLayout(idx);
      el.attr('position', point);
    });
  }
};

symbolDrawProto.incrementalPrepareUpdate = function (data) {
  this._seriesScope = makeSeriesScope(data);
  this._data = null;
  this.group.removeAll();
};
/**
 * Update symbols draw by new data
 * @param {module:echarts/data/List} data
 * @param {Object} [opt] Or isIgnore
 * @param {Function} [opt.isIgnore]
 * @param {Object} [opt.clipShape]
 */


symbolDrawProto.incrementalUpdate = function (taskParams, data, opt) {
  opt = normalizeUpdateOpt(opt);

  function updateIncrementalAndHover(el) {
    if (!el.isGroup) {
      el.incremental = el.useHoverLayer = true;
    }
  }

  for (var idx = taskParams.start; idx < taskParams.end; idx++) {
    var point = data.getItemLayout(idx);

    if (symbolNeedsDraw(data, point, idx, opt)) {
      var el = new this._symbolCtor(data, idx, this._seriesScope);
      el.traverse(updateIncrementalAndHover);
      el.attr('position', point);
      this.group.add(el);
      data.setItemGraphicEl(idx, el);
    }
  }
};

function normalizeUpdateOpt(opt) {
  if (opt != null && !isObject(opt)) {
    opt = {
      isIgnore: opt
    };
  }

  return opt || {};
}

symbolDrawProto.remove = function (enableAnimation) {
  var group = this.group;
  var data = this._data; // Incremental model do not have this._data.

  if (data && enableAnimation) {
    data.eachItemGraphicEl(function (el) {
      el.fadeOut(function () {
        group.remove(el);
      });
    });
  } else {
    group.removeAll();
  }
};

function makeSeriesScope(data) {
  var seriesModel = data.hostModel;
  return {
    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),
    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),
    symbolRotate: seriesModel.get('symbolRotate'),
    symbolOffset: seriesModel.get('symbolOffset'),
    hoverAnimation: seriesModel.get('hoverAnimation'),
    labelModel: seriesModel.getModel('label'),
    hoverLabelModel: seriesModel.getModel('emphasis.label'),
    cursorStyle: seriesModel.get('cursor')
  };
}

var _default = SymbolDraw;
module.exports = _default;

/***/ }),
/* 745 */
/***/ (function(module, exports, __webpack_require__) {

var _dataProvider = __webpack_require__(66);

var retrieveRawValue = _dataProvider.retrieveRawValue;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * @param {module:echarts/data/List} data
 * @param {number} dataIndex
 * @return {string} label string. Not null/undefined
 */
function getDefaultLabel(data, dataIndex) {
  var labelDims = data.mapDimension('defaultedLabel', true);
  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)

  if (len === 1) {
    return retrieveRawValue(data, dataIndex, labelDims[0]);
  } else if (len) {
    var vals = [];

    for (var i = 0; i < labelDims.length; i++) {
      var val = retrieveRawValue(data, dataIndex, labelDims[i]);
      vals.push(val);
    }

    return vals.join(' ');
  }
}

exports.getDefaultLabel = getDefaultLabel;

/***/ }),
/* 746 */
/***/ (function(module, exports, __webpack_require__) {

var _helper = __webpack_require__(240);

var prepareDataCoordInfo = _helper.prepareDataCoordInfo;
var getStackedOnPoint = _helper.getStackedOnPoint;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
// var arrayDiff = require('zrender/src/core/arrayDiff');
// 'zrender/src/core/arrayDiff' has been used before, but it did
// not do well in performance when roam with fixed dataZoom window.
// function convertToIntId(newIdList, oldIdList) {
//     // Generate int id instead of string id.
//     // Compare string maybe slow in score function of arrDiff
//     // Assume id in idList are all unique
//     var idIndicesMap = {};
//     var idx = 0;
//     for (var i = 0; i < newIdList.length; i++) {
//         idIndicesMap[newIdList[i]] = idx;
//         newIdList[i] = idx++;
//     }
//     for (var i = 0; i < oldIdList.length; i++) {
//         var oldId = oldIdList[i];
//         // Same with newIdList
//         if (idIndicesMap[oldId]) {
//             oldIdList[i] = idIndicesMap[oldId];
//         }
//         else {
//             oldIdList[i] = idx++;
//         }
//     }
// }
function diffData(oldData, newData) {
  var diffResult = [];
  newData.diff(oldData).add(function (idx) {
    diffResult.push({
      cmd: '+',
      idx: idx
    });
  }).update(function (newIdx, oldIdx) {
    diffResult.push({
      cmd: '=',
      idx: oldIdx,
      idx1: newIdx
    });
  }).remove(function (idx) {
    diffResult.push({
      cmd: '-',
      idx: idx
    });
  }).execute();
  return diffResult;
}

function _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {
  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);
  // var oldIdList = oldData.mapArray(oldData.getId);
  // convertToIntId(newIdList, oldIdList);
  // // FIXME One data ?
  // diff = arrayDiff(oldIdList, newIdList);

  var currPoints = [];
  var nextPoints = []; // Points for stacking base line

  var currStackedPoints = [];
  var nextStackedPoints = [];
  var status = [];
  var sortedIndices = [];
  var rawIndices = [];
  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin);
  var oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);

  for (var i = 0; i < diff.length; i++) {
    var diffItem = diff[i];
    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast
    // Which is in case remvoing or add more than one data in the tail or head

    switch (diffItem.cmd) {
      case '=':
        var currentPt = oldData.getItemLayout(diffItem.idx);
        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly

        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {
          currentPt = nextPt.slice();
        }

        currPoints.push(currentPt);
        nextPoints.push(nextPt);
        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);
        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);
        rawIndices.push(newData.getRawIndex(diffItem.idx1));
        break;

      case '+':
        var idx = diffItem.idx;
        currPoints.push(oldCoordSys.dataToPoint([newData.get(newDataOldCoordInfo.dataDimsForPoint[0], idx), newData.get(newDataOldCoordInfo.dataDimsForPoint[1], idx)]));
        nextPoints.push(newData.getItemLayout(idx).slice());
        currStackedPoints.push(getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, idx));
        nextStackedPoints.push(newStackedOnPoints[idx]);
        rawIndices.push(newData.getRawIndex(idx));
        break;

      case '-':
        var idx = diffItem.idx;
        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue
        // FIXME FIXME FIXME

        if (rawIndex !== idx) {
          currPoints.push(oldData.getItemLayout(idx));
          nextPoints.push(newCoordSys.dataToPoint([oldData.get(oldDataNewCoordInfo.dataDimsForPoint[0], idx), oldData.get(oldDataNewCoordInfo.dataDimsForPoint[1], idx)]));
          currStackedPoints.push(oldStackedOnPoints[idx]);
          nextStackedPoints.push(getStackedOnPoint(oldDataNewCoordInfo, newCoordSys, oldData, idx));
          rawIndices.push(rawIndex);
        } else {
          pointAdded = false;
        }

    } // Original indices


    if (pointAdded) {
      status.push(diffItem);
      sortedIndices.push(sortedIndices.length);
    }
  } // Diff result may be crossed if all items are changed
  // Sort by data index


  sortedIndices.sort(function (a, b) {
    return rawIndices[a] - rawIndices[b];
  });
  var sortedCurrPoints = [];
  var sortedNextPoints = [];
  var sortedCurrStackedPoints = [];
  var sortedNextStackedPoints = [];
  var sortedStatus = [];

  for (var i = 0; i < sortedIndices.length; i++) {
    var idx = sortedIndices[i];
    sortedCurrPoints[i] = currPoints[idx];
    sortedNextPoints[i] = nextPoints[idx];
    sortedCurrStackedPoints[i] = currStackedPoints[idx];
    sortedNextStackedPoints[i] = nextStackedPoints[idx];
    sortedStatus[i] = status[idx];
  }

  return {
    current: sortedCurrPoints,
    next: sortedNextPoints,
    stackedOnCurrent: sortedCurrStackedPoints,
    stackedOnNext: sortedNextStackedPoints,
    status: sortedStatus
  };
}

module.exports = _default;

/***/ }),
/* 747 */
/***/ (function(module, exports, __webpack_require__) {

var Path = __webpack_require__(21);

var vec2 = __webpack_require__(17);

var fixClipWithShadow = __webpack_require__(187);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
// Poly path support NaN point
var vec2Min = vec2.min;
var vec2Max = vec2.max;
var scaleAndAdd = vec2.scaleAndAdd;
var v2Copy = vec2.copy; // Temporary variable

var v = [];
var cp0 = [];
var cp1 = [];

function isPointNull(p) {
  return isNaN(p[0]) || isNaN(p[1]);
}

function drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {
  // if (smoothMonotone == null) {
  //     if (isMono(points, 'x')) {
  //         return drawMono(ctx, points, start, segLen, allLen,
  //             dir, smoothMin, smoothMax, smooth, 'x', connectNulls);
  //     }
  //     else if (isMono(points, 'y')) {
  //         return drawMono(ctx, points, start, segLen, allLen,
  //             dir, smoothMin, smoothMax, smooth, 'y', connectNulls);
  //     }
  //     else {
  //         return drawNonMono.apply(this, arguments);
  //     }
  // }
  // else if (smoothMonotone !== 'none' && isMono(points, smoothMonotone)) {
  //     return drawMono.apply(this, arguments);
  // }
  // else {
  //     return drawNonMono.apply(this, arguments);
  // }
  if (smoothMonotone === 'none' || !smoothMonotone) {
    return drawNonMono.apply(this, arguments);
  } else {
    return drawMono.apply(this, arguments);
  }
}
/**
 * Check if points is in monotone.
 *
 * @param {number[][]} points         Array of points which is in [x, y] form
 * @param {string}     smoothMonotone 'x', 'y', or 'none', stating for which
 *                                    dimension that is checking.
 *                                    If is 'none', `drawNonMono` should be
 *                                    called.
 *                                    If is undefined, either being monotone
 *                                    in 'x' or 'y' will call `drawMono`.
 */
// function isMono(points, smoothMonotone) {
//     if (points.length <= 1) {
//         return true;
//     }
//     var dim = smoothMonotone === 'x' ? 0 : 1;
//     var last = points[0][dim];
//     var lastDiff = 0;
//     for (var i = 1; i < points.length; ++i) {
//         var diff = points[i][dim] - last;
//         if (!isNaN(diff) && !isNaN(lastDiff)
//             && diff !== 0 && lastDiff !== 0
//             && ((diff >= 0) !== (lastDiff >= 0))
//         ) {
//             return false;
//         }
//         if (!isNaN(diff) && diff !== 0) {
//             lastDiff = diff;
//             last = points[i][dim];
//         }
//     }
//     return true;
// }

/**
 * Draw smoothed line in monotone, in which only vertical or horizontal bezier
 * control points will be used. This should be used when points are monotone
 * either in x or y dimension.
 */


function drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {
  var prevIdx = 0;
  var idx = start;

  for (var k = 0; k < segLen; k++) {
    var p = points[idx];

    if (idx >= allLen || idx < 0) {
      break;
    }

    if (isPointNull(p)) {
      if (connectNulls) {
        idx += dir;
        continue;
      }

      break;
    }

    if (idx === start) {
      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);
    } else {
      if (smooth > 0) {
        var prevP = points[prevIdx];
        var dim = smoothMonotone === 'y' ? 1 : 0; // Length of control point to p, either in x or y, but not both

        var ctrlLen = (p[dim] - prevP[dim]) * smooth;
        v2Copy(cp0, prevP);
        cp0[dim] = prevP[dim] + ctrlLen;
        v2Copy(cp1, p);
        cp1[dim] = p[dim] - ctrlLen;
        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]);
      } else {
        ctx.lineTo(p[0], p[1]);
      }
    }

    prevIdx = idx;
    idx += dir;
  }

  return k;
}
/**
 * Draw smoothed line in non-monotone, in may cause undesired curve in extreme
 * situations. This should be used when points are non-monotone neither in x or
 * y dimension.
 */


function drawNonMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {
  var prevIdx = 0;
  var idx = start;

  for (var k = 0; k < segLen; k++) {
    var p = points[idx];

    if (idx >= allLen || idx < 0) {
      break;
    }

    if (isPointNull(p)) {
      if (connectNulls) {
        idx += dir;
        continue;
      }

      break;
    }

    if (idx === start) {
      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);
      v2Copy(cp0, p);
    } else {
      if (smooth > 0) {
        var nextIdx = idx + dir;
        var nextP = points[nextIdx];

        if (connectNulls) {
          // Find next point not null
          while (nextP && isPointNull(points[nextIdx])) {
            nextIdx += dir;
            nextP = points[nextIdx];
          }
        }

        var ratioNextSeg = 0.5;
        var prevP = points[prevIdx];
        var nextP = points[nextIdx]; // Last point

        if (!nextP || isPointNull(nextP)) {
          v2Copy(cp1, p);
        } else {
          // If next data is null in not connect case
          if (isPointNull(nextP) && !connectNulls) {
            nextP = p;
          }

          vec2.sub(v, nextP, prevP);
          var lenPrevSeg;
          var lenNextSeg;

          if (smoothMonotone === 'x' || smoothMonotone === 'y') {
            var dim = smoothMonotone === 'x' ? 0 : 1;
            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);
            lenNextSeg = Math.abs(p[dim] - nextP[dim]);
          } else {
            lenPrevSeg = vec2.dist(p, prevP);
            lenNextSeg = vec2.dist(p, nextP);
          } // Use ratio of seg length


          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);
          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));
        } // Smooth constraint


        vec2Min(cp0, cp0, smoothMax);
        vec2Max(cp0, cp0, smoothMin);
        vec2Min(cp1, cp1, smoothMax);
        vec2Max(cp1, cp1, smoothMin);
        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment

        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);
      } else {
        ctx.lineTo(p[0], p[1]);
      }
    }

    prevIdx = idx;
    idx += dir;
  }

  return k;
}

function getBoundingBox(points, smoothConstraint) {
  var ptMin = [Infinity, Infinity];
  var ptMax = [-Infinity, -Infinity];

  if (smoothConstraint) {
    for (var i = 0; i < points.length; i++) {
      var pt = points[i];

      if (pt[0] < ptMin[0]) {
        ptMin[0] = pt[0];
      }

      if (pt[1] < ptMin[1]) {
        ptMin[1] = pt[1];
      }

      if (pt[0] > ptMax[0]) {
        ptMax[0] = pt[0];
      }

      if (pt[1] > ptMax[1]) {
        ptMax[1] = pt[1];
      }
    }
  }

  return {
    min: smoothConstraint ? ptMin : ptMax,
    max: smoothConstraint ? ptMax : ptMin
  };
}

var Polyline = Path.extend({
  type: 'ec-polyline',
  shape: {
    points: [],
    smooth: 0,
    smoothConstraint: true,
    smoothMonotone: null,
    connectNulls: false
  },
  style: {
    fill: null,
    stroke: '#000'
  },
  brush: fixClipWithShadow(Path.prototype.brush),
  buildPath: function (ctx, shape) {
    var points = shape.points;
    var i = 0;
    var len = points.length;
    var result = getBoundingBox(points, shape.smoothConstraint);

    if (shape.connectNulls) {
      // Must remove first and last null values avoid draw error in polygon
      for (; len > 0; len--) {
        if (!isPointNull(points[len - 1])) {
          break;
        }
      }

      for (; i < len; i++) {
        if (!isPointNull(points[i])) {
          break;
        }
      }
    }

    while (i < len) {
      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;
    }
  }
});
var Polygon = Path.extend({
  type: 'ec-polygon',
  shape: {
    points: [],
    // Offset between stacked base points and points
    stackedOnPoints: [],
    smooth: 0,
    stackedOnSmooth: 0,
    smoothConstraint: true,
    smoothMonotone: null,
    connectNulls: false
  },
  brush: fixClipWithShadow(Path.prototype.brush),
  buildPath: function (ctx, shape) {
    var points = shape.points;
    var stackedOnPoints = shape.stackedOnPoints;
    var i = 0;
    var len = points.length;
    var smoothMonotone = shape.smoothMonotone;
    var bbox = getBoundingBox(points, shape.smoothConstraint);
    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);

    if (shape.connectNulls) {
      // Must remove first and last null values avoid draw error in polygon
      for (; len > 0; len--) {
        if (!isPointNull(points[len - 1])) {
          break;
        }
      }

      for (; i < len; i++) {
        if (!isPointNull(points[i])) {
          break;
        }
      }
    }

    while (i < len) {
      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);
      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);
      i += k + 1;
      ctx.closePath();
    }
  }
});
exports.Polyline = Polyline;
exports.Polygon = Polygon;

/***/ }),
/* 748 */
/***/ (function(module, exports) {

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
function _default(seriesType, defaultSymbolType, legendSymbol) {
  // Encoding visual for all series include which is filtered for legend drawing
  return {
    seriesType: seriesType,
    // For legend.
    performRawSeries: true,
    reset: function (seriesModel, ecModel, api) {
      var data = seriesModel.getData();
      var symbolType = seriesModel.get('symbol') || defaultSymbolType;
      var symbolSize = seriesModel.get('symbolSize');
      var keepAspect = seriesModel.get('symbolKeepAspect');
      data.setVisual({
        legendSymbol: legendSymbol || symbolType,
        symbol: symbolType,
        symbolSize: symbolSize,
        symbolKeepAspect: keepAspect
      }); // Only visible series has each data be visual encoded

      if (ecModel.isSeriesFiltered(seriesModel)) {
        return;
      }

      var hasCallback = typeof symbolSize === 'function';

      function dataEach(data, idx) {
        if (typeof symbolSize === 'function') {
          var rawValue = seriesModel.getRawValue(idx); // FIXME

          var params = seriesModel.getDataParams(idx);
          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));
        }

        if (data.hasItemOption) {
          var itemModel = data.getItemModel(idx);
          var itemSymbolType = itemModel.getShallow('symbol', true);
          var itemSymbolSize = itemModel.getShallow('symbolSize', true);
          var itemSymbolKeepAspect = itemModel.getShallow('symbolKeepAspect', true); // If has item symbol

          if (itemSymbolType != null) {
            data.setItemVisual(idx, 'symbol', itemSymbolType);
          }

          if (itemSymbolSize != null) {
            // PENDING Transform symbolSize ?
            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);
          }

          if (itemSymbolKeepAspect != null) {
            data.setItemVisual(idx, 'symbolKeepAspect', itemSymbolKeepAspect);
          }
        }
      }

      return {
        dataEach: data.hasItemOption || hasCallback ? dataEach : null
      };
    }
  };
}

module.exports = _default;

/***/ }),
/* 749 */
/***/ (function(module, exports, __webpack_require__) {

var _util = __webpack_require__(1);

var map = _util.map;

var createRenderPlanner = __webpack_require__(119);

var _dataStackHelper = __webpack_require__(67);

var isDimensionStacked = _dataStackHelper.isDimensionStacked;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
function _default(seriesType) {
  return {
    seriesType: seriesType,
    plan: createRenderPlanner(),
    reset: function (seriesModel) {
      var data = seriesModel.getData();
      var coordSys = seriesModel.coordinateSystem;
      var pipelineContext = seriesModel.pipelineContext;
      var isLargeRender = pipelineContext.large;

      if (!coordSys) {
        return;
      }

      var dims = map(coordSys.dimensions, function (dim) {
        return data.mapDimension(dim);
      }).slice(0, 2);
      var dimLen = dims.length;
      var stackResultDim = data.getCalculationInfo('stackResultDimension');

      if (isDimensionStacked(data, dims[0]
      /*, dims[1]*/
      )) {
        dims[0] = stackResultDim;
      }

      if (isDimensionStacked(data, dims[1]
      /*, dims[0]*/
      )) {
        dims[1] = stackResultDim;
      }

      function progress(params, data) {
        var segCount = params.end - params.start;
        var points = isLargeRender && new Float32Array(segCount * dimLen);

        for (var i = params.start, offset = 0, tmpIn = [], tmpOut = []; i < params.end; i++) {
          var point;

          if (dimLen === 1) {
            var x = data.get(dims[0], i);
            point = !isNaN(x) && coordSys.dataToPoint(x, null, tmpOut);
          } else {
            var x = tmpIn[0] = data.get(dims[0], i);
            var y = tmpIn[1] = data.get(dims[1], i); // Also {Array.<number>}, not undefined to avoid if...else... statement

            point = !isNaN(x) && !isNaN(y) && coordSys.dataToPoint(tmpIn, null, tmpOut);
          }

          if (isLargeRender) {
            points[offset++] = point ? point[0] : NaN;
            points[offset++] = point ? point[1] : NaN;
          } else {
            data.setItemLayout(i, point && point.slice() || [NaN, NaN]);
          }
        }

        isLargeRender && data.setLayout('symbolPoints', points);
      }

      return dimLen && {
        progress: progress
      };
    }
  };
}

module.exports = _default;

/***/ }),
/* 750 */
/***/ (function(module, exports) {

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var samplers = {
  average: function (frame) {
    var sum = 0;
    var count = 0;

    for (var i = 0; i < frame.length; i++) {
      if (!isNaN(frame[i])) {
        sum += frame[i];
        count++;
      }
    } // Return NaN if count is 0


    return count === 0 ? NaN : sum / count;
  },
  sum: function (frame) {
    var sum = 0;

    for (var i = 0; i < frame.length; i++) {
      // Ignore NaN
      sum += frame[i] || 0;
    }

    return sum;
  },
  max: function (frame) {
    var max = -Infinity;

    for (var i = 0; i < frame.length; i++) {
      frame[i] > max && (max = frame[i]);
    } // NaN will cause illegal axis extent.


    return isFinite(max) ? max : NaN;
  },
  min: function (frame) {
    var min = Infinity;

    for (var i = 0; i < frame.length; i++) {
      frame[i] < min && (min = frame[i]);
    } // NaN will cause illegal axis extent.


    return isFinite(min) ? min : NaN;
  },
  // TODO
  // Median
  nearest: function (frame) {
    return frame[0];
  }
};

var indexSampler = function (frame, value) {
  return Math.round(frame.length / 2);
};

function _default(seriesType) {
  return {
    seriesType: seriesType,
    modifyOutputEnd: true,
    reset: function (seriesModel, ecModel, api) {
      var data = seriesModel.getData();
      var sampling = seriesModel.get('sampling');
      var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling

      if (coordSys.type === 'cartesian2d' && sampling) {
        var baseAxis = coordSys.getBaseAxis();
        var valueAxis = coordSys.getOtherAxis(baseAxis);
        var extent = baseAxis.getExtent(); // Coordinste system has been resized

        var size = extent[1] - extent[0];
        var rate = Math.round(data.count() / size);

        if (rate > 1) {
          var sampler;

          if (typeof sampling === 'string') {
            sampler = samplers[sampling];
          } else if (typeof sampling === 'function') {
            sampler = sampling;
          }

          if (sampler) {
            // Only support sample the first dim mapped from value axis.
            seriesModel.setData(data.downSample(data.mapDimension(valueAxis.dim), 1 / rate, sampler, indexSampler));
          }
        }
      }
    }
  };
}

module.exports = _default;

/***/ }),
/* 751 */
/***/ (function(module, exports, __webpack_require__) {

var echarts = __webpack_require__(13);

var zrUtil = __webpack_require__(1);

var graphic = __webpack_require__(11);

__webpack_require__(752);

__webpack_require__(759);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
// Grid view
echarts.extendComponentView({
  type: 'grid',
  render: function (gridModel, ecModel) {
    this.group.removeAll();

    if (gridModel.get('show')) {
      this.group.add(new graphic.Rect({
        shape: gridModel.coordinateSystem.getRect(),
        style: zrUtil.defaults({
          fill: gridModel.get('backgroundColor')
        }, gridModel.getItemStyle()),
        silent: true,
        z2: -1
      }));
    }
  }
});
echarts.registerPreprocessor(function (option) {
  // Only create grid when need
  if (option.xAxis && option.yAxis && !option.grid) {
    option.grid = {};
  }
});

/***/ }),
/* 752 */
/***/ (function(module, exports, __webpack_require__) {

var _config = __webpack_require__(16);

var __DEV__ = _config.__DEV__;

var _util = __webpack_require__(1);

var isObject = _util.isObject;
var each = _util.each;
var map = _util.map;
var indexOf = _util.indexOf;
var retrieve = _util.retrieve;

var _layout = __webpack_require__(49);

var getLayoutRect = _layout.getLayoutRect;

var _axisHelper = __webpack_require__(68);

var createScaleByModel = _axisHelper.createScaleByModel;
var ifAxisCrossZero = _axisHelper.ifAxisCrossZero;
var niceScaleExtent = _axisHelper.niceScaleExtent;
var estimateLabelUnionRect = _axisHelper.estimateLabelUnionRect;

var Cartesian2D = __webpack_require__(753);

var Axis2D = __webpack_require__(755);

var CoordinateSystem = __webpack_require__(116);

var _dataStackHelper = __webpack_require__(67);

var getStackedDimension = _dataStackHelper.getStackedDimension;

__webpack_require__(756);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * Grid is a region which contains at most 4 cartesian systems
 *
 * TODO Default cartesian
 */
// Depends on GridModel, AxisModel, which performs preprocess.

/**
 * Check if the axis is used in the specified grid
 * @inner
 */
function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {
  return axisModel.getCoordSysModel() === gridModel;
}

function Grid(gridModel, ecModel, api) {
  /**
   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}
   * @private
   */
  this._coordsMap = {};
  /**
   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}
   * @private
   */

  this._coordsList = [];
  /**
   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}
   * @private
   */

  this._axesMap = {};
  /**
   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}
   * @private
   */

  this._axesList = [];

  this._initCartesian(gridModel, ecModel, api);

  this.model = gridModel;
}

var gridProto = Grid.prototype;
gridProto.type = 'grid';
gridProto.axisPointerEnabled = true;

gridProto.getRect = function () {
  return this._rect;
};

gridProto.update = function (ecModel, api) {
  var axesMap = this._axesMap;

  this._updateScale(ecModel, this.model);

  each(axesMap.x, function (xAxis) {
    niceScaleExtent(xAxis.scale, xAxis.model);
  });
  each(axesMap.y, function (yAxis) {
    niceScaleExtent(yAxis.scale, yAxis.model);
  });
  each(axesMap.x, function (xAxis) {
    fixAxisOnZero(axesMap, 'y', xAxis);
  });
  each(axesMap.y, function (yAxis) {
    fixAxisOnZero(axesMap, 'x', yAxis);
  }); // Resize again if containLabel is enabled
  // FIXME It may cause getting wrong grid size in data processing stage

  this.resize(this.model, api);
};

function fixAxisOnZero(axesMap, otherAxisDim, axis) {
  axis.getAxesOnZeroOf = function () {
    // TODO: onZero of multiple axes.
    return otherAxis ? [otherAxis] : [];
  }; // onZero can not be enabled in these two situations:
  // 1. When any other axis is a category axis.
  // 2. When no axis is cross 0 point.


  var otherAxes = axesMap[otherAxisDim];
  var otherAxis;
  var axisModel = axis.model;
  var onZero = axisModel.get('axisLine.onZero');
  var onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');

  if (!onZero) {
    return;
  } // If target axis is specified.


  if (onZeroAxisIndex != null) {
    if (canOnZeroToAxis(otherAxes[onZeroAxisIndex])) {
      otherAxis = otherAxes[onZeroAxisIndex];
    }

    return;
  } // Find the first available other axis.


  for (var idx in otherAxes) {
    if (otherAxes.hasOwnProperty(idx) && canOnZeroToAxis(otherAxes[idx])) {
      otherAxis = otherAxes[idx];
      break;
    }
  }
}

function canOnZeroToAxis(axis) {
  return axis && axis.type !== 'category' && axis.type !== 'time' && ifAxisCrossZero(axis);
}
/**
 * Resize the grid
 * @param {module:echarts/coord/cartesian/GridModel} gridModel
 * @param {module:echarts/ExtensionAPI} api
 */


gridProto.resize = function (gridModel, api, ignoreContainLabel) {
  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {
    width: api.getWidth(),
    height: api.getHeight()
  });
  this._rect = gridRect;
  var axesList = this._axesList;
  adjustAxes(); // Minus label size

  if (!ignoreContainLabel && gridModel.get('containLabel')) {
    each(axesList, function (axis) {
      if (!axis.model.get('axisLabel.inside')) {
        var labelUnionRect = estimateLabelUnionRect(axis);

        if (labelUnionRect) {
          var dim = axis.isHorizontal() ? 'height' : 'width';
          var margin = axis.model.get('axisLabel.margin');
          gridRect[dim] -= labelUnionRect[dim] + margin;

          if (axis.position === 'top') {
            gridRect.y += labelUnionRect.height + margin;
          } else if (axis.position === 'left') {
            gridRect.x += labelUnionRect.width + margin;
          }
        }
      }
    });
    adjustAxes();
  }

  function adjustAxes() {
    each(axesList, function (axis) {
      var isHorizontal = axis.isHorizontal();
      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];
      var idx = axis.inverse ? 1 : 0;
      axis.setExtent(extent[idx], extent[1 - idx]);
      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);
    });
  }
};
/**
 * @param {string} axisType
 * @param {number} [axisIndex]
 */


gridProto.getAxis = function (axisType, axisIndex) {
  var axesMapOnDim = this._axesMap[axisType];

  if (axesMapOnDim != null) {
    if (axisIndex == null) {
      // Find first axis
      for (var name in axesMapOnDim) {
        if (axesMapOnDim.hasOwnProperty(name)) {
          return axesMapOnDim[name];
        }
      }
    }

    return axesMapOnDim[axisIndex];
  }
};
/**
 * @return {Array.<module:echarts/coord/Axis>}
 */


gridProto.getAxes = function () {
  return this._axesList.slice();
};
/**
 * Usage:
 *      grid.getCartesian(xAxisIndex, yAxisIndex);
 *      grid.getCartesian(xAxisIndex);
 *      grid.getCartesian(null, yAxisIndex);
 *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});
 *
 * @param {number|Object} [xAxisIndex]
 * @param {number} [yAxisIndex]
 */


gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {
  if (xAxisIndex != null && yAxisIndex != null) {
    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;
    return this._coordsMap[key];
  }

  if (isObject(xAxisIndex)) {
    yAxisIndex = xAxisIndex.yAxisIndex;
    xAxisIndex = xAxisIndex.xAxisIndex;
  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.


  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {
    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {
      return coordList[i];
    }
  }
};

gridProto.getCartesians = function () {
  return this._coordsList.slice();
};
/**
 * @implements
 * see {module:echarts/CoodinateSystem}
 */


gridProto.convertToPixel = function (ecModel, finder, value) {
  var target = this._findConvertTarget(ecModel, finder);

  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;
};
/**
 * @implements
 * see {module:echarts/CoodinateSystem}
 */


gridProto.convertFromPixel = function (ecModel, finder, value) {
  var target = this._findConvertTarget(ecModel, finder);

  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;
};
/**
 * @inner
 */


gridProto._findConvertTarget = function (ecModel, finder) {
  var seriesModel = finder.seriesModel;
  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];
  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];
  var gridModel = finder.gridModel;
  var coordsList = this._coordsList;
  var cartesian;
  var axis;

  if (seriesModel) {
    cartesian = seriesModel.coordinateSystem;
    indexOf(coordsList, cartesian) < 0 && (cartesian = null);
  } else if (xAxisModel && yAxisModel) {
    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);
  } else if (xAxisModel) {
    axis = this.getAxis('x', xAxisModel.componentIndex);
  } else if (yAxisModel) {
    axis = this.getAxis('y', yAxisModel.componentIndex);
  } // Lowest priority.
  else if (gridModel) {
      var grid = gridModel.coordinateSystem;

      if (grid === this) {
        cartesian = this._coordsList[0];
      }
    }

  return {
    cartesian: cartesian,
    axis: axis
  };
};
/**
 * @implements
 * see {module:echarts/CoodinateSystem}
 */


gridProto.containPoint = function (point) {
  var coord = this._coordsList[0];

  if (coord) {
    return coord.containPoint(point);
  }
};
/**
 * Initialize cartesian coordinate systems
 * @private
 */


gridProto._initCartesian = function (gridModel, ecModel, api) {
  var axisPositionUsed = {
    left: false,
    right: false,
    top: false,
    bottom: false
  };
  var axesMap = {
    x: {},
    y: {}
  };
  var axesCount = {
    x: 0,
    y: 0
  }; /// Create axis

  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);
  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);

  if (!axesCount.x || !axesCount.y) {
    // Roll back when there no either x or y axis
    this._axesMap = {};
    this._axesList = [];
    return;
  }

  this._axesMap = axesMap; /// Create cartesian2d

  each(axesMap.x, function (xAxis, xAxisIndex) {
    each(axesMap.y, function (yAxis, yAxisIndex) {
      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;
      var cartesian = new Cartesian2D(key);
      cartesian.grid = this;
      cartesian.model = gridModel;
      this._coordsMap[key] = cartesian;

      this._coordsList.push(cartesian);

      cartesian.addAxis(xAxis);
      cartesian.addAxis(yAxis);
    }, this);
  }, this);

  function createAxisCreator(axisType) {
    return function (axisModel, idx) {
      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {
        return;
      }

      var axisPosition = axisModel.get('position');

      if (axisType === 'x') {
        // Fix position
        if (axisPosition !== 'top' && axisPosition !== 'bottom') {
          // Default bottom of X
          axisPosition = 'bottom';

          if (axisPositionUsed[axisPosition]) {
            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';
          }
        }
      } else {
        // Fix position
        if (axisPosition !== 'left' && axisPosition !== 'right') {
          // Default left of Y
          axisPosition = 'left';

          if (axisPositionUsed[axisPosition]) {
            axisPosition = axisPosition === 'left' ? 'right' : 'left';
          }
        }
      }

      axisPositionUsed[axisPosition] = true;
      var axis = new Axis2D(axisType, createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);
      var isCategory = axis.type === 'category';
      axis.onBand = isCategory && axisModel.get('boundaryGap');
      axis.inverse = axisModel.get('inverse'); // Inject axis into axisModel

      axisModel.axis = axis; // Inject axisModel into axis

      axis.model = axisModel; // Inject grid info axis

      axis.grid = this; // Index of axis, can be used as key

      axis.index = idx;

      this._axesList.push(axis);

      axesMap[axisType][idx] = axis;
      axesCount[axisType]++;
    };
  }
};
/**
 * Update cartesian properties from series
 * @param  {module:echarts/model/Option} option
 * @private
 */


gridProto._updateScale = function (ecModel, gridModel) {
  // Reset scale
  each(this._axesList, function (axis) {
    axis.scale.setExtent(Infinity, -Infinity);
  });
  ecModel.eachSeries(function (seriesModel) {
    if (isCartesian2D(seriesModel)) {
      var axesModels = findAxesModels(seriesModel, ecModel);
      var xAxisModel = axesModels[0];
      var yAxisModel = axesModels[1];

      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {
        return;
      }

      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);
      var data = seriesModel.getData();
      var xAxis = cartesian.getAxis('x');
      var yAxis = cartesian.getAxis('y');

      if (data.type === 'list') {
        unionExtent(data, xAxis, seriesModel);
        unionExtent(data, yAxis, seriesModel);
      }
    }
  }, this);

  function unionExtent(data, axis, seriesModel) {
    each(data.mapDimension(axis.dim, true), function (dim) {
      axis.scale.unionExtentFromData( // For example, the extent of the orginal dimension
      // is [0.1, 0.5], the extent of the `stackResultDimension`
      // is [7, 9], the final extent should not include [0.1, 0.5].
      data, getStackedDimension(data, dim));
    });
  }
};
/**
 * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined
 * @return {Object} {baseAxes: [], otherAxes: []}
 */


gridProto.getTooltipAxes = function (dim) {
  var baseAxes = [];
  var otherAxes = [];
  each(this.getCartesians(), function (cartesian) {
    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();
    var otherAxis = cartesian.getOtherAxis(baseAxis);
    indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);
    indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);
  });
  return {
    baseAxes: baseAxes,
    otherAxes: otherAxes
  };
};
/**
 * @inner
 */


function updateAxisTransform(axis, coordBase) {
  var axisExtent = axis.getExtent();
  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform

  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {
    return coord + coordBase;
  } : function (coord) {
    return axisExtentSum - coord + coordBase;
  };
  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {
    return coord - coordBase;
  } : function (coord) {
    return axisExtentSum - coord + coordBase;
  };
}

var axesTypes = ['xAxis', 'yAxis'];
/**
 * @inner
 */

function findAxesModels(seriesModel, ecModel) {
  return map(axesTypes, function (axisType) {
    var axisModel = seriesModel.getReferringComponents(axisType)[0];
    return axisModel;
  });
}
/**
 * @inner
 */


function isCartesian2D(seriesModel) {
  return seriesModel.get('coordinateSystem') === 'cartesian2d';
}

Grid.create = function (ecModel, api) {
  var grids = [];
  ecModel.eachComponent('grid', function (gridModel, idx) {
    var grid = new Grid(gridModel, ecModel, api);
    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize
    // should be performed in create stage.

    grid.resize(gridModel, api, true);
    gridModel.coordinateSystem = grid;
    grids.push(grid);
  }); // Inject the coordinateSystems into seriesModel

  ecModel.eachSeries(function (seriesModel) {
    if (!isCartesian2D(seriesModel)) {
      return;
    }

    var axesModels = findAxesModels(seriesModel, ecModel);
    var xAxisModel = axesModels[0];
    var yAxisModel = axesModels[1];
    var gridModel = xAxisModel.getCoordSysModel();
    var grid = gridModel.coordinateSystem;
    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);
  });
  return grids;
}; // For deciding which dimensions to use when creating list data


Grid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;
CoordinateSystem.register('cartesian2d', Grid);
var _default = Grid;
module.exports = _default;

/***/ }),
/* 753 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var Cartesian = __webpack_require__(754);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
function Cartesian2D(name) {
  Cartesian.call(this, name);
}

Cartesian2D.prototype = {
  constructor: Cartesian2D,
  type: 'cartesian2d',

  /**
   * @type {Array.<string>}
   * @readOnly
   */
  dimensions: ['x', 'y'],

  /**
   * Base axis will be used on stacking.
   *
   * @return {module:echarts/coord/cartesian/Axis2D}
   */
  getBaseAxis: function () {
    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');
  },

  /**
   * If contain point
   * @param {Array.<number>} point
   * @return {boolean}
   */
  containPoint: function (point) {
    var axisX = this.getAxis('x');
    var axisY = this.getAxis('y');
    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));
  },

  /**
   * If contain data
   * @param {Array.<number>} data
   * @return {boolean}
   */
  containData: function (data) {
    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);
  },

  /**
   * @param {Array.<number>} data
   * @param {Array.<number>} out
   * @return {Array.<number>}
   */
  dataToPoint: function (data, reserved, out) {
    var xAxis = this.getAxis('x');
    var yAxis = this.getAxis('y');
    out = out || [];
    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));
    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));
    return out;
  },

  /**
   * @param {Array.<number>} data
   * @param {Array.<number>} out
   * @return {Array.<number>}
   */
  clampData: function (data, out) {
    var xScale = this.getAxis('x').scale;
    var yScale = this.getAxis('y').scale;
    var xAxisExtent = xScale.getExtent();
    var yAxisExtent = yScale.getExtent();
    var x = xScale.parse(data[0]);
    var y = yScale.parse(data[1]);
    out = out || [];
    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), x), Math.max(xAxisExtent[0], xAxisExtent[1]));
    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), y), Math.max(yAxisExtent[0], yAxisExtent[1]));
    return out;
  },

  /**
   * @param {Array.<number>} point
   * @param {Array.<number>} out
   * @return {Array.<number>}
   */
  pointToData: function (point, out) {
    var xAxis = this.getAxis('x');
    var yAxis = this.getAxis('y');
    out = out || [];
    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));
    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));
    return out;
  },

  /**
   * Get other axis
   * @param {module:echarts/coord/cartesian/Axis2D} axis
   */
  getOtherAxis: function (axis) {
    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');
  }
};
zrUtil.inherits(Cartesian2D, Cartesian);
var _default = Cartesian2D;
module.exports = _default;

/***/ }),
/* 754 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * Cartesian coordinate system
 * @module  echarts/coord/Cartesian
 *
 */
function dimAxisMapper(dim) {
  return this._axes[dim];
}
/**
 * @alias module:echarts/coord/Cartesian
 * @constructor
 */


var Cartesian = function (name) {
  this._axes = {};
  this._dimList = [];
  /**
   * @type {string}
   */

  this.name = name || '';
};

Cartesian.prototype = {
  constructor: Cartesian,
  type: 'cartesian',

  /**
   * Get axis
   * @param  {number|string} dim
   * @return {module:echarts/coord/Cartesian~Axis}
   */
  getAxis: function (dim) {
    return this._axes[dim];
  },

  /**
   * Get axes list
   * @return {Array.<module:echarts/coord/Cartesian~Axis>}
   */
  getAxes: function () {
    return zrUtil.map(this._dimList, dimAxisMapper, this);
  },

  /**
   * Get axes list by given scale type
   */
  getAxesByScale: function (scaleType) {
    scaleType = scaleType.toLowerCase();
    return zrUtil.filter(this.getAxes(), function (axis) {
      return axis.scale.type === scaleType;
    });
  },

  /**
   * Add axis
   * @param {module:echarts/coord/Cartesian.Axis}
   */
  addAxis: function (axis) {
    var dim = axis.dim;
    this._axes[dim] = axis;

    this._dimList.push(dim);
  },

  /**
   * Convert data to coord in nd space
   * @param {Array.<number>|Object.<string, number>} val
   * @return {Array.<number>|Object.<string, number>}
   */
  dataToCoord: function (val) {
    return this._dataCoordConvert(val, 'dataToCoord');
  },

  /**
   * Convert coord in nd space to data
   * @param  {Array.<number>|Object.<string, number>} val
   * @return {Array.<number>|Object.<string, number>}
   */
  coordToData: function (val) {
    return this._dataCoordConvert(val, 'coordToData');
  },
  _dataCoordConvert: function (input, method) {
    var dimList = this._dimList;
    var output = input instanceof Array ? [] : {};

    for (var i = 0; i < dimList.length; i++) {
      var dim = dimList[i];
      var axis = this._axes[dim];
      output[dim] = axis[method](input[dim]);
    }

    return output;
  }
};
var _default = Cartesian;
module.exports = _default;

/***/ }),
/* 755 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var Axis = __webpack_require__(199);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * Extend axis 2d
 * @constructor module:echarts/coord/cartesian/Axis2D
 * @extends {module:echarts/coord/cartesian/Axis}
 * @param {string} dim
 * @param {*} scale
 * @param {Array.<number>} coordExtent
 * @param {string} axisType
 * @param {string} position
 */
var Axis2D = function (dim, scale, coordExtent, axisType, position) {
  Axis.call(this, dim, scale, coordExtent);
  /**
   * Axis type
   *  - 'category'
   *  - 'value'
   *  - 'time'
   *  - 'log'
   * @type {string}
   */

  this.type = axisType || 'value';
  /**
   * Axis position
   *  - 'top'
   *  - 'bottom'
   *  - 'left'
   *  - 'right'
   */

  this.position = position || 'bottom';
};

Axis2D.prototype = {
  constructor: Axis2D,

  /**
   * Index of axis, can be used as key
   */
  index: 0,

  /**
   * Implemented in <module:echarts/coord/cartesian/Grid>.
   * @return {Array.<module:echarts/coord/cartesian/Axis2D>}
   *         If not on zero of other axis, return null/undefined.
   *         If no axes, return an empty array.
   */
  getAxesOnZeroOf: null,

  /**
   * Axis model
   * @param {module:echarts/coord/cartesian/AxisModel}
   */
  model: null,
  isHorizontal: function () {
    var position = this.position;
    return position === 'top' || position === 'bottom';
  },

  /**
   * Each item cooresponds to this.getExtent(), which
   * means globalExtent[0] may greater than globalExtent[1],
   * unless `asc` is input.
   *
   * @param {boolean} [asc]
   * @return {Array.<number>}
   */
  getGlobalExtent: function (asc) {
    var ret = this.getExtent();
    ret[0] = this.toGlobalCoord(ret[0]);
    ret[1] = this.toGlobalCoord(ret[1]);
    asc && ret[0] > ret[1] && ret.reverse();
    return ret;
  },
  getOtherAxis: function () {
    this.grid.getOtherAxis();
  },

  /**
   * @override
   */
  pointToData: function (point, clamp) {
    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);
  },

  /**
   * Transform global coord to local coord,
   * i.e. var localCoord = axis.toLocalCoord(80);
   * designate by module:echarts/coord/cartesian/Grid.
   * @type {Function}
   */
  toLocalCoord: null,

  /**
   * Transform global coord to local coord,
   * i.e. var globalCoord = axis.toLocalCoord(40);
   * designate by module:echarts/coord/cartesian/Grid.
   * @type {Function}
   */
  toGlobalCoord: null
};
zrUtil.inherits(Axis2D, Axis);
var _default = Axis2D;
module.exports = _default;

/***/ }),
/* 756 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(241);

var ComponentModel = __webpack_require__(43);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
// Grid 是在有直角坐标系的时候必须要存在的
// 所以这里也要被 Cartesian2D 依赖
var _default = ComponentModel.extend({
  type: 'grid',
  dependencies: ['xAxis', 'yAxis'],
  layoutMode: 'box',

  /**
   * @type {module:echarts/coord/cartesian/Grid}
   */
  coordinateSystem: null,
  defaultOption: {
    show: false,
    zlevel: 0,
    z: 0,
    left: '10%',
    top: 60,
    right: '10%',
    bottom: 60,
    // If grid size contain label
    containLabel: false,
    // width: {totalWidth} - left - right,
    // height: {totalHeight} - top - bottom,
    backgroundColor: 'rgba(0,0,0,0)',
    borderWidth: 1,
    borderColor: '#ccc'
  }
});

module.exports = _default;

/***/ }),
/* 757 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var axisDefault = __webpack_require__(758);

var ComponentModel = __webpack_require__(43);

var _layout = __webpack_require__(49);

var getLayoutParams = _layout.getLayoutParams;
var mergeLayoutParam = _layout.mergeLayoutParam;

var OrdinalMeta = __webpack_require__(196);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
// FIXME axisType is fixed ?
var AXIS_TYPES = ['value', 'category', 'time', 'log'];
/**
 * Generate sub axis model class
 * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'
 * @param {module:echarts/model/Component} BaseAxisModelClass
 * @param {Function} axisTypeDefaulter
 * @param {Object} [extraDefaultOption]
 */

function _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {
  zrUtil.each(AXIS_TYPES, function (axisType) {
    BaseAxisModelClass.extend({
      /**
       * @readOnly
       */
      type: axisName + 'Axis.' + axisType,
      mergeDefaultAndTheme: function (option, ecModel) {
        var layoutMode = this.layoutMode;
        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};
        var themeModel = ecModel.getTheme();
        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));
        zrUtil.merge(option, this.getDefaultOption());
        option.type = axisTypeDefaulter(axisName, option);

        if (layoutMode) {
          mergeLayoutParam(option, inputPositionParams, layoutMode);
        }
      },

      /**
       * @override
       */
      optionUpdated: function () {
        var thisOption = this.option;

        if (thisOption.type === 'category') {
          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);
        }
      },

      /**
       * Should not be called before all of 'getInitailData' finished.
       * Because categories are collected during initializing data.
       */
      getCategories: function (rawData) {
        var option = this.option; // FIXME
        // warning if called before all of 'getInitailData' finished.

        if (option.type === 'category') {
          if (rawData) {
            return option.data;
          }

          return this.__ordinalMeta.categories;
        }
      },
      getOrdinalMeta: function () {
        return this.__ordinalMeta;
      },
      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)
    });
  });
  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));
}

module.exports = _default;

/***/ }),
/* 758 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var defaultOption = {
  show: true,
  zlevel: 0,
  z: 0,
  // Inverse the axis.
  inverse: false,
  // Axis name displayed.
  name: '',
  // 'start' | 'middle' | 'end'
  nameLocation: 'end',
  // By degree. By defualt auto rotate by nameLocation.
  nameRotate: null,
  nameTruncate: {
    maxWidth: null,
    ellipsis: '...',
    placeholder: '.'
  },
  // Use global text style by default.
  nameTextStyle: {},
  // The gap between axisName and axisLine.
  nameGap: 15,
  // Default `false` to support tooltip.
  silent: false,
  // Default `false` to avoid legacy user event listener fail.
  triggerEvent: false,
  tooltip: {
    show: false
  },
  axisPointer: {},
  axisLine: {
    show: true,
    onZero: true,
    onZeroAxisIndex: null,
    lineStyle: {
      color: '#333',
      width: 1,
      type: 'solid'
    },
    // The arrow at both ends the the axis.
    symbol: ['none', 'none'],
    symbolSize: [10, 15]
  },
  axisTick: {
    show: true,
    // Whether axisTick is inside the grid or outside the grid.
    inside: false,
    // The length of axisTick.
    length: 5,
    lineStyle: {
      width: 1
    }
  },
  axisLabel: {
    show: true,
    // Whether axisLabel is inside the grid or outside the grid.
    inside: false,
    rotate: 0,
    // true | false | null/undefined (auto)
    showMinLabel: null,
    // true | false | null/undefined (auto)
    showMaxLabel: null,
    margin: 8,
    // formatter: null,
    fontSize: 12
  },
  splitLine: {
    show: true,
    lineStyle: {
      color: ['#ccc'],
      width: 1,
      type: 'solid'
    }
  },
  splitArea: {
    show: false,
    areaStyle: {
      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']
    }
  }
};
var axisDefault = {};
axisDefault.categoryAxis = zrUtil.merge({
  // The gap at both ends of the axis. For categoryAxis, boolean.
  boundaryGap: true,
  // Set false to faster category collection.
  // Only usefull in the case like: category is
  // ['2012-01-01', '2012-01-02', ...], where the input
  // data has been ensured not duplicate and is large data.
  // null means "auto":
  // if axis.data provided, do not deduplication,
  // else do deduplication.
  deduplication: null,
  // splitArea: {
  // show: false
  // },
  splitLine: {
    show: false
  },
  axisTick: {
    // If tick is align with label when boundaryGap is true
    alignWithLabel: false,
    interval: 'auto'
  },
  axisLabel: {
    interval: 'auto'
  }
}, defaultOption);
axisDefault.valueAxis = zrUtil.merge({
  // The gap at both ends of the axis. For value axis, [GAP, GAP], where
  // `GAP` can be an absolute pixel number (like `35`), or percent (like `'30%'`)
  boundaryGap: [0, 0],
  // TODO
  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]
  // Min value of the axis. can be:
  // + a number
  // + 'dataMin': use the min value in data.
  // + null/undefined: auto decide min value (consider pretty look and boundaryGap).
  // min: null,
  // Max value of the axis. can be:
  // + a number
  // + 'dataMax': use the max value in data.
  // + null/undefined: auto decide max value (consider pretty look and boundaryGap).
  // max: null,
  // Readonly prop, specifies start value of the range when using data zoom.
  // rangeStart: null
  // Readonly prop, specifies end value of the range when using data zoom.
  // rangeEnd: null
  // Optional value can be:
  // + `false`: always include value 0.
  // + `true`: the extent do not consider value 0.
  // scale: false,
  // AxisTick and axisLabel and splitLine are caculated based on splitNumber.
  splitNumber: 5 // Interval specifies the span of the ticks is mandatorily.
  // interval: null
  // Specify min interval when auto calculate tick interval.
  // minInterval: null
  // Specify max interval when auto calculate tick interval.
  // maxInterval: null

}, defaultOption);
axisDefault.timeAxis = zrUtil.defaults({
  scale: true,
  min: 'dataMin',
  max: 'dataMax'
}, axisDefault.valueAxis);
axisDefault.logAxis = zrUtil.defaults({
  scale: true,
  logBase: 10
}, axisDefault.valueAxis);
var _default = axisDefault;
module.exports = _default;

/***/ }),
/* 759 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(241);

__webpack_require__(760);

/***/ }),
/* 760 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var graphic = __webpack_require__(11);

var AxisBuilder = __webpack_require__(242);

var AxisView = __webpack_require__(243);

var cartesianAxisHelper = __webpack_require__(244);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];
var selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {
//     var alignWithLabel = model.get('alignWithLabel');
//     if (alignWithLabel === 'auto') {
//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');
//     }
//     return alignWithLabel;
// }

var CartesianAxisView = AxisView.extend({
  type: 'cartesianAxis',
  axisPointerClass: 'CartesianAxisPointer',

  /**
   * @override
   */
  render: function (axisModel, ecModel, api, payload) {
    this.group.removeAll();
    var oldAxisGroup = this._axisGroup;
    this._axisGroup = new graphic.Group();
    this.group.add(this._axisGroup);

    if (!axisModel.get('show')) {
      return;
    }

    var gridModel = axisModel.getCoordSysModel();
    var layout = cartesianAxisHelper.layout(gridModel, axisModel);
    var axisBuilder = new AxisBuilder(axisModel, layout);
    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);

    this._axisGroup.add(axisBuilder.getGroup());

    zrUtil.each(selfBuilderAttrs, function (name) {
      if (axisModel.get(name + '.show')) {
        this['_' + name](axisModel, gridModel);
      }
    }, this);
    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);
    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);
  },
  remove: function () {
    this._splitAreaColors = null;
  },

  /**
   * @param {module:echarts/coord/cartesian/AxisModel} axisModel
   * @param {module:echarts/coord/cartesian/GridModel} gridModel
   * @private
   */
  _splitLine: function (axisModel, gridModel) {
    var axis = axisModel.axis;

    if (axis.scale.isBlank()) {
      return;
    }

    var splitLineModel = axisModel.getModel('splitLine');
    var lineStyleModel = splitLineModel.getModel('lineStyle');
    var lineColors = lineStyleModel.get('color');
    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];
    var gridRect = gridModel.coordinateSystem.getRect();
    var isHorizontal = axis.isHorizontal();
    var lineCount = 0;
    var ticksCoords = axis.getTicksCoords({
      tickModel: splitLineModel
    });
    var p1 = [];
    var p2 = []; // Simple optimization
    // Batching the lines if color are the same

    var lineStyle = lineStyleModel.getLineStyle();

    for (var i = 0; i < ticksCoords.length; i++) {
      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);

      if (isHorizontal) {
        p1[0] = tickCoord;
        p1[1] = gridRect.y;
        p2[0] = tickCoord;
        p2[1] = gridRect.y + gridRect.height;
      } else {
        p1[0] = gridRect.x;
        p1[1] = tickCoord;
        p2[0] = gridRect.x + gridRect.width;
        p2[1] = tickCoord;
      }

      var colorIndex = lineCount++ % lineColors.length;
      var tickValue = ticksCoords[i].tickValue;

      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({
        anid: tickValue != null ? 'line_' + ticksCoords[i].tickValue : null,
        shape: {
          x1: p1[0],
          y1: p1[1],
          x2: p2[0],
          y2: p2[1]
        },
        style: zrUtil.defaults({
          stroke: lineColors[colorIndex]
        }, lineStyle),
        silent: true
      })));
    }
  },

  /**
   * @param {module:echarts/coord/cartesian/AxisModel} axisModel
   * @param {module:echarts/coord/cartesian/GridModel} gridModel
   * @private
   */
  _splitArea: function (axisModel, gridModel) {
    var axis = axisModel.axis;

    if (axis.scale.isBlank()) {
      return;
    }

    var splitAreaModel = axisModel.getModel('splitArea');
    var areaStyleModel = splitAreaModel.getModel('areaStyle');
    var areaColors = areaStyleModel.get('color');
    var gridRect = gridModel.coordinateSystem.getRect();
    var ticksCoords = axis.getTicksCoords({
      tickModel: splitAreaModel,
      clamp: true
    });

    if (!ticksCoords.length) {
      return;
    } // For Making appropriate splitArea animation, the color and anid
    // should be corresponding to previous one if possible.


    var areaColorsLen = areaColors.length;
    var lastSplitAreaColors = this._splitAreaColors;
    var newSplitAreaColors = zrUtil.createHashMap();
    var colorIndex = 0;

    if (lastSplitAreaColors) {
      for (var i = 0; i < ticksCoords.length; i++) {
        var cIndex = lastSplitAreaColors.get(ticksCoords[i].tickValue);

        if (cIndex != null) {
          colorIndex = (cIndex + (areaColorsLen - 1) * i) % areaColorsLen;
          break;
        }
      }
    }

    var prev = axis.toGlobalCoord(ticksCoords[0].coord);
    var areaStyle = areaStyleModel.getAreaStyle();
    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];

    for (var i = 1; i < ticksCoords.length; i++) {
      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);
      var x;
      var y;
      var width;
      var height;

      if (axis.isHorizontal()) {
        x = prev;
        y = gridRect.y;
        width = tickCoord - x;
        height = gridRect.height;
        prev = x + width;
      } else {
        x = gridRect.x;
        y = prev;
        width = gridRect.width;
        height = tickCoord - y;
        prev = y + height;
      }

      var tickValue = ticksCoords[i - 1].tickValue;
      tickValue != null && newSplitAreaColors.set(tickValue, colorIndex);

      this._axisGroup.add(new graphic.Rect({
        anid: tickValue != null ? 'area_' + tickValue : null,
        shape: {
          x: x,
          y: y,
          width: width,
          height: height
        },
        style: zrUtil.defaults({
          fill: areaColors[colorIndex]
        }, areaStyle),
        silent: true
      }));

      colorIndex = (colorIndex + 1) % areaColorsLen;
    }

    this._splitAreaColors = newSplitAreaColors;
  }
});
CartesianAxisView.extend({
  type: 'xAxis'
});
CartesianAxisView.extend({
  type: 'yAxis'
});

/***/ }),
/* 761 */
/***/ (function(module, exports, __webpack_require__) {

var echarts = __webpack_require__(13);

__webpack_require__(762);

__webpack_require__(768);

__webpack_require__(769);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
// FIXME Better way to pack data in graphic element

/**
 * @action
 * @property {string} type
 * @property {number} seriesIndex
 * @property {number} dataIndex
 * @property {number} [x]
 * @property {number} [y]
 */
echarts.registerAction({
  type: 'showTip',
  event: 'showTip',
  update: 'tooltip:manuallyShowTip'
}, // noop
function () {});
echarts.registerAction({
  type: 'hideTip',
  event: 'hideTip',
  update: 'tooltip:manuallyHideTip'
}, // noop
function () {});

/***/ }),
/* 762 */
/***/ (function(module, exports, __webpack_require__) {

var echarts = __webpack_require__(13);

var zrUtil = __webpack_require__(1);

var axisPointerModelHelper = __webpack_require__(107);

var axisTrigger = __webpack_require__(763);

__webpack_require__(764);

__webpack_require__(765);

__webpack_require__(766);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
// CartesianAxisPointer is not supposed to be required here. But consider
// echarts.simple.js and online build tooltip, which only require gridSimple,
// CartesianAxisPointer should be able to required somewhere.
echarts.registerPreprocessor(function (option) {
  // Always has a global axisPointerModel for default setting.
  if (option) {
    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});
    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link
    // is not set, remain null/undefined, otherwise it will
    // override existent link setting.

    if (link && !zrUtil.isArray(link)) {
      option.axisPointer.link = [link];
    }
  }
}); // This process should proformed after coordinate systems created
// and series data processed. So put it on statistic processing stage.

echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {
  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.
  // allAxesInfo should be updated when setOption performed.
  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);
}); // Broadcast to all views.

echarts.registerAction({
  type: 'updateAxisPointer',
  event: 'updateAxisPointer',
  update: ':updateAxisPointer'
}, axisTrigger);

/***/ }),
/* 763 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var _model = __webpack_require__(7);

var makeInner = _model.makeInner;

var modelHelper = __webpack_require__(107);

var findPointFromSeries = __webpack_require__(245);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var each = zrUtil.each;
var curry = zrUtil.curry;
var inner = makeInner();
/**
 * Basic logic: check all axis, if they do not demand show/highlight,
 * then hide/downplay them.
 *
 * @param {Object} coordSysAxesInfo
 * @param {Object} payload
 * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'
 * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to
 *              trigger axisPointer and tooltip.
 * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to
 *              trigger axisPointer and tooltip.
 * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.
 * @param {Object} [payload.dataIndex] finder, restrict target axes.
 * @param {Object} [payload.axesInfo] finder, restrict target axes.
 *        [{
 *          axisDim: 'x'|'y'|'angle'|...,
 *          axisIndex: ...,
 *          value: ...
 *        }, ...]
 * @param {Function} [payload.dispatchAction]
 * @param {Object} [payload.tooltipOption]
 * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,
 *        which can be specified in dispatchAction
 * @param {module:echarts/model/Global} ecModel
 * @param {module:echarts/ExtensionAPI} api
 * @return {Object} content of event obj for echarts.connect.
 */

function _default(payload, ecModel, api) {
  var currTrigger = payload.currTrigger;
  var point = [payload.x, payload.y];
  var finder = payload;
  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);
  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending
  // See #6121. But we are not able to reproduce it yet.

  if (!coordSysAxesInfo) {
    return;
  }

  if (illegalPoint(point)) {
    // Used in the default behavior of `connection`: use the sample seriesIndex
    // and dataIndex. And also used in the tooltipView trigger.
    point = findPointFromSeries({
      seriesIndex: finder.seriesIndex,
      // Do not use dataIndexInside from other ec instance.
      // FIXME: auto detect it?
      dataIndex: finder.dataIndex
    }, ecModel).point;
  }

  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).
  // Notice: In this case, it is difficult to get the `point` (which is necessary to show
  // tooltip, so if point is not given, we just use the point found by sample seriesIndex
  // and dataIndex.

  var inputAxesInfo = finder.axesInfo;
  var axesInfo = coordSysAxesInfo.axesInfo;
  var shouldHide = currTrigger === 'leave' || illegalPoint(point);
  var outputFinder = {};
  var showValueMap = {};
  var dataByCoordSys = {
    list: [],
    map: {}
  };
  var updaters = {
    showPointer: curry(showPointer, showValueMap),
    showTooltip: curry(showTooltip, dataByCoordSys)
  }; // Process for triggered axes.

  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {
    // If a point given, it must be contained by the coordinate system.
    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);
    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {
      var axis = axisInfo.axis;
      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.

      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {
        var val = inputAxisInfo && inputAxisInfo.value;

        if (val == null && !isIllegalPoint) {
          val = axis.pointToData(point);
        }

        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);
      }
    });
  }); // Process for linked axes.

  var linkTriggers = {};
  each(axesInfo, function (tarAxisInfo, tarKey) {
    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.

    if (linkGroup && !showValueMap[tarKey]) {
      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {
        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.

        if (srcAxisInfo !== tarAxisInfo && srcValItem) {
          var val = srcValItem.value;
          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));
          linkTriggers[tarAxisInfo.key] = val;
        }
      });
    }
  });
  each(linkTriggers, function (val, tarKey) {
    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);
  });
  updateModelActually(showValueMap, axesInfo, outputFinder);
  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);
  dispatchHighDownActually(axesInfo, dispatchAction, api);
  return outputFinder;
}

function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {
  var axis = axisInfo.axis;

  if (axis.scale.isBlank() || !axis.containData(newValue)) {
    return;
  }

  if (!axisInfo.involveSeries) {
    updaters.showPointer(axisInfo, newValue);
    return;
  } // Heavy calculation. So put it after axis.containData checking.


  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);
  var payloadBatch = payloadInfo.payloadBatch;
  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.
  // By defualt use the first involved series data as a sample to connect.

  if (payloadBatch[0] && outputFinder.seriesIndex == null) {
    zrUtil.extend(outputFinder, payloadBatch[0]);
  } // If no linkSource input, this process is for collecting link
  // target, where snap should not be accepted.


  if (!dontSnap && axisInfo.snap) {
    if (axis.containData(snapToValue) && snapToValue != null) {
      newValue = snapToValue;
    }
  }

  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be
  // incorrect "axis value ~ series value" mapping displayed in tooltip.

  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);
}

function buildPayloadsBySeries(value, axisInfo) {
  var axis = axisInfo.axis;
  var dim = axis.dim;
  var snapToValue = value;
  var payloadBatch = [];
  var minDist = Number.MAX_VALUE;
  var minDiff = -1;
  each(axisInfo.seriesModels, function (series, idx) {
    var dataDim = series.getData().mapDimension(dim, true);
    var seriesNestestValue;
    var dataIndices;

    if (series.getAxisTooltipData) {
      var result = series.getAxisTooltipData(dataDim, value, axis);
      dataIndices = result.dataIndices;
      seriesNestestValue = result.nestestValue;
    } else {
      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex
      // when data length is not same.
      // false,
      axis.type === 'category' ? 0.5 : null);

      if (!dataIndices.length) {
        return;
      }

      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);
    }

    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {
      return;
    }

    var diff = value - seriesNestestValue;
    var dist = Math.abs(diff); // Consider category case

    if (dist <= minDist) {
      if (dist < minDist || diff >= 0 && minDiff < 0) {
        minDist = dist;
        minDiff = diff;
        snapToValue = seriesNestestValue;
        payloadBatch.length = 0;
      }

      each(dataIndices, function (dataIndex) {
        payloadBatch.push({
          seriesIndex: series.seriesIndex,
          dataIndexInside: dataIndex,
          dataIndex: series.getData().getRawIndex(dataIndex)
        });
      });
    }
  });
  return {
    payloadBatch: payloadBatch,
    snapToValue: snapToValue
  };
}

function showPointer(showValueMap, axisInfo, value, payloadBatch) {
  showValueMap[axisInfo.key] = {
    value: value,
    payloadBatch: payloadBatch
  };
}

function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {
  var payloadBatch = payloadInfo.payloadBatch;
  var axis = axisInfo.axis;
  var axisModel = axis.model;
  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,
  // whose length will be used to judge whether dispatch action.

  if (!axisInfo.triggerTooltip || !payloadBatch.length) {
    return;
  }

  var coordSysModel = axisInfo.coordSys.model;
  var coordSysKey = modelHelper.makeKey(coordSysModel);
  var coordSysItem = dataByCoordSys.map[coordSysKey];

  if (!coordSysItem) {
    coordSysItem = dataByCoordSys.map[coordSysKey] = {
      coordSysId: coordSysModel.id,
      coordSysIndex: coordSysModel.componentIndex,
      coordSysType: coordSysModel.type,
      coordSysMainType: coordSysModel.mainType,
      dataByAxis: []
    };
    dataByCoordSys.list.push(coordSysItem);
  }

  coordSysItem.dataByAxis.push({
    axisDim: axis.dim,
    axisIndex: axisModel.componentIndex,
    axisType: axisModel.type,
    axisId: axisModel.id,
    value: value,
    // Caustion: viewHelper.getValueLabel is actually on "view stage", which
    // depends that all models have been updated. So it should not be performed
    // here. Considering axisPointerModel used here is volatile, which is hard
    // to be retrieve in TooltipView, we prepare parameters here.
    valueLabelOpt: {
      precision: axisPointerModel.get('label.precision'),
      formatter: axisPointerModel.get('label.formatter')
    },
    seriesDataIndices: payloadBatch.slice()
  });
}

function updateModelActually(showValueMap, axesInfo, outputFinder) {
  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.

  each(axesInfo, function (axisInfo, key) {
    var option = axisInfo.axisPointerModel.option;
    var valItem = showValueMap[key];

    if (valItem) {
      !axisInfo.useHandle && (option.status = 'show');
      option.value = valItem.value; // For label formatter param and highlight.

      option.seriesDataIndices = (valItem.payloadBatch || []).slice();
    } // When always show (e.g., handle used), remain
    // original value and status.
    else {
        // If hide, value still need to be set, consider
        // click legend to toggle axis blank.
        !axisInfo.useHandle && (option.status = 'hide');
      } // If status is 'hide', should be no info in payload.


    option.status === 'show' && outputAxesInfo.push({
      axisDim: axisInfo.axis.dim,
      axisIndex: axisInfo.axis.model.componentIndex,
      value: option.value
    });
  });
}

function dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {
  // Basic logic: If no showTip required, hideTip will be dispatched.
  if (illegalPoint(point) || !dataByCoordSys.list.length) {
    dispatchAction({
      type: 'hideTip'
    });
    return;
  } // In most case only one axis (or event one series is used). It is
  // convinient to fetch payload.seriesIndex and payload.dataIndex
  // dirtectly. So put the first seriesIndex and dataIndex of the first
  // axis on the payload.


  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};
  dispatchAction({
    type: 'showTip',
    escapeConnect: true,
    x: point[0],
    y: point[1],
    tooltipOption: payload.tooltipOption,
    position: payload.position,
    dataIndexInside: sampleItem.dataIndexInside,
    dataIndex: sampleItem.dataIndex,
    seriesIndex: sampleItem.seriesIndex,
    dataByCoordSys: dataByCoordSys.list
  });
}

function dispatchHighDownActually(axesInfo, dispatchAction, api) {
  // FIXME
  // highlight status modification shoule be a stage of main process?
  // (Consider confilct (e.g., legend and axisPointer) and setOption)
  var zr = api.getZr();
  var highDownKey = 'axisPointerLastHighlights';
  var lastHighlights = inner(zr)[highDownKey] || {};
  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.
  // Build hash map and remove duplicate incidentally.

  each(axesInfo, function (axisInfo, key) {
    var option = axisInfo.axisPointerModel.option;
    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {
      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;
      newHighlights[key] = batchItem;
    });
  }); // Diff.

  var toHighlight = [];
  var toDownplay = [];
  zrUtil.each(lastHighlights, function (batchItem, key) {
    !newHighlights[key] && toDownplay.push(batchItem);
  });
  zrUtil.each(newHighlights, function (batchItem, key) {
    !lastHighlights[key] && toHighlight.push(batchItem);
  });
  toDownplay.length && api.dispatchAction({
    type: 'downplay',
    escapeConnect: true,
    batch: toDownplay
  });
  toHighlight.length && api.dispatchAction({
    type: 'highlight',
    escapeConnect: true,
    batch: toHighlight
  });
}

function findInputAxisInfo(inputAxesInfo, axisInfo) {
  for (var i = 0; i < (inputAxesInfo || []).length; i++) {
    var inputAxisInfo = inputAxesInfo[i];

    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {
      return inputAxisInfo;
    }
  }
}

function makeMapperParam(axisInfo) {
  var axisModel = axisInfo.axis.model;
  var item = {};
  var dim = item.axisDim = axisInfo.axis.dim;
  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;
  item.axisName = item[dim + 'AxisName'] = axisModel.name;
  item.axisId = item[dim + 'AxisId'] = axisModel.id;
  return item;
}

function illegalPoint(point) {
  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);
}

module.exports = _default;

/***/ }),
/* 764 */
/***/ (function(module, exports, __webpack_require__) {

var echarts = __webpack_require__(13);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var AxisPointerModel = echarts.extendComponentModel({
  type: 'axisPointer',
  coordSysAxesInfo: null,
  defaultOption: {
    // 'auto' means that show when triggered by tooltip or handle.
    show: 'auto',
    // 'click' | 'mousemove' | 'none'
    triggerOn: null,
    // set default in AxisPonterView.js
    zlevel: 0,
    z: 50,
    type: 'line',
    // axispointer triggered by tootip determine snap automatically,
    // see `modelHelper`.
    snap: false,
    triggerTooltip: true,
    value: null,
    status: null,
    // Init value depends on whether handle is used.
    // [group0, group1, ...]
    // Each group can be: {
    //      mapper: function () {},
    //      singleTooltip: 'multiple',  // 'multiple' or 'single'
    //      xAxisId: ...,
    //      yAxisName: ...,
    //      angleAxisIndex: ...
    // }
    // mapper: can be ignored.
    //      input: {axisInfo, value}
    //      output: {axisInfo, value}
    link: [],
    // Do not set 'auto' here, otherwise global animation: false
    // will not effect at this axispointer.
    animation: null,
    animationDurationUpdate: 200,
    lineStyle: {
      color: '#aaa',
      width: 1,
      type: 'solid'
    },
    shadowStyle: {
      color: 'rgba(150,150,150,0.3)'
    },
    label: {
      show: true,
      formatter: null,
      // string | Function
      precision: 'auto',
      // Or a number like 0, 1, 2 ...
      margin: 3,
      color: '#fff',
      padding: [5, 7, 5, 7],
      backgroundColor: 'auto',
      // default: axis line color
      borderColor: null,
      borderWidth: 0,
      shadowBlur: 3,
      shadowColor: '#aaa' // Considering applicability, common style should
      // better not have shadowOffset.
      // shadowOffsetX: 0,
      // shadowOffsetY: 2

    },
    handle: {
      show: false,
      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',
      // jshint ignore:line
      size: 45,
      // handle margin is from symbol center to axis, which is stable when circular move.
      margin: 50,
      // color: '#1b8bbd'
      // color: '#2f4554'
      color: '#333',
      shadowBlur: 3,
      shadowColor: '#aaa',
      shadowOffsetX: 0,
      shadowOffsetY: 2,
      // For mobile performance
      throttle: 40
    }
  }
});
var _default = AxisPointerModel;
module.exports = _default;

/***/ }),
/* 765 */
/***/ (function(module, exports, __webpack_require__) {

var echarts = __webpack_require__(13);

var globalListener = __webpack_require__(246);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var AxisPointerView = echarts.extendComponentView({
  type: 'axisPointer',
  render: function (globalAxisPointerModel, ecModel, api) {
    var globalTooltipModel = ecModel.getComponent('tooltip');
    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable
    // AxisPointerView to be independent to Tooltip.

    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {
      // If 'none', it is not controlled by mouse totally.
      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {
        dispatchAction({
          type: 'updateAxisPointer',
          currTrigger: currTrigger,
          x: e && e.offsetX,
          y: e && e.offsetY
        });
      }
    });
  },

  /**
   * @override
   */
  remove: function (ecModel, api) {
    globalListener.unregister(api.getZr(), 'axisPointer');
    AxisPointerView.superApply(this._model, 'remove', arguments);
  },

  /**
   * @override
   */
  dispose: function (ecModel, api) {
    globalListener.unregister('axisPointer', api);
    AxisPointerView.superApply(this._model, 'dispose', arguments);
  }
});
var _default = AxisPointerView;
module.exports = _default;

/***/ }),
/* 766 */
/***/ (function(module, exports, __webpack_require__) {

var graphic = __webpack_require__(11);

var BaseAxisPointer = __webpack_require__(767);

var viewHelper = __webpack_require__(247);

var cartesianAxisHelper = __webpack_require__(244);

var AxisView = __webpack_require__(243);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var CartesianAxisPointer = BaseAxisPointer.extend({
  /**
   * @override
   */
  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {
    var axis = axisModel.axis;
    var grid = axis.grid;
    var axisPointerType = axisPointerModel.get('type');
    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();
    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));

    if (axisPointerType && axisPointerType !== 'none') {
      var elStyle = viewHelper.buildElStyle(axisPointerModel);
      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);
      pointerOption.style = elStyle;
      elOption.graphicKey = pointerOption.type;
      elOption.pointer = pointerOption;
    }

    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);
    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);
  },

  /**
   * @override
   */
  getHandleTransform: function (value, axisModel, axisPointerModel) {
    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {
      labelInside: false
    });
    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');
    return {
      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),
      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)
    };
  },

  /**
   * @override
   */
  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {
    var axis = axisModel.axis;
    var grid = axis.grid;
    var axisExtent = axis.getGlobalExtent(true);
    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();
    var dimIndex = axis.dim === 'x' ? 0 : 1;
    var currPosition = transform.position;
    currPosition[dimIndex] += delta[dimIndex];
    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);
    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);
    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;
    var cursorPoint = [cursorOtherValue, cursorOtherValue];
    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.

    var tooltipOptions = [{
      verticalAlign: 'middle'
    }, {
      align: 'center'
    }];
    return {
      position: currPosition,
      rotation: transform.rotation,
      cursorPoint: cursorPoint,
      tooltipOption: tooltipOptions[dimIndex]
    };
  }
});

function getCartesian(grid, axis) {
  var opt = {};
  opt[axis.dim + 'AxisIndex'] = axis.index;
  return grid.getCartesian(opt);
}

var pointerShapeBuilder = {
  line: function (axis, pixelValue, otherExtent, elStyle) {
    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));
    graphic.subPixelOptimizeLine({
      shape: targetShape,
      style: elStyle
    });
    return {
      type: 'Line',
      shape: targetShape
    };
  },
  shadow: function (axis, pixelValue, otherExtent, elStyle) {
    var bandWidth = Math.max(1, axis.getBandWidth());
    var span = otherExtent[1] - otherExtent[0];
    return {
      type: 'Rect',
      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))
    };
  }
};

function getAxisDimIndex(axis) {
  return axis.dim === 'x' ? 0 : 1;
}

AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);
var _default = CartesianAxisPointer;
module.exports = _default;

/***/ }),
/* 767 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var clazzUtil = __webpack_require__(48);

var graphic = __webpack_require__(11);

var axisPointerModelHelper = __webpack_require__(107);

var eventTool = __webpack_require__(75);

var throttleUtil = __webpack_require__(120);

var _model = __webpack_require__(7);

var makeInner = _model.makeInner;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var inner = makeInner();
var clone = zrUtil.clone;
var bind = zrUtil.bind;
/**
 * Base axis pointer class in 2D.
 * Implemenents {module:echarts/component/axis/IAxisPointer}.
 */

function BaseAxisPointer() {}

BaseAxisPointer.prototype = {
  /**
   * @private
   */
  _group: null,

  /**
   * @private
   */
  _lastGraphicKey: null,

  /**
   * @private
   */
  _handle: null,

  /**
   * @private
   */
  _dragging: false,

  /**
   * @private
   */
  _lastValue: null,

  /**
   * @private
   */
  _lastStatus: null,

  /**
   * @private
   */
  _payloadInfo: null,

  /**
   * In px, arbitrary value. Do not set too small,
   * no animation is ok for most cases.
   * @protected
   */
  animationThreshold: 15,

  /**
   * @implement
   */
  render: function (axisModel, axisPointerModel, api, forceRender) {
    var value = axisPointerModel.get('value');
    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not
    // be replaced when user calling setOption in not merge mode.

    this._axisModel = axisModel;
    this._axisPointerModel = axisPointerModel;
    this._api = api; // Optimize: `render` will be called repeatly during mouse move.
    // So it is power consuming if performing `render` each time,
    // especially on mobile device.

    if (!forceRender && this._lastValue === value && this._lastStatus === status) {
      return;
    }

    this._lastValue = value;
    this._lastStatus = status;
    var group = this._group;
    var handle = this._handle;

    if (!status || status === 'hide') {
      // Do not clear here, for animation better.
      group && group.hide();
      handle && handle.hide();
      return;
    }

    group && group.show();
    handle && handle.show(); // Otherwise status is 'show'

    var elOption = {};
    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.

    var graphicKey = elOption.graphicKey;

    if (graphicKey !== this._lastGraphicKey) {
      this.clear(api);
    }

    this._lastGraphicKey = graphicKey;
    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);

    if (!group) {
      group = this._group = new graphic.Group();
      this.createPointerEl(group, elOption, axisModel, axisPointerModel);
      this.createLabelEl(group, elOption, axisModel, axisPointerModel);
      api.getZr().add(group);
    } else {
      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);
      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);
      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);
    }

    updateMandatoryProps(group, axisPointerModel, true);

    this._renderHandle(value);
  },

  /**
   * @implement
   */
  remove: function (api) {
    this.clear(api);
  },

  /**
   * @implement
   */
  dispose: function (api) {
    this.clear(api);
  },

  /**
   * @protected
   */
  determineAnimation: function (axisModel, axisPointerModel) {
    var animation = axisPointerModel.get('animation');
    var axis = axisModel.axis;
    var isCategoryAxis = axis.type === 'category';
    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.

    if (!useSnap && !isCategoryAxis) {
      return false;
    }

    if (animation === 'auto' || animation == null) {
      var animationThreshold = this.animationThreshold;

      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {
        return true;
      } // It is important to auto animation when snap used. Consider if there is
      // a dataZoom, animation will be disabled when too many points exist, while
      // it will be enabled for better visual effect when little points exist.


      if (useSnap) {
        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;
        var axisExtent = axis.getExtent(); // Approximate band width

        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;
      }

      return false;
    }

    return animation === true;
  },

  /**
   * add {pointer, label, graphicKey} to elOption
   * @protected
   */
  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.
  },

  /**
   * @protected
   */
  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {
    var pointerOption = elOption.pointer;

    if (pointerOption) {
      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));
      group.add(pointerEl);
    }
  },

  /**
   * @protected
   */
  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {
    if (elOption.label) {
      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));
      group.add(labelEl);
      updateLabelShowHide(labelEl, axisPointerModel);
    }
  },

  /**
   * @protected
   */
  updatePointerEl: function (group, elOption, updateProps) {
    var pointerEl = inner(group).pointerEl;

    if (pointerEl) {
      pointerEl.setStyle(elOption.pointer.style);
      updateProps(pointerEl, {
        shape: elOption.pointer.shape
      });
    }
  },

  /**
   * @protected
   */
  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {
    var labelEl = inner(group).labelEl;

    if (labelEl) {
      labelEl.setStyle(elOption.label.style);
      updateProps(labelEl, {
        // Consider text length change in vertical axis, animation should
        // be used on shape, otherwise the effect will be weird.
        shape: elOption.label.shape,
        position: elOption.label.position
      });
      updateLabelShowHide(labelEl, axisPointerModel);
    }
  },

  /**
   * @private
   */
  _renderHandle: function (value) {
    if (this._dragging || !this.updateHandleTransform) {
      return;
    }

    var axisPointerModel = this._axisPointerModel;

    var zr = this._api.getZr();

    var handle = this._handle;
    var handleModel = axisPointerModel.getModel('handle');
    var status = axisPointerModel.get('status');

    if (!handleModel.get('show') || !status || status === 'hide') {
      handle && zr.remove(handle);
      this._handle = null;
      return;
    }

    var isInit;

    if (!this._handle) {
      isInit = true;
      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {
        cursor: 'move',
        draggable: true,
        onmousemove: function (e) {
          // Fot mobile devicem, prevent screen slider on the button.
          eventTool.stop(e.event);
        },
        onmousedown: bind(this._onHandleDragMove, this, 0, 0),
        drift: bind(this._onHandleDragMove, this),
        ondragend: bind(this._onHandleDragEnd, this)
      });
      zr.add(handle);
    }

    updateMandatoryProps(handle, axisPointerModel, false); // update style

    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];
    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position

    var handleSize = handleModel.get('size');

    if (!zrUtil.isArray(handleSize)) {
      handleSize = [handleSize, handleSize];
    }

    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);
    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');

    this._moveHandleToValue(value, isInit);
  },

  /**
   * @private
   */
  _moveHandleToValue: function (value, isInit) {
    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));
  },

  /**
   * @private
   */
  _onHandleDragMove: function (dx, dy) {
    var handle = this._handle;

    if (!handle) {
      return;
    }

    this._dragging = true; // Persistent for throttle.

    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);
    this._payloadInfo = trans;
    handle.stopAnimation();
    handle.attr(getHandleTransProps(trans));
    inner(handle).lastProp = null;

    this._doDispatchAxisPointer();
  },

  /**
   * Throttled method.
   * @private
   */
  _doDispatchAxisPointer: function () {
    var handle = this._handle;

    if (!handle) {
      return;
    }

    var payloadInfo = this._payloadInfo;
    var axisModel = this._axisModel;

    this._api.dispatchAction({
      type: 'updateAxisPointer',
      x: payloadInfo.cursorPoint[0],
      y: payloadInfo.cursorPoint[1],
      tooltipOption: payloadInfo.tooltipOption,
      axesInfo: [{
        axisDim: axisModel.axis.dim,
        axisIndex: axisModel.componentIndex
      }]
    });
  },

  /**
   * @private
   */
  _onHandleDragEnd: function (moveAnimation) {
    this._dragging = false;
    var handle = this._handle;

    if (!handle) {
      return;
    }

    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with
    // axisPointer. So move handle to align the exact value position when
    // drag ended.


    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle
    // button, and will be hidden after finger left handle button.


    this._api.dispatchAction({
      type: 'hideTip'
    });
  },

  /**
   * Should be implemenented by sub-class if support `handle`.
   * @protected
   * @param {number} value
   * @param {module:echarts/model/Model} axisModel
   * @param {module:echarts/model/Model} axisPointerModel
   * @return {Object} {position: [x, y], rotation: 0}
   */
  getHandleTransform: null,

  /**
   * * Should be implemenented by sub-class if support `handle`.
   * @protected
   * @param {Object} transform {position, rotation}
   * @param {Array.<number>} delta [dx, dy]
   * @param {module:echarts/model/Model} axisModel
   * @param {module:echarts/model/Model} axisPointerModel
   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}
   */
  updateHandleTransform: null,

  /**
   * @private
   */
  clear: function (api) {
    this._lastValue = null;
    this._lastStatus = null;
    var zr = api.getZr();
    var group = this._group;
    var handle = this._handle;

    if (zr && group) {
      this._lastGraphicKey = null;
      group && zr.remove(group);
      handle && zr.remove(handle);
      this._group = null;
      this._handle = null;
      this._payloadInfo = null;
    }
  },

  /**
   * @protected
   */
  doClear: function () {// Implemented by sub-class if necessary.
  },

  /**
   * @protected
   * @param {Array.<number>} xy
   * @param {Array.<number>} wh
   * @param {number} [xDimIndex=0] or 1
   */
  buildLabel: function (xy, wh, xDimIndex) {
    xDimIndex = xDimIndex || 0;
    return {
      x: xy[xDimIndex],
      y: xy[1 - xDimIndex],
      width: wh[xDimIndex],
      height: wh[1 - xDimIndex]
    };
  }
};
BaseAxisPointer.prototype.constructor = BaseAxisPointer;

function updateProps(animationModel, moveAnimation, el, props) {
  // Animation optimize.
  if (!propsEqual(inner(el).lastProp, props)) {
    inner(el).lastProp = props;
    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));
  }
}

function propsEqual(lastProps, newProps) {
  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {
    var equals = true;
    zrUtil.each(newProps, function (item, key) {
      equals = equals && propsEqual(lastProps[key], item);
    });
    return !!equals;
  } else {
    return lastProps === newProps;
  }
}

function updateLabelShowHide(labelEl, axisPointerModel) {
  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();
}

function getHandleTransProps(trans) {
  return {
    position: trans.position.slice(),
    rotation: trans.rotation || 0
  };
}

function updateMandatoryProps(group, axisPointerModel, silent) {
  var z = axisPointerModel.get('z');
  var zlevel = axisPointerModel.get('zlevel');
  group && group.traverse(function (el) {
    if (el.type !== 'group') {
      z != null && (el.z = z);
      zlevel != null && (el.zlevel = zlevel);
      el.silent = silent;
    }
  });
}

clazzUtil.enableClassExtend(BaseAxisPointer);
var _default = BaseAxisPointer;
module.exports = _default;

/***/ }),
/* 768 */
/***/ (function(module, exports, __webpack_require__) {

var echarts = __webpack_require__(13);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var _default = echarts.extendComponentModel({
  type: 'tooltip',
  dependencies: ['axisPointer'],
  defaultOption: {
    zlevel: 0,
    z: 8,
    show: true,
    // tooltip主体内容
    showContent: true,
    // 'trigger' only works on coordinate system.
    // 'item' | 'axis' | 'none'
    trigger: 'item',
    // 'click' | 'mousemove' | 'none'
    triggerOn: 'mousemove|click',
    alwaysShowContent: false,
    displayMode: 'single',
    // 'single' | 'multipleByCoordSys'
    // 位置 {Array} | {Function}
    // position: null
    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'
    // align: null,
    // verticalAlign: null,
    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。
    confine: false,
    // 内容格式器：{string}（Template） ¦ {Function}
    // formatter: null
    showDelay: 0,
    // 隐藏延迟，单位ms
    hideDelay: 100,
    // 动画变换时间，单位s
    transitionDuration: 0.4,
    enterable: false,
    // 提示背景颜色，默认为透明度为0.7的黑色
    backgroundColor: 'rgba(50,50,50,0.7)',
    // 提示边框颜色
    borderColor: '#333',
    // 提示边框圆角，单位px，默认为4
    borderRadius: 4,
    // 提示边框线宽，单位px，默认为0（无边框）
    borderWidth: 0,
    // 提示内边距，单位px，默认各方向内边距为5，
    // 接受数组分别设定上右下左边距，同css
    padding: 5,
    // Extra css text
    extraCssText: '',
    // 坐标轴指示器，坐标轴触发有效
    axisPointer: {
      // 默认为直线
      // 可选为：'line' | 'shadow' | 'cross'
      type: 'line',
      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选
      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'
      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴
      // 极坐标系会默认选择 angle 轴
      axis: 'auto',
      animation: 'auto',
      animationDurationUpdate: 200,
      animationEasingUpdate: 'exponentialOut',
      crossStyle: {
        color: '#999',
        width: 1,
        type: 'dashed',
        // TODO formatter
        textStyle: {} // lineStyle and shadowStyle should not be specified here,
        // otherwise it will always override those styles on option.axisPointer.

      }
    },
    textStyle: {
      color: '#fff',
      fontSize: 14
    }
  }
});

module.exports = _default;

/***/ }),
/* 769 */
/***/ (function(module, exports, __webpack_require__) {

var echarts = __webpack_require__(13);

var zrUtil = __webpack_require__(1);

var env = __webpack_require__(20);

var TooltipContent = __webpack_require__(770);

var formatUtil = __webpack_require__(33);

var numberUtil = __webpack_require__(14);

var graphic = __webpack_require__(11);

var findPointFromSeries = __webpack_require__(245);

var layoutUtil = __webpack_require__(49);

var Model = __webpack_require__(42);

var globalListener = __webpack_require__(246);

var axisHelper = __webpack_require__(68);

var axisPointerViewHelper = __webpack_require__(247);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var bind = zrUtil.bind;
var each = zrUtil.each;
var parsePercent = numberUtil.parsePercent;
var proxyRect = new graphic.Rect({
  shape: {
    x: -1,
    y: -1,
    width: 2,
    height: 2
  }
});

var _default = echarts.extendComponentView({
  type: 'tooltip',
  init: function (ecModel, api) {
    if (env.node) {
      return;
    }

    var tooltipContent = new TooltipContent(api.getDom(), api);
    this._tooltipContent = tooltipContent;
  },
  render: function (tooltipModel, ecModel, api) {
    if (env.node || env.wxa) {
      return;
    } // Reset


    this.group.removeAll();
    /**
     * @private
     * @type {module:echarts/component/tooltip/TooltipModel}
     */

    this._tooltipModel = tooltipModel;
    /**
     * @private
     * @type {module:echarts/model/Global}
     */

    this._ecModel = ecModel;
    /**
     * @private
     * @type {module:echarts/ExtensionAPI}
     */

    this._api = api;
    /**
     * Should be cleaned when render.
     * @private
     * @type {Array.<Array.<Object>>}
     */

    this._lastDataByCoordSys = null;
    /**
     * @private
     * @type {boolean}
     */

    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');
    var tooltipContent = this._tooltipContent;
    tooltipContent.update();
    tooltipContent.setEnterable(tooltipModel.get('enterable'));

    this._initGlobalListener();

    this._keepShow();
  },
  _initGlobalListener: function () {
    var tooltipModel = this._tooltipModel;
    var triggerOn = tooltipModel.get('triggerOn');
    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {
      // If 'none', it is not controlled by mouse totally.
      if (triggerOn !== 'none') {
        if (triggerOn.indexOf(currTrigger) >= 0) {
          this._tryShow(e, dispatchAction);
        } else if (currTrigger === 'leave') {
          this._hide(dispatchAction);
        }
      }
    }, this));
  },
  _keepShow: function () {
    var tooltipModel = this._tooltipModel;
    var ecModel = this._ecModel;
    var api = this._api; // Try to keep the tooltip show when refreshing

    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,
    // self.manuallyShowTip({x, y}) might cause tooltip hide,
    // which is not expected.
    && tooltipModel.get('triggerOn') !== 'none') {
      var self = this;
      clearTimeout(this._refreshUpdateTimeout);
      this._refreshUpdateTimeout = setTimeout(function () {
        // Show tip next tick after other charts are rendered
        // In case highlight action has wrong result
        // FIXME
        self.manuallyShowTip(tooltipModel, ecModel, api, {
          x: self._lastX,
          y: self._lastY
        });
      });
    }
  },

  /**
   * Show tip manually by
   * dispatchAction({
   *     type: 'showTip',
   *     x: 10,
   *     y: 10
   * });
   * Or
   * dispatchAction({
   *      type: 'showTip',
   *      seriesIndex: 0,
   *      dataIndex or dataIndexInside or name
   * });
   *
   *  TODO Batch
   */
  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {
    if (payload.from === this.uid || env.node) {
      return;
    }

    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket

    this._ticket = ''; // When triggered from axisPointer.

    var dataByCoordSys = payload.dataByCoordSys;

    if (payload.tooltip && payload.x != null && payload.y != null) {
      var el = proxyRect;
      el.position = [payload.x, payload.y];
      el.update();
      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.

      this._tryShow({
        offsetX: payload.x,
        offsetY: payload.y,
        target: el
      }, dispatchAction);
    } else if (dataByCoordSys) {
      this._tryShow({
        offsetX: payload.x,
        offsetY: payload.y,
        position: payload.position,
        event: {},
        dataByCoordSys: payload.dataByCoordSys,
        tooltipOption: payload.tooltipOption
      }, dispatchAction);
    } else if (payload.seriesIndex != null) {
      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {
        return;
      }

      var pointInfo = findPointFromSeries(payload, ecModel);
      var cx = pointInfo.point[0];
      var cy = pointInfo.point[1];

      if (cx != null && cy != null) {
        this._tryShow({
          offsetX: cx,
          offsetY: cy,
          position: payload.position,
          target: pointInfo.el,
          event: {}
        }, dispatchAction);
      }
    } else if (payload.x != null && payload.y != null) {
      // FIXME
      // should wrap dispatchAction like `axisPointer/globalListener` ?
      api.dispatchAction({
        type: 'updateAxisPointer',
        x: payload.x,
        y: payload.y
      });

      this._tryShow({
        offsetX: payload.x,
        offsetY: payload.y,
        position: payload.position,
        target: api.getZr().findHover(payload.x, payload.y).target,
        event: {}
      }, dispatchAction);
    }
  },
  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {
    var tooltipContent = this._tooltipContent;

    if (!this._alwaysShowContent && this._tooltipModel) {
      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));
    }

    this._lastX = this._lastY = null;

    if (payload.from !== this.uid) {
      this._hide(makeDispatchAction(payload, api));
    }
  },
  // Be compatible with previous design, that is, when tooltip.type is 'axis' and
  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer
  // and tooltip.
  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {
    var seriesIndex = payload.seriesIndex;
    var dataIndex = payload.dataIndex;
    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;

    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {
      return;
    }

    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);

    if (!seriesModel) {
      return;
    }

    var data = seriesModel.getData();
    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);

    if (tooltipModel.get('trigger') !== 'axis') {
      return;
    }

    api.dispatchAction({
      type: 'updateAxisPointer',
      seriesIndex: seriesIndex,
      dataIndex: dataIndex,
      position: payload.position
    });
    return true;
  },
  _tryShow: function (e, dispatchAction) {
    var el = e.target;
    var tooltipModel = this._tooltipModel;

    if (!tooltipModel) {
      return;
    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed


    this._lastX = e.offsetX;
    this._lastY = e.offsetY;
    var dataByCoordSys = e.dataByCoordSys;

    if (dataByCoordSys && dataByCoordSys.length) {
      this._showAxisTooltip(dataByCoordSys, e);
    } // Always show item tooltip if mouse is on the element with dataIndex
    else if (el && el.dataIndex != null) {
        this._lastDataByCoordSys = null;

        this._showSeriesItemTooltip(e, el, dispatchAction);
      } // Tooltip provided directly. Like legend.
      else if (el && el.tooltip) {
          this._lastDataByCoordSys = null;

          this._showComponentItemTooltip(e, el, dispatchAction);
        } else {
          this._lastDataByCoordSys = null;

          this._hide(dispatchAction);
        }
  },
  _showOrMove: function (tooltipModel, cb) {
    // showDelay is used in this case: tooltip.enterable is set
    // as true. User intent to move mouse into tooltip and click
    // something. `showDelay` makes it easyer to enter the content
    // but tooltip do not move immediately.
    var delay = tooltipModel.get('showDelay');
    cb = zrUtil.bind(cb, this);
    clearTimeout(this._showTimout);
    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();
  },
  _showAxisTooltip: function (dataByCoordSys, e) {
    var ecModel = this._ecModel;
    var globalTooltipModel = this._tooltipModel;
    var point = [e.offsetX, e.offsetY];
    var singleDefaultHTML = [];
    var singleParamsList = [];
    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);
    each(dataByCoordSys, function (itemCoordSys) {
      // var coordParamList = [];
      // var coordDefaultHTML = [];
      // var coordTooltipModel = buildTooltipModel([
      //     e.tooltipOption,
      //     itemCoordSys.tooltipOption,
      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),
      //     globalTooltipModel
      // ]);
      // var displayMode = coordTooltipModel.get('displayMode');
      // var paramsList = displayMode === 'single' ? singleParamsList : [];
      each(itemCoordSys.dataByAxis, function (item) {
        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);
        var axisValue = item.value;
        var seriesDefaultHTML = [];

        if (!axisModel || axisValue == null) {
          return;
        }

        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);
        zrUtil.each(item.seriesDataIndices, function (idxItem) {
          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);
          var dataIndex = idxItem.dataIndexInside;
          var dataParams = series && series.getDataParams(dataIndex);
          dataParams.axisDim = item.axisDim;
          dataParams.axisIndex = item.axisIndex;
          dataParams.axisType = item.axisType;
          dataParams.axisId = item.axisId;
          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);
          dataParams.axisValueLabel = valueLabel;

          if (dataParams) {
            singleParamsList.push(dataParams);
            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));
          }
        }); // Default tooltip content
        // FIXME
        // (1) shold be the first data which has name?
        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.

        var firstLine = valueLabel;
        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));
      });
    }, this); // In most case, the second axis is shown upper than the first one.

    singleDefaultHTML.reverse();
    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');
    var positionExpr = e.position;

    this._showOrMove(singleTooltipModel, function () {
      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {
        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);
      } else {
        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);
      }
    }); // Do not trigger events here, because this branch only be entered
    // from dispatchAction.

  },
  _showSeriesItemTooltip: function (e, el, dispatchAction) {
    var ecModel = this._ecModel; // Use dataModel in element if possible
    // Used when mouseover on a element like markPoint or edge
    // In which case, the data is not main data in series.

    var seriesIndex = el.seriesIndex;
    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.

    var dataModel = el.dataModel || seriesModel;
    var dataIndex = el.dataIndex;
    var dataType = el.dataType;
    var data = dataModel.getData();
    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);
    var tooltipTrigger = tooltipModel.get('trigger');

    if (tooltipTrigger != null && tooltipTrigger !== 'item') {
      return;
    }

    var params = dataModel.getDataParams(dataIndex, dataType);
    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);
    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;

    this._showOrMove(tooltipModel, function () {
      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);
    }); // FIXME
    // duplicated showtip if manuallyShowTip is called from dispatchAction.


    dispatchAction({
      type: 'showTip',
      dataIndexInside: dataIndex,
      dataIndex: data.getRawIndex(dataIndex),
      seriesIndex: seriesIndex,
      from: this.uid
    });
  },
  _showComponentItemTooltip: function (e, el, dispatchAction) {
    var tooltipOpt = el.tooltip;

    if (typeof tooltipOpt === 'string') {
      var content = tooltipOpt;
      tooltipOpt = {
        content: content,
        // Fixed formatter
        formatter: content
      };
    }

    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);
    var defaultHtml = subTooltipModel.get('content');
    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`
    // only works on cooridinate system. In fact, we have not found case
    // that requires setting `trigger` nothing on component yet.

    this._showOrMove(subTooltipModel, function () {
      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);
    }); // If not dispatch showTip, tip may be hide triggered by axis.


    dispatchAction({
      type: 'showTip',
      from: this.uid
    });
  },
  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {
    // Reset ticket
    this._ticket = '';

    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {
      return;
    }

    var tooltipContent = this._tooltipContent;
    var formatter = tooltipModel.get('formatter');
    positionExpr = positionExpr || tooltipModel.get('position');
    var html = defaultHtml;

    if (formatter && typeof formatter === 'string') {
      html = formatUtil.formatTpl(formatter, params, true);
    } else if (typeof formatter === 'function') {
      var callback = bind(function (cbTicket, html) {
        if (cbTicket === this._ticket) {
          tooltipContent.setContent(html);

          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);
        }
      }, this);
      this._ticket = asyncTicket;
      html = formatter(params, asyncTicket, callback);
    }

    tooltipContent.setContent(html);
    tooltipContent.show(tooltipModel);

    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);
  },

  /**
   * @param  {string|Function|Array.<number>|Object} positionExpr
   * @param  {number} x Mouse x
   * @param  {number} y Mouse y
   * @param  {boolean} confine Whether confine tooltip content in view rect.
   * @param  {Object|<Array.<Object>} params
   * @param  {module:zrender/Element} el target element
   * @param  {module:echarts/ExtensionAPI} api
   * @return {Array.<number>}
   */
  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {
    var viewWidth = this._api.getWidth();

    var viewHeight = this._api.getHeight();

    positionExpr = positionExpr || tooltipModel.get('position');
    var contentSize = content.getSize();
    var align = tooltipModel.get('align');
    var vAlign = tooltipModel.get('verticalAlign');
    var rect = el && el.getBoundingRect().clone();
    el && rect.applyTransform(el.transform);

    if (typeof positionExpr === 'function') {
      // Callback of position can be an array or a string specify the position
      positionExpr = positionExpr([x, y], params, content.el, rect, {
        viewSize: [viewWidth, viewHeight],
        contentSize: contentSize.slice()
      });
    }

    if (zrUtil.isArray(positionExpr)) {
      x = parsePercent(positionExpr[0], viewWidth);
      y = parsePercent(positionExpr[1], viewHeight);
    } else if (zrUtil.isObject(positionExpr)) {
      positionExpr.width = contentSize[0];
      positionExpr.height = contentSize[1];
      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {
        width: viewWidth,
        height: viewHeight
      });
      x = layoutRect.x;
      y = layoutRect.y;
      align = null; // When positionExpr is left/top/right/bottom,
      // align and verticalAlign will not work.

      vAlign = null;
    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element
    else if (typeof positionExpr === 'string' && el) {
        var pos = calcTooltipPosition(positionExpr, rect, contentSize);
        x = pos[0];
        y = pos[1];
      } else {
        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);
        x = pos[0];
        y = pos[1];
      }

    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);
    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);

    if (tooltipModel.get('confine')) {
      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);
      x = pos[0];
      y = pos[1];
    }

    content.moveTo(x, y);
  },
  // FIXME
  // Should we remove this but leave this to user?
  _updateContentNotChangedOnAxis: function (dataByCoordSys) {
    var lastCoordSys = this._lastDataByCoordSys;
    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;
    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {
      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};
      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};
      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];
      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;
      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {
        var thisItem = thisDataByAxis[indexAxis] || {};
        var lastIndices = lastItem.seriesDataIndices || [];
        var newIndices = thisItem.seriesDataIndices || [];
        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;
        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {
          var newIdxItem = newIndices[j];
          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;
        });
      });
    });
    this._lastDataByCoordSys = dataByCoordSys;
    return !!contentNotChanged;
  },
  _hide: function (dispatchAction) {
    // Do not directly hideLater here, because this behavior may be prevented
    // in dispatchAction when showTip is dispatched.
    // FIXME
    // duplicated hideTip if manuallyHideTip is called from dispatchAction.
    this._lastDataByCoordSys = null;
    dispatchAction({
      type: 'hideTip',
      from: this.uid
    });
  },
  dispose: function (ecModel, api) {
    if (env.node || env.wxa) {
      return;
    }

    this._tooltipContent.hide();

    globalListener.unregister('itemTooltip', api);
  }
});
/**
 * @param {Array.<Object|module:echarts/model/Model>} modelCascade
 * From top to bottom. (the last one should be globalTooltipModel);
 */


function buildTooltipModel(modelCascade) {
  var resultModel = modelCascade.pop();

  while (modelCascade.length) {
    var tooltipOpt = modelCascade.pop();

    if (tooltipOpt) {
      if (Model.isInstance(tooltipOpt)) {
        tooltipOpt = tooltipOpt.get('tooltip', true);
      } // In each data item tooltip can be simply write:
      // {
      //  value: 10,
      //  tooltip: 'Something you need to know'
      // }


      if (typeof tooltipOpt === 'string') {
        tooltipOpt = {
          formatter: tooltipOpt
        };
      }

      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);
    }
  }

  return resultModel;
}

function makeDispatchAction(payload, api) {
  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);
}

function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {
  var size = getOuterSize(el);
  var width = size.width;
  var height = size.height;

  if (gapH != null) {
    if (x + width + gapH > viewWidth) {
      x -= width + gapH;
    } else {
      x += gapH;
    }
  }

  if (gapV != null) {
    if (y + height + gapV > viewHeight) {
      y -= height + gapV;
    } else {
      y += gapV;
    }
  }

  return [x, y];
}

function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {
  var size = getOuterSize(el);
  var width = size.width;
  var height = size.height;
  x = Math.min(x + width, viewWidth) - width;
  y = Math.min(y + height, viewHeight) - height;
  x = Math.max(x, 0);
  y = Math.max(y, 0);
  return [x, y];
}

function getOuterSize(el) {
  var width = el.clientWidth;
  var height = el.clientHeight; // Consider browser compatibility.
  // IE8 does not support getComputedStyle.

  if (document.defaultView && document.defaultView.getComputedStyle) {
    var stl = document.defaultView.getComputedStyle(el);

    if (stl) {
      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);
      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);
    }
  }

  return {
    width: width,
    height: height
  };
}

function calcTooltipPosition(position, rect, contentSize) {
  var domWidth = contentSize[0];
  var domHeight = contentSize[1];
  var gap = 5;
  var x = 0;
  var y = 0;
  var rectWidth = rect.width;
  var rectHeight = rect.height;

  switch (position) {
    case 'inside':
      x = rect.x + rectWidth / 2 - domWidth / 2;
      y = rect.y + rectHeight / 2 - domHeight / 2;
      break;

    case 'top':
      x = rect.x + rectWidth / 2 - domWidth / 2;
      y = rect.y - domHeight - gap;
      break;

    case 'bottom':
      x = rect.x + rectWidth / 2 - domWidth / 2;
      y = rect.y + rectHeight + gap;
      break;

    case 'left':
      x = rect.x - domWidth - gap;
      y = rect.y + rectHeight / 2 - domHeight / 2;
      break;

    case 'right':
      x = rect.x + rectWidth + gap;
      y = rect.y + rectHeight / 2 - domHeight / 2;
  }

  return [x, y];
}

function isCenterAlign(align) {
  return align === 'center' || align === 'middle';
}

module.exports = _default;

/***/ }),
/* 770 */
/***/ (function(module, exports, __webpack_require__) {

var zrUtil = __webpack_require__(1);

var zrColor = __webpack_require__(74);

var eventUtil = __webpack_require__(75);

var env = __webpack_require__(20);

var formatUtil = __webpack_require__(33);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var each = zrUtil.each;
var toCamelCase = formatUtil.toCamelCase;
var vendors = ['', '-webkit-', '-moz-', '-o-'];
var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';
/**
 * @param {number} duration
 * @return {string}
 * @inner
 */

function assembleTransition(duration) {
  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';
  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;
  return zrUtil.map(vendors, function (vendorPrefix) {
    return vendorPrefix + 'transition:' + transitionText;
  }).join(';');
}
/**
 * @param {Object} textStyle
 * @return {string}
 * @inner
 */


function assembleFont(textStyleModel) {
  var cssText = [];
  var fontSize = textStyleModel.get('fontSize');
  var color = textStyleModel.getTextColor();
  color && cssText.push('color:' + color);
  cssText.push('font:' + textStyleModel.getFont());
  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');
  each(['decoration', 'align'], function (name) {
    var val = textStyleModel.get(name);
    val && cssText.push('text-' + name + ':' + val);
  });
  return cssText.join(';');
}
/**
 * @param {Object} tooltipModel
 * @return {string}
 * @inner
 */


function assembleCssText(tooltipModel) {
  var cssText = [];
  var transitionDuration = tooltipModel.get('transitionDuration');
  var backgroundColor = tooltipModel.get('backgroundColor');
  var textStyleModel = tooltipModel.getModel('textStyle');
  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.

  transitionDuration && cssText.push(assembleTransition(transitionDuration));

  if (backgroundColor) {
    if (env.canvasSupported) {
      cssText.push('background-Color:' + backgroundColor);
    } else {
      // for ie
      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));
      cssText.push('filter:alpha(opacity=70)');
    }
  } // Border style


  each(['width', 'color', 'radius'], function (name) {
    var borderName = 'border-' + name;
    var camelCase = toCamelCase(borderName);
    var val = tooltipModel.get(camelCase);
    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));
  }); // Text style

  cssText.push(assembleFont(textStyleModel)); // Padding

  if (padding != null) {
    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');
  }

  return cssText.join(';') + ';';
}
/**
 * @alias module:echarts/component/tooltip/TooltipContent
 * @constructor
 */


function TooltipContent(container, api) {
  if (env.wxa) {
    return null;
  }

  var el = document.createElement('div');
  var zr = this._zr = api.getZr();
  this.el = el;
  this._x = api.getWidth() / 2;
  this._y = api.getHeight() / 2;
  container.appendChild(el);
  this._container = container;
  this._show = false;
  /**
   * @private
   */

  this._hideTimeout;
  var self = this;

  el.onmouseenter = function () {
    // clear the timeout in hideLater and keep showing tooltip
    if (self._enterable) {
      clearTimeout(self._hideTimeout);
      self._show = true;
    }

    self._inContent = true;
  };

  el.onmousemove = function (e) {
    e = e || window.event;

    if (!self._enterable) {
      // Try trigger zrender event to avoid mouse
      // in and out shape too frequently
      var handler = zr.handler;
      eventUtil.normalizeEvent(container, e, true);
      handler.dispatch('mousemove', e);
    }
  };

  el.onmouseleave = function () {
    if (self._enterable) {
      if (self._show) {
        self.hideLater(self._hideDelay);
      }
    }

    self._inContent = false;
  };
}

TooltipContent.prototype = {
  constructor: TooltipContent,

  /**
   * @private
   * @type {boolean}
   */
  _enterable: true,

  /**
   * Update when tooltip is rendered
   */
  update: function () {
    // FIXME
    // Move this logic to ec main?
    var container = this._container;
    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);
    var domStyle = container.style;

    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {
      domStyle.position = 'relative';
    } // Hide the tooltip
    // PENDING
    // this.hide();

  },
  show: function (tooltipModel) {
    clearTimeout(this._hideTimeout);
    var el = this.el;
    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore
    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');
    el.style.display = el.innerHTML ? 'block' : 'none';
    this._show = true;
  },
  setContent: function (content) {
    this.el.innerHTML = content == null ? '' : content;
  },
  setEnterable: function (enterable) {
    this._enterable = enterable;
  },
  getSize: function () {
    var el = this.el;
    return [el.clientWidth, el.clientHeight];
  },
  moveTo: function (x, y) {
    // xy should be based on canvas root. But tooltipContent is
    // the sibling of canvas root. So padding of ec container
    // should be considered here.
    var zr = this._zr;
    var viewportRootOffset;

    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {
      x += viewportRootOffset.offsetLeft;
      y += viewportRootOffset.offsetTop;
    }

    var style = this.el.style;
    style.left = x + 'px';
    style.top = y + 'px';
    this._x = x;
    this._y = y;
  },
  hide: function () {
    this.el.style.display = 'none';
    this._show = false;
  },
  hideLater: function (time) {
    if (this._show && !(this._inContent && this._enterable)) {
      if (time) {
        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times

        this._show = false;
        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);
      } else {
        this.hide();
      }
    }
  },
  isShow: function () {
    return this._show;
  }
};
var _default = TooltipContent;
module.exports = _default;

/***/ }),
/* 771 */
/***/ (function(module, exports, __webpack_require__) {

var echarts = __webpack_require__(13);

__webpack_require__(772);

__webpack_require__(773);

__webpack_require__(774);

var legendFilter = __webpack_require__(776);

var Component = __webpack_require__(43);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
// Do not contain scrollable legend, for sake of file size.
// Series Filter
echarts.registerProcessor(legendFilter);
Component.registerSubTypeDefaulter('legend', function () {
  // Default 'plain' when no type specified.
  return 'plain';
});

/***/ }),
/* 772 */
/***/ (function(module, exports, __webpack_require__) {

var echarts = __webpack_require__(13);

var zrUtil = __webpack_require__(1);

var Model = __webpack_require__(42);

var _model = __webpack_require__(7);

var isNameSpecified = _model.isNameSpecified;

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var LegendModel = echarts.extendComponentModel({
  type: 'legend.plain',
  dependencies: ['series'],
  layoutMode: {
    type: 'box',
    // legend.width/height are maxWidth/maxHeight actually,
    // whereas realy width/height is calculated by its content.
    // (Setting {left: 10, right: 10} does not make sense).
    // So consider the case:
    // `setOption({legend: {left: 10});`
    // then `setOption({legend: {right: 10});`
    // The previous `left` should be cleared by setting `ignoreSize`.
    ignoreSize: true
  },
  init: function (option, parentModel, ecModel) {
    this.mergeDefaultAndTheme(option, ecModel);
    option.selected = option.selected || {};
  },
  mergeOption: function (option) {
    LegendModel.superCall(this, 'mergeOption', option);
  },
  optionUpdated: function () {
    this._updateData(this.ecModel);

    var legendData = this._data; // If selectedMode is single, try to select one

    if (legendData[0] && this.get('selectedMode') === 'single') {
      var hasSelected = false; // If has any selected in option.selected

      for (var i = 0; i < legendData.length; i++) {
        var name = legendData[i].get('name');

        if (this.isSelected(name)) {
          // Force to unselect others
          this.select(name);
          hasSelected = true;
          break;
        }
      } // Try select the first if selectedMode is single


      !hasSelected && this.select(legendData[0].get('name'));
    }
  },
  _updateData: function (ecModel) {
    var potentialData = [];
    var availableNames = [];
    ecModel.eachRawSeries(function (seriesModel) {
      var seriesName = seriesModel.name;
      availableNames.push(seriesName);
      var isPotential;

      if (seriesModel.legendDataProvider) {
        var data = seriesModel.legendDataProvider();
        var names = data.mapArray(data.getName);

        if (!ecModel.isSeriesFiltered(seriesModel)) {
          availableNames = availableNames.concat(names);
        }

        if (names.length) {
          potentialData = potentialData.concat(names);
        } else {
          isPotential = true;
        }
      } else {
        isPotential = true;
      }

      if (isPotential && isNameSpecified(seriesModel)) {
        potentialData.push(seriesModel.name);
      }
    });
    /**
     * @type {Array.<string>}
     * @private
     */

    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,
    // which is convinient for user preparing option.

    var rawData = this.get('data') || potentialData;
    var legendData = zrUtil.map(rawData, function (dataItem) {
      // Can be string or number
      if (typeof dataItem === 'string' || typeof dataItem === 'number') {
        dataItem = {
          name: dataItem
        };
      }

      return new Model(dataItem, this, this.ecModel);
    }, this);
    /**
     * @type {Array.<module:echarts/model/Model>}
     * @private
     */

    this._data = legendData;
  },

  /**
   * @return {Array.<module:echarts/model/Model>}
   */
  getData: function () {
    return this._data;
  },

  /**
   * @param {string} name
   */
  select: function (name) {
    var selected = this.option.selected;
    var selectedMode = this.get('selectedMode');

    if (selectedMode === 'single') {
      var data = this._data;
      zrUtil.each(data, function (dataItem) {
        selected[dataItem.get('name')] = false;
      });
    }

    selected[name] = true;
  },

  /**
   * @param {string} name
   */
  unSelect: function (name) {
    if (this.get('selectedMode') !== 'single') {
      this.option.selected[name] = false;
    }
  },

  /**
   * @param {string} name
   */
  toggleSelected: function (name) {
    var selected = this.option.selected; // Default is true

    if (!selected.hasOwnProperty(name)) {
      selected[name] = true;
    }

    this[selected[name] ? 'unSelect' : 'select'](name);
  },

  /**
   * @param {string} name
   */
  isSelected: function (name) {
    var selected = this.option.selected;
    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;
  },
  defaultOption: {
    // 一级层叠
    zlevel: 0,
    // 二级层叠
    z: 4,
    show: true,
    // 布局方式，默认为水平布局，可选为：
    // 'horizontal' | 'vertical'
    orient: 'horizontal',
    left: 'center',
    // right: 'center',
    top: 0,
    // bottom: null,
    // 水平对齐
    // 'auto' | 'left' | 'right'
    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐
    align: 'auto',
    backgroundColor: 'rgba(0,0,0,0)',
    // 图例边框颜色
    borderColor: '#ccc',
    borderRadius: 0,
    // 图例边框线宽，单位px，默认为0（无边框）
    borderWidth: 0,
    // 图例内边距，单位px，默认各方向内边距为5，
    // 接受数组分别设定上右下左边距，同css
    padding: 5,
    // 各个item之间的间隔，单位px，默认为10，
    // 横向布局时为水平间隔，纵向布局时为纵向间隔
    itemGap: 10,
    // 图例图形宽度
    itemWidth: 25,
    // 图例图形高度
    itemHeight: 14,
    // 图例关闭时候的颜色
    inactiveColor: '#ccc',
    textStyle: {
      // 图例文字颜色
      color: '#333'
    },
    // formatter: '',
    // 选择模式，默认开启图例开关
    selectedMode: true,
    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入
    // selected: null,
    // 图例内容（详见legend.data，数组中每一项代表一个item
    // data: [],
    // Tooltip 相关配置
    tooltip: {
      show: false
    }
  }
});
var _default = LegendModel;
module.exports = _default;

/***/ }),
/* 773 */
/***/ (function(module, exports, __webpack_require__) {

var echarts = __webpack_require__(13);

var zrUtil = __webpack_require__(1);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
function legendSelectActionHandler(methodName, payload, ecModel) {
  var selectedMap = {};
  var isToggleSelect = methodName === 'toggleSelected';
  var isSelected; // Update all legend components

  ecModel.eachComponent('legend', function (legendModel) {
    if (isToggleSelect && isSelected != null) {
      // Force other legend has same selected status
      // Or the first is toggled to true and other are toggled to false
      // In the case one legend has some item unSelected in option. And if other legend
      // doesn't has the item, they will assume it is selected.
      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);
    } else {
      legendModel[methodName](payload.name);
      isSelected = legendModel.isSelected(payload.name);
    }

    var legendData = legendModel.getData();
    zrUtil.each(legendData, function (model) {
      var name = model.get('name'); // Wrap element

      if (name === '\n' || name === '') {
        return;
      }

      var isItemSelected = legendModel.isSelected(name);

      if (selectedMap.hasOwnProperty(name)) {
        // Unselected if any legend is unselected
        selectedMap[name] = selectedMap[name] && isItemSelected;
      } else {
        selectedMap[name] = isItemSelected;
      }
    });
  }); // Return the event explicitly

  return {
    name: payload.name,
    selected: selectedMap
  };
}
/**
 * @event legendToggleSelect
 * @type {Object}
 * @property {string} type 'legendToggleSelect'
 * @property {string} [from]
 * @property {string} name Series name or data item name
 */


echarts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));
/**
 * @event legendSelect
 * @type {Object}
 * @property {string} type 'legendSelect'
 * @property {string} name Series name or data item name
 */

echarts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));
/**
 * @event legendUnSelect
 * @type {Object}
 * @property {string} type 'legendUnSelect'
 * @property {string} name Series name or data item name
 */

echarts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));

/***/ }),
/* 774 */
/***/ (function(module, exports, __webpack_require__) {

var _config = __webpack_require__(16);

var __DEV__ = _config.__DEV__;

var echarts = __webpack_require__(13);

var zrUtil = __webpack_require__(1);

var _symbol = __webpack_require__(89);

var createSymbol = _symbol.createSymbol;

var graphic = __webpack_require__(11);

var _listComponent = __webpack_require__(775);

var makeBackground = _listComponent.makeBackground;

var layoutUtil = __webpack_require__(49);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
var curry = zrUtil.curry;
var each = zrUtil.each;
var Group = graphic.Group;

var _default = echarts.extendComponentView({
  type: 'legend.plain',
  newlineDisabled: false,

  /**
   * @override
   */
  init: function () {
    /**
     * @private
     * @type {module:zrender/container/Group}
     */
    this.group.add(this._contentGroup = new Group());
    /**
     * @private
     * @type {module:zrender/Element}
     */

    this._backgroundEl;
  },

  /**
   * @protected
   */
  getContentGroup: function () {
    return this._contentGroup;
  },

  /**
   * @override
   */
  render: function (legendModel, ecModel, api) {
    this.resetInner();

    if (!legendModel.get('show', true)) {
      return;
    }

    var itemAlign = legendModel.get('align');

    if (!itemAlign || itemAlign === 'auto') {
      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';
    }

    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.

    var positionInfo = legendModel.getBoxLayoutParams();
    var viewportSize = {
      width: api.getWidth(),
      height: api.getHeight()
    };
    var padding = legendModel.get('padding');
    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);
    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.

    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({
      width: mainRect.width,
      height: mainRect.height
    }, positionInfo), viewportSize, padding);
    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.

    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));
  },

  /**
   * @protected
   */
  resetInner: function () {
    this.getContentGroup().removeAll();
    this._backgroundEl && this.group.remove(this._backgroundEl);
  },

  /**
   * @protected
   */
  renderInner: function (itemAlign, legendModel, ecModel, api) {
    var contentGroup = this.getContentGroup();
    var legendDrawnMap = zrUtil.createHashMap();
    var selectMode = legendModel.get('selectedMode');
    var excludeSeriesId = [];
    ecModel.eachRawSeries(function (seriesModel) {
      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);
    });
    each(legendModel.getData(), function (itemModel, dataIndex) {
      var name = itemModel.get('name'); // Use empty string or \n as a newline string

      if (!this.newlineDisabled && (name === '' || name === '\n')) {
        contentGroup.add(new Group({
          newline: true
        }));
        return;
      } // Representitive series.


      var seriesModel = ecModel.getSeriesByName(name)[0];

      if (legendDrawnMap.get(name)) {
        // Have been drawed
        return;
      } // Series legend


      if (seriesModel) {
        var data = seriesModel.getData();
        var color = data.getVisual('color'); // If color is a callback function

        if (typeof color === 'function') {
          // Use the first data
          color = color(seriesModel.getDataParams(0));
        } // Using rect symbol defaultly


        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';
        var symbolType = data.getVisual('symbol');

        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);

        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api, excludeSeriesId));
        legendDrawnMap.set(name, true);
      } else {
        // Data legend of pie, funnel
        ecModel.eachRawSeries(function (seriesModel) {
          // In case multiple series has same data name
          if (legendDrawnMap.get(name)) {
            return;
          }

          if (seriesModel.legendDataProvider) {
            var data = seriesModel.legendDataProvider();
            var idx = data.indexOfName(name);

            if (idx < 0) {
              return;
            }

            var color = data.getItemVisual(idx, 'color');
            var legendSymbolType = 'roundRect';

            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode); // FIXME: consider different series has items with the same name.


            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name
            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api, excludeSeriesId));
            legendDrawnMap.set(name, true);
          }
        }, this);
      }
    }, this);
  },
  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {
    var itemWidth = legendModel.get('itemWidth');
    var itemHeight = legendModel.get('itemHeight');
    var inactiveColor = legendModel.get('inactiveColor');
    var symbolKeepAspect = legendModel.get('symbolKeepAspect');
    var isSelected = legendModel.isSelected(name);
    var itemGroup = new Group();
    var textStyleModel = itemModel.getModel('textStyle');
    var itemIcon = itemModel.get('icon');
    var tooltipModel = itemModel.getModel('tooltip');
    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first

    legendSymbolType = itemIcon || legendSymbolType;
    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend
    symbolKeepAspect == null ? true : symbolKeepAspect)); // Compose symbols
    // PENDING

    if (!itemIcon && symbolType // At least show one symbol, can't be all none
    && (symbolType !== legendSymbolType || symbolType == 'none')) {
      var size = itemHeight * 0.8;

      if (symbolType === 'none') {
        symbolType = 'circle';
      } // Put symbol in the center


      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend
      symbolKeepAspect == null ? true : symbolKeepAspect));
    }

    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;
    var textAlign = itemAlign;
    var formatter = legendModel.get('formatter');
    var content = name;

    if (typeof formatter === 'string' && formatter) {
      content = formatter.replace('{name}', name != null ? name : '');
    } else if (typeof formatter === 'function') {
      content = formatter(name);
    }

    itemGroup.add(new graphic.Text({
      style: graphic.setTextStyle({}, textStyleModel, {
        text: content,
        x: textX,
        y: itemHeight / 2,
        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,
        textAlign: textAlign,
        textVerticalAlign: 'middle'
      })
    })); // Add a invisible rect to increase the area of mouse hover

    var hitRect = new graphic.Rect({
      shape: itemGroup.getBoundingRect(),
      invisible: true,
      tooltip: tooltipModel.get('show') ? zrUtil.extend({
        content: name,
        // Defaul formatter
        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {
          return name;
        },
        formatterParams: {
          componentType: 'legend',
          legendIndex: legendModel.componentIndex,
          name: name,
          $vars: ['name']
        }
      }, tooltipModel.option) : null
    });
    itemGroup.add(hitRect);
    itemGroup.eachChild(function (child) {
      child.silent = true;
    });
    hitRect.silent = !selectMode;
    this.getContentGroup().add(itemGroup);
    graphic.setHoverStyle(itemGroup);
    itemGroup.__legendDataIndex = dataIndex;
    return itemGroup;
  },

  /**
   * @protected
   */
  layoutInner: function (legendModel, itemAlign, maxSize) {
    var contentGroup = this.getContentGroup(); // Place items in contentGroup.

    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);
    var contentRect = contentGroup.getBoundingRect();
    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);
    return this.group.getBoundingRect();
  }
});

function dispatchSelectAction(name, api) {
  api.dispatchAction({
    type: 'legendToggleSelect',
    name: name
  });
}

function dispatchHighlightAction(seriesModel, dataName, api, excludeSeriesId) {
  // If element hover will move to a hoverLayer.
  var el = api.getZr().storage.getDisplayList()[0];

  if (!(el && el.useHoverLayer)) {
    api.dispatchAction({
      type: 'highlight',
      seriesName: seriesModel.name,
      name: dataName,
      excludeSeriesId: excludeSeriesId
    });
  }
}

function dispatchDownplayAction(seriesModel, dataName, api, excludeSeriesId) {
  // If element hover will move to a hoverLayer.
  var el = api.getZr().storage.getDisplayList()[0];

  if (!(el && el.useHoverLayer)) {
    api.dispatchAction({
      type: 'downplay',
      seriesName: seriesModel.name,
      name: dataName,
      excludeSeriesId: excludeSeriesId
    });
  }
}

module.exports = _default;

/***/ }),
/* 775 */
/***/ (function(module, exports, __webpack_require__) {

var _layout = __webpack_require__(49);

var getLayoutRect = _layout.getLayoutRect;
var layoutBox = _layout.box;
var positionElement = _layout.positionElement;

var formatUtil = __webpack_require__(33);

var graphic = __webpack_require__(11);

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

/**
 * Layout list like component.
 * It will box layout each items in group of component and then position the whole group in the viewport
 * @param {module:zrender/group/Group} group
 * @param {module:echarts/model/Component} componentModel
 * @param {module:echarts/ExtensionAPI}
 */
function layout(group, componentModel, api) {
  var boxLayoutParams = componentModel.getBoxLayoutParams();
  var padding = componentModel.get('padding');
  var viewportSize = {
    width: api.getWidth(),
    height: api.getHeight()
  };
  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);
  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);
  positionElement(group, boxLayoutParams, viewportSize, padding);
}

function makeBackground(rect, componentModel) {
  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));
  var style = componentModel.getItemStyle(['color', 'opacity']);
  style.fill = componentModel.get('backgroundColor');
  var rect = new graphic.Rect({
    shape: {
      x: rect.x - padding[3],
      y: rect.y - padding[0],
      width: rect.width + padding[1] + padding[3],
      height: rect.height + padding[0] + padding[2],
      r: componentModel.get('borderRadius')
    },
    style: style,
    silent: true,
    z2: -1
  }); // FIXME
  // `subPixelOptimizeRect` may bring some gap between edge of viewpart
  // and background rect when setting like `left: 0`, `top: 0`.
  // graphic.subPixelOptimizeRect(rect);

  return rect;
}

exports.layout = layout;
exports.makeBackground = makeBackground;

/***/ }),
/* 776 */
/***/ (function(module, exports) {

/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/
function _default(ecModel) {
  var legendModels = ecModel.findComponents({
    mainType: 'legend'
  });

  if (legendModels && legendModels.length) {
    ecModel.filterSeries(function (series) {
      // If in any legend component the status is not selected.
      // Because in legend series is assumed selected when it is not in the legend data.
      for (var i = 0; i < legendModels.length; i++) {
        if (!legendModels[i].isSelected(series.name)) {
          return false;
        }
      }

      return true;
    });
  }
}

module.exports = _default;

/***/ })
/******/ ]);